<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">Especifica los protocolos de autenticación.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">Especifica la autenticación anónima.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">Especifica la autenticación básica.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">Especifica la autenticación implícita.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">Especifica la autenticación de Windows.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">Negocia con el cliente para determinar el esquema de autenticación. Si cliente y el servidor son compatibles con Kerberos, se utiliza; de lo contrario, se utiliza NTLM.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">No se permite ninguna autenticación. Un cliente que solicite un objeto <see cref="T:System.Net.HttpListener" /> con este conjunto de marcadores siempre recibe un estado 403 Prohibido. Utilice este marcador si un recurso nunca se debe poner a disposición de un cliente.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">Especifica la autenticación NTLM.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">Especifica el comportamiento de almacenamiento en caché para los recursos obtenidos mediante <see cref="T:System.Net.WebRequest" /> y sus clases derivadas.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">Atiende una solicitud utilizando el servidor. Ninguna entrada se obtiene de las memorias caché, ni se agrega o se quita de las memorias caché entre el cliente y servidor. Éste es el comportamiento predeterminado de la caché especificado en el archivo de configuración del equipo que se distribuye con .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">Atiende una solicitud de un recurso de la caché si el recurso está disponible; de lo contrario, envía una solicitud de un recurso al servidor. Si el elemento solicitado está disponible en cualquier caché entre el cliente y el servidor, la caché intermedia podría atender la solicitud.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">Atiende una solicitud mediante el recurso almacenado en la memoria caché local; no envía una solicitud de un elemento que no se encuentre en la caché. Cuando se especifica este nivel de directiva de caché, se produce una excepción <see cref="T:System.Net.WebException" /> si el elemento no está en la caché del cliente.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">Atiende una solicitud de un recurso utilizando la copia almacenada en caché del recurso o enviando una solicitud del recurso al servidor. La directiva de caché actual y la antigüedad del contenido de la caché determinan la acción que se va a realizar. Éste es el nivel de caché que deben utilizar la mayoría de las aplicaciones.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">Nunca atiende una solicitud utilizando los recursos de la caché y no almacena los recursos en memoria caché. Si el recurso está presente en la caché local, se quita. Este nivel de directiva indica a las memorias caché intermedias que deben quitar el recurso. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché <see langword="no-cache" />.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">Atiende una solicitud utilizando el servidor. La respuesta podría guardarse en la caché. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché <see langword="no-cache" /> y el encabezado <see langword="Pragma" /> que no es de caché.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">Atiende una solicitud utilizando la copia almacenada en caché del recurso si la marca de tiempo es igual que la marca de tiempo del recurso en el servidor; de lo contrario, el recurso se descarga del servidor, se presenta al llamador y se almacena en la caché.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Define los requisitos de almacenamiento en memoria caché de una aplicación para los recursos obtenidos mediante objetos <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cache.RequestCachePolicy" />. utilizando la directiva de memoria caché especificada.</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> que especifica el comportamiento de la caché para los recursos obtenidos mediante objetos <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">el nivel no es un valor de <see cref="T:System.Net.Cache.RequestCacheLevel" /> válido.</exception>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">Obtiene el valor de <see cref="T:System.Net.Cache.RequestCacheLevel" /> especificado cuando se construyó esta instancia.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">Un valor de <see cref="T:System.Net.Cache.RequestCacheLevel" /> que especifica el comportamiento de la caché para los recursos obtenidos mediante objetos <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">Devuelve una representación en forma de cadena de esta instancia.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">Una <see cref="T:System.String" /> que contiene la propiedad <see cref="P:System.Net.Cache.RequestCachePolicy.Level" /> de esta instancia.</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">Proporciona un conjunto de propiedades y métodos que se usan para administrar las cookies. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cookie" /> con los objetos <see cref="P:System.Net.Cookie.Name" /> y <see cref="P:System.Net.Cookie.Value" /> especificados.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nombre de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="name" />: signo igual, punto y coma, coma, nueva línea (\n), retorno (\r), tabulación (\t) y carácter de espacio. El carácter del signo de dólar ("$") no puede ser el primer carácter.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valor de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="value" />: coma y punto y coma.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">El parámetro <paramref name="name" /> es <see langword="null" />.
o bien
La longitud del parámetro <paramref name="name" /> es cero.
o bien
El parámetro <paramref name="name" /> contiene un carácter no válido.
O bien
El parámetro <paramref name="value" /> es <see langword="null" />.
O bien
El parámetro <paramref name="value" /> contiene una cadena no incluida entre comillas que contiene un carácter no válido.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cookie" /> con los objetos <see cref="P:System.Net.Cookie.Name" /> , <see cref="P:System.Net.Cookie.Value" /> y <see cref="P:System.Net.Cookie.Path" /> especificados.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nombre de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="name" />: signo igual, punto y coma, coma, nueva línea (\n), retorno (\r), tabulación (\t) y carácter de espacio. El carácter del signo de dólar ("$") no puede ser el primer carácter.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valor de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="value" />: coma y punto y coma.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Subconjunto de identificadores URI del servidor de origen al que se aplica este objeto <see cref="T:System.Net.Cookie" />. El valor predeterminado es "/".</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">El parámetro <paramref name="name" /> es <see langword="null" />.
o bien
La longitud del parámetro <paramref name="name" /> es cero.
O bien
El parámetro <paramref name="name" /> contiene un carácter no válido.
O bien
El parámetro <paramref name="value" /> es <see langword="null" />.
O bien
El parámetro <paramref name="value" /> contiene una cadena no incluida entre comillas que contiene un carácter no válido.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cookie" /> con los objetos <see cref="P:System.Net.Cookie.Name" /> , <see cref="P:System.Net.Cookie.Value" /> , <see cref="P:System.Net.Cookie.Path" /> y <see cref="P:System.Net.Cookie.Domain" /> especificados.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">Nombre de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="name" />: signo igual, punto y coma, coma, nueva línea (\n), retorno (\r), tabulación (\t) y carácter de espacio. El carácter del signo de dólar ("$") no puede ser el primer carácter.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">Valor de un objeto <see cref="T:System.Net.Cookie" />. Los caracteres siguientes no deben utilizarse dentro de <paramref name="value" />: coma y punto y coma.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">Subconjunto de identificadores URI del servidor de origen al que se aplica este objeto <see cref="T:System.Net.Cookie" />. El valor predeterminado es "/".</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">Dominio de Internet opcional para el cual es válido este <see cref="T:System.Net.Cookie" />. El valor predeterminado es el host desde el que se recibió este objeto <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">El parámetro <paramref name="name" /> es <see langword="null" />.
O bien
La longitud del parámetro <paramref name="name" /> es cero.
o bien
El parámetro <paramref name="name" /> contiene un carácter no válido.
O bien
El parámetro <paramref name="value" /> es <see langword="null" />.
O bien
El parámetro <paramref name="value" /> contiene una cadena no incluida entre comillas que contiene un carácter no válido.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece un comentario que el servidor puede agregar a un objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Comentario opcional para documentar el uso al que se destina este objeto <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece un URI que el servidor puede proporcionar con un objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">Comentario opcional que representa el uso al que se destina la referencia URI para este objeto <see cref="T:System.Net.Cookie" />. El valor debe ajustarse al formato URI.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">Obtiene o establece el marcador de descarte establecido por el servidor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el cliente va a descartar el objeto <see cref="T:System.Net.Cookie" /> el final de la sesión actual; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">Obtiene o establece el URI para el cual es válido el objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">URI para el cual es válido el objeto <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">Reemplaza el método <see cref="M:System.Object.Equals(System.Object)" />.</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Referencia a un objeto <see cref="T:System.Net.Cookie" />.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">Devuelve <see langword="true" /> si el objeto <see cref="T:System.Net.Cookie" /> es igual a <paramref name="comparand" />. Dos instancias de <see cref="T:System.Net.Cookie" /> son iguales si sus propiedades <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" />, <see cref="P:System.Net.Cookie.Domain" /> y <see cref="P:System.Net.Cookie.Version" /> son iguales. Las comparaciones de cadenas <see cref="P:System.Net.Cookie.Name" /> y <see cref="P:System.Net.Cookie.Domain" /> distinguen mayúsculas de minúsculas.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece el estado actual del objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Net.Cookie" /> ha expirado; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtiene o establece la fecha y la hora de expiración para el objeto <see cref="T:System.Net.Cookie" /> como <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">Fecha y hora de expiración para el objeto <see cref="T:System.Net.Cookie" /> como instancia de <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">Reemplaza el método <see cref="M:System.Object.GetHashCode" />.</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">Código hash de un entero de 32 bits con signo para esta instancia.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">Determina si un script de página u otro contenido activo puede tener acceso a esta cookie.</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">Un valor booleano que determina si un script de página u otro contenido activo puede obtener acceso a esta cookie.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece el nombre para el objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Nombre para el objeto <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">El valor especificado para una operación set es <see langword="null" /> o una cadena vacía.
O bien
El valor especificado para una operación set contenía un carácter no válido. Los caracteres siguientes no deben utilizarse dentro de la propiedad <see cref="P:System.Net.Cookie.Name" />: signo igual, punto y coma, coma, nueva línea (\n), retorno (\r), tabulación (\t) y carácter de espacio. El carácter del signo de dólar ("$") no puede ser el primer carácter.</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">Obtiene o establece los identificadores URI a los que se aplica el objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">Identificadores URI a los que se aplica el objeto <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Obtiene o establece una lista de puertos TCP a los que se aplica el objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">Lista de puertos TCP a los que se aplica el objeto <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">El valor especificado para una operación de conjunto no se pudo analizar o no está escrito entre comillas.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece el nivel de seguridad de un objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el cliente sólo devolverá la cookie en solicitudes subsiguientes si estas solicitudes utilizan HTTPS (Protocolo de transferencia segura de hipertexto); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Obtiene la hora a la que se emitió la cookie en forma de <see cref="T:System.DateTime" />.</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Hora a la que se emitió la cookie en forma de <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">Reemplaza el método <see cref="M:System.Object.ToString" />.</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">Devuelve una representación de cadena de este objeto <see cref="T:System.Net.Cookie" />, adecuada para incluir en un encabezado de solicitud HTTP Cookie:.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Obtiene o establece el objeto <see cref="P:System.Net.Cookie.Value" /> para <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" /> para <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">Obtiene o establece la versión de mantenimiento de estado HTTP a la que se ajusta la cookie.</summary>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">Versión de mantenimiento de estado HTTP a la que se ajusta la cookie.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">No se permite el valor especificado para una versión.</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">Proporciona un contenedor de colección para instancias de la clase <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Agrega un objeto <see cref="T:System.Net.Cookie" /> a un <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">El objeto <see cref="T:System.Net.Cookie" /> que se agrega a <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">Agrega el contenido de un objeto <see cref="T:System.Net.CookieCollection" /> a la instancia actual.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">
        <see cref="T:System.Net.CookieCollection" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">Quita todos los elementos del objeto <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Determina si la cookie especificada está en el elemento <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Cookie que se buscará en <see cref="T:System.Net.CookieCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la cookie especificada se encuentra en <see cref="T:System.Net.CookieCollection" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">Copia los elementos de <see cref="T:System.Net.CookieCollection" /> en la matriz especificada, a partir de un índice determinado.</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">Matriz de destino en la que se copiará <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Índice basado en cero de la matriz de destino donde se empieza a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.
o bien
El número de elementos de este objeto <see cref="T:System.Net.CookieCollection" /> de origen es mayor que el espacio disponible entre <paramref name="index" /> y el final de <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Los elementos de <see cref="T:System.Net.CookieCollection" /> no pueden convertirse automáticamente en el tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">Copia los elementos de este objeto <see cref="T:System.Net.CookieCollection" /> en una matriz <see cref="T:System.Net.Cookie" />, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">La matriz <see cref="T:System.Net.Cookie" /> de destino en la que se copiará <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">Índice basado en cero de la matriz de destino donde se empieza a copiar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.
o bien
El número de elementos de este objeto <see cref="T:System.Net.CookieCollection" /> de origen es mayor que el espacio disponible entre <paramref name="index" /> y el final de <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Los elementos de <see cref="T:System.Net.CookieCollection" /> no pueden convertirse automáticamente en el tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene el número de cookies contenidas en un objeto <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">El número de cookies contenidas en un objeto <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene un enumerador que puede recorrer en iteración a través de una <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.IEnumerator" /> para esta colección.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">Obtiene un valor que indica si un objeto <see cref="T:System.Net.CookieCollection" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si es un objeto <see cref="T:System.Net.CookieCollection" /> de sólo lectura; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Net.CookieCollection" /> es seguro para la ejecución de subprocesos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el acceso a <see cref="T:System.Net.CookieCollection" /> es seguro para la ejecución de subprocesos; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Net.Cookie" /> con un índice específico de un objeto <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Índice de base cero del objeto <see cref="T:System.Net.Cookie" /> que se va a buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Un objeto <see cref="T:System.Net.Cookie" /> con un índice específico de un objeto <see cref="T:System.Net.CookieCollection" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" /> es menor que 0 o <paramref name="index" /> es mayor o igual que <see cref="P:System.Net.CookieCollection.Count" />.</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Net.Cookie" /> con un nombre específico de un objeto <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">Nombre del objeto <see cref="T:System.Net.Cookie" /> que se va a buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">El objeto <see cref="T:System.Net.Cookie" /> con un nombre específico de un objeto <see cref="T:System.Net.CookieCollection" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Quita la cookie especificada de <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Cookie que se quitará de <see cref="T:System.Net.CookieCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">Es <see langword="true" /> si <paramref name="cookie" /> se ha quitado correctamente de la interfaz <see cref="T:System.Net.CookieCollection" />; en caso contrario, es <see langword="false" />. Este método también devuelve <see langword="false" /> si el elemento no se encuentra en la colección original.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene un objeto para sincronizar el acceso a <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Objeto para sincronizar el acceso a <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">Obtiene un enumerador que recorre en iteración la colección <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> para esta colección.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">Proporciona un contenedor para una colección de objetos <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieContainer" /> con un valor especificado para el número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener el contenedor.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener el objeto <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> es menor o igual que cero.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieContainer" /> con propiedades específicas.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener el objeto <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">Número de instancias de <see cref="T:System.Net.Cookie" /> por dominio.</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Tamaño máximo en bytes para cada objeto <see cref="T:System.Net.Cookie" /> único en un <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" /> no es igual a <see cref="F:System.Int32.MaxValue" />.
y
<paramref name="(perDomainCapacity" /> es menor o igual que cero o <paramref name="perDomainCapacity" /> es mayor que <paramref name="capacity)" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" /> es menor o igual que cero.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">Agrega un objeto <see cref="T:System.Net.Cookie" /> a un <see cref="T:System.Net.CookieContainer" />. Este método utiliza el dominio del objeto <see cref="T:System.Net.Cookie" /> para determinar con qué colección de dominio debe asociarse el objeto <see cref="T:System.Net.Cookie" />.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> que se va a agregar a <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">El dominio de <paramref name="cookie" /> es <see langword="null" /> o una cadena vacía ("").</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> es mayor que <paramref name="maxCookieSize" />.
O bien
el dominio de <paramref name="cookie" /> no es un identificador URI válido.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Agrega el contenido de un objeto <see cref="T:System.Net.CookieCollection" /> al objeto <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> que se va a agregar a <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Agrega un objeto <see cref="T:System.Net.Cookie" /> al objeto <see cref="T:System.Net.CookieContainer" /> para un URI en particular.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">URI del objeto <see cref="T:System.Net.Cookie" /> que se va a agregar al objeto <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> que se va a agregar a <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" /> o bien <paramref name="cookie" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> es mayor que <paramref name="maxCookieSize" />.
o bien
El dominio de <paramref name="cookie" /> no es un identificador URI válido.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">Agrega el contenido de un objeto <see cref="T:System.Net.CookieCollection" /> al objeto <see cref="T:System.Net.CookieContainer" /> para un URI en particular.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">URI del objeto <see cref="T:System.Net.CookieCollection" /> que se va a agregar al objeto <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> que se va a agregar a <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El dominio de una de las cookies de <paramref name="cookies" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">Una de las cookies de <paramref name="cookies" /> contiene un dominio no válido.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">Obtiene o establece el número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener un <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener un objeto <see cref="T:System.Net.CookieContainer" />. Se trata de un límite invariable y no puede superarse mediante la adición de un objeto <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" /> es menor o igual que cero o (valor es menor que <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> y <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> no es igual a <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">Obtiene el número de instancias de <see cref="T:System.Net.Cookie" /> que contiene actualmente un objeto <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">Número de instancias de <see cref="T:System.Net.Cookie" /> que contiene actualmente un objeto <see cref="T:System.Net.CookieContainer" />. Es el total de instancias <see cref="T:System.Net.Cookie" /> en todos los dominios.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Representa el tamaño máximo predeterminado, en bytes, de las instancias de <see cref="T:System.Net.Cookie" /> que puede contener <see cref="T:System.Net.CookieContainer" />. Este campo es constante.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">Representa el número máximo predeterminado de instancias de <see cref="T:System.Net.Cookie" /> que puede contener <see cref="T:System.Net.CookieContainer" />. Este campo es constante.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">Representa el número máximo predeterminado de instancias de <see cref="T:System.Net.Cookie" /> a las que <see cref="T:System.Net.CookieContainer" /> puede hacer referencia por dominio. Este campo es constante.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Obtiene el encabezado de cookie HTTP que contiene las cookies HTTP que representan las instancias de <see cref="T:System.Net.Cookie" /> asociadas con un URI específico.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">El URI de las instancias deseadas de <see cref="T:System.Net.Cookie" />.</param>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">Encabezado cookie HTTP, con cadenas que representan las instancias de <see cref="T:System.Net.Cookie" /> delimitadas por signos de punto y coma.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Obtiene un objeto <see cref="T:System.Net.CookieCollection" /> que contiene las instancias de <see cref="T:System.Net.Cookie" /> asociadas con un URI específico.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">El URI de las instancias deseadas de <see cref="T:System.Net.Cookie" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">Objeto <see cref="T:System.Net.CookieCollection" /> que contiene las instancias de <see cref="T:System.Net.Cookie" /> asociadas con un URI específico.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Representa la longitud máxima permitida de un objeto <see cref="T:System.Net.Cookie" />.</summary>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">Longitud máxima permitida, en bytes, de un objeto <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" /> es menor o igual que cero.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">Obtiene o establece el número de instancias de <see cref="T:System.Net.Cookie" /> que puede contener un <see cref="T:System.Net.CookieContainer" /> por dominio.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">Número de instancias de <see cref="T:System.Net.Cookie" /> permitidas por dominio.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" /> es menor o igual que cero.
o bien
<paramref name="(PerDomainCapacity" /> es mayor que el número máximo de instancias de cookie, 300 y no es igual a <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">Agrega instancias de <see cref="T:System.Net.Cookie" /> para una o más cookies de un encabezado cookie HTTP al objeto <see cref="T:System.Net.CookieContainer" /> correspondiente a un URI específico.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">URI de <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">Contenido de un encabezado set-cookie HTTP tal como lo devuelve un servidor HTTP, con las instancias de <see cref="T:System.Net.Cookie" /> delimitadas por comas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> o <paramref name="cookieHeader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">Una de las cookies no es válida.
o bien
Se produjo un error al agregar una de las cookies al contenedor.</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">Excepción que se produce cuando ocurre un error al agregar un elemento <see cref="T:System.Net.Cookie" /> a un elemento <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieException" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.CookieException" /> con valores específicos de <paramref name="serializationInfo" /> y <paramref name="streamingContext" />.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se va a utilizar.</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.CookieException" /> actual.</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Objeto que contiene los datos del objeto serializados. <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">Información contextual acerca del origen o del destino. <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.CookieException" /> actual.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se va a utilizar.</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">Proporciona almacenamiento para varias credenciales.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.CredentialCache" />.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">Agrega una instancia de <see cref="T:System.Net.NetworkCredential" /> para utilizar con SMPT a la caché de credenciales y la asocia a un equipo host, puerto y protocolo de autenticación. Las credenciales agregadas mediante este método son únicamente válidas para SMTP. Este método no funciona para las solicitudes de HTTP y FTP.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Un valor <see cref="T:System.String" /> que identifica al equipo host.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Un valor <see cref="T:System.Int32" /> que especifica el puerto de conexión en <paramref name="host" />.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">Un valor <see cref="T:System.String" /> que identifica el esquema de autenticación utilizado para conectarse a <paramref name="host" /> utilizando <paramref name="cred" />.</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">
        <see cref="T:System.Net.NetworkCredential" /> que se agregará a la caché de credenciales.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> es <see langword="null" />.
O bien
<paramref name="authType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" /> no tiene un valor aceptado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">Agrega una instancia de <see cref="T:System.Net.NetworkCredential" /> a la caché de credenciales para utilizar con protocolos distintos de SMTP y la asocia a un prefijo de identificador uniforme de recursos (URI) y un protocolo de autenticación.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">
        <see cref="T:System.Uri" /> que especifica el prefijo URI de los recursos a los que la credencial concede acceso.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Esquema de autenticación utilizado por el recurso especificado en <paramref name="uriPrefix" />.</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">
        <see cref="T:System.Net.NetworkCredential" /> que se agregará a la caché de credenciales.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> es <see langword="null" />.
O bien
<paramref name="authType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">Se han agregado las mismas credenciales más de una vez.</exception>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">Obtiene las credenciales de sistema de la aplicación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">
        <see cref="T:System.Net.ICredentials" /> que representa las credenciales de sistema de la aplicación.</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">Obtiene las credenciales de red del contexto de seguridad actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">Un objeto <see cref="T:System.Net.NetworkCredential" /> que representa las credenciales de red del usuario o aplicación actual.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">Devuelve la instancia de <see cref="T:System.Net.NetworkCredential" /> asociada al host, puerto y protocolo de autenticación especificados.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Un valor <see cref="T:System.String" /> que identifica al equipo host.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Un valor <see cref="T:System.Int32" /> que especifica el puerto de conexión en <paramref name="host" />.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">Un valor <see cref="T:System.String" /> que identifica el esquema de autenticación utilizado para conectarse a <paramref name="host" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> o, si la caché no contiene ninguna credencial coincidente, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> es <see langword="null" />.
o bien
<paramref name="authType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" /> no tiene un valor aceptado.
o bien
<paramref name="host" /> es una cadena vacía ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">Devuelve la instancia de <see cref="T:System.Net.NetworkCredential" /> asociada al identificador URI y el tipo de autenticación especificados.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">
        <see cref="T:System.Uri" /> que especifica el prefijo URI de los recursos a los que la credencial concede acceso.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Esquema de autenticación utilizado por el recurso especificado en <paramref name="uriPrefix" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> o, si la caché no contiene ninguna credencial coincidente, <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> o <paramref name="authType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">Devuelve un enumerador que puede iterar a través de la instancia de <see cref="T:System.Net.CredentialCache" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Net.CredentialCache" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">Elimina una instancia de <see cref="T:System.Net.NetworkCredential" /> de la caché si está asociada con el host, puerto y protocolo de autenticación especificados.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">Un valor <see cref="T:System.String" /> que identifica al equipo host.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">Un valor <see cref="T:System.Int32" /> que especifica el puerto de conexión en <paramref name="host" />.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">Un valor <see cref="T:System.String" /> que identifica el esquema de autenticación utilizado para conectarse a <paramref name="host" />.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">Elimina una instancia <see cref="T:System.Net.NetworkCredential" /> de la caché si está asociada con el prefijo del identificador URI y protocolo de autenticación especificados.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">
        <see cref="T:System.Uri" /> que especifica el prefijo URI de los recursos para los que se utiliza la credencial.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">Esquema de autenticación utilizado por el host especificado en <paramref name="uriPrefix" />.</param>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">Representa el formato de codificación de compresión y descompresión que se va a usar para comprimir los datos recibidos como respuesta a <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">Use todos los algoritmos de compresión y descompresión.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">Use el algoritmo de compresión y descompresión Brotli.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">Use el algoritmo de compresión y descompresión deflate.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">Use el algoritmo de compresión y descompresión gZip.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">No utilice ninguna compresión.</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">Representa un extremo de red como un nombre de host o una representación de cadena de una dirección IP y un número de puerto.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.DnsEndPoint" /> con el nombre de host o la representación de cadena de una dirección IP y un número de puerto.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Nombre de host o representación de cadena de la dirección IP.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">El número de puerto asociado a la dirección, o bien 0 para especificar cualquier puerto disponible. <paramref name="port" /> está en el orden del host.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">El parámetro <paramref name="host" /> contiene una cadena vacía ("").</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">El valor del parámetro <paramref name="host" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> es menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.
o bien
<paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.DnsEndPoint" /> con el nombre de host o la representación de cadena de una dirección IP, un número de puerto y una familia de direcciones.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">Nombre de host o representación de cadena de la dirección IP.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">El número de puerto asociado a la dirección, o bien 0 para especificar cualquier puerto disponible. <paramref name="port" /> está en el orden del host.</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">El parámetro <paramref name="host" /> contiene una cadena vacía ("").
o bien
<paramref name="addressFamily" /> es <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">El valor del parámetro <paramref name="host" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> es menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.
o bien
<paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Obtiene la familia de direcciones Protocolo Internet (Internet Protocol, IP).</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">Compara dos objetos <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">Instancia de <see cref="T:System.Net.DnsEndPoint" /> que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las dos instancias <see cref="T:System.Net.DnsEndPoint" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Devuelve un valor hash de un objeto <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Valor hash entero del objeto <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">Obtiene el nombre de host o la cadena que representa la dirección IP (Protocolo de Internet) del host.</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">Nombre de host o cadena que representa una dirección IP.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Obtiene el número de puerto de <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Valor entero comprendido entre 0 y 0xffff que indica el número de puerto de <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Devuelve el nombre de host o la cadena que representa la dirección IP y el número de puerto del objeto <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">Cadena que contiene la familia de direcciones, el nombre de host o la dirección IP y el número de puerto del objeto <see cref="T:System.Net.DnsEndPoint" /> especificado.</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">Identifica una dirección de red. Esta es una clase <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">Obtiene la familia de direcciones a la que pertenece el extremo.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">Se intenta por todos los medios obtener o establecer la propiedad cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Crea una instancia de <see cref="T:System.Net.EndPoint" /> a partir de una instancia de <see cref="T:System.Net.SocketAddress" />.</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">Dirección del socket que sirve como extremo de una conexión.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Nueva instancia de <see cref="T:System.Net.EndPoint" /> inicializada a partir de la instancia de <see cref="T:System.Net.SocketAddress" /> especificada.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Serializa la información de extremo en una instancia de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">Instancia de <see cref="T:System.Net.SocketAddress" /> que contiene la información de extremo.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">Contiene los valores de códigos de estado definidos para HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">Equivalente al código de estado HTTP 202. <see cref="F:System.Net.HttpStatusCode.Accepted" /> indica que se aceptó la solicitud para su posterior procesamiento.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary vsli:raw="Equivalent to HTTP status 208. &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; indicates that the members of a WebDAV binding have already been enumerated in a preceding part of the multistatus response, and are not being included again.">Equivalente al código de estado HTTP 208. <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> indica que los miembros de un enlace de WebDAV ya se han enumerado en una parte anterior de la respuesta multiestado y no se incluyen de nuevo.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">Equivalente al código de estado HTTP 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> indica que la información solicitada tiene varias representaciones. La acción predeterminada consiste en tratar este estado como una redirección y seguir el contenido del encabezado Location asociado a esta respuesta. <c>Ambiguous</c> es un sinónimo de <c>MultipleChoices</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">Equivalente al código de estado HTTP 502. <see cref="F:System.Net.HttpStatusCode.BadGateway" /> indica que un servidor proxy intermedio recibió una respuesta errónea de otro proxy o del servidor de origen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">Equivalente al código de estado HTTP 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> indica que el servidor no entendió la solicitud. Se envía <see cref="F:System.Net.HttpStatusCode.BadRequest" /> cuando ningún otro error es aplicable, se desconoce el error exacto o este no tiene su propio código de error.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">Equivalente al código de estado HTTP 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> indica que no se pudo realizar la solicitud debido a un conflicto en el servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">Equivalente al código de estado HTTP 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> indica que el cliente puede continuar con su solicitud.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">Equivalente al código de estado HTTP 201. <see cref="F:System.Net.HttpStatusCode.Created" /> indica que la solicitud dio como resultado un nuevo recurso creado antes de enviar la respuesta.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary vsli:raw="Equivalent to HTTP status 103. &lt;see cref=&quot;F:System.Net.HttpStatusCode.EarlyHints&quot; /&gt; indicates to the client that the server is likely to send a final response with the header fields included in the informational response.">Equivalente al código de estado HTTP 103. <see cref="F:System.Net.HttpStatusCode.EarlyHints" /> indica al cliente que es probable que el servidor envíe una respuesta final con los campos de encabezado incluidos en la respuesta informativa.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">Equivalente al código de estado HTTP 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> indica que el servidor no pudo cumplir la expectativa dada en un encabezado Expect.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary vsli:raw="Equivalent to HTTP status 424. &lt;see cref=&quot;F:System.Net.HttpStatusCode.FailedDependency&quot; /&gt; indicates that the method couldn't be performed on the resource because the requested action depended on another action and that action failed.">Equivalente al código de estado HTTP 424. <see cref="F:System.Net.HttpStatusCode.FailedDependency" /> indica que el método no se pudo realizar en el recurso porque la acción solicitada dependía de otra acción y se produjo un error en la acción.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">Equivalente al código de estado HTTP 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> indica que el servidor rechaza atender la solicitud.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">Equivalente al código de estado HTTP 302. <see cref="F:System.Net.HttpStatusCode.Found" /> indica que la información solicitada se encuentra en el URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida utilizará el método GET. <c>Found</c> es un sinónimo de <c>Redirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">Equivalente al código de estado HTTP 504. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> indica que un servidor proxy intermedio agotó su tiempo de espera mientras aguardaba una respuesta de otro proxy o del servidor de origen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">Equivalente al código de estado HTTP 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> indica que el recurso solicitado ya no está disponible.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">Equivalente al código de estado HTTP 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> indica que el servidor no admite la versión HTTP solicitada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary vsli:raw="Equivalent to HTTP status 226. &lt;see cref=&quot;F:System.Net.HttpStatusCode.IMUsed&quot; /&gt; indicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.">Equivalente al código de estado HTTP 226. <see cref="F:System.Net.HttpStatusCode.IMUsed" /> indica que el servidor ha atendido una solicitud del recurso y la respuesta es una representación del resultado de una o varias manipulaciones de instancia aplicadas a la instancia actual.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary vsli:raw="Equivalent to HTTP status 507. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InsufficientStorage&quot; /&gt; indicates that the server is unable to store the representation needed to complete the request.">Equivalente al código de estado HTTP 507. <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" /> indica que el servidor no puede almacenar la representación necesaria para completar la solicitud.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">Equivalente al código de estado HTTP 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> indica que se produjo un error genérico en el servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">Equivalente al código de estado HTTP 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> indica que falta el encabezado Content-Length requerido.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary vsli:raw="Equivalent to HTTP status 423. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Locked&quot; /&gt; indicates that the source or destination resource is locked.">Equivalente al código de estado HTTP 423. <see cref="F:System.Net.HttpStatusCode.Locked" /> indica que el recurso de origen o de destino está bloqueado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary vsli:raw="Equivalent to HTTP status 508. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LoopDetected&quot; /&gt; indicates that the server terminated an operation because it encountered an infinite loop while processing a WebDAV request with &quot;Depth: infinity&quot;. This status code is meant for backward compatibility with clients not aware of the 208 status code &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; appearing in multistatus response bodies.">Equivalente al código de estado HTTP 508. <see cref="F:System.Net.HttpStatusCode.LoopDetected" /> indica que el servidor ha finalizado una operación porque encontró un bucle infinito al procesar una solicitud de WebDAV con "Profundidad: Infinito". Este código de estado se ha diseñado a efectos de compatibilidad con versiones anteriores de los clientes que no reconocen el código de estado 208 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> que aparece en los cuerpos de respuesta multiestado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">Equivalente al código de estado HTTP 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> indica que no se permite el método de solicitud (POST o GET) en el recurso solicitado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary vsli:raw="Equivalent to HTTP status 421. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MisdirectedRequest&quot; /&gt; indicates that the request was directed at a server that is not able to produce a response.">Equivalente al código de estado HTTP 421. <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" /> indica que la solicitud se dirigió en un servidor que no puede generar una respuesta.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">Equivalente al código de estado HTTP 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> indica que la información solicitada se ha trasladado al URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida utilizará el método GET. <c>Moved</c> es un sinónimo de <c>MovedPermanently</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">Equivalente al código de estado HTTP 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> indica que la información solicitada se ha trasladado al URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. <c>MovedPermanently</c> es un sinónimo de <c>Moved</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">Equivalente al código de estado HTTP 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> indica que la información solicitada tiene varias representaciones. La acción predeterminada consiste en tratar este estado como una redirección y seguir el contenido del encabezado Location asociado a esta respuesta. <c>MultipleChoices</c> es un sinónimo de <c>Ambiguous</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary vsli:raw="Equivalent to HTTP status 207. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultiStatus&quot; /&gt; indicates multiple status codes for a single response during a Web Distributed Authoring and Versioning (WebDAV) operation. The response body contains XML that describes the status codes.">Equivalente al código de estado HTTP 207. <see cref="F:System.Net.HttpStatusCode.MultiStatus" /> indica varios códigos de estado para una sola respuesta durante una operación del Sistema distribuido de creación y control de versiones web (WebDAV). El cuerpo de la respuesta contiene XML que describe los códigos de estado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 511. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NetworkAuthenticationRequired&quot; /&gt; indicates that the client needs to authenticate to gain network access; it's intended for use by intercepting proxies used to control access to the network.">Equivalente al código de estado HTTP 511. <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" /> indica que el cliente debe autenticarse para obtener acceso a la red; está diseñado para su uso mediante la interceptación de servidores proxy que se usan para controlar el acceso a la red.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">Equivalente al código de estado HTTP 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> indica que la solicitud se procesó correctamente y la respuesta está intencionadamente en blanco.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">Equivalente al código de estado HTTP 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> indica que la metainformación devuelta procede de una copia almacenada en la memoria caché en lugar del servidor de origen y, por tanto, puede ser incorrecta.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">Equivalente al código de estado HTTP 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> indica que el cliente ha señalado con encabezados Accept que ya no aceptará ninguna de las representaciones disponibles del recurso.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary vsli:raw="Equivalent to HTTP status 510. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotExtended&quot; /&gt; indicates that further extensions to the request are required for the server to fulfill it.">Equivalente al código de estado HTTP 510. <see cref="F:System.Net.HttpStatusCode.NotExtended" /> indica que se necesitan más extensiones de la solicitud para que el servidor la atienda.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">Equivalente al código de estado HTTP 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> indica que el recurso solicitado no existe en el servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">Equivalente al código de estado HTTP 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> indica que el servidor no admite la función solicitada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">Equivalente al código de estado HTTP 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> indica que está actualizada la copia en caché del cliente. No se transfiere el contenido del recurso.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">Equivalente al código de estado HTTP 200. <see cref="F:System.Net.HttpStatusCode.OK" /> indica que la solicitud se realizó correctamente y la información solicitada se incluye en la respuesta. Este es el código de estado más habitual que se va a recibir.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">Equivalente al código de estado HTTP 206. <see cref="F:System.Net.HttpStatusCode.PartialContent" /> indica que la respuesta es una respuesta parcial conforme a una solicitud GET que incluye un intervalo de bytes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">Equivalente al código de estado HTTP 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> se reserva para un uso futuro.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary vsli:raw="Equivalent to HTTP status 308. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PermanentRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.">Equivalente al código de estado HTTP 308. <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" /> indica que la información de la solicitud se encuentra en el URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida también utilizará el método GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">Equivalente al código de estado HTTP 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> indica que se ha producido un error en una condición establecida para esta solicitud y no es posible realizar la solicitud. Las condiciones se establecen con encabezados de solicitud condicionales como If-Match, If-None-Match o If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary vsli:raw="Equivalent to HTTP status 428. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionRequired&quot; /&gt; indicates that the server requires the request to be conditional.">Equivalente al código de estado HTTP 428. <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" /> indica que el servidor requiere que la solicitud sea condicional.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary vsli:raw="Equivalent to HTTP status 102. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Processing&quot; /&gt; indicates that the server has accepted the complete request but hasn't completed it yet.">Equivalente al código de estado HTTP 102. <see cref="F:System.Net.HttpStatusCode.Processing" /> indica que el servidor ha aceptado la solicitud completa pero todavía no la ha completado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">Equivalente al código de estado HTTP 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> indica que el proxy solicitado requiere autenticación. El encabezado Proxy-authenticate contiene los detalles de cómo realizar la autenticación.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">Equivalente al código de estado HTTP 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> indica que la información solicitada se encuentra en el URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida utilizará el método GET. <c>Redirect</c> es un sinónimo de <c>Found</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">Equivalente al código de estado HTTP 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> indica que la información de la solicitud se encuentra en el URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida también utilizará el método GET. <c>RedirectKeepVerb</c> es un sinónimo de <c>TemporaryRedirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">Equivalente al código de estado HTTP 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> redirige automáticamente el cliente al URI especificado en el encabezado Location como resultado de una acción POST. La solicitud al recurso especificado por el encabezado Location se realizará con GET. <c>RedirectMethod</c> es un sinónimo de <c>SeeOther</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">Equivalente al código de estado HTTP 416. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> indica que no se puede devolver el intervalo de datos solicitado desde el recurso, porque el comienzo del intervalo se encuentra delante del comienzo del recurso o porque el final del intervalo se encuentra detrás del final del recurso.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">Equivalente al código de estado HTTP 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> indica que la solicitud es demasiado grande para que el servidor la pueda procesar.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 431. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge&quot; /&gt; indicates that the server is unwilling to process the request because its header fields (either an individual header field or all the header fields collectively) are too large.">Equivalente al código de estado HTTP 431. <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" /> indica que es difícil que el servidor procese la solicitud porque sus campos de encabezado (ya sea un campo de encabezado individual o todos los campos de encabezado colectivamente) son demasiado grandes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">Equivalente al código de estado HTTP 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> indica que el cliente no envió una solicitud en el intervalo de tiempo durante el cual el servidor la esperaba.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">Equivalente al código de estado HTTP 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> indica que el URI es demasiado largo.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">Equivalente al código de estado HTTP 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> indica que el cliente debe restablecer (no recargar) el recurso actual.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">Equivalente al código de estado HTTP 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> redirige automáticamente el cliente al URI especificado en el encabezado Location como resultado de una acción POST. La solicitud al recurso especificado por el encabezado Location se realizará con GET. <c>SeeOther</c> es un sinónimo de <c>RedirectMethod</c></summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">Equivalente al código de estado HTTP 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> indica que el servidor está temporalmente no disponible, normalmente por motivos de sobrecarga o mantenimiento.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">Equivalente al código de estado HTTP 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> indica que se está modificando la versión de protocolo o el protocolo.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">Equivalente al código de estado HTTP 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> indica que la información de la solicitud se encuentra en el URI especificado en el encabezado Location. La acción predeterminada cuando se recibe este estado es seguir el encabezado Location asociado a la respuesta. Si el método de solicitud original era POST, la solicitud redirigida también utilizará el método GET. <c>TemporaryRedirect</c> es un sinónimo de <c>RedirectKeepVerb</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary vsli:raw="Equivalent to HTTP status 429. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TooManyRequests&quot; /&gt; indicates that the user has sent too many requests in a given amount of time.">Equivalente al código de estado HTTP 429. <see cref="F:System.Net.HttpStatusCode.TooManyRequests" /> indica que el usuario ha enviado demasiadas solicitudes en un período de tiempo determinado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">Equivalente al código de estado HTTP 401. <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> indica que el recurso solicitado requiere autenticación. El encabezado WWW-Authenticate contiene los detalles de cómo realizar la autenticación.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary vsli:raw="Equivalent to HTTP status 451. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnavailableForLegalReasons&quot; /&gt; indicates that the server is denying access to the resource as a consequence of a legal demand.">Equivalente al código de estado HTTP 451. <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" /> indica que el servidor está denegando el acceso al recurso como consecuencia de una demanda legal.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary vsli:raw="Equivalent to HTTP status 422. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnprocessableEntity&quot; /&gt; indicates that the request was well-formed but was unable to be followed due to semantic errors.&#xA;        UnprocessableEntity is a synonym for UnprocessableContent.">Equivalente al código de estado HTTP 422. <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" /> indica que la solicitud tenía el formato correcto, pero no pudo seguirse debido a errores semánticos.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">Equivalente al código de estado HTTP 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> indica que el tipo de la solicitud no es compatible.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">Equivalente al código de estado HTTP 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> es una extensión propuesta de la especificación HTTP/1.1 que no está totalmente especificada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">Equivalente al código de estado HTTP 426. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> indica que el cliente debería cambiar a otro protocolo como TLS/1.0.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">Equivalente al código de estado HTTP 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> indica que la solicitud debe utilizar el servidor proxy en el URI especificado en el encabezado Location.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary vsli:raw="Equivalent to HTTP status 506. &lt;see cref=&quot;F:System.Net.HttpStatusCode.VariantAlsoNegotiates&quot; /&gt; indicates that the chosen variant resource is configured to engage in transparent content negotiation itself and, therefore, isn't a proper endpoint in the negotiation process.">Equivalente al código de estado HTTP 506. <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" /> indica que el recurso de variante elegido está configurado para participar en una negociación de contenido transparente y, por tanto, no es un punto de conexión adecuado en el proceso de negociación.</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">Define los números de versión de HTTP admitidos por las clases <see cref="T:System.Net.HttpWebRequest" /> y <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for an unknown HTTP version.">Define una instancia de <see cref="T:System.Version" /> para una versión HTTP desconocida.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">Define una instancia de <see cref="T:System.Version" /> para HTTP 1,0.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">Define una instancia de <see cref="T:System.Version" /> para HTTP 1.1.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 2.0.">Define una instancia de <see cref="T:System.Version" /> para HTTP 2.0.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">Proporciona la interfaz de autenticación base con el fin de recuperar credenciales de autenticación de cliente Web.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">Devuelve un objeto <see cref="T:System.Net.NetworkCredential" /> asociado a la dirección URI y al tipo de autenticación especificados.</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">
        <see cref="T:System.Uri" /> para la que el cliente está proporcionando autenticación.</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Tipo de autenticación según se ha definido en la propiedad <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" /> asociada al identificador URI y al tipo de autenticación especificados o, si no hay credenciales disponibles, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">Proporciona la interfaz para recuperar las credenciales de un host, puerto y tipo de autenticación.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">Devuelve la credencial del host, puerto y protocolo de autenticación especificados.</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">El equipo host que está autenticando el cliente.</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">El puerto de <paramref name="host" /> con el que se comunicará el cliente.</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">El protocolo de autenticación.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">Una clase <see cref="T:System.Net.NetworkCredential" /> para el host, puerto y protocolo de autenticación especificados o bien <see langword="null" />, si no hay ninguna credencial disponible para el host, puerto y protocolo de autenticación especificados.</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">Proporciona una dirección de protocolo de Internet (IP).</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPAddress" /> con la dirección especificada como matriz <see cref="T:System.Byte" />.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Valor de la matriz de bytes de la dirección IP.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contiene una dirección IP no válida.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPAddress" /> con la dirección especificada como matriz <see cref="T:System.Byte" /> y el identificador de ámbito especificado.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">Valor de la matriz de bytes de la dirección IP.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">Valor Long del identificador de ámbito.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contiene una dirección IP no válida.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0 o
<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPAddress" /> con la dirección especificada como <see cref="T:System.Int64" />.</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Valor Long de la dirección IP. Por ejemplo, el valor 0x2414188f en formato Big-endian sería la dirección IP "143.24.20.36".</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" /> &lt; 0 o
<paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPAddress" /> con la dirección especificada como intervalo de bytes.</summary>
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0.">Representación en bytes de la dirección IP, en el orden de bytes de la red, con el byte más significativo primero en la posición de índice 0.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contiene una dirección IP no válida.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span and the specified scope identifier.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPAddress" /> con la dirección especificada como intervalo de bytes y el identificador de ámbito especificado.</summary>
      <param name="address" vsli:raw="The byte span value of the IP address.">Valor del intervalo de bytes de la dirección IP.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">Valor Long del identificador de ámbito.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> contiene una dirección IP no válida.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0
o bien
<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">Dirección Protocolo Internet (Internet Protocol, IP).</summary>
      <returns vsli:raw="The long value of the IP address.">Valor Long de la dirección IP.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">La familia de direcciones es <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">Obtiene la familia de direcciones de la dirección IP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">Devuelve <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> para IPv4 o <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> para IPv6.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">Proporciona una dirección IP que indica que el servidor debe escuchar la actividad del cliente en todas las interfaces de red. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">Proporciona la dirección de difusión IP. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">Compara dos direcciones IP.</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">Instancia de <see cref="T:System.Net.IPAddress" /> que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las dos direcciones son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">Proporciona una copia de <see cref="T:System.Net.IPAddress" /> como matriz de bytes.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Una matriz de <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">Devuelve un valor hash de una dirección IP.</summary>
      <returns vsli:raw="An integer hash value.">Valor hash entero.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">Convierte un valor corto del orden de bytes del host al orden de bytes de la red.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Número que se va a convertir, expresado en el orden de bytes del host.</param>
      <returns vsli:raw="A short value, expressed in network byte order.">Valor Short, expresado en el orden de bytes de la red.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">Convierte un valor entero del orden de bytes del host al orden de bytes de la red.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Número que se va a convertir, expresado en el orden de bytes del host.</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">Valor entero, expresado en el orden de bytes de la red.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">Convierte un valor largo del orden de bytes del host al orden de bytes de la red.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">Número que se va a convertir, expresado en el orden de bytes del host.</param>
      <returns vsli:raw="A long value, expressed in network byte order.">Valor Long, expresado en el orden de bytes de la red.</returns>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">El método <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> usa el campo <see cref="F:System.Net.IPAddress.IPv6Any" /> para indicar que un objeto <see cref="T:System.Net.Sockets.Socket" /> debe escuchar la actividad del cliente en todas las interfaces de red.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">Proporciona la dirección de retorno de bucle IP. Esta propiedad es de sólo lectura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">Proporciona una dirección IP que indica que no debe utilizarse ninguna interfaz de red. Esta propiedad es de sólo lectura.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">Determina si la dirección IP es una dirección IPv6 de IPv4 asignado.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Devuelva <see cref="T:System.Boolean" />.
Es <see langword="true" /> si la dirección IP es una dirección IPv6 de IPv4 asignado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">Determina si la dirección es una dirección local de vínculo IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la dirección IP es una dirección local de vínculo IPv6; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">Determina si la dirección es una dirección de multidifusión global IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la dirección IP es una dirección de multidifusión global IPv6; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">Determina si la dirección es una dirección local de sitio IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la dirección IP es una dirección local de sitio IPv6; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">Obtiene un valor que indica si la dirección es una dirección Teredo IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la dirección IP es una dirección Teredo IPv6; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">Indica si la dirección IP especificada es la dirección de retorno de bucle.</summary>
      <param name="address" vsli:raw="An IP address.">Dirección IP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="address" /> es la dirección de retorno de bucle; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">Proporciona la dirección de retorno de bucle IP. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">Asigna el objeto <see cref="T:System.Net.IPAddress" /> en una dirección IPv4.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">Devuelva <see cref="T:System.Net.IPAddress" />.
Dirección IPv4.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">Asigna el objeto <see cref="T:System.Net.IPAddress" /> a una dirección IPv6.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">Devuelva <see cref="T:System.Net.IPAddress" />.
Dirección IPv6.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">Convierte un valor corto del orden de bytes de la red al orden de bytes del host.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Número que se va a convertir, expresado en el orden de bytes de la red.</param>
      <returns vsli:raw="A short value, expressed in host byte order.">Valor Short, expresado en el orden de bytes del host.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">Convierte un valor entero del orden de bytes de la red al orden de bytes del host.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Número que se va a convertir, expresado en el orden de bytes de la red.</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">Valor entero, expresado en el orden de bytes del host.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">Convierte un valor largo del orden de bytes de la red al orden de bytes del host.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">Número que se va a convertir, expresado en el orden de bytes de la red.</param>
      <returns vsli:raw="A long value, expressed in host byte order.">Valor Long, expresado en el orden de bytes del host.</returns>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">Proporciona una dirección IP que indica que no debe utilizarse ninguna interfaz de red. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP address represented as a character span to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Convierte una dirección IP representada como un intervalo de caracteres en una instancia de <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="ipString">Intervalo de caracteres que contiene una dirección IP en notación de cuatro números separados por puntos para IPv4 y en notación hexadecimal con dos puntos para IPv6.</param>
      <returns vsli:raw="The converted IP address.">Dirección IP convertida.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">El valor de <paramref name="ipString" /> no es una dirección IP válida.</exception>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Convierte una cadena de dirección IP en una instancia de <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">Cadena que contiene una dirección IP en notación de cuatro números separados por puntos para IPv4 y en notación hexadecimal con dos puntos para IPv6.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.IPAddress" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">El valor de <paramref name="ipString" /> no es una dirección IP válida.</exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">Obtiene o establece el identificador de ámbito de las direcciones IPv6.</summary>
      <returns vsli:raw="A long integer that specifies the scope of the address.">Entero largo que especifica el ámbito de la dirección.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0
o bien
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">Convierte una dirección de Internet a su notación estándar.</summary>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">Cadena que contiene la dirección IP expresada en notación de cuatro números separados por puntos en el caso de IPv4 o en notación hexadecimal con dos puntos en el caso de IPv6.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">La familia de direcciones es <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> y la dirección no está bien.</exception>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary vsli:raw="Tries to format the current IP address into the provided span.">Intenta dar formato a la dirección IP actual en el intervalo proporcionado.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters.">Cuando este método devuelve un valor, la dirección IP como intervalo de caracteres.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span.">Cuando se devuelve este método, número de caracteres escritos en el intervalo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el formato es correcto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary vsli:raw="Tries to parse a span of characters into a value.">Determina si el intervalo de bytes especificado representa una dirección IP válida.</summary>
      <param name="ipString">Intervalo de bytes que se va a validar.</param>
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span.">Cuando este método devuelve un valor, la versión <see cref="T:System.Net.IPAddress" /> del intervalo de bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipSpan&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="ipString" /> se ha podido analizar como una dirección IP; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">Determina si una cadena es una dirección IP válida.</summary>
      <param name="ipString" vsli:raw="The string to parse.">Cadena que se va a validar.</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.IPAddress" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="ipString" /> se ha podido analizar como una dirección IP; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> es null.</exception>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Tries to write the current IP address into a span of bytes in network order.">Intenta escribir la dirección IP actual en un intervalo de bytes.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes.">Cuando este método devuelve un valor, la dirección IP como intervalo de bytes.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span.">Cuando este método devuelve un valor, el número de bytes escritos en el intervalo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is successfully written to the given span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la dirección IP se escribe correctamente en el intervalo indicado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">Representa un punto de conexión de red como una dirección IP y un número de puerto.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPEndPoint" /> con la dirección y el número de puerto especificados.</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Dirección IP del host de Internet.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Número de puerto asociado a <paramref name="address" /> o bien 0 para especificar cualquier puerto disponible. <paramref name="port" /> está en el orden del host.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" /> es menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.
o bien
<paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" />.
o bien
<paramref name="address" /> es menor que 0 ó mayor que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.IPEndPoint" /> con la dirección y el número de puerto especificados.</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Una clase <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">Número de puerto asociado a <paramref name="address" /> o bien 0 para especificar cualquier puerto disponible. <paramref name="port" /> está en el orden del host.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> es menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.
o bien
<paramref name="port" /> es mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" />.
o bien
<paramref name="address" /> es menor que 0 ó mayor que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">Obtiene o establece la dirección IP del extremo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">Instancia de <see cref="T:System.Net.IPAddress" /> que contiene la dirección IP del extremo.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">Obtiene la familia de direcciones Protocolo Internet (Internet Protocol, IP).</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">Devuelva <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">Crea un extremo a partir de una dirección del socket.</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">
        <see cref="T:System.Net.SocketAddress" /> que se debe utilizar para el extremo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">Instancia de <see cref="T:System.Net.EndPoint" /> que utiliza la dirección del socket especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">AddressFamily de <paramref name="socketAddress" /> no es igual que AddressFamily de la instancia actual.
o bien
<paramref name="socketAddress" />.Size &lt; 8.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see cref="T:System.Object" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Devuelve un valor hash para una instancia de <see cref="T:System.Net.IPEndPoint" />.</summary>
      <returns vsli:raw="An integer hash value.">Valor hash entero.</returns>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">Especifica el valor máximo que puede asignarse a la propiedad <see cref="P:System.Net.IPEndPoint.Port" />. El valor MaxPort está establecido en 0x0000FFFF. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">Especifica el valor mínimo que puede asignarse a la propiedad <see cref="P:System.Net.IPEndPoint.Port" />. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Convierte un punto de conexión IP (dirección y puerto) representado como un intervalo de solo lectura en una instancia <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Un intervalo de solo lectura que contiene un punto de conexión IP en notación de cuatro dígitos separados por puntos u orden de bytes de red para IPv4 y en notación hexadecimal con dos puntos para IPv6.</param>
      <returns vsli:raw="The object representation of an IP network endpoint.">La representación de objeto de un punto de conexión de red IP.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> no es un punto de conexión IP válido.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">Convierte un punto de conexión IP (dirección y puerto) representado como una cadena en una instancia <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">Una cadena que contiene un punto de conexión IP en notación de cuatro dígitos separados por puntos u orden de bytes de red para IPv4 y en notación hexadecimal con dos puntos para IPv6.</param>
      <returns vsli:raw="The object representation of an IP network endpoint.">La representación de objeto de un punto de conexión de red IP.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> no es un punto de conexión IP válido.</exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">Obtiene o establece el número de puerto del extremo.</summary>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">Un valor entero en el intervalo de <see cref="F:System.Net.IPEndPoint.MinPort" /> a <see cref="F:System.Net.IPEndPoint.MaxPort" /> que indica el número de puerto del extremo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">El valor especificado para una operación de establecimiento (Set) es menor que <see cref="F:System.Net.IPEndPoint.MinPort" /> o mayor que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">Serializa la información de extremo en una instancia de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">Instancia de <see cref="T:System.Net.SocketAddress" /> que contiene la dirección del socket para el extremo.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">Devuelve la dirección IP y el número de puerto del extremo especificado.</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">Cadena que contiene la dirección IP y el número de puerto del extremo especificado (por ejemplo, 192.168.1.2:80).</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Intenta convertir un punto de conexión de red IP (dirección y puerto) representado como un intervalo de solo lectura en su equivalente<see cref="T:System.Net.IPEndPoint" /> y devuelve un valor que indica si la conversión se realizó correctamente.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">El punto de conexión IP que se va a validar.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Cuando este método se devuelve, la versión <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="s" /> se puede analizar como un punto de conexión IP; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Intenta convertir un punto de conexión de red IP (dirección y puerto) representado como una cadena en su equivalente<see cref="T:System.Net.IPEndPoint" /> y devuelve un valor que indica si la conversión se realizó correctamente.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">El punto de conexión IP que se va a validar.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">Cuando este método se devuelve, la versión <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="s" /> se puede analizar como un punto de conexión IP; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">Proporciona la interfaz base para la implementación del acceso a proxy de la clase <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">Credenciales que se envían al servidor proxy para la autenticación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">Instancia de <see cref="T:System.Net.ICredentials" /> que contiene las credenciales necesarias para autenticar una solicitud en el servidor proxy.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">Devuelve la dirección URI de un proxy.</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">
        <see cref="T:System.Uri" /> que especifica el recurso de Internet solicitado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">Instancia de <see cref="T:System.Uri" /> que contiene la dirección URI del proxy que se utiliza para establecer contacto con <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">Indica que el proxy no debe utilizarse para el host especificado.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">
        <see cref="T:System.Uri" /> del host que se comprobará para el uso del proxy.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el servidor proxy no se debe utilizar para <paramref name="host" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">Proporciona credenciales para esquemas de autenticación basados en contraseña como la autenticación básica, implícita, NTLM y Kerberos.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkCredential" />.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkCredential" /> con el nombre de usuario y la contraseña especificados.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nombre de usuario asociado a las credenciales.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">La contraseña del nombre de usuario asociada a las credenciales.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La clase <see cref="T:System.Security.SecureString" /> no es compatible con esta plataforma.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkCredential" /> con el nombre de usuario, la contraseña y el dominio especificados.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nombre de usuario asociado a las credenciales.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">La contraseña del nombre de usuario asociada a las credenciales.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Dominio asociado a estas credenciales.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La clase <see cref="T:System.Security.SecureString" /> no es compatible con esta plataforma.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkCredential" /> con el nombre de usuario y la contraseña especificados.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nombre de usuario asociado a las credenciales.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">La contraseña del nombre de usuario asociada a las credenciales.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkCredential" /> con el nombre de usuario, la contraseña y el dominio especificados.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">Nombre de usuario asociado a las credenciales.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">La contraseña del nombre de usuario asociada a las credenciales.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">Dominio asociado a estas credenciales.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">Obtiene o establece el nombre de equipo o dominio que comprueba las credenciales.</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">Nombre del dominio asociado a las credenciales.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">Devuelve una instancia de la clase <see cref="T:System.Net.NetworkCredential" /> para el host, el puerto y el tipo de autenticación especificados.</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">Equipo host que autentica el cliente.</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">Puerto de <paramref name="host" /> con el que se comunica el cliente.</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">Tipo de autenticación solicitado, según se define en la propiedad <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">Una clase <see cref="T:System.Net.NetworkCredential" /> para el host, puerto y protocolo de autenticación especificados o bien <see langword="null" />, si no hay ninguna credencial disponible para el host, puerto y protocolo de autenticación especificados.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">Devuelve una instancia de la clase <see cref="T:System.Net.NetworkCredential" /> para el identificador uniforme de recursos (URI) y el tipo de autenticación especificados.</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">URI para el que el cliente proporciona autenticación.</param>
      <param name="authType">Tipo de autenticación solicitado, según se define en la propiedad <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">Objeto <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">Obtiene o establece la contraseña del nombre de usuario asociada a las credenciales.</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">Contraseña asociada a las credenciales. Si esta instancia de <see cref="T:System.Net.NetworkCredential" /> se inicializó con el parámetro <paramref name="password" /> establecido en <see langword="null" />, la propiedad <see cref="P:System.Net.NetworkCredential.Password" /> devolverá una cadena vacía.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">Obtiene o establece la contraseña como una instancia de <see cref="T:System.Security.SecureString" />.</summary>
      <returns vsli:raw="The password for the user name associated with the credentials.">La contraseña del nombre de usuario asociada a las credenciales.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">La clase <see cref="T:System.Security.SecureString" /> no es compatible con esta plataforma.</exception>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">Obtiene o establece el nombre de usuario asociado a las credenciales.</summary>
      <returns vsli:raw="The user name associated with the credentials.">Nombre de usuario asociado a las credenciales.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">Almacena un conjunto de tipos <see cref="T:System.Net.IPAddress" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Inicia una excepción <see cref="T:System.NotSupportedException" /> porque esta operación no se admite para esta colección.</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">Objeto que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Inicia una excepción <see cref="T:System.NotSupportedException" /> porque esta operación no se admite para esta colección.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">Comprueba si la colección contiene el objeto <see cref="T:System.Net.IPAddress" /> especificado.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">Objeto <see cref="T:System.Net.IPAddress" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Net.IPAddress" /> existe en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Copia los elementos de esta colección a una matriz unidimensional de tipo <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">Matriz unidimensional que recibe una copia de la colección.</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">Índice de base cero de <paramref name="array" /> en el que comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.
o bien
El número de elementos de este objeto <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> de origen es mayor que el espacio disponible entre <paramref name="offset" /> y el final de <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">Los elementos de <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> no pueden convertirse automáticamente en el tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Obtiene el número de tipos de <see cref="T:System.Net.IPAddress" /> en esta colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">Un valor <see cref="T:System.Int32" /> que contiene el número de tipos de <see cref="T:System.Net.IPAddress" /> en esta colección.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Devuelve un objeto que puede utilizarse para recorrer en iteración esta colección.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> y proporciona acceso a los tipos <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> de esta colección.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">Obtiene un valor que indica si el acceso a esta colección es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> en todos los casos.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">Obtiene <see cref="T:System.Net.IPAddress" /> que se encuentra en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The index of interest.">Índice especificado.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">El <see cref="T:System.Net.IPAddress" /> situado en el índice especificado de la colección.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">Inicia una excepción <see cref="T:System.NotSupportedException" /> porque esta operación no se admite para esta colección.</summary>
      <param name="address" vsli:raw="The object to be removed.">Objeto que se va a quitar.</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Siempre inicia una <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">Devuelve un objeto que puede utilizarse para recorrer en iteración esta colección.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">Objeto que implementa la interfaz <see cref="T:System.Collections.IEnumerator" /> y proporciona acceso a los tipos <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> de esta colección.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">Especifica los requisitos del cliente para la autenticación y suplantación al utilizar la clase <see cref="T:System.Net.WebRequest" /> y las clases derivadas para solicitar un recurso.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">El cliente y el servidor se deben autenticar. No se produce ningún error en la solicitud si el servidor no está autenticado. Para determinar si se realizó una autenticación mutua, compruebe el valor de la propiedad <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">El cliente y el servidor se deben autenticar. Si el servidor no se autentica, la aplicación recibirá una excepción <see cref="T:System.IO.IOException" /> con una excepción interna <see cref="T:System.Net.ProtocolViolationException" /> que indica que se ha producido un error en la autenticación mutua.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">No se necesita autenticación ni para el cliente ni para el servidor.</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">Enumera los errores de la directiva del protocolo Secure Socket Layer (SSL)</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">No hay errores en la directiva de SSL.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> ha devuelto una matriz que no está vacía.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">El nombre del certificado no coincide.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">Certificado no disponible.</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">Almacena información serializada procedente de clases derivadas de <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">Crea una nueva instancia de la clase <see cref="T:System.Net.SocketAddress" /> para la familia de direcciones dada.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Valor enumerado de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">Crea una nueva instancia de la clase <see cref="T:System.Net.SocketAddress" /> con la familia de direcciones y el tamaño de búfer especificados.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">Valor enumerado de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">Número de bytes que se asignan al búfer subyacente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" /> es menor que 2. Se necesitan estos dos bytes para almacenar <paramref name="family" />.</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">Determina si el objeto <see langword="Object" /> especificado es igual al objeto <see langword="Object" /> actual.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a comparar con el objeto <see langword="Object" /> actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see langword="Object" /> especificado es igual al objeto <see langword="Object" /> actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Obtiene el valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" /> del objeto <see cref="T:System.Net.SocketAddress" /> actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">Uno de los valores enumerados de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">Sirve como función hash para un tipo concreto, y se puede usar en algoritmos hash y estructuras de datos, como las tablas hash.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Código hash para el objeto <see cref="T:System.Object" /> actual.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">Obtiene o establece el elemento de índice especificado en el búfer subyacente.</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">Elemento del índice de matriz de la información deseada.</param>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">Valor del elemento de índice especificado en el búfer subyacente.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">El índice especificado no existe en el búfer.</exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Obtiene el tamaño del búfer subyacente del objeto <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Tamaño del búfer subyacente del objeto <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">Devuelve información acerca de la dirección del socket.</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">Cadena que contiene información sobre <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">Especifica el servicio de direcciones que puede utilizar una instancia de la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">Dirección AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">Dirección ATM de servicios nativos.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Dirección Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">Direcciones para los protocolos CCITT, como X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">Dirección para los protocolos MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Dirección para los productos de clúster de Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">Dirección de red del área del controlador.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Dirección para los protocolos Datakit.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">Dirección de la interfaz de vínculo de datos directo.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">Dirección DECnet.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">Dirección de la Asociación europea de fabricantes de Informática (ECMA).</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">Dirección FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">Dirección NSC de Hyperchannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">Dirección para el grupo de trabajo IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">Dirección IMP de ARPANET.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">Dirección para IP versión 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">Dirección para IP, versión 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">Dirección IPX o SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">Dirección IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">Dirección para los protocolos ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">Dirección LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">Dirección MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">Dirección NetBios.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">Dirección para protocolos OSI compatibles con puertas de enlace Network Designers.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Dirección para los protocolos Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">Dirección para los protocolos OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">Dirección de paquete de bajo nivel.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">Dirección para los protocolos PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">Dirección SNA de IBM.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">Dirección Unix local a host.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">Familia de direcciones desconocidas.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">Familia de direcciones no especificadas.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">Dirección VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Define códigos de error para la clase <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">Se intentó obtener acceso a un <see cref="T:System.Net.Sockets.Socket" /> de una manera prohibida por sus permisos de acceso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">Normalmente se permite un solo uso de una dirección.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">No admite la familia de direcciones especificada. Se devuelve este error si se especificó la familia de direcciones IPv6 y la pila del IPv6 no está instalada en el equipo local. Se devuelve este error si se especificó la familia de direcciones IPv4 y la pila del IPv4 no está instalada en el equipo local.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">La dirección IP seleccionada no es válida en este contexto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">El <see cref="T:System.Net.Sockets.Socket" /> de no bloqueo ya tiene una operación en curso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">.NET Framework o el proveedor de sockets subyacentes anuló la conexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">El host remoto rechaza activamente una conexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">El interlocutor remoto restableció la conexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Se ha omitido una dirección necesaria de una operación en un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">Se está realizando correctamente una desconexión.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">El proveedor de sockets subyacentes detectó una dirección de puntero no válida.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">Se ha generado un error en la operación porque el host remoto está inactivo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">Se desconoce el host. El nombre no es un nombre de host o alias oficial.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">No hay ninguna ruta de red al host especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">Hay una operación de bloqueo en curso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">Se canceló una llamada <see cref="T:System.Net.Sockets.Socket" /> de bloqueo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">Se ha proporcionado un argumento no válido a un miembro de <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">La aplicación ha iniciado una operación superpuesta que no se puede finalizar inmediatamente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">El <see cref="T:System.Net.Sockets.Socket" /> ya está conectado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">El datagrama es demasiado largo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">La red no está disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">La aplicación intentó establecer <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> en una conexión cuyo tiempo de espera ya está agotado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">No existe ninguna ruta al host remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">No hay espacio en búfer disponible para una operación de <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">No se encontró el nombre o la dirección IP solicitada en el servidor de nombres.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">El error es irrecuperable o no se encuentra la base de datos solicitada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">La aplicación intentó enviar o recibir datos y el <see cref="T:System.Net.Sockets.Socket" /> no está conectado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">No se ha inicializado el proveedor de sockets subyacentes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">Se intentó realizar una operación de <see cref="T:System.Net.Sockets.Socket" /> en algo que no es un socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">La operación superpuesta se anuló debido al cierre del <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">La familia de protocolos no admite la familia de direcciones.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">Demasiados procesos están utilizando el proveedor de sockets subyacentes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">La familia de protocolos no está implementada o no está configurada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">El protocolo no está implementado o no está configurado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Se ha utilizado una opción o un nivel desconocido, no válido o incompatible con un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">El tipo de protocolo es incorrecto para este <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">Se denegó una solicitud de envío o recepción de datos porque ya se ha cerrado el <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">Se ha producido un error de <see cref="T:System.Net.Sockets.Socket" /> no especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">Esta familia de direcciones no es compatible con el tipo de socket especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">La operación de <see cref="T:System.Net.Sockets.Socket" /> se ha realizado correctamente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">El subsistema de red no está disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">El intento de conexión ha sobrepasado el tiempo de espera o el host conectado no ha respondido.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">Hay demasiados sockets abiertos en el proveedor de sockets subyacentes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">No se pudo resolver el nombre del host. Vuelva a intentarlo más tarde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">No se encontró la clase especificada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">La versión del proveedor de sockets subyacentes está fuera del intervalo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">No se puede finalizar inmediatamente una operación en un socket de no bloqueo.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">Excepción que se produce cuando se produce un error de socket.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SocketException" /> con el último código de error del sistema operativo.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SocketException" /> con el código de error especificado.</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">Código de error que indica el error que se ha producido.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.SocketException" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">Instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva instancia de <see cref="T:System.Net.Sockets.SocketException" />.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva instancia de <see cref="T:System.Net.Sockets.SocketException" />.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Obtiene el código de error asociado a esta excepción.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Un entero que representa el código de error asociado a esta excepción.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">Obtiene el mensaje de error asociado a esta excepción.</summary>
      <returns vsli:raw="A string that contains the error message.">Una cadena que contiene el mensaje de error.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">Obtiene el código de error asociado a esta excepción.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">Un entero que representa el código de error asociado a esta excepción.</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">La clase <see cref="T:System.Net.TransportContext" /> proporciona contexto adicional sobre la capa de transporte subyacente.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.TransportContext" />.</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">Recupera el enlace de canal solicitado.</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">Tipo de enlace de canal que se va a recuperar.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> solicitado o <see langword="null" /> si el transporte actual o el sistema operativo no admiten el enlace de canal.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" /> debe ser <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> para usarse con el <see cref="T:System.Net.TransportContext" /> recuperado de la propiedad <see cref="P:System.Net.HttpListenerRequest.TransportContext" />.</exception>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">Define los posibles algoritmos de cifrado para la clase <see cref="T:System.Net.Security.SslStream" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">Algoritmo AES (Estándar de cifrado avanzado).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">Algoritmo AES (Estándar de cifrado avanzado) con una clave de 128 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">Algoritmo AES (Estándar de cifrado avanzado) con una clave de 192 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">Algoritmo AES (Estándar de cifrado avanzado) con una clave de 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">Algoritmo DES (Estándar de cifrado de datos).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">No se utiliza ningún algoritmo de cifrado.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">No se utiliza ningún cifrado con un algoritmo de cifra Nulo.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">Algoritmo RC2 (código 2 de Rivest).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">Algoritmo RC4 (código 4 de Rivest).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">Algoritmo 3DES (Estándar de cifrado de datos triple).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">Especifica el algoritmo que se usa para crear claves que comparten el cliente y el servidor.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Algoritmo de intercambio de clave efímera Diffie Hellman.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">No se utiliza ningún algoritmo de intercambio de claves.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">Algoritmo de intercambio de clave pública RSA.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">Algoritmo de firma de clave pública RSA.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">La clase <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> encapsula un puntero a los datos opacos con el fin de enlazar una transacción autenticada a un canal seguro.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">Valor booleano que indica si la aplicación posee el controlador seguro para una región de la memoria nativa que contiene los datos de bytes que se pasarían a las llamadas nativas que proporcionan protección extendida para la autenticación integrada de Windows.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">La propiedad <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> obtiene el tamaño, en bytes, del token de enlace de canal asociado a la instancia <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">Tamaño, en bytes, del token de enlace de canal de la instancia de <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">La enumeración <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> representa los tipos de enlaces de canal que se pueden consultar desde canales seguros.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">Un enlace de canal único a un extremo determinado (por ejemplo, un certificado de servidor TLS).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">Un enlace de canal totalmente único a un canal determinado (por ejemplo, una clave de sesión TLS).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">Un tipo de enlace de canal desconocido.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">Especifica el algoritmo que se usa para generar códigos de autenticación de mensajes (MAC).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Algoritmo hash Message Digest 5 (MD5).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">No se usa algoritmo de hash.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Algoritmo hash seguro (SHA1).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">Algoritmo hash seguro 2 (SHA-2), con un resumen de 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">Algoritmo hash seguro 2 (SHA-2), con un resumen de 384 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">Algoritmo hash seguro 2 (SHA-2), con un resumen de 512 bits.</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">Define las versiones posibles de <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">Use None en lugar de Default. Default solo permite que se negocie con los protocolos SSL (Capa de sockets seguros) 3.0 o TLS (Seguridad de la capa de transporte) 1.0, y esas opciones ahora se consideran obsoletas. Por lo tanto, Default no se permite en muchas organizaciones. A pesar del nombre del campo, <see cref="T:System.Net.Security.SslStream" /> no lo usa como valor predeterminado, excepto en circunstancias especiales.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">Permite que el sistema operativo seleccione el mejor protocolo y que impida el uso de protocolos que no se consideren seguros. Le recomendamos que use este campo, excepto si existe un motivo específico para no usarlo en la aplicación.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Especifica el protocolo SSL 2.0. El protocolo TLS ha reemplazado a SSL 2.0 y sólo se proporciona para la compatibilidad con versiones anteriores.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">Especifica el protocolo SSL 3.0. El protocolo TLS ha reemplazado a SSL 3.0 y solo se proporciona para la compatibilidad con versiones anteriores.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">Especifica el protocolo de seguridad TLS 1.0. El protocolo TLS está definido en IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">Especifica el protocolo de seguridad TLS 1.1. El protocolo TLS está definido en IETF RFC 4346.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">Especifica el protocolo de seguridad TLS 1.2. El protocolo TLS está definido en IETF RFC 5246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">Especifica el protocolo de seguridad TLS 1.3. El protocolo TLS está definido en IETF RFC 8446.</summary>
    </member>
  </members>
</doc>