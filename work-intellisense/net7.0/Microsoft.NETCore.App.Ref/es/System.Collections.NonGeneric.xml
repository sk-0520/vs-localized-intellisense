<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary vsli:raw="Compares two objects for equivalence, ignoring the case of strings.">Compara dos objetos para ver la equivalencia omitiendo la distinción entre mayúsculas y minúsculas de las cadenas.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveComparer" /> mediante la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveComparer" /> utilizando la clase <see cref="T:System.Globalization.CultureInfo" /> especificada.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> que debe usarse para el nuevo objeto <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary vsli:raw="Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.">Realiza una comparación sin distinguir mayúsculas y minúsculas de dos objetos del mismo tipo y devuelve un valor que indica si uno es menor, igual o mayor que el otro.</summary>
      <param name="a" vsli:raw="The first object to compare.">Primer objeto que se va a comparar.</param>
      <param name="b" vsli:raw="The second object to compare.">Segundo objeto que se va a comparar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;a&quot; /&gt; nor &lt;paramref name=&quot;b&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are of different types.">Ni <paramref name="a" /> ni <paramref name="b" /> implementan la interfaz <see cref="T:System.IComparable" />.  
  
o bien 
 <paramref name="a" /> y <paramref name="b" /> son de tipos diferentes.</exception>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is less than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; equals &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is greater than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Entero con signo que indica los valores relativos de <paramref name="a" /> y <paramref name="b" />, como se muestra en la tabla siguiente.  
  
 <list type="table"><listheader><term> Valor</term><description> Significado</description></listheader><item><term> Menor que cero</term><description><paramref name="a" /> es menor que cero <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item><item><term> Cero</term><description><paramref name="a" /> es igual que <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item><item><term> Mayor que cero</term><description><paramref name="a" /> es mayor que cero <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item></list></returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual y que siempre está disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> y que siempre está disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">Una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary vsli:raw="Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.">Proporciona un código hash para un objeto y utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> mediante la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> utilizando la clase <see cref="T:System.Globalization.CultureInfo" /> especificada.</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> que debe usarse para el nuevo objeto <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.">Devuelve un código hash para el objeto dado y utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">
        <see cref="T:System.Object" /> para el que se va a devolver un código hash.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A hash code for the given object, using a hashing algorithm that ignores the case of strings.">Código hash para el objeto dado que utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual y que siempre está disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">Una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> y que siempre está disponible.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">Una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection.">Proporciona la clase base <see langword="abstract" /> para una colección fuertemente tipada.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the default initial capacity.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CollectionBase" /> con la funcionalidad inicial predeterminada.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the specified capacity.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CollectionBase" /> con la capacidad especificada.</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">Número de elementos que puede almacenar inicialmente la lista nueva.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method cannot be overridden.">Elimina todos los objetos de la instancia de <see cref="T:System.Collections.CollectionBase" />. Este método no se puede invalidar.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Devuelve un enumerador que recorre en iteración la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales al borrar el contenido de la instancia <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de quitar un elemento de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de establecer un valor en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Realiza procesos de personalización adicionales al validar un valor.</summary>
      <param name="value" vsli:raw="The object to validate.">Objeto que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method is not overridable.">Quita el elemento que se encuentra en el índice especificado de la instancia de <see cref="T:System.Collections.CollectionBase" />. Este método no se puede reemplazar.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copia la totalidad de <see cref="T:System.Collections.CollectionBase" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.CollectionBase" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.CollectionBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.CollectionBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Agrega un objeto al final de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be added to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a agregar al final de la colección <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; index at which the &lt;paramref name=&quot;value&quot; /&gt; has been added.">Índice de <see cref="T:System.Collections.CollectionBase" /> en el que se ha agregado <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains a specific element.">Determina si <see cref="T:System.Collections.CollectionBase" /> contiene un elemento específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> contiene el objeto <paramref name="value" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Searches for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la primera aparición en toda la colección <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;, if found; otherwise, -1.">Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <see cref="T:System.Collections.CollectionBase" />, si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; at the specified index.">Inserta un elemento en <see cref="T:System.Collections.CollectionBase" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert.">
        <see cref="T:System.Object" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">
        <see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter was not found in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; object.">No se ha encontrado el parámetro <paramref name="value" /> en el objeto <see cref="T:System.Collections.CollectionBase" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">Obtiene o establece el número de elementos que puede contener <see cref="T:System.Collections.CollectionBase" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.CollectionBase.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> se establece en un valor que es menor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">No hay memoria suficiente en el sistema.</exception>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">Número de elementos que puede contener <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This property cannot be overridden.">Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.CollectionBase" />. Esta propiedad no se puede invalidar.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">El número de elementos contenidos en la instancia de <see cref="T:System.Collections.CollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Obtiene una colección <see cref="T:System.Collections.ArrayList" /> que contiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ArrayList" /> que representa la propia instancia de <see cref="T:System.Collections.CollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">Obtiene una colección <see cref="T:System.Collections.IList" /> que contiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IList" /> que representa la propia instancia de <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.CollectionBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.CollectionBase" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la <see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.CollectionBase" /> es de solo lectura; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection of key/value pairs.">Proporciona la clase base <see langword="abstract" /> para una colección de pares clave-valor fuertemente tipada.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Borra el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copia los elementos de <see cref="T:System.Collections.DictionaryBase" /> a una <see cref="T:System.Array" /> unidimensional en el índice especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que es el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de la instancia de <see cref="T:System.Collections.DictionaryBase" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.DictionaryBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.DictionaryBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Devuelve un <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary vsli:raw="Performs additional custom processes before clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Ejecuta procesos personalizados adicionales antes de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary vsli:raw="Gets the element with the specified key and value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtiene el elemento con la clave y valor especificados en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to get.">Clave del elemento que se va a obtener.</param>
      <param name="currentValue" vsli:raw="The current value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Valor actual del elemento asociado a <paramref name="key" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the element with the specified key and value.">
        <see cref="T:System.Object" /> que contiene el elemento con la clave y el valor especificados.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">Clave del elemento que se va a insertar.</param>
      <param name="value" vsli:raw="The value of the element to insert.">Valor del elemento que se va a insertar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to insert.">Clave del elemento que se va a insertar.</param>
      <param name="value" vsli:raw="The value of the element to insert.">Valor del elemento que se va a insertar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clave del elemento que se va a quitar.</param>
      <param name="value" vsli:raw="The value of the element to remove.">Valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clave del elemento que se va a quitar.</param>
      <param name="value" vsli:raw="The value of the element to remove.">Valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">Clave del elemento que se va a buscar.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Antiguo valor del elemento asociado a <paramref name="key" />.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Nuevo valor del elemento asociado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Realiza procesos personalizados adicionales después de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to locate.">Clave del elemento que se va a buscar.</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Antiguo valor del elemento asociado a <paramref name="key" />.</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">Nuevo valor del elemento asociado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating the element with the specified key and value.">Ejecuta procesos personalizados adicionales al validar el elemento con la clave y valor especificados.</summary>
      <param name="key" vsli:raw="The key of the element to validate.">Clave del elemento que se va a validar.</param>
      <param name="value" vsli:raw="The value of the element to validate.">Valor del elemento que se va a validar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Agrega un elemento con la clave y el valor especificados a <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Clave del elemento que se va a agregar.</param>
      <param name="value" vsli:raw="The value of the element to add.">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Ya existe un elemento con la misma clave en <see cref="T:System.Collections.DictionaryBase" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains a specific key.">Determina si <see cref="T:System.Collections.DictionaryBase" /> contiene una clave específica.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Clave que se buscará en <see cref="T:System.Collections.DictionaryBase" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección <see cref="T:System.Collections.DictionaryBase" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Quita el elemento con la clave especificada de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">El número de elementos contenidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.IDictionary" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.Hashtable" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe).">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size.">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only.">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Obtiene o establece el valor asociado a la clave especificada.</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">Clave cuyo valor se va a obtener o a establecer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">La propiedad está establecida y <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, attempting to get it returns &lt;see langword=&quot;null&quot; /&gt;, and attempting to set it creates a new element using the specified key.">Valor asociado a la clave especificada. Si no se encuentra la clave especificada, al intentar obtenerla se devuelve <see langword="null" /> y al intentar establecerla se crea una nueva entrada con la clave especificada.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">Representa una colección de objetos de tipo primero en entrar, primero en salir.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the default initial capacity, and uses the default growth factor.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial predeterminada y utiliza el factor de crecimiento predeterminado.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que contiene elementos copiados de la colección especificada, tiene la misma capacidad inicial que el número de elementos copiados y utiliza el factor de crecimiento predeterminado.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" /> de donde se van a copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default growth factor.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial especificada y utiliza el factor de crecimiento predeterminado.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified growth factor.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial especificada y utiliza el factor de crecimiento especificado.</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Queue" />.</param>
      <param name="growFactor" vsli:raw="The factor by which the capacity of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is expanded.">Factor de aumento de la capacidad de <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;growFactor&quot; /&gt; is less than 1.0 or greater than 10.0.">
        <paramref name="capacity" /> es menor que cero.  
  
o bien 
 <paramref name="growFactor" /> es menor que 1,0 o mayor que 10,0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Quita todos los objetos de la colección <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Crea una copia superficial de la colección <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Copia superficial de la colección <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Determina si un elemento se encuentra en <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.Queue" />. El valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> se encuentra en la matriz <see cref="T:System.Collections.Queue" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia los elementos de <see cref="T:System.Collections.Queue" /> en una <see cref="T:System.Array" /> unidimensional existente, a partir del índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Queue" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
O bien 
El número de elementos de la <see cref="T:System.Collections.Queue" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.ArrayTypeMismatchException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.Queue" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Quita y devuelve el objeto al comienzo de <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">La colección <see cref="T:System.Collections.Queue" /> está vacía.</exception>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Objeto que se quita del principio de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Agrega un objeto al final de <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto que se va a agregar a <see cref="T:System.Collections.Queue" />. El valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; without removing it.">Devuelve un objeto al principio de <see cref="T:System.Collections.Queue" /> sin eliminarlo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">La colección <see cref="T:System.Collections.Queue" /> está vacía.</exception>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Objeto situado al principio de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; that wraps the original queue, and is thread safe.">Devuelve un nuevo <see cref="T:System.Collections.Queue" /> que contiene la cola original y es seguro para subprocesos.</summary>
      <param name="queue" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; to synchronize.">
        <see cref="T:System.Collections.Queue" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;queue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="queue" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; wrapper that is synchronized (thread safe).">Contenedor de<see cref="T:System.Collections.Queue" /> que está sincronizado (es seguro para subprocesos).</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to a new array.">Copia los elementos <see cref="T:System.Collections.Queue" /> en una matriz nueva.</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Nueva matriz que contiene elementos copiados de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Establece la capacidad en el número real de elementos que hay en <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.Queue" /> es de solo lectura.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Número de elementos contenidos en <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.Queue" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.Queue" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Queue" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed non-generic read-only collection.">Proporciona la clase base <see langword="abstract" /> para una colección fuertemente tipada de solo lectura no genérica.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Devuelve un enumerador que recorre en iteración la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copia la totalidad de <see cref="T:System.Collections.ReadOnlyCollectionBase" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">El número de elementos contenidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.ArrayList" /> que representa la propia instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe).">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.">Representa una colección de pares de clave y valor ordenados por claves a los que se puede tener acceso por clave y por índice.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial predeterminada y está ordenada en función de la interfaz <see cref="T:System.IComparable" /> implementada por cada clave agregada al objeto <see cref="T:System.Collections.SortedList" />.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial predeterminada y está ordenada de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial especificada y está ordenada de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Número inicial de elementos que puede contener el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> es menor que cero.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;capacity&quot; /&gt;.">No hay suficiente memoria disponible para crear un objeto <see cref="T:System.Collections.SortedList" /> con el parámetro <paramref name="capacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que contiene elementos copiados del diccionario especificado, tiene la misma capacidad inicial que el número de elementos copiados y se ordena de acuerdo con la interfaz <see cref="T:System.IComparable" /> implementada por cada clave.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Implementación de <see cref="T:System.Collections.IDictionary" /> que se va a copiar en un nuevo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="One or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Uno o más elementos de la <paramref name="d" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que contiene elementos copiados del diccionario especificado, tiene la misma capacidad inicial que el número de elementos copiados y se ordena de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Implementación de <see cref="T:System.Collections.IDictionary" /> que se va a copiar en un nuevo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and one or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="comparer" /> es <see langword="null" /> y uno o más elementos de la <paramref name="d" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial especificada y está ordenada en función de la interfaz <see cref="T:System.IComparable" /> implementada por cada clave agregada al objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Número inicial de elementos que puede contener el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> es menor que cero.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;initialCapacity&quot; /&gt;.">No hay suficiente memoria disponible para crear un objeto <see cref="T:System.Collections.SortedList" /> con el parámetro <paramref name="initialCapacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Agrega un elemento con la clave y el valor especificados a un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key of the element to add.">Clave del elemento que se va a agregar.</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valor del elemento que se va a agregar. El valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the specified &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is set to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface, and &lt;paramref name=&quot;key&quot; /&gt; does not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">Ya existe un elemento con el parámetro <paramref name="key" /> especificado en el objeto <see cref="T:System.Collections.SortedList" />.  
  
o bien 
Se establece <see cref="T:System.Collections.SortedList" /> para utilizar la interfaz <see cref="T:System.IComparable" /> y <paramref name="key" /> no implementa la interfaz <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">No hay suficiente memoria disponible para agregar el elemento al objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">El comparador produce una excepción.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Quita todos los elementos de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary vsli:raw="Creates a shallow copy of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Crea una copia superficial de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Copia superficial del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene una clave específica.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">El comparador produce una excepción.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="key" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene una clave específica.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">El comparador produce una excepción.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="key" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific value.">Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene un valor específico.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valor que se va a buscar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="value" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object, starting at the specified index in the array.">Copia los elementos <see cref="T:System.Collections.SortedList" /> en un objeto <see cref="T:System.Array" /> unidimensional, empezando en el índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Objeto <see cref="T:System.Array" /> unidimensional que constituye el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.SortedList" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
O bien 
El número de elementos del objeto <see cref="T:System.Collections.SortedList" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final del parámetro <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.SortedList" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary vsli:raw="Gets the value at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene el valor que se encuentra en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">Índice de base cero del valor que se va a obtener.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <returns vsli:raw="The value at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Valor que se encuentra en el índice especificado del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object that iterates through a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene la clave que se encuentra en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the key to get.">Índice de base cero de la clave que se va a obtener.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <returns vsli:raw="The key at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clave que se encuentra en el índice especificado del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene las claves de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto <see cref="T:System.Collections.IList" /> que contiene las claves del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene los valores de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto <see cref="T:System.Collections.IList" /> que contiene los valores del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the specified key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Devuelve el índice de base cero de la clave especificada en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">El comparador produce una excepción.</exception>
      <returns vsli:raw="The zero-based index of the &lt;paramref name=&quot;key&quot; /&gt; parameter, if &lt;paramref name=&quot;key&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">Índice de base cero del parámetro <paramref name="key" />, si <paramref name="key" /> se encuentra en el objeto <see cref="T:System.Collections.SortedList" />; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified value in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Devuelve el índice de base cero de la primera aparición del valor especificado en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Valor que se va a buscar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the &lt;paramref name=&quot;value&quot; /&gt; parameter, if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">Índice de base cero de la primera aparición del parámetro <paramref name="value" />, si <paramref name="value" /> se encuentra en el objeto <see cref="T:System.Collections.SortedList" />; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Quita el elemento con la clave especificada de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Quita el elemento en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary vsli:raw="Replaces the value at a specific index in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Reemplaza el valor de un índice especificado en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to save &lt;paramref name=&quot;value&quot; /&gt;.">Índice de base cero en el que se guarda <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to save into the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> que se va a guardar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary vsli:raw="Returns a synchronized (thread-safe) wrapper for a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Devuelve un contenedor sincronizado (seguro para subprocesos) para un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object to synchronize.">Objeto <see cref="T:System.Collections.SortedList" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A synchronized (thread-safe) wrapper for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Contenedor sincronizado (seguro para subprocesos) para el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Establece la capacidad en el número real de elementos de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary vsli:raw="Gets or sets the capacity of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene o establece la capacidad de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value assigned is less than the current number of elements in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">El valor asignado es menor que el número actual de elementos del objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">No hay memoria suficiente en el sistema.</exception>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">Número de elementos que el objeto <see cref="T:System.Collections.SortedList" /> puede contener.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary vsli:raw="Gets the number of elements contained in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene el número de elementos incluidos en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Número de elementos incluidos en el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size.">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe).">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.SortedList" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.SortedList" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with a specific key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene o establece el valor asociado a una clave específica de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key" vsli:raw="The key associated with the value to get or set.">Clave asociada al valor que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">La propiedad está establecida y el objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">No hay suficiente memoria disponible para agregar el elemento al objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">El comparador produce una excepción.</exception>
      <returns vsli:raw="The value associated with the &lt;paramref name=&quot;key&quot; /&gt; parameter in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object, if &lt;paramref name=&quot;key&quot; /&gt; is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor asociado al parámetro <paramref name="key" /> del objeto <see cref="T:System.Collections.SortedList" /> si se encuentra <paramref name="key" />; en caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene las claves de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Obtiene los valores de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary vsli:raw="Creates collections that ignore the case in strings.">Crea colecciones que omiten las mayúsculas y minúsculas en las cadenas.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.CollectionsUtil&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Specialized.CollectionsUtil" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">Crea una nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial predeterminada.</summary>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial predeterminada.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary vsli:raw="Copies the entries from the specified dictionary to a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the same initial capacity as the number of entries copied.">Copia las entradas del diccionario especificado a una nueva instancia que no distingue entre mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la misma capacidad inicial que el número de entradas copiadas.</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; to copy to a new case-insensitive &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt;.">
        <see cref="T:System.Collections.IDictionary" /> que debe copiarse en un nuevo <see cref="T:System.Collections.Hashtable" /> que no distinga entre mayúsculas y minúsculas.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class containing the entries from the specified &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> que contiene las entradas del <see cref="T:System.Collections.IDictionary" /> especificado.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">Crea una nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial especificada.</summary>
      <param name="capacity" vsli:raw="The approximate number of entries that the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; can initially contain.">Número aproximado de entradas que <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> es menor que cero.</exception>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial especificada.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">Crea una nueva instancia de la clase <see cref="T:System.Collections.SortedList" />, que omite el uso de mayúsculas y minúsculas en las cadenas.</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">Nueva instancia de la clase <see cref="T:System.Collections.SortedList" />, que omite el uso de mayúsculas y minúsculas en las cadenas.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary vsli:raw="Represents a simple last-in-first-out (LIFO) non-generic collection of objects.">Representa una colección de objetos no genérica de último en entrar es el primero en salir (LIFO).</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the default initial capacity.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que está vacía y tiene la capacidad inicial predeterminada.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que contiene elementos copiados de la colección especificada y tiene la misma capacidad inicial que el número de elementos copiados.</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" /> de donde se van a copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que está vacía y tiene la capacidad inicial especificada o la capacidad inicial predeterminada, la que sea mayor.</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; can contain.">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Stack" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Quita todos los objetos de la colección <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Crea una copia superficial de la colección <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Copia superficial de la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Determina si un elemento se encuentra en <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">Objeto que se va a buscar en <see cref="T:System.Collections.Stack" />. El valor puede ser <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> se encuentra en la matriz <see cref="T:System.Collections.Stack" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">Copia el <see cref="T:System.Collections.Stack" /> a un <see cref="T:System.Array" /> unidimensional existente, empezando por el índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Stack" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.Stack" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">El tipo de la <see cref="T:System.Collections.Stack" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> para la interfaz <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; without removing it.">Devuelve el objeto situado al principio de <see cref="T:System.Collections.Stack" /> sin eliminarlo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">La colección <see cref="T:System.Collections.Stack" /> está vacía.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> situado al principio de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Quita y devuelve el objeto situado al principio de <see cref="T:System.Collections.Stack" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">La colección <see cref="T:System.Collections.Stack" /> está vacía.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; removed from the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Object" /> eliminado del principio de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Inserta un objeto al principio de <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to push onto the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Object" /> a insertar en la <see cref="T:System.Collections.Stack" />. El valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary vsli:raw="Returns a synchronized (thread safe) wrapper for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Devuelve un contenedor sincronizado (seguro para subprocesos) para la clase <see cref="T:System.Collections.Stack" />.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to synchronize.">
        <see cref="T:System.Collections.Stack" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stack" /> es <see langword="null" />.</exception>
      <returns vsli:raw="A synchronized wrapper around the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Contenedor sincronizado de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to a new array.">Copia <see cref="T:System.Collections.Stack" /> en una nueva matriz.</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Nueva matriz que contiene copias de los elementos de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Número de elementos contenidos en <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.Stack" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.Stack" /> está sincronizado (es seguro para la ejecución de subprocesos); en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Stack" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se puede utilizar para sincronizar el acceso a la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
  </members>
</doc>