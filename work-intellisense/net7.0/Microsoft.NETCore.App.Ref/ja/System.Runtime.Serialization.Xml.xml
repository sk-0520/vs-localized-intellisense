<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">シリアル化および逆シリアル化の際に型と <see langword="xsi:type" /> 表現との間の動的なマッピングを行う機構を提供します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">このメソッドをオーバーライドして、逆シリアル化中に指定された <see langword="xsi:type" /> 名と名前空間をデータ コントラクト型にマップします。</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">マップする <see langword="xsi:type" /> 名。</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">マップする <see langword="xsi:type" /> の名前空間。</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">データ コントラクト内で宣言された型。</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">既知の型リゾルバー。</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">
        <see langword="xsi:type" /> 名および名前空間のマップ先の型。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">このメソッドをオーバーライドして、シリアル化中にデータ コントラクト型を <see langword="xsi:type" /> 名と名前空間にマップします。</summary>
      <param name="type" vsli:raw="The type to map.">マップする型。</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">データ コントラクト内で宣言された型。</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">既知の型リゾルバー。</param>
      <param name="typeName" vsli:raw="The xsi:type name.">xsi:type の名前。</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">xsi:type の名前空間。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">マッピングが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">ある型のインスタンスを、提供されたデータ コントラクトを使用して、XML ストリームまたはドキュメントにシリアル化または逆シリアル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションをシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">指定した型と設定をシリアル化または逆シリアル化する <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">シリアル化または逆シリアル化するインスタンスの型。</param>
      <param name="settings" vsli:raw="The serializer settings.">シリアライザーの設定。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、指定した XML ルート要素と名前空間を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。 このメソッドは、さらに、XML ルート要素と名前空間を示す 2 つの文字列パラメーターと、オブジェクト グラフ内に存在可能な既知の型のリストを指定します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="The root element name of the content.">コンテンツのルート要素名。</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">ルート要素の名前空間。</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、<see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターを通して指定した XML ルート要素と名前空間を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">ルート要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。 このメソッドは、さらに、XML ルート要素と名前空間を示す 2 つの <see cref="T:System.Xml.XmlDictionaryString" /> パラメーターと、オブジェクト グラフ内に存在可能な既知の型のリストを指定します。</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">ルート要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">オブジェクト グラフ内に存在可能な既知の型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、値を読み取る前にオブジェクト名の検証チェックを行うかどうかを指定します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンストラクター内で提供されたルートの名前値にオブジェクトの名前が対応するかどうかをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">
        <paramref name="verifyObjectName" /> パラメーターが <see langword="true" /> に設定されており、要素名と名前空間がコンストラクター内の値と対応しません。</exception>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">XML ドキュメントまたはドキュメント ストリームを読み取り、逆シリアル化されたオブジェクトを返します。  メソッドには、オブジェクト名を検証するかどうかを指定するパラメーター、および実行時の <see langword="xsi:type" /> 宣言のマッピングに使用するリゾルバーが含まれます。</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">内容を読み取るために使用する XML リーダー。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクト名を確認する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">
        <see langword="xsi:type" /> 宣言をデータ コントラクト型にマップする <see cref="T:System.Runtime.Serialization.DataContractResolver" /> の実装。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、値を読み取る前にオブジェクト名の検証チェックを行うかどうかを指定します。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンストラクター内で提供されたルートの名前値にオブジェクトの名前が対応するかどうかをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">
        <paramref name="verifyObjectName" /> パラメーターが <see langword="true" /> に設定されており、要素名と名前空間がコンストラクター内の値と対応しません。</exception>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">指定した XmlDictionaryWriter を使用して、すべてのオブジェクト データ (XML の開始要素、コンテンツ、外側の要素) を XML ドキュメントまたはストリームに書き込みます。 メソッドには、実行時の <see langword="xsi:type" /> 宣言のマッピングに使用するリゾルバーが含まれます。</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">コンテンツを XML ドキュメントまたはストリームに書き込むために使用する XmlDictionaryWriter。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">書き込むコンテンツを格納するオブジェクト。</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">
        <see langword="xsi:type" /> 宣言を既知のデータ コントラクトにマップするために使用される <see cref="T:System.Runtime.Serialization.DataContractResolver" /> の実装。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、すべてのオブジェクト データ (XML の開始要素、コンテンツ、終了要素) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write to the stream.">ストリームに書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write to the stream.">ストリームに書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to write.">書き込むオブジェクト。</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">既知のコントラクト型に <see langword="xsi:type" /> 宣言を動的にマップするために使用するコンポーネントを取得します。</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> クラスの実装。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">クラスがシリアル化または逆シリアル化されるときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">拡張データを省略する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> コンストラクターに既知の型として渡される、予測型を含む <see cref="T:System.Runtime.Serialization.DataContractSerializer" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">項目数が最大値を超えています。</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">シリアル化、または逆シリアル化する項目の最大数。 既定値は、<see cref="F:System.Int32.MaxValue" /> です。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用するかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">参照を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">読み取り専用の型をシリアル化するかどうかを指定する値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">読み取り専用の型がシリアル化される場合は <see langword="true" />。すべての型がシリアル化される場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" /> を設定および取得するメソッドを提供することで、<see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスを拡張します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">このシリアライザーのサロゲート シリアル化プロバイダーを返します。</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">サロゲートされているシリアライザー。</param>
      <returns vsli:raw="The surrogate serializer.">サロゲート シリアライザー。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">この <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> のサロゲート シリアル化プロバイダーを指定します。</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">サロゲートされているシリアライザー。</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">サロゲート シリアル化プロバイダー。</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">データ コントラクト シリアライザーの設定を指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">既知のコントラクト型に xsi:type 宣言を動的にマップするのに使用するコンポーネントを取得または設定します。</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">既知のコントラクト型に xsi:type 宣言を動的にマップするのに使用するコンポーネント。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">DataContractSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得または設定します。</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">DataContractSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得または設定します。</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用するかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">選択したオブジェクトのルート名を取得または設定します。</summary>
      <returns vsli:raw="The root name of the selected object.">選択されたオブジェクトのルート名。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">指定したオブジェクトのルート名前空間を取得または設定します。</summary>
      <returns vsli:raw="The root namespace for the specified object.">指定されたオブジェクトのルート名前空間。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">読み取り専用の型をシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> に対して設定できるオプションを表します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.ExportOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">シリアル化または逆シリアル化の間に検出される可能性がある型のコレクションを取得します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">シリアル化または逆シリアル化の間に検出される可能性がある型を含む <see langword="KnownTypes" /> コレクション。 このコレクションに指定されたすべての型の XML スキーマ表現が、<see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> によってエクスポートされます。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">新しいメンバーの追加によって拡張された、バージョン付きのデータ コントラクトのデータを格納します。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> が <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性でマークされた型の逆シリアル化中に検出した追加データを格納するためのデータ構造体を提供します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">追加のデータを格納する構造体を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">データ コントラクトの一部としては認識されないデータを含んだ <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> です。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">オブジェクトを XML ストリームまたはドキュメントとしてシリアル化するために使用する基本クラスを用意します。 このクラスは抽象クラスです。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">読み取り可能な XML 要素に <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーがデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">読み取り可能な XML 要素に <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーの位置が開始要素である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.IO.Stream" /> を使用して XML ストリームまたはドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.IO.Stream" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームまたはドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、リーダーがデータを読み取る前に、シリアライザーがデータを読み取ることができるかどうかを指定できます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">周囲の XML 要素名と名前空間がルート名とルート名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、リーダーがデータを読み取る前に、シリアライザーがデータを読み取ることができるかどうかを指定できます。</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">XML ドキュメントまたはストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">周囲の XML 要素名と名前空間がルート名とルート名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
      <returns vsli:raw="The deserialized object.">逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクト データの末尾を XML の終了要素として XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクト データの末尾を XML の終了要素として XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">コンテンツを XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクトのコンテンツだけを XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクトのコンテンツだけを XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクト データの先頭を XML の開始要素として書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクト データの先頭を XML の開始要素として書き込みます。</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph" vsli:raw="The object to serialize.">シリアル化するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">XML の読み取りと書き込みを行うメソッドを含みます。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">指定した型名を使用して既定のスキーマの型を生成し、それを指定したスキーマ セットに追加します。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">生成されたスキーマの型を追加する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">スキーマに割り当てる型名を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemas" /> または <paramref name="typeQName" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">指定したリーダーから XML ノードのセットを読み取り、結果を返します。</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlReader" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">読み取り中に、<see langword="null" /> のノードが見つかりました。</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">
        <see cref="T:System.Xml.XmlNode" /> 型の配列。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">指定したライターを使用して、指定したノードを書き込みます。</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">書き込む <see cref="T:System.Xml.XmlNode" /> 型の配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlWriter" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">データ コントラクトを表すクラス、およびそのコントラクトのメンバーを表すメタデータを指定すると、該当するメンバーの XPath クエリが生成されます。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">指定したコントラクト データ型、メタデータ要素の配列、トップ レベルの要素、および名前空間を使用して、データ コントラクトから XPath を作成します。</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">データ コントラクトを表す型。</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">
        <see cref="Overload:System.Type.GetMember" /> クラスの <see cref="T:System.Type" /> メソッドを使用して生成されたメタデータ。クエリの生成に使用する特定のデータ メンバーをポイントします。</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">トップ レベルの要素が xpath 内にある必要があります。</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">データ コントラクト内で検出される XML 名前空間とそのプレフィックス。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
型およびメンバー データから生成される XPath。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">指定したデータ コントラクト型、メタデータ要素の配列、および名前空間を使用して、データ コントラクトから XPath を作成します。</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">データ コントラクトを表す型。</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">
        <see cref="Overload:System.Type.GetMember" /> クラスの <see cref="T:System.Type" /> メソッドを使用して生成されたメタデータ。クエリの生成に使用する特定のデータ メンバーをポイントします。</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">データ コントラクト内で検出される XML 名前空間とそのプレフィックス。</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
型およびメンバー データから生成される XPath。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">データ コントラクトで使用する .NET Framework 型のセットを XML スキーマ ファイル (.xsd) に変換できるようにします。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">スキーマのセットを指定して、<see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">エクスポートするスキーマを含む <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">アセンブリのセットに含まれている共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">エクスポートする型のアセンブリを含む <see cref="T:System.Reflection.Assembly" /> の <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> に含まれる共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">エクスポートする指定された型を含む <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">指定した共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">エクスポートする <see cref="T:System.Type" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">指定したアセンブリのコレクションに含まれる型を変換します。</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">エクスポートする型を含む (<see cref="T:System.Reflection.Assembly" /> の) <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblies" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">コレクション内の <see cref="T:System.Reflection.Assembly" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">このメソッドに渡された <see cref="T:System.Collections.Generic.ICollection`1" /> に含まれた型を変換します。</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">エクスポートする型を含む (<see cref="T:System.Type" /> の) <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="types" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">コレクション内の型が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">指定した .NET Framework 型を XML スキーマ定義言語 (XSD) のスキーマに変換します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">XML スキーマに変換する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">
        <see cref="T:System.Type" /> のトップレベル名と名前空間を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">照会する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">この <see cref="T:System.Xml.XmlQualifiedName" /> のトップレベル名と名前空間を表す <see cref="T:System.Type" />。この名前が、このオブジェクトを書き込むときにストリームに書き込まれます。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">指定した型の XML スキーマの型を返します。</summary>
      <param name="type" vsli:raw="The type to return a schema for.">スキーマを返す型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">XML スキーマを含む <see cref="T:System.Xml.Schema.XmlSchemaType" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">
        <see cref="T:System.Type" /> のコントラクト名とコントラクト名前空間を返します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">エクスポートされた <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">型のコントラクト名とその名前空間を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">エクスポート操作に対して設定できるオプションを含む <see cref="T:System.Runtime.Serialization.ExportOptions" /> を取得または設定します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">スキーマへの型のエクスポート方法をカスタマイズするために使用されるオプションを含む <see cref="T:System.Runtime.Serialization.ExportOptions" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">エクスポートされた XML スキーマのコレクションを取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> メソッドの呼び出し後の、共通言語ランタイム (CLR) の型のセットから変換されたスキーマを含む <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />。</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> で実装されると XML フラグメントの処理を可能にする、プロパティとメソッドを含みます。</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">XML フラグメントの処理を終了します。</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">XML フラグメントの処理を開始します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">フラグメントの外部で宣言している名前空間をフラグメントの内部で使用しているときに、その名前空間を再宣言する場合は <see langword="true" />。名前空間を再宣言しない場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">基になるライターのストリームに、XML フラグメントを書き込みます。</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">書き込むバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の書き込み開始位置。</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> に書き込むバイト数。</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">この <see cref="T:System.Xml.XmlDictionaryWriter" /> が XML フラグメントを処理できるかどうか示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">この <see langword="true" /> が XML フラグメントを処理できる場合は <see cref="T:System.Xml.XmlDictionaryWriter" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">ストリームを提供するクラスによって実装できるインターフェイスを表します。</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">ストリームを取得します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">出力するストリームを解放します。</summary>
      <param name="stream" vsli:raw="The stream being released.">解放するストリーム。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">新しいドキュメントを読むためにバイナリ リーダーを再初期化するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">指定した入力バッファーを使用してバイナリ リーダーを再初期化します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">指定した入力ストリームを使用してバイナリ リーダーを再初期化します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">このインターフェイスから派生する XML バイナリ ライターの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">このメソッドを実装する XML バイナリ ライターの初期化要件を指定します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">完了時にストリームがライターによって閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">
        <see langword="interface" /> および <see cref="T:System.Xml.XmlDictionaryReader" /> の実装が使用するために、XML ディクショナリが実装する必要のあるコントラクトを定義する <see cref="T:System.Xml.XmlDictionaryWriter" />。</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">ディクショナリ内のエントリの検索を試みます。</summary>
      <param name="key" vsli:raw="Key to look up.">検索するキー。</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が定義されている場合は、そのキーにマッピングされている <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キーがディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">指定した文字列値をディクショナリでチェックします。</summary>
      <param name="value" vsli:raw="String value being checked for.">チェックされる文字列値。</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlDictionaryString" /> をディクショナリでチェックします。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">チェックされる <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">このインターフェイスから派生する XML テキスト リーダーの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">バッファーを読み取る XML テキスト リーダーの初期化要件を指定します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">ストリームを読み取る XML テキスト リーダーの初期化要件を指定します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">このインターフェイスから派生する XML テキスト ライターの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">このメソッドを実装する XML テキスト ライターの初期化要件を指定します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">完了時にストリームがライターによって閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">リーダーを閉じるときのコールバック メソッドに対する <see langword="delegate" />。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">
        <c>OnClose</c> イベントを発生させる <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">GUID に最適化された一意の識別子。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">新しい一意の GUID を使用して、このクラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> を表すバイト配列を使用して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> を表すバイト配列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> は 16 バイトより短いため、有効ではありません。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列の、オフセットで指定されている位置から開始して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列内のオフセット位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">指定した数のエントリを使用し、<see langword="char" /> 内の指定したオフセット位置から開始して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="char" /> を表す <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="char" /> を表す <see cref="T:System.Guid" /> 配列内のオフセット位置。</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> から開始して、使用する配列エントリの数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。

- または -

<paramref name="count" /> が、0 未満か、または配列の長さから <paramref name="offset" /> を引いた値を超えています。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> が 0 です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> を使用するこのクラスの新しいインスタンスを作成します。</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">文字列を使用するこのクラスの新しいインスタンスを作成します。</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> の生成に使用する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">
        <paramref name="value" /> の長さが 0 です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">オブジェクトがこの <see cref="T:System.Xml.UniqueId" /> と等しいかどうかを検査します。</summary>
      <param name="obj" vsli:raw="The object to compare.">比較対象のオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オブジェクトがこの <see cref="T:System.Xml.UniqueId" /> と等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">この <see cref="T:System.Xml.UniqueId" /> のハッシュ コード表現を作成します。</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">この <see cref="T:System.Xml.UniqueId" /> の整数ハッシュ コード表現。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">2 つの <see cref="T:System.Xml.UniqueId" /> が等しいかどうかを調べる等値演算子をオーバーライドします。</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">最初の <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第 2 の <see cref="T:System.Xml.UniqueId" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">2 つの <see langword="true" /> が等しい場合、または両方とも <see cref="T:System.Xml.UniqueId" /> の場合は <see langword="null" />、両者が等しくない場合、または一方のみが <see langword="false" /> の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">2 つの <see cref="T:System.Xml.UniqueId" /> が等しくないかどうかを調べる等値演算子をオーバーライドします。</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">最初の <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">第 2 の <see cref="T:System.Xml.UniqueId" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">オーバーライドした等値演算子が <see langword="true" /> を返す場合は <see langword="false" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">
        <see cref="T:System.Xml.UniqueId" /> 値を <see langword="char" /> 配列に格納します。</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">
        <see langword="char" /> の配列</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see langword="char" /> 配列内の <see cref="T:System.Xml.UniqueId" /> 値の挿入開始位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see langword="char" /> 値で埋められた <see cref="T:System.Xml.UniqueId" /> 配列のエントリの数。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">
        <see cref="T:System.Xml.UniqueId" /> 値を文字列形式で表示します。</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">
        <see cref="T:System.Xml.UniqueId" /> 値の文字列表現。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">
        <see cref="T:System.Guid" /> としての <see cref="T:System.Xml.UniqueId" /> の値の取得を試み、指定したバイト配列の指定したオフセット位置に格納します。</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see langword="byte" /> を格納する <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">
        <see langword="byte" /> 配列内の <see cref="T:System.Guid" /> 値の挿入開始位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> のこのインスタンスに格納された値が <see cref="T:System.Xml.UniqueId" /> である場合は <see cref="T:System.Guid" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> の値の <see cref="T:System.Guid" /> としての取得を試みます。</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">成功した場合は <see cref="T:System.Guid" />、それ以外の場合は <see cref="F:System.Guid.Empty" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">UniqueId が <see cref="T:System.Guid" /> を表す場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> の文字列表現の長さを取得します。</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> の文字列表現の長さ。</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> が <see cref="T:System.Guid" /> かどうかを示します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.UniqueId" /> が <see cref="T:System.Guid" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">最適化された文字列を動的な方法で管理できるようにします。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">入力パラメーターから <see cref="T:System.Xml.XmlDictionaryString" /> を作成し、それを内部コレクションに追加します。</summary>
      <param name="id" vsli:raw="The key value.">キーの値。</param>
      <param name="value" vsli:raw="The value.">値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">キーが <paramref name="id" /> であるエントリが既に存在します。</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">内部コレクションに追加される新しく作成された <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">すべてのコンテンツの内部コレクションを消去します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">キーの一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="key" vsli:raw="The key to search on.">検索するキー。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="key" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">値の一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="value" vsli:raw="The value to search for.">検索する値。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">値の一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="value" vsli:raw="The value to search for.">検索する値。</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">動的ディクショナリを使用してメッセージ内に出現する共通の文字列を圧縮し、状態を維持できるようにします。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">このクラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">内部コレクションを消去します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">内部コレクションに <see cref="T:System.Xml.XmlDictionaryString" /> の追加を試みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">追加する <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">正常に追加された <see cref="T:System.Xml.XmlDictionaryString" /> のキー。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">キーが <paramref name="key" /> であるエントリが既に存在します。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">文字列を追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Windows Communication Foundation (WCF) の XML リーダー/ライターの実装の最適化に使用されるディクショナリを実装します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">空の <see cref="T:System.Xml.XmlDictionary" /> を作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">初期量で <see cref="T:System.Xml.XmlDictionary" /> を作成します。</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">ディクショナリの初期サイズ。</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">文字列を <see cref="T:System.Xml.XmlDictionary" /> に追加します。</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">ディクショナリに追加する文字列。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">追加された <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">ディクショナリ内のエントリの検索を試みます。</summary>
      <param name="key" vsli:raw="Key to look up.">検索するキー。</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> が定義されている場合は、そのキーにマッピングされている <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">キーがディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">指定した文字列値をディクショナリでチェックします。</summary>
      <param name="value" vsli:raw="String value being checked for.">チェックされる文字列値。</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">ディクショナリ文字列が見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">値がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">指定した <see cref="T:System.Xml.XmlDictionaryString" /> をディクショナリでチェックします。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">チェックされる <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryString" /> がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">
        <see langword="static" /> の空の <see cref="T:System.Xml.IXmlDictionary" /> を取得します。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">
        <see langword="static" /> の空の <see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">シリアル化および逆シリアル化を実行するために Windows Communication Foundation (WCF) が <see langword="abstract" /> から派生する <see cref="T:System.Xml.XmlReader" /> クラス。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">このクラスのインスタンスを作成します。  派生クラスによってのみ呼び出されます。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> が <see langword="null" />です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> または <paramref name="quotas" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">既存の <see cref="T:System.Xml.XmlDictionaryReader" /> から <see cref="T:System.Xml.XmlReader" /> のインスタンスを作成します。</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">入力の可能な文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">入力の可能な文字エンコーディング。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">入力の可能な文字エンコーディング。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">リーダーに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">バッファーの許容最大サイズ。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">入力の可能な文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">ストリームの可能な文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">ストリームの可能な文字エンコーディング。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">ストリームの可能な文字エンコーディング。</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">メッセージの MIME 型。</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">リーダーに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">ストリームの可能な文字エンコーディング。</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">適用するエンコード プロパティを指定する <see cref="T:System.Text.Encoding" /> オブジェクト。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">リーダーに適用されるクォータ。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">リーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">適用するエンコード プロパティを指定する <see cref="T:System.Text.Encoding" /> オブジェクト。</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">リーダーに適用されるクォータ。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">このメソッドはまだ実装されていません。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">常に。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">派生クラスでオーバーライドされると、属性の値を取得します。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">属性のローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">属性の名前空間を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <returns vsli:raw="The value of the attribute.">属性の値。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">アトミック化されていない名前を取得します。</summary>
      <param name="localName" vsli:raw="The local name.">ローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">ローカル <paramref name="localName" /> の名前空間。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">名前の配列内における現在のノードのローカル名のインデックスを取得します。</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">検索するローカル名の文字列配列。</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> または配列内のいずれかの名前が <see langword="null" /> です。

- または -

<paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">名前の配列内における現ノードのローカル名のインデックス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">名前の配列内における現在のノードのローカル名のインデックスを取得します。</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">検索するローカル名の <see cref="T:System.Xml.XmlDictionaryString" /> 配列。</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> または配列内のいずれかの名前が <see langword="null" /> です。

- または -

<paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">名前の配列内における現ノードのローカル名のインデックス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">パラメーター <paramref name="localName" /> が現在のノードのローカル名かどうかを確認します。</summary>
      <param name="localName" vsli:raw="The local name of the current node.">現在のノードのローカル名。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="localName" /> が現ノードのローカル名に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">パラメーター <paramref name="localName" /> が現在のノードのローカル名かどうかを確認します。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">現在のノードのローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="localName" /> が現ノードのローカル名に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">パラメーター <paramref name="namespaceUri" /> が現在のノードの名前空間かどうかを確認します。</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="namespaceUri" /> が現ノードの名前空間に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">パラメーター <paramref name="namespaceUri" /> が現在のノードの名前空間かどうかを確認します。</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="namespaceUri" /> が現ノードの名前空間に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">リーダーの位置が配列の先頭かどうかを確認します。 このクラスは <see langword="false" /> を返しますが、配列の概念を持つ派生クラスは <see langword="true" /> を返す可能性があります。</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">有効なノードである場合はノードの型、それ以外の場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">リーダーの位置が配列ノードの先頭になっている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">最初のタグが開始タグかまたは空要素タグか、およびローカル名と名前空間 URI が現在のノードのものと一致するかどうかを検査します。</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">属性のローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">属性の名前空間を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">配列の最初のタグが開始タグまたは空要素タグで、<paramref name="localName" /> および <paramref name="namespaceUri" /> が一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">現在のノードがテキスト ノードかどうかをテストします。</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">検査するノードの型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">ノードの型が <see cref="F:System.Xml.XmlNodeType.Text" />、<see cref="F:System.Xml.XmlNodeType.Whitespace" />、<see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />、<see cref="F:System.Xml.XmlNodeType.CDATA" />、または <see cref="F:System.Xml.XmlNodeType.Attribute" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">現在のコンテンツ ノードが開始要素または空要素かどうかを検査します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティ。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.DateTime" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Decimal" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Double" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Guid" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">繰り返し発生する <see langword="short" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">繰り返し発生する整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">繰り返し発生する <see langword="long" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">繰り返し発生する <see langword="float" /> 型の数値を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">浮動小数点を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">配列に格納する浮動小数点の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The umber of float numbers put in the array.">配列に格納された浮動小数点の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.TimeSpan" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.DateTime" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Decimal" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">繰り返し発生する <see cref="T:System.Double" /> ノード型を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Guid" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">繰り返し発生する <see langword="short" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">繰り返し発生する整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">繰り返し発生する <see langword="long" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the integers are put.">整数を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of integers put in the array.">配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">繰り返し発生する <see langword="float" /> 型の数値を、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">浮動小数点を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">配列に格納する浮動小数点の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of float numbers put in the array.">配列に格納された浮動小数点型の数値の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.TimeSpan" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">ノードを格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns vsli:raw="The number of nodes put in the array.">配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">
        <see cref="T:System.Boolean" /> ノードの <see cref="T:System.Boolean" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">
        <see cref="T:System.Boolean" /> ノードの <see cref="T:System.Boolean" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">ノードのコンテンツを指定した型に変換します。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">返される値の <see cref="T:System.Type" />。</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。 たとえば、<see cref="T:System.Xml.XmlQualifiedName" /> オブジェクトを <c>xs:string</c> に変換するときにこれを使用できます。 この値は null 参照でもかまいません。</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">要求された型に変換された、連結されたテキストの内容または属性値。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">コンテンツを読み取り、Base64 でデコードされたバイナリ バイトを返します。</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">配列のサイズが、このリーダーの MaxArrayLength クォータを超えています。</exception>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Base64 でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">コンテンツを読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">配列のサイズが <see cref="F:System.Int32.MaxValue" /> よりも大きくなっています。</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">
        <see langword="BinHex" /> でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">コンテンツを読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">配列の最大長。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">配列のサイズが <paramref name="maxByteArrayContentLength" /> よりも大きくなっています。</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">
        <see langword="BinHex" /> でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">コンテンツを <see langword="char" /> 配列に読み取ります。</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">文字を格納する配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">配列に格納する文字の数。</param>
      <returns vsli:raw="Number of characters read.">読み取られた文字数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">ノードのコンテンツを <see langword="decimal" /> に変換します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">ノード コンテンツの <see langword="decimal" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">ノードのコンテンツを <see langword="float" /> に変換します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">ノード コンテンツの <see langword="float" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">ノードのコンテンツを <see langword="guid" /> に変換します。</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">ノード コンテンツの <see langword="guid" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">ノードのコンテンツを修飾名表現に変換します。</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">修飾名 (<see langword="out" /> パラメーター) の <see cref="P:System.Xml.XmlReader.LocalName" /> 部分。</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">修飾名 (<see langword="out" /> パラメーター) の <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 部分。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">ノードのコンテンツを文字列に変換します。</summary>
      <returns vsli:raw="The node content in a string representation.">文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">ノードのコンテンツを文字列に変換します。</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">最大文字列長。</param>
      <returns vsli:raw="Node content in string representation.">文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">ノードのコンテンツを文字列に変換します。</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">コンテンツと照合する文字列の配列。</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">コンテンツに一致する <paramref name="strings" /> 内のエントリのインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> が <see langword="null" />です。

- または -

<paramref name="strings" /> 内のエントリが <see langword="null" /> です。</exception>
      <returns vsli:raw="The node content in a string representation.">文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">ノードのコンテンツを文字列に変換します。</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">コンテンツを照合する <see cref="T:System.Xml.XmlDictionaryString" /> オブジェクトの配列。</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">コンテンツに一致する <paramref name="strings" /> 内のエントリのインデックス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> が <see langword="null" />です。

- または -

<paramref name="strings" /> 内のエントリが <see langword="null" /> です。</exception>
      <returns vsli:raw="The node content in a string representation.">文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">ノードのコンテンツを <see cref="T:System.TimeSpan" /> に変換します。</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">ノード コンテンツの <see cref="T:System.TimeSpan" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">ノードのコンテンツを一意の識別子に変換します。</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">一意な識別子で表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.DateTime" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">
        <see cref="T:System.DateTime" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.DateTime" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">
        <see cref="T:System.DateTime" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.Decimal" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">
        <see cref="T:System.Decimal" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.Decimal" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">
        <see cref="T:System.Decimal" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.Double" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">
        <see cref="T:System.Double" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">ノードのコンテンツを <see cref="T:System.Double" /> 配列に変換します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">
        <see cref="T:System.Double" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">ノードのコンテンツを Base64 バイトの配列に変換します。</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">Base64 バイトの配列として表されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">ノードのコンテンツを <see langword="BinHex" /> バイトの配列に変換します。</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">
        <see langword="BinHex" /> バイトの配列として表されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">要素のコンテンツを <see cref="T:System.Boolean" /> に変換します。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">要素のコンテンツを <see cref="T:System.DateTime" /> に変換します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.DateTime" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">要素のコンテンツを <see cref="T:System.Decimal" /> に変換します。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">
        <see cref="T:System.Decimal" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">要素のコンテンツを <see cref="T:System.Double" /> に変換します。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">
        <see cref="T:System.Double" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">要素のコンテンツを浮動小数点数 (<see cref="T:System.Single" />) に変換します。</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">浮動小数点数 (<see cref="T:System.Single" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">要素のコンテンツを <see cref="T:System.Guid" /> に変換します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">要素のコンテンツを整数 (<see cref="T:System.Int32" />) に変換します。</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">整数 (<see cref="T:System.Int32" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">要素のコンテンツを長整数 (<see cref="T:System.Int64" />) に変換します。</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">長整数 (<see cref="T:System.Int64" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">要素のコンテンツを <see cref="T:System.String" /> に変換します。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">要素のコンテンツを <see cref="T:System.TimeSpan" /> に変換します。</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">
        <see cref="T:System.TimeSpan" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">要素のコンテンツを一意の識別子に変換します。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">要素が有効な形式ではありません。</exception>
      <returns vsli:raw="The node's content represented as a unique identifier.">一意な識別子で表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">現在のノードが要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">現在のノードが、指定した <paramref name="name" /> を持つ要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <param name="name" vsli:raw="The qualified name of the element.">要素の限定名。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素で、リーダーを次のノードに進めるかどうかを確認します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素で、リーダーを次のノードに進めるかどうかを確認します。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.Guid" /> の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.Guid" /> の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" /> の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="short" /> 型の整数 (<see cref="T:System.Int16" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">
        <see langword="short" /> 整数 (<see cref="T:System.Int16" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="short" /> 型の整数 (<see cref="T:System.Int16" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">
        <see langword="short" /> 整数 (<see cref="T:System.Int16" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、整数 (<see cref="T:System.Int32" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">整数 (<see cref="T:System.Int32" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、整数 (<see cref="T:System.Int32" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">整数 (<see cref="T:System.Int32" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="long" /> 型の整数 (<see cref="T:System.Int64" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">
        <see langword="long" /> 整数 (<see cref="T:System.Int64" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="long" /> 型の整数 (<see cref="T:System.Int64" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">
        <see langword="long" /> 整数 (<see cref="T:System.Int64" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="float" /> 型の数値 (<see cref="T:System.Single" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">
        <see langword="float" /> 数 (<see cref="T:System.Single" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="float" /> 型の数値 (<see cref="T:System.Single" />) の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">
        <see langword="float" /> 数 (<see cref="T:System.Single" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">現在のノードのコンテンツを文字列に読み取ります。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">現在のノードのコンテンツを読み取ることができません。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">許容最大文字列長を超えました。</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">現在のノードのコンテンツを含む文字列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">現在のノードのコンテンツを、指定した最大長の文字列に読み取ります。</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">許容される最大文字列長。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">現在のノードのコンテンツを読み取ることができません。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">許容最大文字列長を超えました。</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">現在のノードのコンテンツを含む文字列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.TimeSpan" /> の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.TimeSpan" /> の配列に読み取ります。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">実装されていません。</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">読み込み元のバッファー。</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">常に。</exception>
      <returns vsli:raw="Not implemented.">実装されていません。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">このメソッドはまだ実装されていません。</summary>
      <param name="stream" vsli:raw="The stream to read from.">読み込み元のストリーム。</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">コメントが含まれるかどうかを判定します。</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">含まれるプレフィックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">常に。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">派生クラスでオーバーライドされない限り、0 を返します。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">派生クラスでオーバーライドされない限り、0 を返します。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。 .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">このプロパティは常に <see langword="false" /> を返します。 その派生クラスが正規化をサポートする場合は、<see langword="true" /> を返すようにオーバーライドできます。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">このクラスの現在のインスタンスに適用されるクォータ値を取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">このクラスの現在のインスタンスに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">XmlDictionaryReaders の構成可能なクォータ値を格納します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">このクラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">このインスタンスの値に基づいて、渡されるクォータ インスタンスにプロパティを設定します。</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">値をコピーする <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> インスタンス。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">値の <see langword="set" /> を試みましたが、渡されるインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">渡されるターゲット <paramref name="quotas" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">すべてのプロパティに最大値を設定して、このクラスのインスタンスを取得します。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">プロパティが <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> に設定された <see cref="F:System.Int32.MaxValue" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">許される最大配列長を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">許される最大配列長。 既定値は 16384 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">1 回の読み取りで返すことができる最大バイト数を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">1 回の読み取りで返すことができる最大バイト数。 既定値は 4096 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">入れ子になったノードの最大深度を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">入れ子になったノードの最大深度。 既定値は 32 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">テーブル名の最大文字数を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">テーブル名の最大文字数。 既定値は 16384 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">リーダーによって返される文字列の最大長を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">リーダーによって返される文字列の最大長。 既定値は 8192 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> の変更されたクォータを取得します。</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> の変更されたクォータ。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">XmlDictionaryReaders の構成可能なクォータ値を列挙します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">許容される最大配列長を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">1 回の読み取りで返すことができる最大バイト数を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">入れ子になったノードの最大深度を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">テーブル名の最大文字数を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">リーダーによって返される文字列の最大長を指定します。</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionary" /> に格納されているエントリを表します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">このクラスのインスタンスを作成します。</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">このインスタンスを格納する <see cref="T:System.Xml.IXmlDictionary" />。</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">ディクショナリ エントリの値である文字列。</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">ディクショナリ エントリのキーである整数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> が 0 未満であるか、または <see cref="F:System.Int32.MaxValue" />/4 を超えています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">このオブジェクトのテキスト表現を表示します。</summary>
      <returns vsli:raw="The string value for this instance of the class.">クラスの現在のインスタンスの文字列値。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">
        <see cref="T:System.Xml.IXmlDictionary" /> のこのインスタンスのコンストラクターに渡される <see cref="T:System.Xml.XmlDictionaryString" /> を表します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">このディクショナリ エントリの <see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">空の文字列を表す <see cref="T:System.Xml.XmlDictionaryString" /> を取得します。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">空の文字列を表す <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">クラスのこのインスタンスの整数キーを取得します。</summary>
      <returns vsli:raw="The integer key for this instance of the class.">クラスのこのインスタンスの整数キー。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">クラスのこのインスタンスの文字列値を取得します。</summary>
      <returns vsli:raw="The string value for this instance of the class.">クラスの現在のインスタンスの文字列値。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">シリアル化および逆シリアル化を実行するために Windows Communication Foundation (WCF) が <see cref="T:System.Xml.XmlWriter" /> から派生する抽象クラスを表します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream from which to read.">読み込み元のストリーム。</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">既存の <see cref="T:System.Xml.XmlDictionaryWriter" /> から <see cref="T:System.Xml.XmlWriter" /> のインスタンスを作成します。</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">MTOM 形式で XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">ライターでバッファーされる最大バイト数。</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">ContentType SOAP ヘッダーの属性。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">MTOM 形式で XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">ライターでバッファーされる最大バイト数。</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">Infoset を含む MIME パートの Content-Type。</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">メッセージの MIME 境界。</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">Infoset を含む MIME パートの Content-ID URI。</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">メッセージ ヘッダーを書き込む場合は <see langword="true" />。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">出力の文字エンコーディング。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">ストリームの文字エンコーディング。</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">派生クラスによって実装されると、対応する <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> の呼び出しによって開始された正規化を停止します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">メソッドはまだ実装されていません。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">派生クラスで実装された場合、正規化が開始されます。</summary>
      <param name="stream" vsli:raw="The stream to write to.">書き込まれるストリーム。</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コメントを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">含まれるプレフィックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">メソッドはまだ実装されていません。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">
        <see cref="T:System.Boolean" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the data.">データを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of values to write from the array.">配列から書き込む値の数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">
        <see cref="T:System.DateTime" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">
        <see cref="T:System.Decimal" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">
        <see cref="T:System.Double" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">
        <see cref="T:System.Guid" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">
        <see cref="T:System.Int16" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">
        <see cref="T:System.Int32" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">
        <see cref="T:System.Int64" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">
        <see cref="T:System.Single" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">
        <see cref="T:System.Boolean" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">
        <see cref="T:System.DateTime" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">
        <see cref="T:System.Decimal" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">
        <see cref="T:System.Double" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">
        <see cref="T:System.Guid" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">
        <see cref="T:System.Int16" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">
        <see cref="T:System.Int32" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">
        <see cref="T:System.Int64" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">
        <see cref="T:System.Single" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">
        <see cref="T:System.TimeSpan" /> 配列からノードを書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="array" vsli:raw="The array that contains the nodes.">ノードを格納している配列。</param>
      <param name="offset" vsli:raw="The starting index in the array.">配列の開始インデックス。</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">属性の修飾名と値を書き込みます。</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">属性のプレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">属性の名前空間 URI。</param>
      <param name="value" vsli:raw="The attribute.">属性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">属性の修飾名と値を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">属性の名前空間 URI。</param>
      <param name="value" vsli:raw="The attribute.">属性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">指定したバイナリ バイトを base64 として非同期にエンコードし、その結果生成されるテキストを書き込みます。</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">エンコードするバイト配列。</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">書き込むバイトの開始を示すバッファー内の位置。</param>
      <param name="count" vsli:raw="The number of bytes to write.">書き込むバイト数。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。

- または -

<see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlDictionaryWriter" /> 非同期メソッドが呼び出されました。 この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">非同期の <see langword="WriteBase64" /> 操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">テキスト コンテンツの要素を書き込みます。</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">要素のプレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="value" vsli:raw="The element content.">要素の内容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">テキスト コンテンツの要素を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <param name="value" vsli:raw="The element content.">要素の内容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> から現在の XML ノードを書き込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> から現在の XML ノードを書き込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">名前空間の修飾名を書き込みます。 このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">修飾名のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">修飾名の名前空間 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">指定したプレフィックス、ローカル名、および名前空間 URI を使用して、属性の開始を書き込みます。</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">名前空間プレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">属性の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">指定したローカル名および名前空間 URI を使用して、属性の開始を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">属性の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">指定した開始タグを書き込み、指定した名前空間とプレフィックスに関連付けます。</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">要素のプレフィックス。</param>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">ライターが閉じています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">指定した開始タグを書き込み、指定した名前空間に関連付けます。</summary>
      <param name="localName" vsli:raw="The local name of the element.">要素のローカル名。</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">要素の名前空間 URI。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">ライターが閉じています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">指定したテキストの内容を書き込みます。</summary>
      <param name="value" vsli:raw="The text to write.">書き込むテキスト。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> が現在配置されているテキスト ノードを書き込みます。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">テキスト値を取得する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">リーダーが属性値または要素コンテンツに配置されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">
        <see cref="T:System.Guid" /> 値を書き込みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">書き込む <see cref="T:System.Guid" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">
        <see cref="T:System.TimeSpan" /> 値を書き込みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">書き込む <see cref="T:System.TimeSpan" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">
        <see cref="T:System.Xml.IStreamProvider" /> から値を書き込みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">書き込む <see cref="T:System.Xml.IStreamProvider" /> 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> が <see langword="null" /> ストリーム オブジェクトを返します。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">一意の ID 値を書き込みます。</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">書き込む一意の ID 値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlDictionaryString" /> 値を書き込みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlDictionaryString" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">
        <see cref="T:System.Xml.IStreamProvider" /> の値を非同期に書き込みます。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">書き込む <see cref="T:System.Xml.IStreamProvider" /> 値。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。

- または -

<see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlDictionaryWriter" /> 非同期メソッドが呼び出されました。 この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">非同期の <see langword="WriteValue" /> 操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">現在のノードに標準 XML 属性を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="value" vsli:raw="The value of the attribute.">属性の値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">現在のノードに XML 属性を書き込みます。</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">属性のローカル名。</param>
      <param name="value" vsli:raw="The value of the attribute.">属性の値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">名前空間の宣言属性を書き込みます。</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">指定された名前空間にバインドされるプレフィックス。</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">プレフィックスがバインドされる名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">名前空間の宣言属性を書き込みます。</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">指定された名前空間にバインドされるプレフィックス。</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">プレフィックスがバインドされる名前空間。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">このプロパティは常に <see langword="false" /> を返します。 その派生クラスが正規化をサポートする場合は、<see langword="true" /> を返すようにオーバーライドできます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
  </members>
</doc>