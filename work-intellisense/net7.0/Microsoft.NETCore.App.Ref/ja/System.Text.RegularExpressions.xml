<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">正常にマッチした単一部分式キャプチャの結果を表します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">
        <see cref="P:System.Text.RegularExpressions.Capture.Value" /> プロパティを呼び出して、入力文字列からキャプチャされた部分文字列を取得します。</summary>
      <returns vsli:raw="The substring that was captured by the match.">検索によってキャプチャされた部分文字列。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">キャプチャした部分文字列の最初の文字が見つかる元の文字列内の位置。</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">キャプチャした部分文字列が見つかった元の文字列内の開始位置を示す 0 から始まる数値。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">キャプチャした部分文字列の長さを取得します。</summary>
      <returns vsli:raw="The length of the captured substring.">キャプチャした部分文字列の長さ。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">入力文字列からキャプチャした部分文字列を取得します。</summary>
      <returns vsli:raw="The substring that is captured by the match.">検索によってキャプチャされた部分文字列。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">単一キャプチャ グループによるキャプチャのセットを表します。 コレクションは変更不可 (読み取り専用) であり、パブリック コンストラクターがありません。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">コレクションのコピー先の配列。</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">コピー先の配列内のコピー開始位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> が <paramref name="array" /> の境界の外側にあります。  
  
- または - 
 <paramref name="arrayIndex" /> に <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> を加えた値が <paramref name="array" /> の境界の外側にあります。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">コレクションから要素がコピーされる 1 次元の <see cref="T:System.Array" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than 0.">
        <paramref name="arrayIndex" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the source collection is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">コピー元のコレクションの要素数が、コピー先の <paramref name="arrayIndex" /> の <paramref name="array" /> から最後までの領域を超えています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を提供します。</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.Capture" /> 内にあるすべての <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> オブジェクトを格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The object to add to the collection.">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">コレクションに特定の値が格納されているかどうかを判断します。</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="item" /> がコレクションに存在する場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">コレクションから削除するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を返します。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">リストに存在する場合は <paramref name="item" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">
        <paramref name="item" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="item" vsli:raw="The object to insert into the collection.">コレクションに挿入するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The object to add to the collection.">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">コレクションに特定の値が格納されているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Object" /> がコレクション内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The object to insert into the collection.">コレクションに挿入するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">コレクションから削除するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">グループによってキャプチャされた部分文字列の数を取得します。</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> 内の項目数。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">コレクションの個別のメンバーを取得します。</summary>
      <param name="i" vsli:raw="Index into the capture collection.">キャプチャ コレクション内のインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> が 0 未満であるか、または <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> を超えています。</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">コレクション内の <paramref name="i" /> の位置にあるキャプチャされた部分文字列。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">コレクションへのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">指定したインデックス位置にある要素を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">取得する要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">コレクションが固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, since the collection has a fixed size.">
        <see langword="true" />コレクションが固定サイズであるためです。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">指定したインデックス位置にある要素を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">取得する要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">単一キャプチャ グループによるキャプチャの結果を表します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">指定されたオブジェクトと等価の、複数のスレッド間で安全に共有できる <see langword="Group" /> オブジェクトを返します。</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">入力 <see cref="T:System.Text.RegularExpressions.Group" /> オブジェクトです。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">正規表現 <see langword="Group" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">内側と左側が先の順序で、キャプチャ グループに一致したすべてのキャプチャ結果のコレクションを取得します。または、正規表現が <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> オプションを使用して変更されている場合は、内側と右端が先の順序で取得します。 このコレクションには 0 個以上の項目が格納されています。</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">グループに一致した部分文字列のコレクション。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">現在のインスタンスで表されるキャプチャ グループの名前を返します。</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">現在のインスタンスで表されるキャプチャ グループの名前。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">一致した対象が見つかったかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">一致した対象が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">1 回の検索一致でキャプチャされたグループのセットを返します。 コレクションは変更不可 (読み取り専用) であり、パブリック コンストラクターがありません。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">指定された名前で識別されるキャプチャ グループがグループ コレクションに含まれているかどうかを判断します。</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">検索するキャプチャ グループの名前を含む文字列。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <paramref name="key" /> で識別されるキャプチャ グループがグループ コレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">コレクションのコピー先の配列。</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">コピーの開始位置を示す、コピー先の配列内の位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> が <paramref name="array" /> の境界の外側にあります。

- または -

<paramref name="arrayIndex" /> に <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> を加えた値が <paramref name="array" /> の境界の外側にあります。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">特定の配列インデックスを開始位置として、<see cref="T:System.Text.RegularExpressions.Group" /> 配列にグループ コレクションの要素をコピーします。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">グループ コレクションからコピーされる要素のコピー先となる 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> が null です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> が 0 未満です。

- または -

<paramref name="arrayIndex" /> が <paramref name="array" /> の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">
        <paramref name="array" /> - <paramref name="arrayIndex" /> の長さがグループ コレクションの数を下回っています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を提供します。</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.Group" /> 内のすべての <see cref="T:System.Text.RegularExpressions.GroupCollection" /> オブジェクトを含む列挙子。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The group to add to the collection.">コレクションに追加するグループ。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">グループ コレクションに特定のグループ項目が含まれているかどうかを判断します。</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">グループ コレクションで検索するグループ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">グループ項目がグループ コレクションで見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The group to remove.">削除するグループ。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">グループ コレクションを反復処理する列挙子を提供します。</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">
        <see cref="T:System.Text.RegularExpressions.Group" /> コレクション内のすべての名前とオブジェクトを含む列挙子。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">グループ コレクションを反復処理する列挙子を提供します。</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">グループ コレクション内のすべての <see cref="T:System.Text.RegularExpressions.Group" /> オブジェクトを含む列挙子。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">グループ コレクション内の特定グループのインデックスを確認します。</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">グループ コレクションで検索するグループ。</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">
        <paramref name="item" /> が見つかった場合はそのインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">グループを挿入する位置。</param>
      <param name="item" vsli:raw="The group to insert.">挿入するグループ。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">削除するグループの 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">グループ コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">グループ コレクションに特定のグループ項目が含まれているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">グループ コレクションで検索するグループ。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">グループ項目がグループ コレクションで見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">グループ コレクション内の特定グループのインデックスを確認します。</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">グループ コレクションで検索するグループ。</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">
        <paramref name="item" /> が見つかった場合はそのインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">グループを挿入する位置。</param>
      <param name="value" vsli:raw="The group to insert.">挿入するグループ。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The group to remove.">削除するグループ。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">削除するグループの 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">このメソッドはサポートされていません。 これは読み取り専用のコレクションです。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">指定された名前キー (グループ コレクションに存在する場合) で識別されるグループの取得を試みます。</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">検索するグループ名キーを含む文字列。</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">メソッドが返されるときに <paramref name="key" /> が見つかった場合はグループ名。見つからなかった場合は <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">指定された名前キーで識別されるグループが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">コレクション内のグループの数を返します。</summary>
      <returns vsli:raw="The number of groups in the collection.">コレクション内のグループの数。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">
        <see cref="T:System.Text.RegularExpressions.GroupCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">整数インデックスによってコレクションのメンバーにアクセスできるようにします。</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">取得するコレクション メンバーの 0 から始まるインデックス。</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">
        <paramref name="groupnum" /> で指定されたコレクションのメンバー。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">文字列インデックスによってコレクションのメンバーにアクセスできるようにします。</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">キャプチャ グループの名前。</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">
        <paramref name="groupname" /> で指定されたコレクションのメンバー。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">グループ コレクションの名前キーを含む文字列列挙体を取得します。</summary>
      <returns vsli:raw="The name keys of the group collection.">グループコレクションの名前キー。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.GroupCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">同期する <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコピー。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">コレクション内の指定した位置のグループを取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">グループ コレクションのグループの 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">項目を設定できません。 これは読み取り専用のコレクションです。</exception>
      <returns vsli:raw="The group in the desired position.">目的の位置にあるグループ。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">グループ コレクションが固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">目的の位置にあるグループを取得します。</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">グループ コレクションのグループの 0 から始まるインデックスの位置。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">項目を設定できません。 これは読み取り専用のコレクションです。</exception>
      <returns vsli:raw="The group in the desired position.">目的の位置にあるグループ。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">グループ コレクション内のすべてのグループを含むグループ列挙体を取得します。</summary>
      <returns vsli:raw="A group enumeration.">グループ列挙体。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">1 回の正規表現検索に一致した結果を表します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">一致する対象が最後に見つかった位置の終了位置 (最後に一致した文字の後の文字) から開始して、次に一致する対象を検索した結果の新しい <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトを返します。</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
      <returns vsli:raw="The next regular expression match.">次の正規表現一致。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">指定された置換パターンを展開して返します。</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">使用する置換パターン。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">このパターンは展開できません。</exception>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">
        <paramref name="replacement" /> パラメーターの展開形式。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">指定されたオブジェクトと等価であり、かつ複数のスレッド間での共有に適した <see cref="T:System.Text.RegularExpressions.Match" /> インスタンスを返します。</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">要求する一致と等価の正規表現一致。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">複数のスレッド間での共有に適した正規表現一致。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">空のグループを取得します。 一致する対象が見つからなかった検索は、この空一致を返します。</summary>
      <returns vsli:raw="An empty match.">空一致。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">正規表現に一致したグループのコレクションを取得します。</summary>
      <returns vsli:raw="The character groups matched by the pattern.">パターンに一致した文字グループ。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">正規表現パターンを入力文字列に繰り返し適用したときに、パターンに一致した一連の対象を表します。  コレクションは変更不可 (読み取り専用) であり、パブリック コンストラクターがありません。 <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> メソッドが <see cref="T:System.Text.RegularExpressions.MatchCollection" /> オブジェクトを返します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">コレクションのコピー先の配列。</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">コピーの開始位置を示す、配列内の位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> は、多次元配列です。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> が <paramref name="array" /> の境界の外側にあります。  
  
- または - 
 <paramref name="arrayIndex" /> に <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> を加えた値が <paramref name="array" /> の境界の外側にあります。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">コレクションから要素がコピーされる 1 次元の <see cref="T:System.Array" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を提供します。</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.Match" /> 内にあるすべての <see cref="T:System.Text.RegularExpressions.MatchCollection" /> オブジェクトを格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The object to add to the collection.">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">コレクションに特定の値が格納されているかどうかを判断します。</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="item" /> がコレクションに存在する場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="item" vsli:raw="The object to remove from the collection.">コレクションから削除するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original collection.">
        <paramref name="item" /> がコレクションから正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 このメソッドは、<paramref name="item" /> が元のコレクションに見つからない場合にも <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">コレクションを反復処理する列挙子を返します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="item" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;item&quot; /&gt; if found in the list; otherwise, -1.">リストに存在する場合は <paramref name="item" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">
        <paramref name="item" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="item" vsli:raw="The object to insert into the collection.">コレクションに挿入するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The object to add to the collection.">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Removes all items from the collection.">コレクションからすべての項目を削除します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the collection contains a specific value.">コレクションに特定の値が格納されているかどうかを判断します。</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Object" /> がコレクション内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">コレクション内での指定した項目のインデックスを調べます。</summary>
      <param name="value" vsli:raw="The object to locate in the collection.">コレクション内で検索するオブジェクト。</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value" vsli:raw="The object to insert into the collection.">コレクションに挿入するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="value" vsli:raw="The object to remove from the collection.">コレクションから削除するオブジェクト。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">削除する項目の 0 から始まるインデックス。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">コレクションは読み取り専用です。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">一致の数を取得します。</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
      <returns vsli:raw="The number of matches.">一致の数。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">コレクションが読み取り専用かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">常に <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">コレクションの個別のメンバーを取得します。</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">
        <see cref="T:System.Text.RegularExpressions.Match" /> コレクション内のインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> が 0 未満、または <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> 以上です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">コレクション内の <paramref name="i" /> の位置にあるキャプチャされた部分文字列。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">コレクションへのアクセスの同期に使用できるオブジェクトです。 このプロパティは常にオブジェクト自体を返します。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">指定したインデックス位置にある要素を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">取得する要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the collection has a fixed size.">コレクションが固定サイズかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the element at the specified index.">指定したインデックス位置にある要素を取得します。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get.">取得する要素の 0 から始まるインデックス。</param>
      <returns vsli:raw="The element at the specified index.">指定したインデックス位置にある要素。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> メソッドの操作中に、正規表現との一致が見つかるたびに呼び出されるメソッドを表します。</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">
        <see cref="T:System.Text.RegularExpressions.Match" /> メソッドの操作中に、1 つの正規表現で見つかった一致を表す <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> オブジェクト。</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">
        <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートが表すメソッドによって返された文字列。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">変更不可の正規表現を表します。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">パターン一致の操作がタイムアウトしないことを指定します。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">操作がタイムアウトになる前に、パターン一致操作で経過できる最大時間。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">シリアル化したデータを使用して、<see cref="T:System.Text.RegularExpressions.Regex" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">シリアル化されたパターンと <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 情報を保持するオブジェクト。</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">このシリアル化のシリアル化先。 (このパラメーターは使用されません。<see langword="null" /> を指定してください。)</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> に含まれているパターンが <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> に無効な <see cref="T:System.Text.RegularExpressions.RegexOptions" /> フラグが含まれています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">指定した正規表現の <see cref="T:System.Text.RegularExpressions.Regex" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">パターンを変更するオプションを使用して、指定した正規表現の <see cref="T:System.Text.RegularExpressions.Regex" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">正規表現を変更する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> に無効なフラグが含まれています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">パターンを変更するオプションと、パターン マッチ メソッドがタイムアウトするまでに一致を試みる時間を指定する値を使用して、指定した正規表現の <see cref="T:System.Text.RegularExpressions.Regex" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">正規表現を変更する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は正しい <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値ではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">1 つ以上の指定した <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトをコンパイルして、名前付きアセンブリに保存します。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">コンパイルする正規表現を記述する配列。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">アセンブリのファイル名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> パラメーターの <see cref="P:System.Reflection.AssemblyName.Name" /> プロパティの値が空または null 文字列です。  
  
- または - 
<paramref name="regexinfos" /> の 1 つ以上のオブジェクトの正規表現パターンに、無効な構文が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> または <paramref name="regexinfos" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core のみ: コンパイルされた正規表現のアセンブリの作成はサポートされていません。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">指定した 1 つ以上の <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトをコンパイルして、指定した属性を持つ名前付きアセンブリに保存します。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">コンパイルする正規表現を記述する配列。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">アセンブリのファイル名。</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">アセンブリに適用する属性を定義する配列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> パラメーターの <see cref="P:System.Reflection.AssemblyName.Name" /> プロパティの値が空または null 文字列です。  
  
- または - 
<paramref name="regexinfos" /> の 1 つ以上のオブジェクトの正規表現パターンに、無効な構文が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> または <paramref name="regexinfos" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core のみ: コンパイルされた正規表現のアセンブリの作成はサポートされていません。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">指定した 1 つ以上の <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトと、指定した 1 つのリソース ファイルをコンパイルして、指定した属性を持つ名前付きアセンブリに保存します。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">コンパイルする正規表現を記述する配列。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">アセンブリのファイル名。</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">アセンブリに適用する属性を定義する配列。</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">アセンブリに含める Win32 リソース ファイルの名前。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> パラメーターの <see cref="P:System.Reflection.AssemblyName.Name" /> プロパティの値が空または null 文字列です。  
  
- または - 
<paramref name="regexinfos" /> の 1 つ以上のオブジェクトの正規表現パターンに、無効な構文が含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> または <paramref name="regexinfos" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">
        <paramref name="resourceFile" /> パラメーターは無効な Win32 リソース ファイルを指定します。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">
        <paramref name="resourceFile" /> パラメーターで指定されているファイルが見つかりません。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core のみ: コンパイルされた正規表現のアセンブリの作成はサポートされていません。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">文字 (\、*、+、?、|、{、[、(、)、^、$、.、#、および空白) をエスケープ コードに置き換えることにより、このような文字をエスケープします。 これにより、正規表現エンジンではこのような文字がメタ文字ではなくリテラルとして解釈されます。</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">変換対象のテキストを含んでいる入力文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">メタ文字がエスケープされた形式に変換された文字列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">正規表現で使用されるキャプチャ グループ名の配列を返します。</summary>
      <returns vsli:raw="A string array of group names.">グループ名の文字列配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">配列内のグループ名に対応したキャプチャ グループ番号の配列を返します。</summary>
      <returns vsli:raw="An integer array of group numbers.">グループ番号の整数配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">指定したグループ番号に対応するグループ名を取得します。</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">対応するグループ名に変換するグループ番号。</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">指定したグループ番号に関連付けられたグループ名を含んでいる文字列。 <paramref name="i" /> に対応するグループ名がない場合、このメソッドは <see cref="F:System.String.Empty" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">指定したグループ名に対応するグループ番号を返します。</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">対応するグループ番号に変換するグループ名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">指定したグループ名に対応するグループ番号。<paramref name="name" /> が有効なグループ名でない場合は -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">参照は既に初期化されています。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現に一致する箇所が、指定した入力文字列内に見つかるかどうかを示します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現と一致する箇所が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">入力文字列内の指定した位置から検索を開始して、<see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現に一致する箇所が、指定した入力文字列内に見つかるかどうかを示します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">検索を開始する文字の位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現と一致する箇所が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">指定した正規表現に一致する箇所が、指定した入力文字列内に見つかるかどうかを示します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現と一致する箇所が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">指定した一致オプションを使用して、指定した正規表現に一致する箇所が、指定した入力文字列内に見つかるかどうかを示します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> は正しい <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値ではありません。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現と一致する箇所が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">指定した一致オプションとタイムアウト間隔を使用して、指定した正規表現に一致する箇所が、指定した入力文字列内に見つかるかどうかを示します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は正しい <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値ではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">タイムアウトが発生しました。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現と一致する箇所が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">指定した入力文字列内で、<see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現と最初に一致する対象を 1 つ検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">入力文字列内の指定した開始位置から開始して、その入力文字列内で正規表現に最初に一致する箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">検索を開始する 0 から始まる文字位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">入力文字列内の指定した開始位置から開始し、指定した文字数だけを検索対象として、その入力文字列内で正規表現に最初に一致する箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">検索対象の左端の位置を定義する、入力文字列内の 0 から始まる文字位置。</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">検索に含める部分文字列の文字数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> が 0 未満か、<paramref name="input" /> の長さを超えています。  
  
- または - 
 <paramref name="length" /> が 0 未満か、<paramref name="input" /> の長さを超えています。  
  
- または - 
 <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> が <paramref name="input" /> の範囲外の位置を識別しています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">指定した入力文字列内で、指定した正規表現に最初に一致する箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">指定した一致オプションを使用して、入力文字列内で、指定した正規表現に最初に一致する箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">指定した一致オプションとタイムアウト間隔を使用して、入力文字列内で、指定した正規表現に最初に一致する箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An object that contains information about the match.">一致に関する情報を格納しているオブジェクト。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">指定した入力文字列内で、正規表現と一致する対象をすべて検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">検索によって見つかった <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコレクション。 一致が見つからない場合は、空のコレクション オブジェクトが返されます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">入力文字列内の指定した開始位置から検索を開始した場合に、その指定入力文字列内で正規表現と一致する対象をすべて検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">入力文字列内の検索を開始する文字位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">検索によって見つかった <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコレクション。 一致が見つからない場合は、空のコレクション オブジェクトが返されます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">指定した入力文字列内で、指定した正規表現に一致する箇所をすべて検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">検索によって見つかった <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコレクション。 一致が見つからない場合は、空のコレクション オブジェクトが返されます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">指定した一致オプションを使用して、指定した入力文字列内で、指定した正規表現に一致する箇所をすべて検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">検索によって見つかった <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコレクション。 一致が見つからない場合は、空のコレクション オブジェクトが返されます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">指定した一致オプションとタイムアウト間隔を使用して、指定した入力文字列内で、指定した正規表現に一致するすべての箇所を検索します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">検索によって見つかった <see cref="T:System.Text.RegularExpressions.Match" /> オブジェクトのコレクション。 一致が見つからない場合は、空のコレクション オブジェクトが返されます。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">指定した入力文字列内で正規表現パターンに一致するすべての文字列を、指定した置換文字列に置換します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">指定した入力文字列内で正規表現パターンに一致する文字列を、指定した最大回数だけ、指定した置換文字列に置換します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">置換を行う最大回数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">指定した入力部分文字列内で正規表現パターンに一致する文字列を、指定した最大回数だけ、指定した置換文字列に置換します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">置換を実行する最大回数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">入力文字列中で検索を開始する文字位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">指定した入力文字列内で指定した正規表現に一致するすべての文字列を、指定した置換文字列に置換します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">指定した入力文字列内で指定した正規表現に一致するすべての文字列を、指定した置換文字列に置換します。 指定したオプションで、一致操作を変更します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">指定した入力文字列内で指定した正規表現に一致するすべての文字列を、指定した置換文字列に置換します。 追加のパラメーターでは、一致が見つからない場合に一致操作とタイムアウト間隔を変更するオプションを指定します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="replacement" vsli:raw="The replacement string.">置換文字列。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="replacement" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">指定した入力文字列内で、指定した正規表現に一致するすべての文字列を <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">指定した入力文字列内で、指定した正規表現に一致するすべての文字列を <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。 指定したオプションで、一致操作を変更します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">指定した入力文字列内で、指定した正規表現に一致するすべての部分文字列を、<see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。 追加のパラメーターでは、一致が見つからない場合に一致操作とタイムアウト間隔を変更するオプションを指定します。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" />、または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 <paramref name="pattern" /> が現在のインスタンス内で一致しない場合、メソッドは現在のインスタンスを変更せずに返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">指定した入力文字列内で、指定した正規表現に一致するすべての文字列を <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">指定した入力文字列内で正規表現パターンに一致する文字列を、指定した最大回数だけ、<see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">置換を実行する最大回数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">指定した入力部分文字列内で正規表現パターンに一致する文字列を、指定した最大回数だけ、<see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> デリゲートによって返される文字列に置き換えます。</summary>
      <param name="input" vsli:raw="The string to search for a match.">一致する対象を検索する文字列。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">各一致文字列を調べ、元の一致文字列または置換文字列のどちらかを返すカスタム メソッド。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">置換を実行する最大回数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">入力文字列中で検索を開始する文字位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="evaluator" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一致する各文字列が置換文字列に置き換えられる以外は入力文字列と同じである新しい文字列。 正規表現パターンが現在のインスタンスで一致しない場合、このメソッドは現在のインスタンスをそのまま返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現パターンによって定義されている位置で入力文字列を分割し、部分文字列の配列に格納します。</summary>
      <param name="input" vsli:raw="The string to split.">分割する文字列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An array of strings.">文字列の配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現で定義されている位置で、入力文字列を指定されている最大回数だけ分割し、部分文字列の配列に格納します。</summary>
      <param name="input" vsli:raw="The string to be split.">分割対象の文字列。</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">分割を実行する最大回数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An array of strings.">文字列の配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターで指定された正規表現で定義されている位置で、入力文字列を指定されている最大回数だけ分割し、部分文字列の配列に格納します。 正規表現パターンの検索は、入力文字列の指定した文字位置から開始します。</summary>
      <param name="input" vsli:raw="The string to be split.">分割対象の文字列。</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">分割を実行する最大回数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">入力文字列中で検索を開始する文字位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> が 0 未満か、<paramref name="input" /> の長さを超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An array of strings.">文字列の配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">正規表現パターンによって定義されている位置で、入力文字列を部分文字列の配列に分割します。</summary>
      <param name="input" vsli:raw="The string to split.">分割する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An array of strings.">文字列の配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">指定された正規表現パターンによって定義されている位置で、入力文字列を部分文字列の配列に分割します。 指定したオプションで、一致操作を変更します。</summary>
      <param name="input" vsli:raw="The string to split.">分割する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="An array of strings.">文字列の配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">指定された正規表現パターンによって定義されている位置で、入力文字列を部分文字列の配列に分割します。 追加のパラメーターでは、一致が見つからない場合に一致操作とタイムアウト間隔を変更するオプションを指定します。</summary>
      <param name="input" vsli:raw="The string to split.">分割する文字列。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">一致させる正規表現パターン。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">一致オプションを指定する列挙値のビットごとの組み合わせ。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">タイムアウト期間、またはメソッドがタイムアウトしないことを示す <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">正規表現の解析エラーが発生しました。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> または <paramref name="pattern" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> は、<see cref="T:System.Text.RegularExpressions.RegexOptions" /> 値のビットごとの正しい組み合わせではありません。  
  
- または - 
 <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">タイムアウトが発生しました。 タイムアウトの詳細については、「解説」をご覧ください。</exception>
      <returns vsli:raw="A string array.">文字列配列。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトの逆シリアル化に必要なデータを入力します。</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">シリアル化情報が設定されるオブジェクト。</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">シリアル化データを格納および取得する場所。 このパラメーターは将来使用するために予約されています。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">
        <see langword="Regex" /> コンストラクターに渡された正規表現パターンを返します。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">
        <see langword="Regex" /> コンストラクターに渡された <paramref name="pattern" /> パラメーター。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">入力文字列内に含まれるエスケープされた文字を変換します。</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">変換対象のテキストを含んでいる入力文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> には、認識されないエスケープ シーケンスが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> が <see langword="null" />です。</exception>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">エスケープされた文字を含む文字列を、エスケープされていない形式に変換したもの。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Text.RegularExpressions.Regex.Options" /> プロパティに <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> オプションが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Text.RegularExpressions.Regex.Options" /> プロパティに <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> オプションが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">タイムアウト間隔が許容範囲内にあるかどうかを確認します。</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">チェックするタイムアウト間隔。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">指定のタイムアウトが有効範囲内にありません。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">コンパイルされた正規表現の現在の静的キャッシュ内の最大エントリ数を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">設定操作の値が 0 より小さい値です。</exception>
      <returns vsli:raw="The maximum number of entries in the static cache.">静的キャッシュの最大エントリ数。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">名前付きキャプチャ対象グループをインデックス値にマップする辞書を取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">セット操作で <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> プロパティに割り当てられた値は、<see langword="null" /> です。</exception>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">名前付きキャプチャ対象グループをインデックス値にマップする辞書。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">番号付きのキャプチャ対象グループをインデックス値にマップする辞書を取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">セット操作で <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> プロパティに割り当てられた値は、<see langword="null" /> です。</exception>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">番号付きのキャプチャ対象グループをインデックス値にマップする辞書。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">現在のインスタンスのタイムアウト間隔を取得します。</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">
        <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> がスローされる前に、パターン一致操作で経過できる最大時間間隔。タイムアウトが無効な場合は <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> コンストラクターに渡されたオプションを取得します。</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">
        <see cref="T:System.Text.RegularExpressions.RegexOptions" /> のコンストラクターに渡されたオプションを表す <see cref="T:System.Text.RegularExpressions.Regex" /> の列挙体の 1 つ以上のメンバー</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">正規表現が右から左の方向に検索するかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現が右から左の方向に検索する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">正規表現をコンパイルしてスタンドアロン アセンブリを作成するために使用する正規表現についての情報を提供します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">アセンブリに含める正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">コンパイルする正規表現。</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">正規表現をコンパイルするときに使用する正規表現オプション。</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">コンパイル済みの正規表現を表す型の名前。</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">新しい型の所属先となる名前空間。</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> が <see cref="F:System.String.Empty" />です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="name" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="fullnamespace" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">アセンブリに含めるタイムアウト値を指定した正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">コンパイルする正規表現。</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">正規表現をコンパイルするときに使用する正規表現オプション。</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">コンパイル済みの正規表現を表す型の名前。</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">新しい型の所属先となる名前空間。</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">正規表現の既定のタイムアウト間隔。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> が <see cref="F:System.String.Empty" />です。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="name" /> が <see langword="null" />です。  
  
- または - 
 <paramref name="fullnamespace" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">コンパイルされた正規表現をパブリックに参照できるかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">正規表現をパブリックに参照できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">正規表現の既定のタイムアウト間隔を取得または設定します。</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">
        <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> がスローされる前にパターン一致操作で経過できる既定の最大時間間隔、またはタイムアウトが無効な場合は <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">コンパイル済みの正規表現を表す型の名前を取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">このプロパティの値は <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">このプロパティの値は空の文字列です。</exception>
      <returns vsli:raw="The name of the new type.">新しい型の名前。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">新しい型の所属先となる名前空間を取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">このプロパティの値は <see langword="null" /> です。</exception>
      <returns vsli:raw="The namespace of the new type.">新しい型の名前空間。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">正規表現をコンパイルするときに使用するオプションを取得または設定します。</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">列挙値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">コンパイルする正規表現を取得または設定します。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">このプロパティの値は <see langword="null" /> です。</exception>
      <returns vsli:raw="The regular expression to compile.">コンパイルする正規表現。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">正規表現パターン マッチング メソッドの実行時間が、タイムアウト間隔を超えた場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">システム提供のメッセージを使用して、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">シリアル化されたデータを格納するオブジェクト。</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">シリアル化されたデータを格納するストリーム。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">指定したメッセージの文字列を使用して、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A string that describes the exception.">例外を説明する文字列。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="A string that describes the exception.">例外を説明する文字列。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">現在の例外の原因となった例外。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">正規表現パターン、入力テキスト、およびタイムアウト間隔に関する情報を使用して、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">タイムアウトが発生したときに正規表現エンジンが処理していた入力テキスト。</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">タイムアウトが発生したときに正規表現エンジンによって使用されるパターン。</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">タイムアウト間隔。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、<see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info" vsli:raw="The serialization information object to populate with data.">データを格納するシリアル化情報オブジェクト。</param>
      <param name="context" vsli:raw="The destination for this serialization.">このシリアル化のシリアル化先。</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">タイムアウトが発生したときに正規表現エンジンが処理していた入力テキストを取得します。</summary>
      <returns vsli:raw="The regular expression input text.">正規表現入力テキスト。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">正規表現検索のタイムアウト間隔を取得します。</summary>
      <returns vsli:raw="The time-out interval.">タイムアウト間隔。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">タイムアウトが発生したときに一致操作で使用されていた正規表現パターンを取得します。</summary>
      <returns vsli:raw="The regular expression pattern.">正規表現パターン。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">正規表現オプションを設定するために使用する列挙値を提供します。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">正規表現をコンパイルしてアセンブリを作成することを指定します。 これにより実行速度は速くなりますが、起動にかかる時間は長くなります。 この値は、<see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> メソッドを呼び出すときには <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> プロパティに割り当てないでください。 詳細については、「 正規表現のオプション 」の「コンパイルされた正規表現」セクションを参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">言語の違いが無視されるように指定します。 詳細については、「 正規表現のオプション 」の「インバリアントカルチャを使用した比較」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">式の ECMAScript 準拠の動作を有効にします。 この値は、必ず <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />、<see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" />、<see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> の各値と組み合わせて使用します。 この値を他の値と組み合わせて使用すると、例外が発生します。  
  
オプションの詳細については、「 <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" />正規表現のオプション 」の「ECMAScript 一致の動作」セクションを参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">明示的に名前または番号が付けられた (?) 形式のグループだけが有効なキャプチャであることを指定します。 &lt;名前 &gt; ...)。これにより、式 (?:...) の構文ぎこちなさを使用せずに、名前のないかっこを非キャプチャグループとして動作させることができます。詳細については、「 正規表現のオプション 」の「明示的なキャプチャのみ」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">検索時に大文字と小文字を区別しないことを指定します。 詳細については、「 正規表現のオプション 」の「大文字と小文字を区別しない一致」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">パターンからエスケープが解除された空白を削除し、# でマークされたコメントを有効にします。 ただしこの値は、個々の正規表現の言語要素の開始を示す文字クラス、数値の量指定子、またはトークンに影響を与えることも、これらの中の空白を削除することもありません。 詳細については、「正規表現のオプション」の記事の「空白を無視」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">複数行モードを指定します。 ^ と $ の意味を変更して、文字列全体の先頭と末尾だけでなく、任意の行の先頭と末尾にもそれぞれが一致するようにします。 詳細については、「 正規表現のオプション 」の「複数行モード」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">オプションが何も設定されないことを指定します。 正規表現エンジンの既定の動作の詳細については、「 正規表現のオプション 」の「既定のオプション」を参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">検索が左から右ではなく右から左になされるように指定します。 詳細については、「 正規表現のオプション 」の「右から左モード」のセクションを参照してください。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">単一行モードを指定します。 \n 以外の任意の文字ではなく、すべての文字と一致するようにピリオド (.) の意味を変更します。 詳細については、「 正規表現のオプション 」の「単一行モード」を参照してください。</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseError">
      <summary vsli:raw="Specifies the detailed underlying reason why a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexParseException&quot; /&gt; is thrown when a regular expression contains a parsing error.">正規表現に解析エラーが含まれている場合に <see cref="T:System.Text.RegularExpressions.RegexParseException" /> がスローされる根本的な理由を詳細に示します。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment">
      <summary vsli:raw="An alternation construct in a regular expression contains a comment.">正規表現内の代替構成体に、コメントが含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition">
      <summary vsli:raw="An alternation in a regular expression has a malformed condition.">正規表現内の代替に誤った形式の条件が含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains a malformed reference.">正規表現内の代替構成体に、誤った形式の参照が含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture">
      <summary vsli:raw="An alternation construct in a regular expression uses a named capture.">正規表現内の代替構成体で、名前付きキャプチャが使用されています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions">
      <summary vsli:raw="An alternation in a regular expression has too many conditions.">正規表現内の代替にある条件が多すぎます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference">
      <summary vsli:raw="An alternation construct in a regular expression contains an undefined reference.">正規表現内の代替構成体に未定義の参照が含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid">
      <summary vsli:raw="The group name of a captured group in a regular expression is invalid.">正規表現内のキャプチャされたグループのグループ名が無効です。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero">
      <summary vsli:raw="A regular expression defines a numbered subexpression named zero.">正規表現で、zero という名前の番号付き部分式が定義されています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast">
      <summary vsli:raw="A character class in a regular expression with an exclusion group is not the last part of the character class.">除外グループを含む正規表現内の文字クラスが、文字クラスの最後の部分ではありません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses">
      <summary vsli:raw="A regular expression has a non-escaped left parenthesis, or misses a closing right parenthesis.">正規表現に、エスケープされていない左かっこがあるか、または閉じ右かっこが欠落しています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses">
      <summary vsli:raw="A regular expression has a non-escaped right parenthesis, or misses an opening left parenthesis.">正規表現に、エスケープされていない右かっこがあるか、または開き左かっこが欠落しています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits">
      <summary vsli:raw="A hexadecimal escape sequence in a regular expression does not have enough digits, or contains invalid digits.">正規表現内の 16 進数のエスケープ シーケンスに、十分な桁数がないか、または無効な数字が含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct">
      <summary vsli:raw="A grouping construct in a regular expression is invalid or malformed.">正規表現内のグループ化構成体が無効であるか、または形式が正しくありません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape in a regular expression is invalid or unknown.">正規表現内の Unicode プロパティ エスケープが無効または不明です。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference">
      <summary vsli:raw="A named reference in a regular expression is malformed.">正規表現内の名前付き参照の形式が正しくありません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape">
      <summary vsli:raw="A Unicode property escape is malformed.">Unicode プロパティ エスケープの形式が正しくありません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter">
      <summary vsli:raw="A control character in a regular expression is missing.">正規表現内の制御文字が欠落しています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized">
      <summary vsli:raw="Repeated quantifiers on another quantifier inside a regular expression are not grouped in parentheses.">正規表現内の量指定子上で繰り返される別の量指定子が、かっこでグループ化されていません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing">
      <summary vsli:raw="A quantifier in a regular expression is in a position where it cannot quantify anything, like at the beginning of a regular expression or in a group.">正規表現内の量指定子が、何も定量化できない位置 (正規表現の先頭やグループ内など) にあります。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange">
      <summary vsli:raw="A captured group or a quantifier in a regular expression is not within range, that is, it is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">正規表現内のキャプチャされたグループまたは量指定子が範囲内にありません。つまり、それらが <see cref="F:System.Int32.MaxValue" /> よりも大きくなっています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange">
      <summary vsli:raw="A character class in a regular expression contains an inverse character range, like z-a instead of a-z.">正規表現内の文字クラスに、a から z ではなく z から a といったような逆の文字範囲が含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange">
      <summary vsli:raw="A quantifier range in a regular expression is inverse, like &lt;c&gt;{10,1}&lt;/c&gt; instead of &lt;c&gt;(1,10}&lt;/c&gt;.">正規表現内の量指定子の範囲が逆になっています <code>{10,1}</code> ( ではなく ) <code>(1,10}</code>.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange">
      <summary vsli:raw="A character-class in a regular expression contains a short-hand class that is not allowed inside a character class.">正規表現内の文字クラスに、文字クラス内で許可されていない短縮形クラスが含まれています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference">
      <summary vsli:raw="A used named reference in a regular expression is not defined.">正規表現内で使用されている名前付き参照が定義されていません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference">
      <summary vsli:raw="A used numbered reference in a regular expression is not defined.">正規表現内で使用されている番号付き参照が定義されていません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash">
      <summary vsli:raw="A regular expression ends with a non-escaped ending backslash.">正規表現が、エスケープされていない終了円記号で終わっています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.Unknown">
      <summary vsli:raw="An unknown regular expression parse error.">不明な正規表現解析エラーです。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter">
      <summary vsli:raw="A control character in a regular expression is not recognized.">正規表現内の制御文字が認識されません。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape">
      <summary vsli:raw="An escape character or sequence in a regular expression is invalid.">正規表現内のエスケープ文字またはシーケンスが無効です。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty">
      <summary vsli:raw="A unicode property in a regular expression is not recognized, or invalid.">正規表現内の unicode プロパティが認識されないか、または無効です。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket">
      <summary vsli:raw="A regular expression has a non-escaped left square bracket, or misses a closing right square bracket.">正規表現にエスケープされていない左角かっこが含まれているか、または閉じ右角かっこが欠落しています。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment">
      <summary vsli:raw="A comment in a regular expression is not terminated.">正規表現内のコメントが終了していません。</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseException">
      <summary vsli:raw="An exception as a result of a parse error in a regular expression, with detailed information in the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Error&quot; /&gt; and &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexParseException.Offset&quot; /&gt; properties.">正規表現での解析エラーの結果としての例外であり、<see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> および <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" /> プロパティに詳細情報が含まれています。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;paramref name=&quot;info&quot; /&gt; object with the parameter name and additional exception information.">パラメーター名と追加の例外情報を使用して <paramref name="info" /> オブジェクトを設定します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Error">
      <summary vsli:raw="Gets the error that happened during parsing.">解析中に発生したエラーを取得します。</summary>
      <returns vsli:raw="The error that occured during parsing.">解析中に発生したエラー。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Offset">
      <summary vsli:raw="Gets the zero-based character offset in the regular expression pattern where the parse error occurs.">解析エラーが発生した正規表現パターン内の 0 から始まる文字オフセットを取得します。</summary>
      <returns vsli:raw="The offset at which the parse error occurs.">解析エラーが発生する位置のオフセット。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">
        <see cref="T:System.Text.RegularExpressions.RegexRunner" /> クラスは、コンパイル済みの正規表現の基本クラスです。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">
        <see cref="T:System.Text.RegularExpressions.RegexRunner" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="capnum" vsli:raw="A capture number.">キャプチャの数。</param>
      <param name="start" vsli:raw="The starting position of the capture.">キャプチャの開始位置。</param>
      <param name="end" vsli:raw="The ending position of the capture.">キャプチャの終了位置。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。 文字が文字クラスに属しているかどうかを判断します。</summary>
      <param name="ch" vsli:raw="A character to test.">テスト対象の文字。</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">文字クラスの内部名。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <paramref name="ch" /> パラメーターが、<paramref name="charClass" /> パラメーターで指定した文字クラスに属している場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="ch" vsli:raw="A character.">単一の文字。</param>
      <param name="set" vsli:raw="The character set.">文字セット。</param>
      <param name="category" vsli:raw="The character category.">文字カテゴリ。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="i" vsli:raw="A number to save.">保存する数。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="index" vsli:raw="The possible boundary position.">潜在的な境界の位置。</param>
      <param name="startpos" vsli:raw="The starting position.">開始位置。</param>
      <param name="endpos" vsli:raw="The ending position.">終了位置。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">潜在的な ECMA 境界の位置。</param>
      <param name="startpos" vsli:raw="The starting position.">開始位置。</param>
      <param name="endpos" vsli:raw="The ending position.">終了位置。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="cap" vsli:raw="The capture number.">キャプチャの数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="cap" vsli:raw="The capture number.">キャプチャの数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="cap" vsli:raw="The capture number.">キャプチャの数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">正規表現エンジンのインスタンス。</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">パターン マッチをスキャンするテキスト。</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">正規表現エンジンが一致をスキャンする <paramref name="text" /> 内の 0 から始まる開始位置。</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">正規表現エンジンが一致をスキャンする <paramref name="text" /> 内の 0 から始まる終了位置。</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">この一致をスキャンする 0 から始まる開始位置。</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">前の一致の文字数。</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クイック モードで一致を検索するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns vsli:raw="A match.">一致。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">正規表現エンジンのインスタンス。</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">パターン マッチをスキャンするテキスト。</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">正規表現エンジンが一致をスキャンする <paramref name="text" /> 内の 0 から始まる開始位置。</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">正規表現エンジンが一致をスキャンする <paramref name="text" /> 内の 0 から始まる終了位置。</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">この一致をスキャンする 0 から始まる開始位置。</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">前の一致の文字数。</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">クイック モードで一致を検索するには <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="timeout" vsli:raw="The timeout interval.">タイムアウトの間隔。</param>
      <returns vsli:raw="A match.">一致。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
      <param name="capnum" vsli:raw="A capture number.">キャプチャの数。</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">保存されたキャプチャの数。</param>
      <param name="start" vsli:raw="The starting position.">開始位置。</param>
      <param name="end" vsli:raw="The ending position.">終了位置。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> メソッドで生成される <see cref="T:System.Text.RegularExpressions.Regex" /> オブジェクトによって使用されます。</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">コンパイルされた正規表現用の <see cref="T:System.Text.RegularExpressions.RegexRunner" /> クラスを作成します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">
        <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">派生クラスでオーバーライドされた場合は、特定のコンパイルされた正規表現に対する <see cref="T:System.Text.RegularExpressions.RegexRunner" /> オブジェクトを作成します。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">特定のコンパイルされた正規表現を実行することを目的とした <see cref="T:System.Text.RegularExpressions.RegexRunner" /> オブジェクト。</returns>
    </member>
  </members>
</doc>