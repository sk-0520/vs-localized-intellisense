<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary vsli:raw="Represents a wrapper class for a pipe handle.">パイプ ハンドルのラッパー クラスを表します。</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; class.">
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="preexistingHandle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents the pre-existing handle to use.">使用する既存のハンドルを表す <see cref="T:System.IntPtr" /> オブジェクト。</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably release the handle during the finalization phase; &lt;see langword=&quot;false&quot; /&gt; to prevent reliable release (not recommended).">終了処理中にハンドルを確実にリリースする場合は <see langword="true" />。信頼性の高いリリースを実行しない場合は <see langword="false" /> (お勧めしません)。</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid">
      <summary vsli:raw="Gets a value that indicates whether the handle is invalid.">ハンドルが無効かどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handle is not valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ハンドルが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary vsli:raw="Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations (without cancellation support on Windows platforms).">同期と非同期の読み書き操作をサポートする匿名パイプ ストリームのクライアント側を公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class from the specified handle.">ハンドルを指定して <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object will encapsulate.">この <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" /> は有効なハンドルではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">ディスク エラーなどの I/O エラーが発生しました。  
  
 - または -  
  
 ストリームは閉じられました。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified pipe direction and a string representation of the pipe handle.">指定したパイプの方向およびパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">パイプ ハンドルを表す文字列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is an invalid handle.">
        <paramref name="pipeHandleAsString" /> は無効なハンドルです。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeHandleAsString" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified string representation of the pipe handle.">指定したパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">パイプ ハンドルを表す文字列。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is not a valid pipe handle.">
        <paramref name="pipeHandleAsString" /> が有効なパイプ ハンドルではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトの読み取りモードを設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">送信モードが有効ではありません。 匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The transmission mode is &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">送信モードは <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> です。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">接続が切断されているか、別の I/O エラーが発生しています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトの <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; supported by the current pipe.">現在のパイプがサポートする <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> です。</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary vsli:raw="Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.">同期と非同期の読み書き操作をサポートする匿名パイプに関連するストリームを公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction.">パイプの方向を指定して <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class from the specified pipe handles.">指定したパイプ ハンドルから <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="serverSafePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object will encapsulate.">この <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <param name="clientSafePipeHandle" vsli:raw="A safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> は無効なハンドルです。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">ディスク エラーなどの I/O エラーが発生しました。  
  
 - または -  
  
 ストリームは閉じられました。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction and inheritability mode.">パイプの方向と継承性のモードを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">
        <paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction, inheritability mode, and buffer size.">パイプの方向、継承性のモード、バッファー サイズを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">パイプの方向を決定する列挙値の 1 つ。  
  
匿名パイプは常に一方向であるため、<paramref name="direction" /> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</param>
      <param name="bufferSize" vsli:raw="The size of the buffer. This value must be greater than or equal to 0.">バッファーのサイズ。 この値は、0 以上である必要があります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。  
  
- または - 
 <paramref name="bufferSize" /> が 0 未満です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">
        <paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary vsli:raw="Closes the local copy of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルのローカル コピーを閉じます。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary vsli:raw="Gets the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle as a string.">接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを文字列として取得します。</summary>
      <returns vsli:raw="A string that represents the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを表す文字列。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">現在 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドルを取得します。</summary>
      <returns vsli:raw="A handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">現在 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトのハンドル。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object. For anonymous pipes, transmission mode must be &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモードを設定します。 匿名パイプでは、送信モードを <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> にする必要があります。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">送信モードが有効ではありません。 匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;, which is not supported for anonymous pipes.">プロパティが <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> に設定されています。これは、匿名のパイプではサポートされていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">接続が切断されているか、別の I/O エラーが発生しています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <returns vsli:raw="The reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモード。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode that is supported by the current pipe.">現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; that is supported by the current pipe.">現在のパイプでサポートされる <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, which supports both synchronous and asynchronous read and write operations.">同期および非同期の読み書き操作をサポートする名前付きパイプに関連する <see cref="T:System.IO.Stream" /> を公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class for the specified pipe handle with the specified pipe direction.">指定したパイプの方向を使用して、指定したパイプ ハンドルの <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">パイプが接続されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object will encapsulate.">この <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream has been closed.">ストリームは閉じられました。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" /> は有効なハンドルではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe name.">指定したパイプ名を使用して <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names.">指定したパイプ名とサーバー名を使用して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction.">パイプ名、サーバー名、およびパイプの方向を指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction and pipe options.">パイプ名、サーバー名、パイプの方向、およびパイプのオプションを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="options" /> は正しい <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.">パイプ名、サーバー名、パイプの方向、パイプのオプション、およびセキュリティ偽装レベルを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">セキュリティ偽装レベルを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="options" /> は正しい <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="impersonationLevel" /> は正しい <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.">パイプ名、サーバー名、パイプの方向、パイプのオプション、セキュリティ偽装レベル、および継承性のモードを指定して、<see cref="T:System.IO.Pipes.NamedPipeClientStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">接続対象のリモート コンピューターの名前。ローカル コンピューターを指定する場合は "."。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">セキュリティ偽装レベルを決定する列挙値の 1 つ。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.">基になるハンドルを子プロセスが継承するかどうかを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> または <paramref name="serverName" /> が長さ 0 の文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="options" /> は正しい <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="impersonationLevel" /> は正しい <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 値ではありません。  
  
- または - 
 <paramref name="inheritability" /> は正しい <see cref="T:System.IO.HandleInheritability" /> 値ではありません。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary vsli:raw="Connects to a waiting server with an infinite time-out value.">無限のタイムアウト値で待機中のサーバーに接続します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">クライアントが既に接続されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary vsli:raw="Connects to a waiting server within the specified time-out period.">指定したタイムアウト期限内に、待機中のサーバーに接続します。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <exception cref="T:System.TimeoutException" vsli:raw="Could not connect to the server within the specified &lt;paramref name=&quot;timeout&quot; /&gt; period.">指定した <paramref name="timeout" /> 期間内に、サーバーに接続できませんでした。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is less than 0 and not set to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">
        <paramref name="timeout" /> が 0 未満に設定され、<see cref="F:System.Threading.Timeout.Infinite" /> に設定されていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">クライアントが既に接続されています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The server is connected to another client and the time-out period has expired.">サーバーが別のクライアントに接続されており、タイムアウト期間が期限切れです。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary vsli:raw="Asynchronously connects to a waiting server with an infinite timeout period.">無限のタイムアウト時間で待機中のサーバーに非同期接続します。</summary>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period.">指定したタイムアウト時間内に待機中のサーバーに非同期接続します。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.">指定したタイムアウト時間内に待機中のサーバーに非同期接続し、キャンセル要求を監視します。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">接続がタイムアウトするまでサーバーの応答を待機する時間 (ミリ秒単位)。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server and monitors cancellation requests.">待機中のサーバーに非同期接続し、キャンセル要求を監視します。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">非同期の接続操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">
        <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary vsli:raw="Gets the number of server instances that share the same pipe name.">同じパイプ名を共有するサーバー インスタンス数を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The current &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object has not yet connected to a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">パイプ ハンドルがまだ設定されていません。  
  
- または - 
現在の <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> オブジェクトが <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトにまだ接続されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred.">パイプが接続解除されているか、I/O エラーが発生しました。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying pipe handle is closed.">基になるパイプ ハンドルは閉じられています。</exception>
      <returns vsli:raw="The number of server instances that share the same pipe name.">同じパイプ名を共有するサーバー インスタンス数。</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, supporting both synchronous and asynchronous read and write operations.">同期および非同期の読み書き操作をサポートする名前付きパイプに関連する <see cref="T:System.IO.Stream" /> を公開します。</summary>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary vsli:raw="Represents the maximum number of server instances that the system resources allow.">システム リソースで許されるサーバー インスタンスの最大数を表します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class from the specified pipe handle.">パイプ ハンドルを指定して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">パイプが接続されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object will encapsulate.">この <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="safePipeHandle" /> は無効なハンドルです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid pipe handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; The maximum number of server instances has been exceeded.">
        <paramref name="safePipeHandle" /> が有効なパイプ ハンドルではありません。  
  
- または - 
サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name.">指定したパイプ名を使用して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name and pipe direction.">指定したパイプ名とパイプの方向を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, and maximum number of server instances.">指定したパイプ名、パイプの方向、およびサーバー インスタンスの最大数を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A non-negative number is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt; is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; Access rights is limited to the &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.ChangePermissions&quot; /&gt; , &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.TakeOwnership&quot; /&gt; , and &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity&quot; /&gt; flags.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
負以外の数値が必要です。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> が必要です。  
  
- または - 
アクセス権は、<see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> フラグ、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> フラグ、および <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> フラグに制限されます。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, and transmission mode.">指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、および送信モードを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, and pipe options.">指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、およびパイプのオプションを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は正しい <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, and recommended in and out buffer sizes.">指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、および推奨される入力バッファー サイズと出力バッファー サイズを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">パイプ名。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">パイプの方向を決定する列挙値の 1 つ。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">パイプの送信モードを決定する列挙値の 1 つ。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
      <param name="inBufferSize" vsli:raw="A positive value greater than 0 that indicates the input buffer size.">入力バッファー サイズを示す 0 より大きい正の値。</param>
      <param name="outBufferSize" vsli:raw="A positive value greater than 0 that indicates the output buffer size.">出力バッファー サイズを示す 0 より大きい正の値。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inBufferSize&quot; /&gt; is negative.">
        <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は正しい <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は正しい <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="inBufferSize" /> が負の値です。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
      <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">サーバー インスタンスの数が最大数を超えました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to wait for a client to connect.">クライアントが接続するのを待機する非同期操作を開始します。</summary>
      <param name="callback" vsli:raw="The method to call when a client connects to the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">クライアントが <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続したときに呼び出すメソッド。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous request from other requests.">この特定の非同期要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">パイプが非同期的に開かれませんでした。  
  
 - または -  
  
 パイプの接続が既に確立されています。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">パイプの接続が解除されています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <returns vsli:raw="An object that references the asynchronous request.">非同期の要求を参照するオブジェクト。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary vsli:raw="Disconnects the current connection.">現在の接続を切断します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">作成されているパイプの接続がありません。  
  
 - または -  
  
 接続されたパイプが既に切断されています。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous operation to wait for a client to connect.">クライアントが接続するのを待機する非同期操作を終了します。</summary>
      <param name="asyncResult" vsli:raw="The pending asynchronous request.">保留中の非同期の要求。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">パイプが非同期的に開かれませんでした。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">パイプの接続が解除されています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">
        <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary vsli:raw="Gets the user name of the client on the other end of the pipe.">パイプのもう一方の終端のクライアントのユーザー名を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">作成されているパイプの接続がありません。  
  
 - または -  
  
 接続されたパイプが既に切断されています。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; The user name of the client is longer than 19 characters.">パイプの接続が解除されています。  
  
 - または -  
  
 クライアントのユーザー名が 19 文字を超えています。</exception>
      <returns vsli:raw="The user name of the client on the other end of the pipe.">パイプのもう一方の終端のクライアントのユーザー名。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary vsli:raw="Calls a delegate while impersonating the client.">クライアントの偽装中にデリゲートを呼び出します。</summary>
      <param name="impersonationWorker" vsli:raw="The delegate that specifies a method to call.">呼び出すメソッドを指定するデリゲート。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">作成されているパイプの接続がありません。  
  
 - または -  
  
 接続されたパイプが既に切断されています。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">パイプの接続が解除されています。  
  
 - または -  
  
 I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary vsli:raw="Waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを待機します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">パイプの接続が既に確立されています。  
  
 - または -  
  
 パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">パイプの接続が解除されています。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機します。</summary>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">非同期の待機操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object and monitors cancellation requests.">クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機し、キャンセル要求を監視します。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">非同期の待機操作を表すタスク。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary vsli:raw="Specifies the direction of the pipe.">パイプの方向を指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary vsli:raw="Specifies that the pipe direction is in.">パイプの方向が In になるように指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary vsli:raw="Specifies that the pipe direction is two-way.">パイプの方向が双方向になるように指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary vsli:raw="Specifies that the pipe direction is out.">パイプの方向が Out になるように指定します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary vsli:raw="Provides options for creating a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object. This enumeration has a &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt; attribute that allows a bitwise combination of its member values.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトを作成するためのオプションを提供します。 この列挙体には、メンバー値のビットごとの組み合わせを可能にする <see cref="T:System.FlagsAttribute" /> 属性があります。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary vsli:raw="Indicates that the pipe can be used for asynchronous reading and writing.">パイプを非同期の読み取り用および書き込み用に使用できることを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly">
      <summary vsli:raw="When used to create a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; instance, indicates that the pipe can only be connected to a client created by the same user. When used to create a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; instance, indicates that the pipe can only connect to a server created by the same user. On Windows, it verifies both the user account and elevation level.">
        <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスの作成に使用した場合、同じユーザーが作成したクライアントにのみそのパイプを接続できることを示します。 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> インスタンスの作成に使用した場合、同じユーザーが作成したサーバーにのみそのパイプを接続できることを示します。 Windows では、ユーザー アカウントと昇格レベルの両方が検証されます。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary vsli:raw="Indicates that there are no additional parameters.">追加のパラメーターがないことを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary vsli:raw="Indicates that the system should write through any intermediate cache and go directly to the pipe.">システムが中間キャッシュを使用して書き込みを行い、直接パイプに移動することを示します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object around a pipe, which supports both anonymous and named pipes.">匿名パイプと名前付きパイプの両方をサポートする、パイプに関連する <see cref="T:System.IO.Stream" /> オブジェクトを公開します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value and buffer size.">指定した <see cref="T:System.IO.Pipes.PipeDirection" /> 値とバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeStream" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</param>
      <param name="bufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="bufferSize" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt;, &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt;, and buffer size.">指定した <see cref="T:System.IO.Pipes.PipeStream" />、<see cref="T:System.IO.Pipes.PipeDirection" />、およびバッファー サイズを使用して、<see cref="T:System.IO.Pipes.PipeTransmissionMode" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">パイプ オブジェクトの方向を示す <see cref="T:System.IO.Pipes.PipeDirection" /> 値のいずれか。</param>
      <param name="transmissionMode" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode of the pipe object.">パイプ オブジェクトの送信モードを示す <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値のいずれか。</param>
      <param name="outBufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">バッファー サイズを示す 0 以上の正の <see cref="T:System.Int32" /> 値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;transmissionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="transmissionMode" /> は有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。  
  
- または - 
 <paramref name="bufferSize" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation.">非同期の読み込み動作を開始します。</summary>
      <param name="buffer" vsli:raw="The buffer to read data into.">データを読み取るバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading.">読み取りの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">読み取る最大バイト数。</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous read operation is completed.">非同期の読み取り操作が完了したときに呼び出すメソッド。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous read request from other requests.">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">パイプが読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">パイプが接続解除されたか、パイプが接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous read.">非同期の読み取りを参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation.">非同期の書き込み操作を開始します。</summary>
      <param name="buffer" vsli:raw="The buffer that contains the data to write to the current stream.">現在のストリームに書き込むデータを格納しているバッファー。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">書き込む最大バイト数。</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous write operation is completed.">非同期の書き込み操作が完了したときに呼び出すメソッド。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous write request from other requests.">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">パイプが書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">パイプが接続解除されたか、パイプが接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous write operation.">非同期の書き込み操作を参照する <see cref="T:System.IAsyncResult" /> オブジェクト。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary vsli:raw="Verifies that the pipe is in a proper state for getting or setting properties.">パイプがプロパティの取得または設定に対して適切な状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for read operations.">パイプが読み取り操作に対して接続状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for write operations.">パイプが書き込み操作に対して接続状態にあることを確認します。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class and optionally releases the managed resources.">
        <see cref="T:System.IO.Pipes.PipeStream" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous read request.">非同期読み込み要求の保留状態を終了します。</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">保留中の非同期要求への参照。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">ストリームが閉じているか、内部エラーが発生しました。</exception>
      <returns vsli:raw="The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).">読み取ったバイト数。 戻り値が 0 の場合は、ストリームの終了を示しています (パイプが閉じられています)。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous write request.">保留中の非同期書き込み要求を終了します。</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">保留中の非同期要求への参照。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">ストリームが閉じているか、内部エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary vsli:raw="Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.">現在のストリームに対応するバッファーをクリアし、バッファー内のすべてのデータを、基になるデバイスに書き込みます。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">パイプが書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously clears the buffer for the current stream and causes any buffered data to be written to the underlying device.">現在のストリームに対するバッファーを非同期にクリアし、バッファー内のすべてのデータを基になるデバイスに書き込みます。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">キャンセル要求を監視するためのトークン。</param>
      <returns vsli:raw="A task that represent the asynchronous flush operation.">非同期のフラッシュ操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object from the specified &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object.">指定した <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトから、<see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトを初期化します。</summary>
      <param name="handle" vsli:raw="The &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object of the pipe to initialize.">初期化するパイプの <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクト。</param>
      <param name="isExposed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to expose the handle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ハンドルを公開する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="A handle cannot be bound to the pipe.">ハンドルはパイプにバインドできません。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a block of bytes from a stream and writes the data to a specified buffer starting at a specified position for a specified length.">ストリームからバイトのブロックを読み取り、指定した長さの指定した位置を開始位置として、指定したバッファーにデータを書き込みます。</summary>
      <param name="buffer" vsli:raw="When this method returns, contains the specified byte array with the values between &lt;paramref name=&quot;offset&quot; /&gt; and (&lt;paramref name=&quot;offset&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1) replaced by the bytes read from the current source.">このメソッドが返されるときに、指定したバイト配列の <paramref name="offset" /> から (<paramref name="offset" /> + <paramref name="count" /> - 1) までの値が、現在のソースから読み取られたバイトに置き換えられます。</param>
      <param name="offset" vsli:raw="The byte offset in the &lt;paramref name=&quot;buffer&quot; /&gt; array at which the bytes that are read will be placed.">読み取られるバイトが配置される <paramref name="buffer" /> 配列内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">読み取る最大バイト数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">パイプが読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">パイプが接続解除されたか、パイプが接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">何らかの I/O エラーが発生しました。</exception>
      <returns vsli:raw="The total number of bytes that are read into &lt;paramref name=&quot;buffer&quot; /&gt;. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.">
        <paramref name="buffer" /> に読み取られる合計バイト数。 要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads a sequence of bytes from the current stream, writes them to a byte array, and advances the position within the stream by the number of bytes read.">現在のストリームからバイト シーケンスを読み取り、バイト配列に書き込んで、読み取ったバイト数だけストリーム内の位置を進めます。</summary>
      <param name="buffer" vsli:raw="A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.">メモリの領域。 このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The number of bytes read was longer than the buffer length.">読み取ったバイト数がバッファー長を超えています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
      <returns vsli:raw="The total number of bytes read into the &lt;paramref name=&quot;buffer&quot; /&gt;. This can be less than the number of bytes allocated in &lt;paramref name=&quot;buffer&quot; /&gt; if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.">
        <paramref name="buffer" /> に読み取る合計バイト数。 現在、多くのバイト数を利用できない場合、これは <paramref name="buffer" /> に割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream to a byte array starting at a specified position for a specified number of bytes, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">現在のストリームからバイト シーケンスを、指定したバイト数の指定した位置を開始位置としてバイト配列に非同期に読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">データを書き込むバッファー。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the stream.">ストリームからのデータの書き込み開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">読み取る最大バイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.">非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。 現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream, writes them to a byte memory range, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">現在のストリームからバイト シーケンスを非同期に読み取り、バイト メモリの範囲に書き込んで、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The region of memory to write the data into.">データを書き込むメモリの領域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">ストリームは読み取りをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or- &#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the stream has been reached.">非同期の読み取り操作を表すタスク。 その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、バッファーに読み取られるバイトの合計数が含まれます。 要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary vsli:raw="Reads a byte from a pipe.">パイプからバイトを読み取ります。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">パイプが読み取り操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">パイプが接続解除されたか、パイプが接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">何らかの I/O エラーが発生しました。</exception>
      <returns vsli:raw="The byte, cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 indicates the end of the stream (the pipe has been closed).">
        <see cref="T:System.Int32" /> にキャストしたバイト。ストリームの末尾に達した (パイプが閉じられている) 場合は -1。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Sets the current position of the current stream to the specified value.">現在のストリームの現在位置を、指定した値に設定します。</summary>
      <param name="offset" vsli:raw="The point, relative to &lt;paramref name=&quot;origin&quot; /&gt;, to begin seeking from.">シークの開始位置 <paramref name="origin" /> からの相対的なポイント。</param>
      <param name="origin" vsli:raw="Specifies the beginning, the end, or the current position as a reference point for &lt;paramref name=&quot;offset&quot; /&gt;, using a value of type &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt;.">
        <see cref="T:System.IO.SeekOrigin" /> 型の値を使用して、<paramref name="offset" /> の参照ポイントとして先頭、末尾、または現在位置を指定します。</param>
      <returns vsli:raw="The new position in the stream.">ストリームの新しい位置。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream to the specified value.">現在のストリーム長を指定した値に設定します。</summary>
      <param name="value" vsli:raw="The new length of the stream.">ストリームの新しい長さ。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary vsli:raw="Waits for the other end of the pipe to read all sent bytes.">パイプのもう一方の終端が、送信されたすべてのバイトを読み取るまで待機します。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">パイプが書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes a block of bytes to the current stream using data from a buffer.">バッファーのデータを使用して、現在のストリームにバイトのブロックを書き込みます。</summary>
      <param name="buffer" vsli:raw="The buffer that contains data to write to the pipe.">パイプに書き込むデータを格納しているバッファー。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">現在のストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write to the current stream.">現在のストリームに書き込む最大バイト数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> が 0 未満です。  
  
- または - 
 <paramref name="count" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> は <paramref name="buffer" /> で使用可能なバイト数を超えています。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">パイプが書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.">現在のストリームにバイト シーケンスを書き込み、書き込んだバイト数だけストリーム内の現在位置を進めます。</summary>
      <param name="buffer" vsli:raw="A region of memory. This method copies the contents of this region to the current stream.">メモリの領域。 このメソッドでは、この領域のコンテンツが現在のストリームにコピーされます。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support writing.">ストリームは書き込みをサポートしません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a specified number of bytes from a byte array starting at a specified position, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">指定した位置を開始位置としてバイト配列から指定したバイト数を非同期に書き込み、書き込んだバイト数だけこのストリーム内の現在の位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The buffer to write data from.">データの書き込み元となるバッファー。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which to begin copying bytes to the stream.">ストリームへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">書き込む最大バイト数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; is negative.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;count&quot; /&gt; is negative.">
        <paramref name="offset" /> が負の値です。

- または -

<paramref name="count" /> が負の値です。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt;.Length - &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="buffer" />.Length - <paramref name="offset" /> が <paramref name="count" /> より小さいです。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">ストリームは書き込みをサポートしていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">現在のストリームにバイト シーケンスを非同期に書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</summary>
      <param name="buffer" vsli:raw="The region of memory to write data from.">データを書き込む元のメモリの領域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">キャンセル要求を監視するためのトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">ストリームは書き込みをサポートしていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">閉じたパイプにアクセスできません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">パイプが接続解除されています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">パイプがまだ接続されていません。

- または -

パイプが切断状態になっています。

- または -

パイプ ハンドルがまだ設定されていません。 (<see cref="T:System.IO.Pipes.PipeStream" /> 実装で <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" /> を呼び出しましたか?</exception>
      <returns vsli:raw="A task that represents the asynchronous write operation.">非同期の書き込み操作を表すタスク。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary vsli:raw="Writes a byte to the current stream.">現在のストリームにバイトを書き込みます。</summary>
      <param name="value" vsli:raw="The byte to write to the stream.">ストリームに書き込むバイト。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">パイプが書き込み操作をサポートしていません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">パイプが接続解除されたか、パイプが接続を待機しているか、またはハンドルが設定されていません。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary vsli:raw="Gets a value indicating whether the current stream supports read operations.">現在のストリームが読み取り操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports read operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストリームが読み取り操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary vsli:raw="Gets a value indicating whether the current stream supports seek operations.">現在のストリームがシーク操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">常に <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary vsli:raw="Gets a value indicating whether the current stream supports write operations.">現在のストリームが書き込み操作をサポートしているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports write operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">ストリームが書き込み操作をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the inbound buffer for a pipe.">パイプの着信バッファーのサイズ (バイト単位) を取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unreadable.">ストリームを読み取ることができません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">パイプは接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
      <returns vsli:raw="An integer value that represents the inbound buffer size, in bytes.">着信バッファーのサイズ (バイト単位) を表す整数値。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously or synchronously.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが非同期的に開かれたか、同期的に開かれたかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが非同期的に開かれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary vsli:raw="Gets or sets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが接続されているかどうかを示す値を取得または設定します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトが接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary vsli:raw="Gets a value indicating whether a handle to a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトのハンドルが公開されているかどうかを示す値を取得します。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a handle to the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトのハンドルが公開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary vsli:raw="Gets a value indicating whether there is more data in the message returned from the most recent read operation.">最後に実行された読み取り操作から返されたメッセージに他のデータが存在するかどうかを示す値を取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe's &lt;see cref=&quot;P:System.IO.Pipes.PipeStream.ReadMode&quot; /&gt; property value is not &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">パイプが接続されていません。  
  
- または - 
パイプ ハンドルがまだ設定されていません。  
  
- または - 
パイプの <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> プロパティの値が <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> ではありません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are no more characters to read in the message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">メッセージにそれ以上読み取る文字が存在しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary vsli:raw="Gets the length of a stream, in bytes.">ストリーム長 (バイト単位) を取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">常にスローされます。</exception>
      <returns vsli:raw="0 in all cases.">常に 0。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the outbound buffer for a pipe.">パイプの発信バッファーのサイズ (バイト単位) を取得します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unwriteable.">ストリームに書き込むことができません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">パイプは接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
      <returns vsli:raw="The outbound buffer size, in bytes.">発信バッファーのサイズ (バイト単位)。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary vsli:raw="Gets or sets the current position of the current stream.">現在のストリームの現在位置を取得または設定します。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">常にスローされます。</exception>
      <returns vsli:raw="0 in all cases.">常に 0。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary vsli:raw="Gets or sets the reading mode for a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトの読み取りモードを取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The supplied value is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.">指定された値が有効な <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The supplied value is not a supported &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value for this pipe stream.">指定された値は、このパイプ ストリームについてサポートされている <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値ではありません。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect with a named client.">ハンドルが設定されていません。  
  
 - または -  
  
 パイプは名前付きクライアントとの接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred with a named client.">パイプが接続解除されているか、名前付きクライアントで I/O エラーが発生しました。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates how the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object reads from the pipe.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトがパイプから読み取る方法を示す、いずれかの <see cref="T:System.IO.Pipes.PipeStream" /> 値。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the local end of the pipe that the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object encapsulates.">現在の <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクトによってカプセル化されるパイプのローカルの終端のセーフ ハンドルを取得します。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.">パイプ ハンドルがまだ設定されていません。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object for the pipe that is encapsulated by the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">現在の <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> オブジェクトによってカプセル化されるパイプの <see cref="T:System.IO.Pipes.PipeStream" /> オブジェクト。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">現在のパイプでサポートされるパイプ送信モードを取得します。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">パイプは閉じています。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect in an anonymous client/server operation or with a named client.">ハンドルが設定されていません。  
  
 - または -  
  
 パイプは、匿名クライアント/サーバー操作での接続を待機しているか、名前付きクライアントとの接続を待機しています。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">パイプが接続解除されているか、別の I/O エラーが発生しました。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode supported by the current pipe.">現在のパイプでサポートされている送信モードを示す、いずれかの <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 値。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary vsli:raw="Represents the method to call as the client.">クライアントとして呼び出すメソッドを表します。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary vsli:raw="Specifies the transmission mode of the pipe.">パイプの送信モードを指定します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of bytes.">パイプのデータがバイト ストリームとして送信され、読み取られることを示します。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of messages.">パイプのデータがメッセージ ストリームとして送信され、読み取られることを示します。</summary>
    </member>
  </members>
</doc>