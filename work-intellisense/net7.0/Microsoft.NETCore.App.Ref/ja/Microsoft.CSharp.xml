<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.CSharp</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.RuntimeBinder.Binder">
      <summary vsli:raw="Contains factory methods to create dynamic call site binders for CSharp.">CSharp の動的呼び出しサイト バインダーを作成するファクトリ メソッドが含まれています。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp binary operation binder.">CSharp の新しい二項演算バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="operation" vsli:raw="The binary operation kind.">二項演算の種類。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp binary operation binder.">CSharp の新しい二項演算バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new CSharp convert binder.">CSharp の新しい変換バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="type" vsli:raw="The type to convert to.">変換後の型。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A new CSharp convert binder.">CSharp の新しい変換バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get index binder.">CSharp の新しいインデックス取得バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp get index binder.">CSharp の新しいインデックス取得バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get member binder.">CSharp の新しいメンバー取得バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="name" vsli:raw="The name of the member to get.">取得するメンバーの名前。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp get member binder.">CSharp の新しいインデックス取得メンバー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke binder.">CSharp の新しい呼び出しバインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp invoke binder.">CSharp の新しい呼び出しバインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke constructor binder.">CSharp の新しいコンストラクター バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp invoke constructor binder.">CSharp の新しいコンストラクター バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke member binder.">CSharp の新しいメンバー呼び出しバインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="name" vsli:raw="The name of the member to invoke.">呼び出すメンバーの名前。</param>
      <param name="typeArguments" vsli:raw="The list of type arguments specified for this invoke.">この呼び出しに対して指定する型引数のリスト。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp invoke member binder.">CSharp の新しい呼び出しメンバー メンバー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
      <summary vsli:raw="Initializes a new CSharp is event binder.">CSharp の新しいイベント確認バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="name" vsli:raw="The name of the event to look for.">検索するイベントの名前。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A new CSharp is event binder.">CSharp の新しいイベント バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set index binder.">CSharp の新しいインデックス設定バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp set index binder.">CSharp の新しいインデックス設定バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set member binder.">CSharp の新しいメンバー設定バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="name" vsli:raw="The name of the member to set.">設定するメンバーの名前。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp set member binder.">CSharp の新しいメンバー設定バインダー。</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp unary operation binder.">CSharp の新しい単項演算バインダーを初期化します。</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">バインダーの初期化に使用するフラグ。</param>
      <param name="operation" vsli:raw="The unary operation kind.">単項演算の種類。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">この操作の使用場所を示す <see cref="T:System.Type" />。</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">この操作に対する引数の <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> インスタンスのシーケンス。</param>
      <returns vsli:raw="A new CSharp unary operation binder.">CSharp の新しい単項演算バインダー。</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">呼び出しサイトにおける特定の引数に固有の C# 動的操作についての情報を表します。 このクラスのインスタンスは、C# コンパイラによって生成されます。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="flags" vsli:raw="The flags for the argument.">引数のフラグ。</param>
      <param name="name" vsli:raw="The name of the argument, if named; otherwise null.">引数に名前がある場合はその名前。それ以外の場合は null。</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> クラスの新しいインスタンス。</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">呼び出しサイトにおける特定の引数に固有の C# 動的操作についての情報を表します。 このクラスのインスタンスは、C# コンパイラによって生成されます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.Constant">
      <summary vsli:raw="The argument is a constant.">引数は定数です。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsOut">
      <summary vsli:raw="The argument is passed to an out parameter.">引数は out パラメーターに渡されます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsRef">
      <summary vsli:raw="The argument is passed to a ref parameter.">引数は ref パラメーターに渡されます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsStaticType">
      <summary vsli:raw="The argument is a &lt;see cref=&quot;T:System.Type&quot; /&gt; indicating an actual type name used in source. Used only for target objects in static calls.">引数は、ソースで使用されている実際の型名を示す <see cref="T:System.Type" /> です。 静的呼び出しのターゲット オブジェクトでのみ使用されます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.NamedArgument">
      <summary vsli:raw="The argument is a named argument.">引数は名前付き引数です。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.None">
      <summary vsli:raw="No additional information to represent.">追加情報はありません。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.UseCompileTimeType">
      <summary vsli:raw="The argument's compile-time type should be considered during binding.">引数のコンパイル時の型はバインディング時に考慮されます。</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">呼び出しサイトにおける特定の引数に固有ではない C# 動的操作についての情報を表します。 このクラスのインスタンスは、C# コンパイラによって生成されます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical">
      <summary vsli:raw="The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.">このバインダーは、条件論理演算子の評価の一部である論理 AND または論理 OR を表します。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext">
      <summary vsli:raw="The evaluation of this binder happens in a checked context.">このバインダーの評価は、checked コンテキストで行われます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex">
      <summary vsli:raw="The binder represents an implicit conversion for use in an array creation expression.">このバインダーは、配列作成式で使用する暗黙の型変換を表します。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit">
      <summary vsli:raw="The binder represents an explicit conversion.">このバインダーは、明示的な変換を表します。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName">
      <summary vsli:raw="The binder represents an invoke on a simple name.">このバインダーは、簡易名での呼び出しを表します。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName">
      <summary vsli:raw="The binder represents an invoke on a specialname.">このバインダーは、特別な名前での呼び出しを表します。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None">
      <summary vsli:raw="There is no additional information required for this binder.">このバインダーに必要な追加情報はありません。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded">
      <summary vsli:raw="The binder is used in a position that does not require a result, and can therefore bind to a void returning method.">バインダーは、結果を必要としない位置で使用されるため、戻り型が void のメソッドにバインドできます。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed">
      <summary vsli:raw="The result of any bind is going to be indexed get a set index or get index binder.">どのバインドの結果にもインデックスが付けられます。インデックス設定バインダーまたはインデックス取得バインダーが必要です。</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment">
      <summary vsli:raw="The value in this set index or set member comes a compound assignment operator.">このインデックス設定またはメンバー設定の値は複合代入演算子になります。</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">C# ランタイム バインダーの動的バインドが処理される際に発生するエラーを表します。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class.">
        <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has serialized data.">シリアル化したデータを持つ、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持しているオブジェクト。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message.">指定したエラー メッセージを持つ、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因である内部例外への参照を持つ、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">現在の例外の原因である例外、または、内部例外を指定しない場合は null 参照。</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">C# ランタイム バインダーの動的バインドが処理される際に発生するエラーを表します。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a system-supplied message that describes the error.">エラーを説明するシステム提供メッセージを使用して、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with serialized data.">シリアル化したデータを使用して、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">転送元または転送先についてのコンテキスト情報を含む <see cref="T:System.Runtime.Serialization.StreamingContext" /> です。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a specified message that describes the error.">指定したメッセージでエラーを説明する <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">例外を説明するメッセージ。 このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">指定したエラー メッセージおよびこの例外の原因である内部例外への参照を持つ、<see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">現在の例外の原因である例外、または、内部例外を指定しない場合は null 参照。</param>
    </member>
  </members>
</doc>