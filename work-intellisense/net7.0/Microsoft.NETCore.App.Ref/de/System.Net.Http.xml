<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">Stellt HTTP-Inhalt auf Grundlage von einem Bytearray bereit.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.ByteArrayContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Der Inhalt, der zum Initialisieren der <see cref="T:System.Net.Http.ByteArrayContent" /> verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="content" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.ByteArrayContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.ByteArrayContent" /> verwendete Inhalt.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Der Offset in Bytes im <paramref name="content" />-Parameter, der verwendet wird, um den <see cref="T:System.Net.Http.ByteArrayContent" /> zu initialisieren.</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Die Anzahl der Bytes in <paramref name="content" /> ab dem <paramref name="offset" />-Parameter, die zum Initialisieren von <see cref="T:System.Net.Http.ByteArrayContent" /> benutzt werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Der <paramref name="content" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Die <paramref name="offset" />-Parameter ist kleiner als 0 (null).  
  
- oder - 
Der <paramref name="offset" />-Parameter größer als die Länge des Inhalts, der durch den <paramref name="content" />-Parameters angegeben wird.  
  
- oder - 
Die <paramref name="count" />-Parameter ist kleiner als 0 (null).  
  
- oder - 
Der <paramref name="count" />-Parameter größer als die Länge des Inhalts, der durch den <paramref name="content" />-Parameters - minus dem <paramref name="offset" />-Parameter angegeben wird.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an HTTP content stream for reading. It uses the memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; as a backing store.">Erstellt einen HTTP-Inhaltsdatenstrom zum Lesen. Es wird Arbeitsspeicher aus <see cref="T:System.Net.Http.ByteArrayContent" /> als unterstützender Speicher verwendet.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The HTTP content stream.">Die HTTP-Inhaltsdatenstrom.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Erstellt einen HTTP-Inhaltsdatenstrom als asynchronen Vorgang zum Lesen, dessen Sicherungsspeicher Speicher aus dem <see cref="T:System.Net.Http.ByteArrayContent" /> ist.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes and writes the byte array provided in the constructor to an HTTP content stream.">Serialisiert und schreibt das im Konstruktor bereitgestellte Bytearray in einen HTTP-Inhaltedatenstrom.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Optional information about the transport, like the channel binding token. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Optionale Informationen zum Transport (z. B. zum Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">Das Bytearray, das im Konstruktor bereitgestellt wird, als asynchronen Vorgang in einen HTTP-Inhaltsstream serialisieren und schreiben.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">Serialisiert und schreibt das im Konstruktor bereitgestellte Bytearray als asynchronen Vorgang in einen HTTP-Inhaltedatenstrom.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">Bestimmt, ob ein Bytearray eine gültige Länge in Bytes enthält.</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">Die Länge des Bytearrays in Bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">Gibt an, wie die Clientzertifikate bereitgestellt werden.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">Der <see cref="T:System.Net.Http.HttpClientHandler" /> versucht, alle verfügbaren Clientzertifikate automatisch bereitzustellen.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">Die Anwendung stellt manuell die Clientzertifikate für den <see cref="T:System.Net.Http.WebRequestHandler" /> bereit. Dies ist der Standardwert.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">Ein Typ für HTTP-Handler, die die Verarbeitung von HTTP-Antwortnachrichten in einen anderen Handler (den internen Handler) delegieren.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.DelegatingHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.DelegatingHandler" />-Klasse mit einem bestimmten inneren Handler.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Der innere Handler, der für die Verarbeitung der HTTP-Antwortnachrichten zuständig ist.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.DelegatingHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">Sendet eine HTTP-Anforderung an den inneren Handler, die an den Server gesendet werden soll.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="An HTTP response message.">Eine HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Sendet eine HTTP-Anforderung an den inneren Handler, der als asynchroner Vorgang an den Server gesendet werden soll.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">Ruft den inneren Handler ab, der die HTTP-Antwortnachrichten verarbeitet, oder legt ihn fest.</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">Der innere Handler für HTTP-Antwortnachrichten.</returns>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">Ein Container für die Name/Wert-Tupel, codiert mit dem "application/x-www-form-urlencoded" MIME-Typ.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.FormUrlEncodedContent" />-Klasse mit einer bestimmten Auflistung von Namen/Wert-Paaren.</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">Eine Sammlung von Name-Wert-Paaren.</param>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write all name/value tuples provided in the constructor to an HTTP content stream as an asynchronous operation.">Alle im Konstruktor bereitgestellten Name/Wert-Tupel als asynchronen Vorgang serialisieren und in einen HTTP-Inhaltedatenstrom schreiben.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.HeaderEncodingSelector`1">
      <summary vsli:raw="Represents a method that specifies the encoding to use when interpreting header values.">Stellt eine Methode dar, die die beim Interpretieren von Headerwerten zu verwendende Codierung angibt.</summary>
      <param name="headerName" vsli:raw="The name of the header to specify for the encoding.">Der Name des Headers, der für die Codierung angegeben werden soll.</param>
      <param name="context" vsli:raw="The type we are encoding/decoding the headers for.">Der Typ, für den Header codiert/decodiert werden.</param>
      <typeparam name="TContext" vsli:raw="The type of the headers that are being encoded/decoded." />
      <returns vsli:raw="The encoding to use, or &lt;see langword=&quot;null&quot; /&gt; to use the default behavior.">Die zu verwendende Codierung oder <see langword="null" />, um das Standardverhalten zu verwenden.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">Stellt Authentifizierungsinformationen in Authorization-, ProxyAuthorization-, WWW-Authenticate- und Proxy-Authenticate-Headerwerten dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Klasse.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Das für die Autorisierung zu verwendende Schema.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Klasse.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Das für die Autorisierung zu verwendende Schema.</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">Die Anmeldeinformationen, die die Authentifizierungsinformationen des Benutzer-Agents für die angeforderte Ressource enthalten.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Eine Zeichenfolge, die Headerwertinformationen für die Authentifizierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Authentifizierung.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">Ruft die Anmeldeinformationen ab, die die Authentifizierungsinformationen des Benutzer-Agents für die angeforderte Ressource enthalten.</summary>
      <returns vsli:raw="The credentials containing the authentication information.">Die Anmeldeinformationen, die die Authentifizierungsinformationen enthalten.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">Ruft das Schema ab, das für die Autorisierung verwendet werden soll.</summary>
      <returns vsli:raw="The scheme to use for authorization.">Das für die Autorisierung zu verwendende Schema.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">Stellt den Wert des Cache-Control-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">Eine Zeichenfolge, die Headerwertinformationen für Cachesteuerelemente darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für Cachesteuerelemente.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">Cacheerweiterungstoken, jeweils mit einem optionalen zugewiesenen Wert.</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">Eine Sammlung von Cacheerweiterungstoken, jeweils mit einem optionalen zugewiesenen Wert.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">Das maximale Alter in Sekunden, das der HTTP-Client für den Empfang einer Antwort akzeptiert.</summary>
      <returns vsli:raw="The time in seconds.">Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">Gibt an, ob ein HTTP-Client bereit ist, eine Antwort zu akzeptieren, die den Ablaufzeitpunkt überschritten hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der ein HTTP-Client bereit ist, eine Antwort zu akzeptieren, die den Ablaufzeitpunkt überschritten hat; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">Die maximale Zeit in Sekunden, für die ein HTTP-Client eine Antwort akzeptiert, die den Ablaufzeitpunkt überschritten hat.</summary>
      <returns vsli:raw="The time in seconds.">Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">Die Lebensdauer der Aktualität in Sekunden, die ein HTTP-Client für den Empfang einer Antwort akzeptiert.</summary>
      <returns vsli:raw="The time in seconds.">Die Zeit in Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">Gibt an, ob der Ausgangsserver die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgangsserver die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">Gibt an, ob ein HTTP-Client bereit ist, eine zwischengespeicherte Antwort zu akzeptieren.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn der HTTP-Client nicht bereit ist, eine zwischengespeicherte Antwort zu akzeptieren. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">Eine Sammlung von Feldnamen in der „No-Cache“-Richtlinie in einem Cache-Control-Header-Feld auf einer HTTP-Antwort.</summary>
      <returns vsli:raw="A collection of fieldnames.">Eine Sammlung von Feldnamen.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">Gibt an, ob ein Cache weder einen beliebigen Teil der HTTP-Anforderungsnachricht noch eine beliebige Antwort speichern darf.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Wenn ein Cache keinen Teil der HTTP-Anforderungs Nachricht oder einer Antwort speichern darf, andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">Gibt an, ob ein Cache oder Proxy einen Aspekt des Entitätstexts ändern darf.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Cache oder Proxy keinen Aspekt des Entitätstexts ändern darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">Gibt an, ob ein Cache mit einem zwischengespeicherten Eintrag antworten soll, der mit den anderen Einschränkungen der HTTP-Anforderung konsistent ist, oder mit dem Status „504“ (Gatewaytimeout).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Cache mit einem zwischengespeicherten Eintrag, der mit den anderen Einschränkungen der HTTP-Anforderung konsistent ist, oder mit dem Status „504“ (Gatewaytimeout) antworten soll. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">Ob die gesamte HTTP-Antwortnachricht oder nur ein Teil davon für einen einzelnen Benutzer vorgesehen ist, und ob sie nicht von einem gemeinsam genutzten Cache zwischengespeichert werden darf.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die HTTP-Antwortnachricht für einen einzelnen Benutzer vorgesehen ist und nicht von einem gemeinsam genutzten Cache zwischengespeichert werden darf; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">Eine Sammlung von Feldnamen in der „Private“-Richtlinie in einem Cache-Control-Header-Feld auf einer HTTP-Antwort.</summary>
      <returns vsli:raw="A collection of fieldnames.">Eine Sammlung von Feldnamen.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">Gibt an, ob der Ausgangsserver für gemeinsam genutzte Benutzeragentcaches die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Ausgangsserver für gemeinsam genutzte Benutzeragentcaches die erneute Überprüfung eines Cacheeintrags für jede nachfolgende Verwendung erfordert, wenn der Cacheeintrag veraltet ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">Ob eine HTTP-Antwort auch dann in einem beliebigen Cache zwischengespeichert werden darf, wenn sie normalerweise nicht bzw. nur in einem nicht freigegebenen Cache zwischengespeichert werden darf.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die HTTP-Antwort auch dann in einem beliebigen Cache zwischengespeichert werden darf, wenn sie normalerweise nicht bzw. nur in einem nicht freigegebenen Cache zwischengespeichert werden darf; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">Das in Sekunden angegebene, Höchstalter für freigegebene Caches in einer HTTP-Antwort, das die max-age-Direktive in einem cache-control-Header oder einem Expires-Header für einen freigegebenen Cache überschreibt.</summary>
      <returns vsli:raw="The time in seconds.">Die Zeit in Sekunden.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">Stellt den Wert des Content-Disposition-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Klasse.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">Ein <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Klasse.</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">Eine Zeichenfolge, die eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> enthält.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">Eine Zeichenfolge, die Headerwertinformationen für die Inhaltsanordnung darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Inhaltsanordnung.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">Das Datum der Dateierstellung.</summary>
      <returns vsli:raw="The file creation date.">Das Dateierstellungsdatum.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">Der Dispositionstyp für einen Inhaltsteil.</summary>
      <returns vsli:raw="The disposition type.">Der Dispositionstyp.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">Eine Empfehlung zum Erstellen eines Dateinamens zum Speichern der Nachrichtennutzlast, der verwendet werden soll, wenn die Entität getrennt und in einer separaten Datei gespeichert wird.</summary>
      <returns vsli:raw="A suggested filename.">Ein vorgeschlagener Name.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">Eine Empfehlung zum Erstellen der Dateinamen zum Speichern von Nachrichtennutzlasten, die verwendet werden sollen, wenn die Entitäten getrennt und in separaten Dateien gespeichert werden.</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">Ein vorgeschlagener Dateiname des Formulars „filename*“.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">Das Datum der letzten Dateiänderung.</summary>
      <returns vsli:raw="The file modification date.">Das Datum der Dateiänderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">Der Name für einen Inhaltsteil.</summary>
      <returns vsli:raw="The name for the content body part.">Der Name für den Inhaltsteil.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">Ein Satz Parameter enthielt den Content-Disposition-Header.</summary>
      <returns vsli:raw="A collection of parameters.">Eine Auflistung von Parametern.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">Letztes Lesedatum der Datei.</summary>
      <returns vsli:raw="The last read date.">Das letzte Lesedatum.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">Die ungefähre Größe der Datei in Bytes.</summary>
      <returns vsli:raw="The approximate size, in bytes.">Die ungefähre Größe in Bytes.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">Stellt den Wert des Content-Range-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Der Start- oder Endpunkt des Bereichs in Bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Die Position in Bytes, an der das Senden von Daten beendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Klasse.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Die Position in Bytes, an der das Senden von Daten beendet werden soll.</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Der Start- oder Endpunkt des Bereichs in Bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">Eine Zeichenfolge, die Headerwertinformationen für Inhaltsbereiche darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für Inhaltsbereiche.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Ruft die Position ab, an der mit dem Senden von Daten begonnen werden soll.</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">Die Position in Bytes, an der mit dem Senden von Daten begonnen werden soll.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">Ruft ab, ob für den Inhaltsbereichsheader eine Länge angegeben ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn für den Inhaltsbereichsheader eine Länge angegeben ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">Ruft ab, ob für den Inhaltsbereich ein Bereich angegeben ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn für den Inhaltsbereich ein Bereich angegeben ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">Ruft die Länge des vollständigen Entitätskörpers ab.</summary>
      <returns vsli:raw="The length of the full entity-body.">Die Länge des vollständigen Entitätskörpers.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Ruft die Position ab, an der das Senden von Daten beendet werden soll.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Die Position, an der das Senden von Daten beendet werden soll.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">Die verwendeten Bereichseinheiten.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">Eine <see cref="T:System.String" />, die Bereichseinheiten enthält.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">Stellt einen Entitätstag-Headerwert dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse.</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Eine Zeichenfolge, die <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> enthält.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse.</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Eine Zeichenfolge, die eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Klasse enthält.</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">Ein Wert, der angibt, ob dieser Entitätstagheader ein schwaches Validierungssteuerelement ist. Wenn der Entitätstagheader ein schwaches Validierungssteuerelement ist, sollte <paramref name="isWeak" /> auf <see langword="true" /> festgelegt werden. Wenn der Entitätstagheader ein starkes Validierungssteuerelement ist, sollte <paramref name="isWeak" /> auf <see langword="false" /> festgelegt werden.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">Eine Zeichenfolge, die Entitätstag-Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> ist keine gültige Entitätstag-Headerwertinformation.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">Ruft den Entitätstagheaderwert ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Gibt <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">Ruft ab, ob dem Entitätstag ein Schwächenindikator vorangestellt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dem Entitätstag ein Schwächenindikator vorangestellt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">Ruft die undurchsichtige Zeichenfolge in Anführungszeichen ab.</summary>
      <returns vsli:raw="An opaque quoted string.">Eine undurchsichtige Zeichenfolge in Anführungszeichen.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">Stellt die Auflistung der Inhaltsheader (gemäß Definition in RFC 2616) dar.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Allow" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">Der Wert des <see langword="Allow" />-Headers in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Disposition" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Disposition" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Encoding" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Encoding" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Language" />-Inhaltsheaders in einer HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Language" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Length" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Length" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Location" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Location" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-MD5" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-MD5" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Range" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Range" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Content-Type" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Content-Type" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Expires" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Expires" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Ruft den Wert des <see langword="Last-Modified" />-Inhaltsheaders in einer HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Der Wert des <see langword="Last-Modified" />-Inhaltsheaders in einer HTTP-Antwort.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">Eine Auflistung von Headern und deren Werten (gemäß Definition in RFC 2616).</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Fügt den angegebenen Header und seine Werte in die <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung hinzu.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">Eine Liste von Headerwerten, die der Sammlung hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">Der Name darf nicht NULL oder leer sein.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">Die Werte dürfen nicht NULL oder leer sein.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Falsch verwendeter Headername. Stellen Sie sicher, dass Anforderungsheader mit HttpRequestMessage-, Antwortheader mit HttpResponseMessage- und Inhaltsheader mit HttpContent-Objekten verwendet werden.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">Das Namensformat des Headers ist ungültig.

- oder -

Auf ein Neue-Zeile-Zeichen in Headerwerten muss ein Leerzeichen folgen.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Fügt den angegebenen Header und den Wert in die <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung hinzu.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="value" vsli:raw="The content of the header.">Der Inhalt des Headers.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">Der Name darf nicht NULL oder leer sein.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Falsch verwendeter Headername. Stellen Sie sicher, dass Anforderungsheader mit HttpRequestMessage-, Antwortheader mit HttpResponseMessage- und Inhaltsheader mit HttpContent-Objekten verwendet werden.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">Das Namensformat des Headers ist ungültig.

- oder -

Auf ein Neue-Zeile-Zeichen in Headerwerten muss ein Leerzeichen folgen.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Entfernt alle Header aus der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Auflistung.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Gibt Informationen dazu zurück, ob ein bestimmter Header in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung vorhanden ist.</summary>
      <param name="name" vsli:raw="The specific header.">Der angegebene Header.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene Header in der Sammlung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Instanz durchlaufen kann.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Ein Enumerator für <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Gibt alle Headerwerte für einen angegebenen Header zurück, der in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung gespeichert ist.</summary>
      <param name="name" vsli:raw="The specified header to return values for.">Der angegebene Header, für den Werte zurückgegeben werden sollen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">Der Header wurde nicht gefunden.</exception>
      <returns vsli:raw="An array of header strings.">Ein Array von Headerzeichenfolgen.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Entfernt den angegebenen Header aus der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Auflistung.</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">Der Name des Headers, der aus der Auflistung entfernt werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Gibt <see cref="T:System.Boolean" />zurück.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Ruft einen Enumerator ab, der eine <see cref="T:System.Net.Http.Headers.HttpHeaders" /> durchlaufen kann.</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Eine Instanz einer Implementierung einer <see cref="T:System.Collections.IEnumerator" />, die eine <see cref="T:System.Net.Http.Headers.HttpHeaders" /> durchlaufen kann.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Gibt einen Wert zurück, der anzeigt, ob der angegebene Header und seine Werte der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung ohne Überprüfung der bereitgestellten Informationen hinzugefügt wurden.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="values" vsli:raw="The values of the header.">Die Werte des Headers.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="name" /> und <paramref name="values" /> des angegebenen Headers der Sammlung hinzugefügt werden konnten; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Gibt einen Wert zurück, der anzeigt, ob der angegebene Header und sein Wert der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung ohne Überprüfung der bereitgestellten Informationen hinzugefügt wurden.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Der Header, der der Auflistung hinzugefügt werden soll.</param>
      <param name="value" vsli:raw="The content of the header.">Der Inhalt des Headers.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="name" /> und <paramref name="value" /> des angegebenen Headers der Sammlung hinzugefügt werden konnten; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Zurückgeben, wenn ein angegebener Header und angegebene Werte in der <see cref="T:System.Net.Http.Headers.HttpHeaders" />-Sammlung gespeichert sind.</summary>
      <param name="name" vsli:raw="The specified header.">Der angegebene Header.</param>
      <param name="values" vsli:raw="The specified header values.">Die angegebenen Headerwerte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="name" /> und <see langword="values" /> des angegebenen Headers in der Sammlung gespeichert sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">Stellt eine Auflistung von Headerwerten dar.</summary>
      <typeparam name="T" vsli:raw="The header collection type.">Der Headerauflistungs-Typ.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Fügt der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> einen Eintrag hinzu.</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">Das Element, das der Headerauflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Entfernt alle Einträge aus dem <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">Bestimmt, ob die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ein Element enthält.</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">Das Element, das in der Sammlung gesucht werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Eintrag in der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz enthalten ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Kopiert die gesamte <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> durchläuft.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Ein Enumerator für die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Analysiert und fügt einen Eintrag <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> hinzu.</summary>
      <param name="input" vsli:raw="The entry to add.">Der hinzuzufügende Eintrag</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Entfernt das angegebene Element aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to remove.">Das zu entfernende Element.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="item" /> aus der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz entfernt wurde; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Gibt einen Enumerator zurück, der die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> durchläuft.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Ein Enumerator für die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Objekt darstellt. -Objekts.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Bestimmt, ob die Eingabe analysiert und der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> hinzugefügt werden kann.</summary>
      <param name="input" vsli:raw="The entry to validate.">Der zu überprüfende Eintrag.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <paramref name="input" /> analysiert und der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz hinzugefügt werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Ruft die Anzahl der Header in der <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> ab.</summary>
      <returns vsli:raw="The number of headers in a collection.">Die Anzahl der Header in einer Sammlung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />-Instanz schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">Stellt die Auflistung der Anforderungsheader (gemäß Definition in RFC 2616) dar.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Accept" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Accept" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Accept-Charset" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Accept-Charset" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Accept-Encoding" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Accept-Encoding" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Accept-Language" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Accept-Language" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Authorization" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Authorization" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Connection" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Connection" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">Ruft einen Wert ab, der angibt, ob der <see langword="Connection" />-Header für eine HTTP-Anforderung „Close“ enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see langword="Connection" />-Header „Close“ enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Date" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Date" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Expect" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Expect" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">Ruft einen Wert ab, der angibt, ob der <see langword="Expect" />-Header für eine HTTP-Anforderung „Continue“ enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see langword="Expect" />-Header „Continue“ enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="From" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="From" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Host" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Host" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-Match" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Gibt <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />zurück.  
  
Der Wert des <see langword="If-Match" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-Modified-Since" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="If-Modified-Since" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-None-Match" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-None-Match" />-Headers für eine HTTP-Anforderung ab.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-Range" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="If-Range" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="If-Unmodified-Since" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="If-Unmodified-Since" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Max-Forwards" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Max-Forwards" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Pragma" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Pragma" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Proxy-Authorization" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Proxy-Authorization" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Range" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Range" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Referer" />-Headers für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Referer" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="TE" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="TE" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Trailer" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Trailer" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">Ruft einen Wert ab, der angibt, ob der <see langword="Transfer-Encoding" />-Header für eine HTTP-Anforderung Datensegmente enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see langword="Transfer-Encoding" />-Header Datensegmente enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Upgrade" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Upgrade" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="User-Agent" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="User-Agent" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Via" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Via" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">Ruft den Wert des <see langword="Warning" />-Headers für eine HTTP-Anforderung ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">Der Wert des <see langword="Warning" />-Headers für eine HTTP-Anforderung.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">Stellt die Auflistung der Antwortheader (gemäß Definition in RFC 2616) dar.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Accept-Ranges" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Accept-Ranges" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Age" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Age" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Cache-Control" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Connection" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Connection" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">Ruft einen Wert ab, der angibt, ob der <see langword="Connection" />-Header für eine HTTP-Anforderung „Close“ enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see langword="Connection" />-Header „Close“ enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Date" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Date" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="ETag" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="ETag" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Location" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Location" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Pragma" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Gibt <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />zurück.  
  
Der Wert des <see langword="Pragma" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Proxy-Authenticate" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Proxy-Authenticate" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Retry-After" />-Headers für eine HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Retry-After" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Server" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Server" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Trailer" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Trailer" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Transfer-Encoding" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">Ruft einen Wert ab, der angibt, ob der <see langword="Transfer-Encoding" />-Header für eine HTTP-Anforderung Datensegmente enthält, oder legt ihn fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der <see langword="Transfer-Encoding" />-Header Datensegmente enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Upgrade" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Upgrade" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Vary" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Vary" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Via" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Via" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="Warning" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="Warning" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Ruft den Wert des <see langword="WWW-Authenticate" />-Headers für eine HTTP-Antwort ab.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Der Wert des <see langword="WWW-Authenticate" />-Headers für eine HTTP-Antwort.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">Stellt einen Medientyp dar, der in einem Inhaltstypheader verwendet wird, wie im RFC 2616 definiert.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Klasse.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Klasse.</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">Die Quelle, die als Zeichenfolge dargestellt wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">Eine Zeichenfolge, die Medientyp-Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> ist keine gültige Medientyp-Headerwertinformation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">Ruft den Zeichensatz ab oder legt diesen fest.</summary>
      <returns vsli:raw="The character set.">Der Zeichensatz.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">Ruft den Medientyp-Headerwert ab oder legt ihn fest.</summary>
      <returns vsli:raw="The media-type header value.">Der Medientyp-Headerwert.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">Ruft die Medientyp-Headerwert-Parameter ab bzw. legt sie fest.</summary>
      <returns vsli:raw="The media-type header value parameters.">Die Medientyp-Headerwert-Parameter.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">Stellt einen Medientyp mit einem zusätzlichen Qualitätsfaktor dar, der in einem Inhaltstypheader verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Klasse.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> dargestellt als Zeichenfolge, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Klasse.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">
        <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> dargestellt als Zeichenfolge, um die neue Instanz zu initialisieren.</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">Die Qualität dieses zugeordneten Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">Eine Zeichenfolge, die den Medientyp mit Qualitätsheaderwert-Informationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" /> ist kein gültiger Medientyp mit Qualitätsheaderwert-Informationen.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">Ruft den Qualitätswert für den <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> ab oder legt ihn fest.</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">Der Qualitätswert für das <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">Stellt ein Name-Wert-Paar dar, das in verschiedenen Headern verwendet wird, die in RFC 2616 definiert sind.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The header name.">Der Headername.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The header name.">Der Headername.</param>
      <param name="value" vsli:raw="The header value.">Der Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">Eine Zeichenfolge, die Namenswert-Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> ist keine gültige Namenswert-Headerwertinformation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">Ruft den Headernamen ab.</summary>
      <returns vsli:raw="The header name.">Der Headername.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">Ruft den Headerwert ab.</summary>
      <returns vsli:raw="The header value.">Der Headerwert.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">Stellt ein Name-Wert-Paar mit Parametern dar, das in verschiedenen Headern verwendet wird, wie in RFC 2616 definiert.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The header name.">Der Headername.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The header name.">Der Headername.</param>
      <param name="value" vsli:raw="The header value.">Der Headerwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">Eine Zeichenfolge, die den Namenswert mit Parameterheaderwert-Informationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> ist kein gültiger Namenswert mit Parameterheaderwert-Informationen.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Ruft die Parameter aus dem <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="A collection containing the parameters.">Eine Sammlung, die die Parameter enthält.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">Stellt einen Produkttokenwert in einem User-Agent-Header dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The product name.">Der Produktname.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Klasse.</summary>
      <param name="name" vsli:raw="The product name value.">Der Produktnamenswert.</param>
      <param name="version" vsli:raw="The product version value.">Die Produktversionswert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">Eine Zeichenfolge, die Produkt-Headerwertinformationen darstellt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">Ruft den Namen des Produkttokens ab.</summary>
      <returns vsli:raw="The name of the product token.">Den Name des Produkttokens.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">Ruft die Version des Produkttokens ab.</summary>
      <returns vsli:raw="The version of the product token.">Die Version des Produkttokens.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">Stellt einen Wert dar, der entweder ein Produkt oder ein Kommentar in einem Benutzer-Agent-Header sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="comment" vsli:raw="A comment value.">Ein Kommentarwert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Klasse.</summary>
      <param name="productName" vsli:raw="The product name value.">Der Produktnamenswert.</param>
      <param name="productVersion" vsli:raw="The product version value.">Die Produktversionswert.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">Eine Zeichenfolge, die Produktinfo- Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> ist keine gültige Produktinfo- Headerwertinformation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Ruft den Kommentar aus dem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">Der Kommentarwert ist <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Ruft das Produkt aus dem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">Der Produktwert aus diesem <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">Stellt einen If-Range-Headerwert dar, der entweder ein Datum/Uhrzeit- oder ein Entitätstag-Wert sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">Ein Datumswert für die Initialisierung der neuen -Instanz.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Klasse.</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">Ein Entitätstag, dargestellt als Zeichenfolge, der verwendet wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">Eine Zeichenfolge, die Bereichsbedingungs-Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" /> ist keine gültige Bereichsbedingungs-Headerwertinformation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Ruft das Datum aus dem <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Das Datum aus dem <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Ruft das Entitätstag vom <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Das Entitätstag vom <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">Stellt einen Bereichsheaderwert des Bytebereichs dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Klasse mit einem Bytebereich.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">Eine Zeichenfolge, die Bereichsheaderwert-Informationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> ist keine gültige Bereichsheaderwert-Information.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="he string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Ruft die vom <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt angegebenen Bereiche ab.</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Die Bereiche vom <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Ruft die Einheit aus dem <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Die Einheit aus dem <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">Stellt einen Bereichsheaderwert des Bytebereichs dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Klasse.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Ruft die Position ab, an der mit dem Senden von Daten begonnen werden soll.</summary>
      <returns vsli:raw="The position at which to start sending data.">Die Position, an der mit dem Senden von Daten begonnen werden soll.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Ruft die Position ab, an der das Senden von Daten beendet werden soll.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Die Position, an der das Senden von Daten beendet werden soll.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">Stellt einen Retry-After-Headerwert dar, der entweder ein Datum/Uhrzeit- oder ein Zeitspannen-Wert sein kann.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Klasse.</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">Der Datum und Zeit Offset, der zum Initialisieren der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Klasse.</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">Das Delta, in Sekunden, das verwendet wird, um die neue Instanz zu initialisieren.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">Eine Zeichenfolge, die Wiederholungsbedingungs-Headerwertinformationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> ist keine gültige Wiederholungsbedingungs-Headerwertinformation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Ruft den Offset für Datum und Uhrzeit aus dem <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Der Offset für Datum und Uhrzeit aus dem <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Ruft die Differenz in Sekunden aus dem <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Die Differenz in Sekunden aus dem <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">Stellt einen Zeichenfolgen-Headerwert mit einer optionalen Qualität dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">Ein Qualitätsfaktor für die Initialisierung der neuen -Instanz.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">Eine Zeichenfolge, die Qualitätsheaderwert-Informationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> ist keine gültige Zeichenfolge mit Qualitätsheaderwert-Informationen.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Ruft den Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Der Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Ruft den Zeichenfolgenwert aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt ab.</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Der Zeichenfolgenwert aus dem <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />-Objekt.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">Stellt einen Headerwert zum Akzeptieren von Codierung dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Klasse.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">Ein <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> Objekt, das zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Klasse.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene Objekt und das aktuelle <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">Eine Zeichenfolge, die Headerwertinformationen für die Übertragungscodierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Übertragungscodierung.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">Ruft die Übertragungscodierungsparameter ab.</summary>
      <returns vsli:raw="The transfer-coding parameters.">Die Übertragungscodierungsparameter.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">Ruft den Übertragungscodierungswert ab.</summary>
      <returns vsli:raw="The transfer-coding value.">Der Wert der Übertragungscodierung.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">Stellt einen Accept-Encoding-Headerwert mit optionalem Qualitätsfaktor dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Klasse.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Eine Zeichenfolge, die zur Initialisierung der neuen Instanz verwendet wird.</param>
      <param name="quality" vsli:raw="A value for the quality factor.">Ein Wert für den Qualitätsfaktor.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">Eine Zeichenfolge, die Informationen für die Übertragungscodierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Übertragungscodierung mit hoher Qualität.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Ruft den Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> ab.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Der Qualitätsfaktor aus dem <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">Stellt den Wert eines Via-Headers dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">Der Protokollname des empfangenen Protokolls.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Klasse.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">Die Protokollversion des empfangenen Protokolls.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">Der Protokollname des empfangenen Protokolls.</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Das Kommentarfeld, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">Eine Zeichenfolge, die ViaHeaderValue-Informationen darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> ist keine gültige ViaHeaderValue-Information.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Eine <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="A copy of the current instance.">Eine Kopie der aktuellen Instanz.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">Ruft das Kommentarfeld ab, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Das Kommentarfeld, das zum Identifizieren der Software des Empfängerproxys oder -gateway verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">Ruft den Protokollnamen des empfangenen Protokolls ab.</summary>
      <returns vsli:raw="The protocol name.">Der Protokollname.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">Ruft die Protokollversion des empfangenen Protokolls ab.</summary>
      <returns vsli:raw="The protocol version.">Die Protokollversion.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">Ruft den Host und den Port ab, von dem die Anforderung oder Antwort empfangen wurde.</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">Der Host und der Port, von dem die Anforderung oder Antwort empfangen wurde.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">Stellt einen Warnungswert des Warnungsheaders dar.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Klasse.</summary>
      <param name="code" vsli:raw="The specific warning code.">Der spezielle Warnungscode.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">Der Host, der die Warnung angefügt hat.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Klasse.</summary>
      <param name="code" vsli:raw="The specific warning code.">Der spezielle Warnungscode.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">Der Host, der die Warnung angefügt hat.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">Der Datums-/Zeitstempel der Warnung .</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Objekt gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene <see cref="T:System.Object" /> gleich dem aktuellen Objekt ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Dient als Hashfunktion für ein <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Objekt.</summary>
      <returns vsli:raw="A hash code for the current object.">Ein Hashcode für das aktuelle Objekt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Konvertiert eine Zeichenfolge in eine <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Eine Zeichenfolge, die Headerwertinformationen für die Authentifizierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> ist ein <see langword="null" />-Verweis.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> ist keine gültige Headerwertinformation für die Authentifizierung.</exception>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Gibt eine <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz zurück.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Erstellt ein neues Objekt, das eine Kopie der aktuellen <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Instanz ist.</summary>
      <returns vsli:raw="Returns a copy of the current instance.">Gibt eine Kopie der aktuellen Instanz zurück.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Objekt darstellt.</summary>
      <returns vsli:raw="A string that represents the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">Bestimmt, ob eine Zeichenfolge eine gültige <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Information ist.</summary>
      <param name="input" vsli:raw="The string to validate.">Die zu überprüfende Zeichenfolge.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">Die <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Version der Zeichenfolge.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="input" /> eine gültige <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />-Information ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">Ruft den Host ab, der die Warnung angefügt hat.</summary>
      <returns vsli:raw="The host that attached the warning.">Der Host, der die Warnung angefügt hat.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">Ruft den speziellen Warnungscode ab.</summary>
      <returns vsli:raw="The specific warning code.">Der spezielle Warnungscode.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">Ruft den Datums-/Zeitstempel der Warnung ab.</summary>
      <returns vsli:raw="The date/time stamp of the warning.">Der Datums-/Zeitstempel der Warnung .</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">Ruft eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext ab.</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">Eine in Anführungszeichen eingeschlossene Zeichenfolge mit dem Warnungstext.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">Stellt eine Basisklasse zum Senden von HTTP-Anforderungen und Empfangen von HTTP-Antworten aus einer Ressource bereit, die von einem URI identifiziert wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mithilfe eines <see cref="T:System.Net.Http.HttpClientHandler" />-Objekts, das bei Freigabe dieser Instanz freigegeben wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mit dem angegebenen Handler. Der Handler wird freigegeben, wenn diese Instanz freigegeben wird.</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">Der HTTP-Handlerstapel, der zum Senden von Anforderungen zu verwenden ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpClient" />-Klasse mit dem bereitgestellten Handler und gibt an, ob dieser Handler freigegeben werden soll, wenn diese Instanz freigegeben wird.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">
        <see langword="true" />, wenn der innere Handler durch HttpClient.Dispose freigegeben werden soll; <see langword="false" />, wenn Sie beabsichtigen, den inneren Handler wiederzuverwenden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">Alle ausstehenden Anforderungen für diese Instanz abbrechen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Eine DELETE-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.

- oder -

Der <paramref name="requestUri" /> ist kein absoluter URI.

- oder -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> wird nicht festgelegt.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Eine DELETE-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.

- oder -

Der <paramref name="requestUri" /> ist kein absoluter URI.

- oder -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> wird nicht festgelegt.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Eine DELETE-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.

- oder -

Der <paramref name="requestUri" /> ist kein absoluter URI.

- oder -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> wird nicht festgelegt.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Eine DELETE-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.

- oder -

Der <paramref name="requestUri" /> ist kein absoluter URI.

- oder -

<see cref="P:System.Net.Http.HttpClient.BaseAddress" /> wird nicht festgelegt.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpClient" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption und einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Eine GET-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Eine GET-Anforderung an den angegebenen URI mit einer HTTP-Abschlussoption und einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Ein HTTP-Abschlussoptions-Wert, der angibt, wann die Operation als abgeschlossen betrachtet werden soll.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Eine GET-Anforderung für den angegebenen URI mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Sendet eine GET-Anforderung an den angegebenen URI und gibt den Antworttext in einem asynchronen Vorgang als Bytearray zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Sendet eine GET-Anforderung an den angegebenen URI und gibt den Antworttext in einem asynchronen Vorgang als Bytearray zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Bytearray in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Bytearray in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Datenstrom in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Senden Sie eine GET-Anforderung an den angegebenen URI und geben Sie den Antworttext als Zeichenfolge in einem asynchronen Vorgang zurück.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats (oder Timeout – nur .NET Framework) nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">Sendet eine PATCH-Anforderung an einen Uri, der als eine Zeichenfolge als asynchroner Vorgang festgelegt ist.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">Sendet eine PATCH-Anforderung mit einem Abbruchtoken an einen URI, dargestellt als Zeichenfolge als asynchroner Vorgang.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">Sendet eine PATCH-Anforderung als asynchronen Vorgang.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">Sendet eine PATCH-Anforderung mit einem Abbruchtoken als einen asynchronen Vorgang.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Eine POST-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Eine POST-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Eine POST-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Eine POST-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Eine PUT-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Eine PUT-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Eine PUT-Anforderung an den angegebenen URI als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Eine PUT-Anforderung mit einem Abbruchtoken als asynchronen Vorgang senden.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">Der URI, an den die Anforderung gesendet wird.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Der Inhalt der HTTP-Anforderung, die an den Server gesendet wird.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;requestUri&quot; /&gt; must be an absolute URI or &lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; must be set.">Der <paramref name="requestUri" /> muss ein absoluter URI sein, oder <see cref="P:System.Net.Http.HttpClient.BaseAddress" /> muss festgelegt werden.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Sends an HTTP request with the specified request.">Sendet eine HTTP-Anforderung mit der angegebenen Anforderung.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA;The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Die HTTP-Version ist 2.0 oder höher, oder die Versionsrichtlinie ist auf <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> festgelegt.

- oder -

Die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitete benutzerdefinierte Klasse überschreibt die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht.

- oder -

Die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode wird vom benutzerdefinierten <see cref="T:System.Net.Http.HttpMessageHandler" /> nicht überschrieben.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler oder Überprüfung des Serverzertifikats nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Wenn die <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Ausnahme die <see cref="T:System.TimeoutException" />schachtelt: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="An HTTP response message.">Eine HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Sends an HTTP request.">Sendet eine HTTP-Anforderung.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">Einer der Enumerationswerte, der angibt, wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des Inhalts der Antwort).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Die HTTP-Version ist 2.0 oder höher, oder die Versionsrichtlinie ist auf <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> festgelegt.

- oder -

Die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitete benutzerdefinierte Klasse überschreibt die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht.

- oder -

Die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode wird vom benutzerdefinierten <see cref="T:System.Net.Http.HttpMessageHandler" /> nicht überschrieben.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler oder Überprüfung des Serverzertifikats nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Wenn die <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Ausnahme die <see cref="T:System.TimeoutException" />schachtelt: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request, completion option and cancellation token.">Sendet eine HTTP-Anforderung mit der angegebenen Anforderung, der Abschlussoption und einem Abbruchtoken.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption" vsli:raw="One of the enumeration values that specifies when the operation should complete (as soon as a response is available or after reading the response content).">Einer der Enumerationswerte, der angibt, wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des Inhalts der Antwort).</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">Das Token zum Abbrechen des Vorgangs.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Die HTTP-Version ist 2.0 oder höher, oder die Versionsrichtlinie ist auf <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> festgelegt.

- oder -

Die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitete benutzerdefinierte Klasse überschreibt die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht.

- oder -

Die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode wird vom benutzerdefinierten <see cref="T:System.Net.Http.HttpMessageHandler" /> nicht überschrieben.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler oder Überprüfung des Serverzertifikats nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Die Anforderung wurde abgebrochen.

- oder -

Wenn die <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Ausnahme die <see cref="T:System.TimeoutException" />schachtelt: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">Sendet eine HTTP-Anforderung mit der angegebenen Anforderung und einem Abbruchtoken.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The token to cancel the operation.">Das Token zum Abbrechen des Vorgangs.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The HTTP version is 2.0 or higher or the version policy is set to &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA;The custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; does not override the &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Die HTTP-Version ist 2.0 oder höher, oder die Versionsrichtlinie ist auf <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> festgelegt.

- oder -

Die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitete benutzerdefinierte Klasse überschreibt die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht.

- oder -

Die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode wird vom benutzerdefinierten <see cref="T:System.Net.Http.HttpMessageHandler" /> nicht überschrieben.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, or server certificate validation.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler oder Überprüfung des Serverzertifikats nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Die Anforderung wurde abgebrochen.

- oder -

Wenn die <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Ausnahme die <see cref="T:System.TimeoutException" />schachtelt: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des gesamten Inhalts der Antwort).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Wann der Vorgang abgeschlossen werden sollte (sobald eine Antwort verfügbar ist, oder nach dem Lesen des gesamten Inhalts der Antwort).</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Anforderungsnachricht wurde bereits von der <see cref="T:System.Net.Http.HttpClient" />-Instanz gesendet.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Die Anforderung konnte wg. eines zugrunde liegenden Problems wie Netzwerkkonnektivität, DNS-Fehler, Überprüfung des Serverzertifikats oder Timeout nicht durchgeführt werden.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw=".NET Core and .NET 5 and later only: The request failed due to timeout.">Nur .NET Core und .NET 5.0: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">Ruft die Basisadresse des URI (Uniform Resource Identifier) der Internetressource ab, die verwendet wird, wenn Anforderungen gesendet werden, oder legt diese fest.</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">Die Basisadresse des URI (Uniform Resource Identifier) der Internetressource, die verwendet wird, wenn Anforderungen gesendet werden.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">Ruft den globalen HTTP-Proxy ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">Der übergebene Wert kann nicht <see langword="null" /> sein.</exception>
      <returns vsli:raw="A proxy used by every HTTP request.">Ein Proxy, der von jedem-Rückruf verwendet wird, der einen instanziiert <see cref="T:System.Net.HttpWebRequest" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">Ruft die Header ab, die mit jeder Anforderung gesendet werden sollen.</summary>
      <returns vsli:raw="The headers which should be sent with each request.">Die Header, die mit jeder Anforderung gesendet werden sollen.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Ruft die HTTP-Standardversion ab, die für nachfolgende Anforderungen dieser <see cref="T:System.Net.Http.HttpClient" />-Klasse verwendet wird, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="DefaultRequestVersion" /> ist in einem Mengenvorgang <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">Die <see cref="T:System.Net.Http.HttpClient" />-Klasse hat bereits eine oder mehrere Anforderungen gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">Die <see cref="T:System.Net.Http.HttpClient" />-Klasse wurde bereits verworfen.</exception>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Die Standardversion, die für alle Anforderungen verwendet werden soll, die mit dieser Instanz vorgenommen wurden <see cref="T:System.Net.Http.HttpClient" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultVersionPolicy">
      <summary vsli:raw="Gets or sets the default version policy for implicitly created requests in convenience methods, for example, &lt;see cref=&quot;M:System.Net.Http.HttpClient.GetAsync(System.String)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)&quot; /&gt;.">Ruft die Standardversionsrichtlinie für implizit erstellte Anforderungen in Hilfsmethoden (z. B. <see cref="M:System.Net.Http.HttpClient.GetAsync(System.String)" /> und <see cref="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />) ab oder legt sie fest.</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">Die httpversionpolicy, die beim Herstellen der HTTP-Verbindung verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">Ruft beim Lesen des Antwortinhalts die maximale Anzahl zwischenzuspeichernder Bytes ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">Die angegebene Größe ist kleiner oder gleich 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Es wurde bereits ein Vorgang für die aktuelle Instanz gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">Die aktuelle Instanz wurde verworfen.</exception>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">Die maximale Anzahl zu puffernder Bytes, wenn der Antwortinhalt gelesen wird. Der Standardwert für diese Eigenschaft ist 2 GB.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">Ruft die Zeitspanne ab, nach der das Zeitlimit der Anforderung überschritten ist, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Der angegebene Timeoutwert ist kleiner oder gleich 0 (null) und nicht <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Es wurde bereits ein Vorgang für die aktuelle Instanz gestartet.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">Die aktuelle Instanz wurde verworfen.</exception>
      <returns vsli:raw="The timespan to wait before the request times out.">Die Zeitspanne, nach der das Zeitlimit der Anforderung überschritten ist.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">Den Standardnachrichtenhandler, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Framework und .NET Core 2.0 und früheren Versionen verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">Erstellt eine Instanz einer <see cref="T:System.Net.Http.HttpClientHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpClientHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen.</summary>
      <param name="request" vsli:raw="The HTTP request message.">Die HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Für HTTP/2 und höher oder wenn das Anfordern des Versionsupgrades durch <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> aktiviert ist.

- oder - 

Bei Verwendung einer benutzerdefinierten Klasse, die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitet ist, wird die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht überschrieben.

- oder - 

Wenn der benutzerdefinierte <see cref="T:System.Net.Http.HttpMessageHandler" /> die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode nicht überschreibt.</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException" vsli:raw="The request was canceled.&#xA;&#xA; -or-&#xA;&#xA; If the &lt;see cref=&quot;T:System.Threading.Tasks.TaskCanceledException&quot; /&gt; exception nests the &lt;see cref=&quot;T:System.TimeoutException&quot; /&gt;:&#xA; The request failed due to timeout.">Die Anforderung wurde abgebrochen.

- oder - 

Wenn die <see cref="T:System.Threading.Tasks.TaskCanceledException" />-Ausnahme die <see cref="T:System.TimeoutException" />schachtelt: Die Anforderung konnte aufgrund eines Timeouts nicht ausgeführt werden.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen als nicht blockierender Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message.">Die HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">Ein Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> , wenn der Handler Umleitungs Antworten folgen soll. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">Die automatische Dekomprimierungsmethode, die der Handler verwendet.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">Ruft einen Wert ab, der angibt, ob das Zertifikat anhand der Sperrliste der Zertifizierungsstelle überprüft wird, oder legt diesen fest.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Zertifikatsperrliste überprüft wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Zertifikat automatisch aus dem Zertifikatspeicher ausgewählt wird oder ob der Aufrufer ein bestimmtes Clientzertifikat übergeben darf.</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">Die diesem Handler zugeordnete Auflistung von Sicherheitszertifikaten.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">Ruft die dieser Anforderungen an den Server zugeordnete Auflistung von Sicherheitszertifikaten ab.</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">Der X509CertificateCollection, der dem Server beim Ausführen der Zertifikat basierten Client Authentifizierung angezeigt wird.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">Ruft den zum Speichern von Servercookies vom Handler verwendeten Cookiecontainer ab oder legt diesen fest.</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">Der zum Speichern von Servercookies vom Handler verwendete Cookiecontainer.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Ruft einen zwischengespeicherten Delegaten ab, der immer <see langword="true" /> zurückgibt.</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Ein zwischengespeicherter Delegat, der immer <see langword="true" /> zurückgibt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die an den Standardproxyserver für die Authentifizierung übermittelt werden. Der Standardproxy wird nur verwendet, wenn <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> auf <see langword="true" /> und <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> auf <see langword="null" /> festgelegt ist.</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">Die Anmelde Informationen, die erforderlich sind, um eine Anforderung an den Standard Proxy Server zu authentifizieren.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">Ruft die maximale Anzahl von Umleitungen ab, denen der Handler folgt, oder legt diese fest.</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">Die maximale Anzahl von Umleitungsantworten, denen der Handler folgt. Der Standardwert ist 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">Ruft die maximal zulässige Anzahl gleichzeitiger Verbindungen (pro Serverendpunkt), wenn eine Anforderung mithilfe eines <see cref="T:System.Net.Http.HttpClient" />-Objekts durchgeführt wird, oder legt diese fest. Beachten Sie, dass der Grenzwert pro Serverendpunkt gilt. Ein Wert von 256 würde beispielsweise 256 gleichzeitige Verbindungen zu „http://www.adatum.com/“ und weitere 256 zu „http://www.adventure-works.com/“ ermöglichen.</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">Die maximale Anzahl gleichzeitiger Verbindungen (pro Server Endpunkt), die für ein-Objekt zulässig sind <see cref="T:System.Net.Http.HttpClient" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">Dient zum Abrufen oder Festlegen der maximalen Größe des Anforderungsinhaltspuffers, die vom Handler verwendet wird.</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">Der maximale Größe des Anforderungsinhaltspuffers in Bytes. Der Standardwert ist 2 GB.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest. Wenn der Wert beispielsweise 64 ist, sind 65536 Byte für die maximale Länge des Antwortheaders zulässig.</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">Die maximale Länge der Antwortheader in Kilobyte (1024 Bytes).</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um nach der Authentifizierung einen HTTP-Authorization-Header mit Anforderungen vom Handler zu senden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">Ruft ein beschreibares Wörterbuch (d.h. eine Zuordnung) von benutzerdefinierten Eigenschaften für die <see cref="T:System.Net.Http.HttpClient" />-Anforderungen ab. Das Wörterbuch ist zunächst leer. Sie können Schlüssel-Wert-Paare für benutzerdefinierte Handler und die spezielle Verarbeitung einfügen und abfragen.</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">ein beschreibbares Wörterbuch mit benutzerdefinierten Eigenschaften.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">Ruft vom Handler verwendete Proxyinformationen ab oder legt diese fest.</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Die vom Handler verwendeten Proxyinformationen. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">Ruft eine Rückrufmethode zur Überprüfung des Serverzertifikats ab oder legt diese fest.</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">Eine Rückrufmethode zur Überprüfung des Serverzertifikats.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">Ruft das TSL-/SSL-Protokoll ab, das von den <see cref="T:System.Net.Http.HttpClient" />-Objekten verwendet wird, die vom HttpClientHandler-Objekt verwaltet werden, oder legt dieses fest.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</exception>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">Einer der in der <see cref="T:System.Security.Authentication.SslProtocols" />-Enumeration definierten Werte.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">Ruft einen Wert ab, der angibt, ob der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">Ruft einen Wert ab, der angibt, ob der Handler Proxyeinstellungen unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Handler Proxyeinstellungen unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">Ruft einen Wert ab, der angibt, ob der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">Ruft einen Wert ab, der steuert, ob vom Handler mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">Ruft einen Wert ab, der angibt, ob der Handler einen Proxy für Anforderungen verwendet, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Handler einen Proxy für Anforderungen verwenden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">Gibt an, ob <see cref="T:System.Net.Http.HttpClient" />-Vorgänge als abgeschlossen betrachtet werden, sobald eine Antwort verfügbar ist, oder nachdem die gesamte Antwortnachricht einschließlich Inhalt gelesen wurde.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">Der Vorgang sollte beendet werden, nachdem er die gesamte Antwort einschließlich des Inhalts gelesen hat.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">Der Vorgang sollte beendet werden, sobald eine Antwort vorliegt und die Header gelesen wurden. Der Inhalts noch ist nicht bereit.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">Eine Basisklasse, die einen HTTP-Entitätstext und Inhaltsheader darstellt.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyTo(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content into a stream of bytes and copies it to &lt;paramref name=&quot;stream&quot; /&gt;.">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen zum Transport (z. B. zum Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;stream&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation." />
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Speicherdatenstrom als asynchroner Vorgang.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a memory stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Speicherdatenstrom als asynchroner Vorgang.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">Die maximale Größe des zu verwendenden Puffers in Bytes.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">Serialisiert den HTTP-Inhalt in ein Bytearray als asynchroner Vorgang.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">Serialisiert den HTTP-Inhalt in ein Bytearray als asynchroner Vorgang.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">Serialisiert den HTTP-Inhalt und gibt einen Datenstrom zurück, der den Inhalt darstellt.</summary>
      <returns vsli:raw="The stream that represents the HTTP content.">Der Datenstrom, der den HTTP-Inhalt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content and returns a stream that represents the content.">Serialisiert den HTTP-Inhalt und gibt einen Datenstrom zurück, der den Inhalt darstellt.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The stream that represents the HTTP content.">Der Datenstrom, der den HTTP-Inhalt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">Serialisieren des HTTP-Inhalts und Zurückgeben eines Datenstroms, der den Inhalt darstellt, als asynchroner Vorgang.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">Serialisieren des HTTP-Inhalts und Zurückgeben eines Datenstroms, der den Inhalt darstellt, als asynchroner Vorgang.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">Serialisiert den HTTP-Inhalt in eine Zeichenfolge als asynchroner Vorgang.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">Serialisiert den HTTP-Inhalt in eine Zeichenfolge als asynchroner Vorgang.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, serializes the HTTP content to a stream. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Serialisiert beim Überschreiben in einer abgeleiteten Klasse den HTTP-Inhalt in einen Datenstrom. Löst andernfalls eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen zum Transport (z. B. zum Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">Die Methode wird in der abgeleiteten Klasse nicht überschrieben.</exception>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">Bestimmt, ob der HTTP-Inhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">Die Länge des HTTP-Inhalts in Bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">Ruft die HTTP-Inhaltsheader gemäß Definition in RFC 2616 ab.</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">Die Inhaltsheader gemäß Definition in RFC 2616.</returns>
    </member>
    <member name="T:System.Net.Http.HttpKeepAlivePingPolicy">
      <summary vsli:raw="Specifies when the HTTP/2 ping frame is sent on an idle connection.">Gibt an, wann der HTTP/2-Pingrahmen bei einer Verbindung im Leerlauf gesendet wird.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.Always">
      <summary vsli:raw="Sends a keep alive ping for the whole lifetime of the connection.">Sendet einen Keep-Alive-Ping für die gesamte Lebensdauer der Verbindung.</summary>
    </member>
    <member name="F:System.Net.Http.HttpKeepAlivePingPolicy.WithActiveRequests">
      <summary vsli:raw="Sends a keep alive ping only when there are active streams on the connection.">Sendet einen Keep-Alive-Ping nur, wenn aktive Streams in der Verbindung vorhanden sind.</summary>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">Ein Basistyp für HTTP-Meldungshandler.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpMessageHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="When overridden in a derived class, sends an HTTP request with the specified request and cancellation token. Otherwise, throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Sendet eine HTTP-Anforderung mit der angegebenen Anforderung und einem Abbruchtoken, wenn eine Überschreibung in einer abgeleiteten Klasse erfolgt. Löst andernfalls eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method is not overridden in the derived class.">Die Methode wird in der abgeleiteten Klasse nicht überschrieben.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">Eine spezielle Klasse, die es Anwendungen ermöglicht, die <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode auf einer HTTP-Handlerkette aufzurufen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Initialisiert eine neue Instanz einer <see cref="T:System.Net.Http.HttpMessageInvoker" />-Klasse mit einem bestimmten <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Initialisiert eine neue Instanz einer <see cref="T:System.Net.Http.HttpMessageInvoker" />-Klasse mit einem bestimmten <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">Der <see cref="T:System.Net.Http.HttpMessageHandler" />, der für die Verarbeitung der HTTP-Antwortnachrichten verantwortlich ist.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">
        <see langword="true" />, wenn der innere Handler von Dispose() verworfen werden soll, <see langword="false" />, wenn Sie beabsichtigen, den inneren Handler wiederzuverwenden.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">Gibt die vom <see cref="T:System.Net.Http.HttpMessageInvoker" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpMessageInvoker" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request with the specified request and cancellation token.">Sendet eine HTTP-Anforderung mit der angegebenen Anforderung und einem Abbruchtoken.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="For HTTP/2 and higher or when requesting version upgrade is enabled by &lt;see cref=&quot;F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; If using custom class derived from &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; If using custom &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; not overriding &lt;see cref=&quot;M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method.">Für HTTP/2 und höher oder wenn das Anfordern des Versionsupgrades durch <see cref="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher" /> aktiviert ist.

- oder -

Bei Verwendung einer benutzerdefinierten Klasse, die von <see cref="T:System.Net.Http.HttpContent" /> abgeleitet ist, wird die <see cref="M:System.Net.Http.HttpContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)" />-Methode nicht überschrieben.

- oder -

Wenn der benutzerdefinierte <see cref="T:System.Net.Http.HttpMessageHandler" /> die <see cref="M:System.Net.Http.HttpMessageHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />-Methode nicht überschreibt.</exception>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Die zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">Eine Hilfsprogrammklasse für das Abrufen und das Vergleichen von Standard-HTTP-Methoden und zum Erstellen von neuen HTTP-Methoden.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpMethod" />-Klasse mit einem bestimmten HTTP-Methode.</summary>
      <param name="method" vsli:raw="The HTTP method.">Die HTTP-Methode.</param>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Net.Http.HttpMethod" /> und das aktuelle <see cref="T:System.Object" /> gleich sind.</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">Die HTTP-Methode, die mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Bestimmt, ob das angegebene <see cref="T:System.Object" /> und das aktuelle <see cref="T:System.Object" /> gleich sind.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">Fungiert für diesen Typ als eine Hashfunktion.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">Der Gleichheitsoperator zum Vergleichen zweier <see cref="T:System.Net.Http.HttpMethod" />-Objekte.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">Die linke <see cref="T:System.Net.Http.HttpMethod" /> für einen Ungleichheitsoperator.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">Die rechte <see cref="T:System.Net.Http.HttpMethod" /> für einen Ungleichheitsoperator.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der angegebene <paramref name="left" />-Parameter und der angegebene <paramref name="right" />-Parameter gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">Der Ungleichheitsoperator (=) zum Vergleichen von zwei <see cref="T:System.Net.Http.HttpMethod" />-Objekten.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">Die linke <see cref="T:System.Net.Http.HttpMethod" /> für einen Ungleichheitsoperator.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">Die rechte <see cref="T:System.Net.Http.HttpMethod" /> zu einem Ungleichheitsoperator.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die angegebenen Parameter <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns vsli:raw="A string representing the current object.">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">Stellt eine HTTP DELTE-Protokollmethode dar.</summary>
      <returns vsli:raw="The HTTP DELETE method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">Stellt eine HTTP GET-Protokollmethode dar.</summary>
      <returns vsli:raw="The HTTP GET method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">Stellt eine HTTP HEAD-Protokollmethode dar. Die HEAD-Methode ist mit der GET-Methode identisch, bis auf den Unterschied, dass der Server in der Antwort nur Meldungsheader und keinen Meldungstext zurückgibt.</summary>
      <returns vsli:raw="The HTTP HEAD method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">Eine HTTP-Methode.</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Eine als eine <see cref="T:System.String" /> dargestellte HTTP-Methode.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">Stellt eine HTTP OPTIONS-Protokollmethode dar.</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch">
      <summary vsli:raw="Gets the HTTP PATCH protocol method.">Ruft die http-patchprotokollmethode ab.</summary>
      <returns vsli:raw="The HTTP PATCH protocol method.">Die http Patch-Protokoll Methode.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">Stellt eine HTTP POST-Protokollmethode dar, die verwendet wird, um eine neue Entität als Zusatz zu einem URI zu senden.</summary>
      <returns vsli:raw="The HTTP POST method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">Stellt eine HTTP PUT-Protokollmethode dar, die verwendet wird, um eine durch einen URI bezeichnete Entität zu ersetzen.</summary>
      <returns vsli:raw="The HTTP PUT method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">Stellt eine HTTP TRACE-Protokollmethode dar.</summary>
      <returns vsli:raw="The HTTP TRACE method.">Gibt <see cref="T:System.Net.Http.HttpMethod" />zurück.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">Eine Basisklasse für Ausnahmen, die von den Klassen <see cref="T:System.Net.Http.HttpClient" /> und <see cref="T:System.Net.Http.HttpMessageHandler" /> ausgelöst werden.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse mit einer bestimmten Meldung, die die aktuelle Ausnahme beschreibt.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Eine Meldung, die die aktuelle Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestException" />-Klasse mit einer bestimmten Meldung, die die aktuelle Ausnahme beschreibt, und einer inneren Ausnahme.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Eine Meldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="inner" vsli:raw="The inner exception.">Die innere Ausnahme.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception,System.Nullable{System.Net.HttpStatusCode})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception, an inner exception, and an HTTP status code.">Initialisiert eine neue Instanz der- <see cref="T:System.Net.Http.HttpRequestException" /> Klasse mit einer bestimmten Meldung, die die aktuelle Ausnahme, eine innere Ausnahme und einen HTTP-Statuscode beschreibt.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Eine Meldung, die die aktuelle Ausnahme beschreibt.</param>
      <param name="inner" vsli:raw="The inner exception.">Die innere Ausnahme.</param>
      <param name="statusCode" vsli:raw="The HTTP status code.">Der HTTP-Statuscode.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestException.StatusCode">
      <summary vsli:raw="Gets the HTTP status code to be returned with the exception.">Ruft den HTTP-Statuscode ab, der mit der Ausnahme zurückgegeben werden soll.</summary>
      <returns vsli:raw="An HTTP status code if the exception represents a non-successful result, otherwise &lt;c&gt;null&lt;/c&gt;.">Ein HTTP-Statuscode, wenn die Ausnahme ein nicht erfolgreiches Ergebnis darstellt, andernfalls <c>null</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">Stellt eine HTTP-Anforderungsnachricht dar.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse mit einer HTTP-Methode und einer Anforderungs-<see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Die HTTP-Methode</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Eine Zeichenfolge, die die Anforderung <see cref="T:System.Uri" /> darstellt.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpRequestMessage" />-Klasse mit einer HTTP-Methode und einer Anforderungs-<see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Die HTTP-Methode</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">Das anzufordernde <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">Gibt die vom <see cref="T:System.Net.Http.HttpRequestMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpRequestMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns vsli:raw="A string representation of the current object.">Eine Zeichenfolgendarstellung des aktuellen Objekts.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">Ruft den Inhalt der HTTP-Meldung ab oder legt diesen fest.</summary>
      <returns vsli:raw="The content of a message.">Der Inhalt einer Nachricht</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">Ruft die Auflistung von HTTP-Anforderungsheadern ab.</summary>
      <returns vsli:raw="The collection of HTTP request headers.">Eine Auflistung von HTTP-Anforderungsheadern.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">Ruft die von dieser HTTP-Anforderungsnachricht verwendete HTTP-Methode ab oder legt sie fest.</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">Die von der Anforderungsnachricht verwendete HTTP-Methode. Standard ist die GET-Methode.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Options" />
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">Ruft eine Gruppe von Eigenschaften für die HTTP-Anforderung ab.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Gibt <see cref="T:System.Collections.Generic.IDictionary`2" />zurück.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">Übernimmt oder bestimmt den <see cref="T:System.Uri" />, der für die HTTP-Anforderung verwendet wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">Der für die HTTP-Anforderung verwendete <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Ruft die HTTP-Nachrichtenversion ab oder legt sie fest.</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">Die HTTP-Nachrichtenversion. Der Standardwert ist <c>1,1</c>, es sei denn, Sie zielen auf .net Core 2,1 oder 2,2. In diesem Fall ist der Standardwert <c>2,0</c>.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.VersionPolicy">
      <summary vsli:raw="Gets or sets the policy that determines how &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt; is interpreted and how the final HTTP version is negotiated with the server.">Ruft die Richtlinie ab, die bestimmt, wie <see cref="System.Net.Http.HttpRequestMessage.Version" /> interpretiert wird und wie die endgültige HTTP-Version mit dem Server ausgehandelt wird, oder legt sie fest.</summary>
      <returns vsli:raw="The HttpVersionPolicy used when the HTTP connection is established.">Die httpversionpolicy, die beim Herstellen der HTTP-Verbindung verwendet wird.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptions" />
    <member name="M:System.Net.Http.HttpRequestOptions.#ctor" />
    <member name="M:System.Net.Http.HttpRequestOptions.Set``1(System.Net.Http.HttpRequestOptionsKey{``0},``0)">
      <param name="key" vsli:raw="The strongly typed key for the HTTP request option." />
      <param name="value" vsli:raw="The value of the HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Fügt der <see cref="T:System.Collections.Generic.ICollection`1" /> ein Element hinzu.</summary>
      <param name="item" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Das Objekt, das <see cref="T:System.Collections.Generic.ICollection`1" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
      <summary vsli:raw="Removes all items from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Entfernt alle Elemente aus <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; contains a specific value.">Ermittelt, ob die <see cref="T:System.Collections.Generic.ICollection`1" /> einen bestimmten Wert enthält.</summary>
      <param name="item" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Das im <see cref="T:System.Collections.Generic.ICollection`1" /> zu suchende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <paramref name="item" /> in der <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Kopiert die Elemente der <see cref="T:System.Collections.Generic.ICollection`1" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item" vsli:raw="The object to remove from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Das aus der <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; is not found in the original &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="item" /> erfolgreich aus der <see cref="T:System.Collections.Generic.ICollection`1" /> entfernt wurde, andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="item" /> nicht in der ursprünglichen <see cref="T:System.Collections.Generic.ICollection`1" /> gefunden wurde.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Fügt der <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key" vsli:raw="The object to use as the key of the element to add.">Das Objekt, das als Schlüssel des hinzuzufügenden Elements verwendet werden soll.</param>
      <param name="value" vsli:raw="The object to use as the value of the element to add.">Das Objekt, das als Wert des hinzuzufügenden Elements verwendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the specified key.">Ermittelt, ob das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Der im <see cref="T:System.Collections.Generic.IDictionary`2" /> zu suchende Schlüssel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.IDictionary`2" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key" vsli:raw="The key of the element to remove.">Der Schlüssel des zu entfernenden Elements.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; was not found in the original &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">
        <see langword="true" />, wenn das Element erfolgreich entfernt wurde, andernfalls <see langword="false" />. Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="key" /> nicht im ursprünglichen <see cref="T:System.Collections.Generic.IDictionary`2" /> gefunden wurde.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
      <param name="key" vsli:raw="The key of the value to get." />
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;paramref name=&quot;value&quot; /&gt; parameter. This parameter is passed uninitialized." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestOptions.TryGetValue``1(System.Net.Http.HttpRequestOptionsKey{``0},``0@)">
      <param name="key" vsli:raw="The strongly typed key to get the value of an HTTP request option." />
      <param name="value" vsli:raw="When this method returns, contains the value of the specified HTTP request option." />
      <typeparam name="TValue" vsli:raw="The type of the HTTP value as defined by &lt;paramref name=&quot;key&quot; /&gt;." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Ruft die Anzahl der Elemente ab, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt;.">Die Anzahl der Elemente, die in <see cref="T:System.Collections.Generic.ICollection`1" /> enthalten sind.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only.">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Collections.Generic.ICollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="key" vsli:raw="The key of the element to get or set.">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The element with the specified key.">Das Element mit dem angegebenen Schlüssel.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the keys of the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Schlüssel des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestOptions.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Ruft eine <see cref="T:System.Collections.Generic.ICollection`1" /> ab, die die Werte im <see cref="T:System.Collections.Generic.IDictionary`2" /> enthält.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; containing the values in the object that implements &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Eine <see cref="T:System.Collections.Generic.ICollection`1" />, die die Werte des Objekts enthält, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestOptionsKey`1">
      <typeparam name="TValue" vsli:raw="The type of the value of the option." />
    </member>
    <member name="M:System.Net.Http.HttpRequestOptionsKey`1.#ctor(System.String)">
      <param name="key" vsli:raw="Name of the HTTP request option." />
    </member>
    <member name="P:System.Net.Http.HttpRequestOptionsKey`1.Key" />
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">Stellt eine HTTP-Antwortnachricht einschließlich den Statuscodes und der Daten dar.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpResponseMessage" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpResponseMessage" />-Klasse mit einem bestimmten <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" />.</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">Der Statuscode der HTTP-Antwort.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">Gibt die vom <see cref="T:System.Net.Http.HttpResponseMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die nicht verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.HttpResponseMessage" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">Löst eine Ausnahme aus, wenn die <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" />-Eigenschaft für die HTTP-Antwort <see langword="false" /> ist.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">Die HTTP-Antwort ist nicht erfolgreich.</exception>
      <returns vsli:raw="The HTTP response message if the call is successful.">Die HTTP-Antwortnachricht, wenn der Aufruf erfolgreich ist.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns vsli:raw="A string representation of the current object.">Eine Zeichenfolgendarstellung des aktuellen Objekts.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">Ruft den Inhalt einer HTTP-Antwortnachricht ab oder legt diesen fest.</summary>
      <returns vsli:raw="The content of the HTTP response message.">Der Inhalt der HTTP-Antwortnachricht.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">Ruft die Sammlung von HTTP-Antwortheadern ab.</summary>
      <returns vsli:raw="The collection of HTTP response headers.">Die Sammlung der HTTP-Antwortheader.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">Ruft einen Wert ab, der anzeigt, ob die HTTP-Antwort erfolgreich war.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />
        <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" />, wenn im Bereich 200-299 war, andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">Ruft den Ursachenausdruck ab, der in der Regel von Servern zusammen mit dem Statuscode übertragen wird, oder legt ihn fest.</summary>
      <returns vsli:raw="The reason phrase sent by the server.">Der vom Server gesendete Ursachenausdruck.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">Ruft die Anforderungsnachricht ab, die zu dieser Antwortnachricht geführt hat, oder legt sie fest.</summary>
      <returns vsli:raw="The request message which led to this response message.">Die Anforderungsnachricht, die zu dieser Antwortnachricht geführt hat.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">Ruft den Statuscode der HTTP-Antwort ab oder legt ihn fest.</summary>
      <returns vsli:raw="The status code of the HTTP response.">Der Statuscode der HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">Ruft die Auflistung von nachfolgenden Headern in einer HTTP-Antwort ab.</summary>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR: die http/2-Antwort enthält Pseudo Header im nachfolgenden Header Frame.</exception>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">Die Auflistung der nachfolgenden Header in der HTTP-Antwort.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Ruft die HTTP-Nachrichtenversion ab oder legt sie fest.</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">Die HTTP-Nachrichtenversion. Der Standardwert ist 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.HttpVersionPolicy">
      <summary vsli:raw="Specifies behaviors for selecting and negotiating the HTTP version for a request.">Gibt Verhalten zum Auswählen und Aushandeln der HTTP-Version für eine Anforderung an.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionExact">
      <summary vsli:raw="&lt;para&gt;Only use the requested version.&lt;/para&gt;&lt;para&gt;This option allows for use of a prenegotiated clear text connection for the requested version.&lt;/para&gt;">Verwendet nur die angeforderte Version.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrHigher">
      <summary vsli:raw="&lt;para&gt;Use the highest available version, downgrading only to the requested version but not below.&lt;/para&gt;&lt;para&gt;If the server supports a higher version than the requested version (either negotiated via ALPN (H2) or advertised via Alt-Svc (H3)) and a secure connection is requested, the result is the highest available version. Otherwise, the version downgrades to &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. This option allows use of a prenegotiated clear text connection for the requested version but not for a higher version.&lt;/para&gt;">Verwendet die höchste verfügbare Version und stuft nur auf die angeforderte Version herab, jedoch nicht niedriger.</summary>
    </member>
    <member name="F:System.Net.Http.HttpVersionPolicy.RequestVersionOrLower">
      <summary vsli:raw="&lt;para&gt;Use the requested version or downgrade to a lower one. This is the default behavior.&lt;/para&gt;&lt;para&gt;If the server supports the requested version, either negotiated via ALPN (H2) or advertised via Alt-Svc (H3), and a secure connection is being requested, the result is the &lt;see cref=&quot;System.Net.Http.HttpRequestMessage.Version&quot; /&gt;. Otherwise, the version downgrades to HTTP/1.1. This option does not allow use of a prenegotiated clear text connection, for example, H2C.&lt;/para&gt;">Verwendet die angeforderte Version oder stuft auf eine niedrigere Version herab. Dies ist das Standardverhalten.</summary>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">Ein Basistyp für Handler, die nur am Rande an der Verarbeitung von Anforderungs- und/oder Antwortnachrichten beteiligt sind.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">Erstellt eine Instanz einer <see cref="T:System.Net.Http.MessageProcessingHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">Erstellt eine Instanz einer <see cref="T:System.Net.Http.MessageProcessingHandler" />-Klasse mit einem bestimmten inneren Handler.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Der innere Handler, der für die Verarbeitung der HTTP-Antwortnachrichten zuständig ist.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">Führt die Verarbeitung bei jeder an den Server gesendeten Anforderung aus.</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">Die zu verarbeitende HTTP-Anforderungsnachricht.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns vsli:raw="The HTTP request message that was processed.">Die HTTP-Anforderungsnachricht, die verarbeitet wurde.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">Jede Antwort vom Server wird verarbeitet.</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">Die zu verarbeitende HTTP-Antwortnachricht.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns vsli:raw="The HTTP response message that was processed.">Die verarbeitete HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server.">Sendet eine HTTP-Anforderung an den inneren Handler, die an den Server gesendet werden soll.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <returns vsli:raw="The HTTP response message.">Die HTTP-Antwortnachricht.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Sendet eine HTTP-Anforderung an den inneren Handler, der als asynchroner Vorgang an den Server gesendet werden soll.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Die an den Server zu sendende HTTP-Anforderungsmeldung.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Ein Abbruchtoken, das von anderen Objekten oder Threads verwendet werden kann, um Nachricht vom Abbruch zu empfangen.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> war <see langword="null" />.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Stellt eine Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten bereit, die mithilfe der multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Der Untertyp des Multipart-Inhalts.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> war <see langword="null" /> oder enthält nur Leerzeichen.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Der Untertyp des mehrteiligen Inhalts.</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">Die Begrenzungszeichenfolge für den Multipart-Inhalt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">Der <paramref name="subtype" /> war <see langword="null" /> oder eine leere Zeichenfolge ().  
  
<paramref name="boundary" /> war <see langword="null" /> oder enthält nur Leerzeichen.  
  
- oder - 
Die <paramref name="boundary" /> endet mit einem Leerzeichen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">
        <paramref name="boundary" /> war länger als 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Fügen Sie Mehrfach-HTTP-Inhalt einer Sammlung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die unter Verwendung der multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding.">Serialisiert den HTTP-Inhalt in einen Datenstrom und verwendet dazu die multipart/*-Codierung.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The HTTP content stream that represents the multipart/* encoded HTTP content.">Der HTTP-Inhaltsdatenstrom, der den multipart/*-codierten HTTP-Inhalt darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">Serialisiert den HTTP-Inhalt als asynchroner Vorgang in einen Datenstrom und verwendet dazu die multipart/*-Codierung.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">Serialisiert den HTTP-Inhalt als asynchroner Vorgang in einen Datenstrom und verwendet dazu die multipart/*-Codierung.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.MultipartContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Gibt einen Enumerator zurück, der die Collection von <see cref="T:System.Net.Http.HttpContent" />-Objekten durchläuft, die mithilfe der Multipart/*-Inhaltstypspezifikation serialisiert werden.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen zum Transport (z. B. zum Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">Die explizite Implementierung der <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />-Methode.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">Bestimmt, ob der mehrteilige HTTP-Inhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">Die Länge des HTTP-Inhalts in Bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.MultipartContent.HeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that decode response header values.">Ruft einen Rückruf ab, der die Antwortheaderwerte decodiert, oder legt diesen fest.</summary>
      <returns vsli:raw="The header encoding selector callback to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Der Header Codierungs-selectorrückruf zum Decodieren des Werts für den angegebenen Antwortheader Namen oder, <see langword="null" /> um das Standardverhalten anzugeben.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">Stellt einen Container für Inhalt bereit, der mithilfe des MIME-Typs „multipart/form-data“ codiert wurde.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartFormDataContent" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartFormDataContent" />-Klasse.</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">Die Begrenzungszeichenfolge für den Multipart-Form-Dateninhalt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">Die <paramref name="boundary" /> war <see langword="null" /> enthält nur Leerzeichen.  
  
- oder - 
Die <paramref name="boundary" /> endet mit einem Leerzeichen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">Die Länge des <paramref name="boundary" /> war größer als 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Der Name für den HTTP-Inhalt, der hinzugefügt wird.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">Die <paramref name="name" /> war <see langword="null" /> enthält nur Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Fügen Sie HTTP-Inhalt einer Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die in multipart/form-data-MIME-Typ serialisiert werden.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Der Name für den HTTP-Inhalt, der hinzugefügt wird.</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">Der Name der Datei, für den zur Auflistung hinzuzufügenden HTTP-Inhalt.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">Die <paramref name="name" /> war <see langword="null" /> enthält nur Leerzeichen.  
  
- oder - 
Die <paramref name="fileName" /> war <see langword="null" /> enthält nur Leerzeichen.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> war <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the content provided in the constructor to an HTTP content stream as an asynchronous operation.">Serialisieren und Schreiben des im Konstruktor bereitgestellten Inhalts in einen HTTP-Inhaltedatenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent">
      <summary vsli:raw="Provides HTTP content based on a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt;.">Stellt HTTP-Inhalt auf der Grundlage von <see cref="T:System.ReadOnlyMemory`1" /> bereit.</summary>
    </member>
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.ReadOnlyMemoryContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.ReadOnlyMemoryContent" /> verwendete Inhalt.</param>
    </member>
    <member name="T:System.Net.Http.SocketsHttpConnectionContext">
      <summary vsli:raw="Represents the context passed to the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; instance. .">Stellt den Kontext dar, der an <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> für eine <see cref="T:System.Net.Http.SocketsHttpHandler" />-Instanz übergeben wird. ausgelöst.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.DnsEndPoint">
      <summary vsli:raw="Gets the DNS endpoint to be used by the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.ConnectCallback&quot; /&gt; to establish the connection.">Ruft den DNS-Endpunkt ab, der von <see cref="P:System.Net.Http.SocketsHttpHandler.ConnectCallback" /> zum Herstellen der Verbindung verwendet werden soll.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpConnectionContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the connection to be created.">Ruft die anfängliche HTTP-Anforderungsnachricht ab, die bewirkt, dass die Verbindung hergestellt wird.</summary>
      <returns vsli:raw="The request message that's causing the connection to be created.">Die Anforderungs Nachricht, die bewirkt, dass die Verbindung erstellt wird.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">Stellt den Standardnachrichtenhandler bereit, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 und höher verwendet wird.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.SocketsHttpHandler&quot; /&gt; class.">Erstellt eine Instanz einer <see cref="T:System.Net.Http.SocketsHttpHandler" />-Klasse.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> , wenn der Handler Umleitungs Antworten folgen soll. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">Der Typ der dekomprimierungsmethode, die vom Handler für die automatische Dekomprimierung der http-Inhalts Antwort verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectCallback">
      <summary vsli:raw="Gets or sets a custom callback used to open new connections.">Ruft einen benutzerdefinierten Rückruf ab oder legt ihn fest, der zum Öffnen neuer Verbindungen verwendet wird.</summary>
      <returns vsli:raw="A callback method to create a stream.">Eine Rückruf Methode zum Erstellen eines Streams.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the connection establishing times out.">Ruft die Zeitspanne ab, nach der das Zeitlimit der Verbindungsherstellung überschritten ist, oder legt diese fest.</summary>
      <returns vsli:raw="The timespan to wait before the connection establishing times out. The default value is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Die Zeitspanne, die gewartet werden soll, bevor ein Timeout für die Verbindung hergestellt wird. Der Standardwert ist <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">Ruft das Containerobjekt für verwaltete Cookies ab oder legt dieses fest.</summary>
      <returns vsli:raw="The managed cookie container object.">Das verwaltete cookiecontainerobjekt.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die verwendet werden, um den Standardproxyserver für die Authentifizierung zu übermitteln.</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">Die Anmelde Informationen, die zum Authentifizieren des Benutzers bei einem authentifizier enden Proxy verwendet werden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.EnableMultipleHttp2Connections">
      <summary vsli:raw="Gets or sets a value that indicates whether additional HTTP/2 connections can be established to the same server when the maximum number of concurrent streams is reached on all existing connections.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob zusätzliche HTTP/2-Verbindungen mit demselben Server hergestellt werden können, wenn die maximale Anzahl gleichzeitiger Streams in allen vorhandenen Verbindungen erreicht wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if additional HTTP/2 connections are allowed to be created; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn zusätzliche http/2-Verbindungen erstellt werden dürfen. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout">
      <summary vsli:raw="Gets or sets the time-out value for server HTTP 100 Continue response.">Ruft den Timeoutwert für die Antwort des Servers zur HTTP 100-Fortsetzung ab oder legt ihn fest.</summary>
      <returns vsli:raw="The timespan to wait for the HTTP 100 Continue. The default value is 1 second.">Die Zeitspanne, die auf den HTTP 100-Vorgang gewartet werden soll. Der Standardwert ist 1 Sekunde.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.IsSupported">
      <summary vsli:raw="Gets a value that indicates whether the handler is supported on the current platform.">Ruft einen Wert ab, der angibt, ob der Handler auf der aktuellen Plattform unterstützt wird.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn der Handler unterstützt wird. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingDelay">
      <summary vsli:raw="Gets or sets the keep alive ping delay.">Ruft die Keep-Alive-Pingverzögerung ab oder legt sie fest.</summary>
      <returns vsli:raw="The keep alive ping delay. Defaults to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Die Keep-Alive-Ping-Verzögerung. Wird standardmäßig auf <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> festgelegt.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingPolicy">
      <summary vsli:raw="Gets or sets the keep alive ping behaviour.">Ruft das Keep-Alive-Pingverhalten ab oder legt es fest.</summary>
      <returns vsli:raw="The keep alive ping behaviour.">Das Keep-Alive-Ping-Verhalten.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.KeepAlivePingTimeout">
      <summary vsli:raw="Gets or sets the keep alive ping timeout.">Ruft das Keep-Alive-Pingtimeout ab oder legt es fest.</summary>
      <returns vsli:raw="The keep alive ping timeout. Defaults to 20 seconds.">Der Keep-Alive-Ping-Timeout. Der Standardwert ist 20 Sekunden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">Ruft die maximale Anzahl von zulässigen HTTP-Umleitungen ab oder legt diese fest.</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">Die maximal zulässige Anzahl von HTTP-Umleitungen.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">Ruft die maximale Anzahl gleichzeitiger TCP-Verbindungen ab, die für einen einzelnen Server zulässig sind, oder legt diese fest.</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">Die maximale Anzahl gleichzeitiger TCP-Verbindungen, die für einen einzelnen Server zulässig sind.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">Ruft die maximale Datenmenge aus Antworten in Byte ab oder legt diese fest.</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">Die maximale Datenmenge, die von Antworten in Bytes abgezogen werden kann.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">Die maximale Größe des Header Teils aus der Serverantwort in Kilobyte.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PlaintextStreamFilter">
      <summary vsli:raw="Gets or sets a custom callback that provides access to the plaintext HTTP protocol stream.">Ruft einen benutzerdefinierten Rückruf ab, der Zugriff auf den HTTP-Protokolldatenstrom im Klartext bietet, oder legt diesen fest.</summary>
      <returns vsli:raw="A callback that provides access to the plaintext HTTP protocol stream.">Ein Rückruf, der Zugriff auf den Klartext-http-Protokolldaten Strom bereitstellt.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">Ruft ab oder legt fest, wie lange sich eine Verbindung im Leerlauf im Pool befinden kann, damit sie als wiederverwendbar eingestuft wird.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">Der angegebene Wert ist kleiner als <see cref="F:System.TimeSpan.Zero" /> oder gleich <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">Die maximale Leerlaufzeit für eine Verbindung im Pool. Der Standardwert für diese Eigenschaft ist 2 Minuten.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime">
      <summary vsli:raw="Gets or sets how long a connection can be in the pool to be considered reusable.">Ruft ab oder legt fest, wie lange sich eine Verbindung im Pool befinden kann, damit sie als wiederverwendbar eingestuft wird.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; or is equal to &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Der angegebene Wert ist kleiner als <see cref="F:System.TimeSpan.Zero" /> oder gleich <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <returns vsli:raw="The maximum time for a connection to be in the pool. The default value for this property is &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">Die maximale Zeit für eine Verbindung im Pool. Der Standardwert für diese Eigenschaft ist <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn der Handler einen Autorisierungs Header mit der Anforderung sendet. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Ruft den benutzerdefinierten Proxy ab, wenn die <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />-Eigenschaft <see langword="true" /> ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The custom proxy.">Der benutzerdefinierte Proxy.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.RequestHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode request header values.">Ruft einen Rückruf ab, der die Werte der Anforderungsheader decodiert, oder legt diesen fest.</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to encode the value for the specified request header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Der Header Codierungs-selectorrückruf zum Decodieren des Werts für den angegebenen Antwortheader Namen oder, <see langword="null" /> um das Standardverhalten anzugeben.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout">
      <summary vsli:raw="Gets or sets the timespan to wait for data to be drained from responses.">Ruft die Wartezeit für das Entnehmen von Daten aus Antworten ab oder legt sie fest.</summary>
      <returns vsli:raw="The timespan to wait for data to be drained from responses.">Die Zeitspanne, die darauf gewartet werden soll, dass Daten aus Antworten entfernt werden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseHeaderEncodingSelector">
      <summary vsli:raw="Gets or sets a callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode response header values.">Ruft einen Rückruf ab, der die Werte der Antwortheader decodiert, oder legt diesen fest.</summary>
      <returns vsli:raw="The header encoding selector callback that selects the &lt;see cref=&quot;System.Text.Encoding&quot; /&gt; to decode the value for the specified response header name, or &lt;see langword=&quot;null&quot; /&gt; to indicate the default behavior.">Der Header Codierungs-selectorrückruf zum Decodieren des Werts für den angegebenen Antwortheader Namen oder, <see langword="null" /> um das Standardverhalten anzugeben.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">Ruft die Optionen ab, die für die TLS-Clientauthentifizierung verwendet werden, oder legt diese fest.</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">Der Satz von Optionen, die für die TLS-Client Authentifizierung verwendet werden.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use cookies.">Ruft einen Wert ab, der angibt, ob die Handler Cookies verwenden sollen, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that indicates whether the handler should use cookies.">Ein Wert, der angibt, ob der Handler Cookies verwenden soll.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should use a proxy.">Ruft einen Wert ab, der angibt, ob der Handler einen Proxy verwenden sollte, oder legt ihn fest.</summary>
      <returns vsli:raw="A value that indicates whether the handler should use a proxy.">Ein Wert, der angibt, ob der Handler einen Proxy verwenden soll.</returns>
    </member>
    <member name="T:System.Net.Http.SocketsHttpPlaintextStreamFilterContext">
      <summary vsli:raw="Represents the context passed to the PlaintextStreamFilter for a SocketsHttpHandler instance.">Stellt den Kontext dar, der an den PlaintextStreamFilter für eine SocketsHttpHandler-Instanz übergeben wird.</summary>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.InitialRequestMessage">
      <summary vsli:raw="Gets the initial HttpRequestMessage that is causing the stream to be used.">Ruft die anfängliche HTTP-Anforderungsnachricht ab, die bewirkt, dass der Datenstrom verwendet wird.</summary>
      <returns vsli:raw="The HTTP request message that is causing the stream to be used.">Die HTTP-Anforderungs Nachricht, die bewirkt, dass der Stream verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.NegotiatedHttpVersion">
      <summary vsli:raw="Gets the version of HTTP in use for this stream.">Ruft die HTTP-Version ab, die für diesen Stream verwendet wird.</summary>
      <returns vsli:raw="The version of HTTP in use for this stream.">Die HTTP-Version, die für diesen Stream verwendet wird.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpPlaintextStreamFilterContext.PlaintextStream">
      <summary vsli:raw="Gets the plaintext Stream that will be used for HTTP protocol requests and responses.">Ruft den Klartext-Datenstrom ab, der für HTTP-Protokollanforderungen und -antworten verwendet wird.</summary>
      <returns vsli:raw="The plaintext stream that will be used for HTTP protocol requests and responses.">Der Klartext-Datenstrom, der für HTTP-Protokoll Anforderungen und-Antworten verwendet wird.</returns>
    </member>
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">Stellt HTTP-Inhalt auf Grundlage eines Streams bereit.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StreamContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.StreamContent" />verwendete Inhalt.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StreamContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.StreamContent" /> verwendete Inhalt.</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Die verfügbare Größe des Puffers in Byte für die <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> war <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> ist kleiner gleich 0 (null).</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStream(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream.">Gibt den HTTP-Datenstrom als schreibgeschützten Datenstrom zurück.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The HTTP content stream.">Die HTTP-Inhaltsdatenstrom.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">Gibt den HTTP-Datenstrom als schreibgeschützten Datenstrom als asynchronen Vorgang zurück.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">Gibt die vom <see cref="T:System.Net.Http.StreamContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStream(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serializes the multipart HTTP content to a stream.">Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (for example, the channel binding token). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen zum Transport (z. B. zum Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport (z.B. Kanalbindungstoken). Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">Bestimmt, ob der Datenstrominhalt eine gültige Länge in Bytes hat.</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">Die Länge des Datenstrominhalts in Bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">Stellt HTTP-Inhalt auf Grundlage einer Zeichenfolge bereit.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.StringContent" />verwendete Inhalt.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.StringContent" />verwendete Inhalt.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Die für den Inhalt zu verwendende Codierung.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.StringContent" />-Klasse.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Der zum Initialisieren von <see cref="T:System.Net.Http.StringContent" />verwendete Inhalt.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Die für den Inhalt zu verwendende Codierung.</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">Der Medientyp, der für den Inhalt verwendet werden soll.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext,System.Threading.CancellationToken)">
      <summary vsli:raw="Serialize and write the string provided in the constructor to an HTTP content stream as an asynchronous operation.">Serialisieren und Schreiben der im Konstruktor bereitgestellten Zeichenfolge in einen HTTP-Inhaltedatenstrom als asynchroner Vorgang.</summary>
      <param name="stream" vsli:raw="The target stream.">Der Zieldatenstrom.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Informationen über den Transport, z.B. Kanalbindungstoken. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel the operation.">Das Abbruchtoken, um den Vorgang abzubrechen.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
  </members>
</doc>