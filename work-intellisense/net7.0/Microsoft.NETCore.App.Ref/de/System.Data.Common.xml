<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Bestimmt die Aktion, die ausgeführt wird, wenn die <see cref="M:System.Data.DataSet.AcceptChanges" />-Methode oder die <see cref="M:System.Data.DataTable.RejectChanges" />-Methode für eine <see cref="T:System.Data.DataTable" /> mit einer <see cref="T:System.Data.ForeignKeyConstraint" /> aufgerufen wird.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Änderungen werden über die Beziehung weitergegeben.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>Es wird keine Aktion ausgeführt (Standard).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Stellt eine Beschreibung der Abfrageergebnisse und deren Auswirkungen auf die Datenbank bereit.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>Beim Ausführen des Befehls wird das zugeordnete <see langword="Connection" />-Objekt geschlossen, wenn das zugeordnete <see langword="DataReader" />-Objekt geschlossen wird.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>Die Abfrage kann mehrere Resultsets zurückgeben. Die Ausführung der Abfrage kann sich auf den Datenbankzustand auswirken. <see langword="Default" /> legt keine <see cref="T:System.Data.CommandBehavior" />-Flags fest, daher entspricht die Funktion eines Aufrufs von <see langword="ExecuteReader(CommandBehavior.Default)" /> dem von <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>Die Abfrage gibt Informationen über Spalten und Primärschlüssel zurück. Der Anbieter fügt dem Resultset zusätzliche Spalten für vorhandene Primärschlüssel und Zeitstempelspalten an.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>Die Abfrage gibt nur Spalteninformationen zurück. Bei Verwendung von <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> stellt der .NET Framework-Datenanbieter für SQL Server der auszuführenden Anweisung SET FMTONLY ON voran.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Ermöglicht dem <see langword="DataReader" /> das Behandeln von Zeilen, die Spalten mit großen Binärwerten enthalten. Statt des Ladens der gesamten Zeile ermöglicht <see langword="SequentialAccess" /> dem <see langword="DataReader" /> das Laden der Daten als Stream. Anschließend können Sie mit der <see langword="GetBytes" />-Methode oder der <see langword="GetChars" />-Methode eine Byteposition für den Beginn des Lesevorgangs sowie eine eingeschränkte Puffergröße für die zurückgegebenen Daten angeben.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>Die Abfrage gibt ein einzelnes Resultset zurück.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>Von der Abfrage wird erwartet, dass eine einzige Zeile des ersten Resultsets zurückgegeben wird. Die Ausführung der Abfrage kann sich auf den Datenbankzustand auswirken. Einige .NET Framework-Datenprovider können mit diesen Informationen die Leistung des Befehls optimieren (dies ist jedoch nicht unbedingt erforderlich). Wenn Sie <see cref="F:System.Data.CommandBehavior.SingleRow" /> mit der <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />-Methode des <see cref="T:System.Data.OleDb.OleDbCommand" />-Objekts angeben, führt der .NET Framework-Datenanbieter für OLE DB eine Bindung mithilfe der OLE DB <see langword="IRow" />-Schnittstelle durch, sofern diese verfügbar ist. Andernfalls wird die <see langword="IRowset" />-Schnittstelle verwendet. Wenn die SQL-Anweisung nur eine einzige Zeile zurückgeben soll, kann durch Angeben von <see cref="F:System.Data.CommandBehavior.SingleRow" /> auch die Leistung der Anwendung verbessert werden. <see langword="SingleRow" /> kann auch beim Ausführen von Abfragen angegeben werden, die mehrere Resultsets zurückgeben können.  In einem solchen Fall, in dem sowohl eine SQL-Abfrage für mehrere Resultsets als auch eine einzige Zeile angegeben werden, enthält das zurückgegebene Ergebnis nur die erste Zeile des ersten Resultsets. Die übrigen Resultsets der Abfrage werden nicht zurückgegeben.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Gibt an, wie eine Befehlszeichenfolge interpretiert wird.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>Der Name einer gespeicherten Prozedur.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>Name der Tabelle</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>Ein SQL-Textbefehl. (Standardeinstellung)</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Gibt die Position des Katalognamens in einem qualifizierten Tabellennamen in einem Textbefehl an.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Gibt an, dass der Katalogname nach den Angaben zum Schema in einem vollqualifizierten Tabellennamen in einem Textbefehl steht. <c>Ende</c> und <c>Start</c> schließen einander aus.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Gibt an, dass der Katalogname vor den Angaben zum Schema in einem vollqualifizierten Tabellennamen in einem Textbefehl steht. <c>Start</c> und <c>Ende</c> schließen einander aus.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Stellt einen Satz von SQL-Befehlen und eine Datenbankverbindung dar, die verwendet werden, um das <see cref="T:System.Data.DataSet" /> aufzufüllen und die Datenquelle zu aktualisieren.</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Wird zurückgegeben, wenn während eines Füllvorgangs ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DataAdapter" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DataAdapter" />-Klasse aus einem vorhandenen Objekt desselben Typs.</summary>
      <param name="from">Ein für die Erstellung des neuen <see cref="T:System.Data.Common.DataAdapter" /> verwendetes <see cref="T:System.Data.Common.DataAdapter" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Erstellt eine Kopie dieser Instanz von <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>Die geklonte Instanz von <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Erstellt einen neuen <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Eine neue Tabellenzuordnungssammlung.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Data.Common.DataAdapter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Fügt dem <see cref="T:System.Data.DataSet" /> Zeilen hinzu oder aktualisiert diese, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet">Eine <see cref="T:System.Data.DataSet" />, die mit Datensätzen aufgefüllt werden soll.</param>
      <param name="srcTable">Eine Zeichenfolge, die den Namen der Quelltabelle angibt.</param>
      <param name="dataReader">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Der nullbasierte Startindex für die Startdatensatz.</param>
      <param name="maxRecords">Eine ganze Zahl, die die maximale Anzahl von Datensätzen angibt.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Fügt der <see cref="T:System.Data.DataTable" /> unter Verwendung des <see cref="T:System.Data.DataTable" />-Namens und des angegebenen <see cref="T:System.Data.IDataReader" /> Zeilen hinzu bzw. aktualisiert diese, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataTable">Eine <see cref="T:System.Data.DataTable" />, die mit Datensätzen aufgefüllt werden soll.</param>
      <param name="dataReader">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich in der Auflistung der <see cref="T:System.Data.DataTable" />-Objekte oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen.</summary>
      <param name="dataTables">Eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die Datensätzen aufgefüllt werden soll</param>
      <param name="dataReader">Eine Instanz von <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Der nullbasierte Startindex für die Startdatensatz.</param>
      <param name="maxRecords">Eine ganze Zahl, die die maximale Anzahl von Datensätzen angibt.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, die mit dem Schema aus der Datenquelle gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns>Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataTable" />, die aus dem <see cref="T:System.Data.IDataReader" /> gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="dataReader">Der <see cref="T:System.Data.IDataReader" />, der beim Auffüllen der <see cref="T:System.Data.DataTable" /> als Datenquelle verwendet werden soll.</param>
      <returns>Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, die aus dem <see cref="T:System.Data.IDataReader" /> gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="dataReader">Der <see cref="T:System.Data.IDataReader" />, der beim Auffüllen der <see cref="T:System.Data.DataTable" /> als Datenquelle verwendet werden soll.</param>
      <returns>Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns>Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Gibt an, ob eine <see cref="T:System.Data.Common.DataTableMappingCollection" /> erstellt wurde.</summary>
      <returns>
        <see langword="true" />, wenn eine <see cref="T:System.Data.Common.DataTableMappingCollection" /> erstellt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Wird aufgerufen, wenn während eines <see langword="Fill" /> ein Fehler auftritt.</summary>
      <param name="value">Ein <see cref="T:System.Data.FillErrorEventArgs" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Setzt die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> auf ihren Standardzustand zurück und erzwingt, dass <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /><see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> berücksichtigt.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Bestimmt, ob die <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />-Eigenschaft beibehalten werden soll.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />-Eigenschaft beibehalten wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Bestimmt, ob die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />-Eigenschaft beibehalten werden soll.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />-Eigenschaft beibehalten wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Bestimmt, ob ein oder mehrere <see cref="T:System.Data.Common.DataTableMapping" />-Objekte vorhanden sind und ob diese beibehalten werden sollen.</summary>
      <returns>
        <see langword="true" />, wenn ein oder mehrere <see cref="T:System.Data.Common.DataTableMapping" />-Objekte vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Ruft für jede Zeile im angegebenen <see cref="T:System.Data.DataSet" /> einer <see cref="T:System.Data.DataTable" /> mit dem Namen "Table", die eingefügt, aktualisiert oder gelöscht wird, die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung auf.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="M:System.Data.DataRow.AcceptChanges" /> für eine <see cref="T:System.Data.DataRow" /> aufgerufen wird, nachdem diese bei einem der Fill-Vorgänge der <see cref="T:System.Data.DataTable" /> hinzugefügt wurde, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.Data.DataRow.AcceptChanges" /> für die <see cref="T:System.Data.DataRow" /> aufgerufen wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Ruft ab oder legt fest, ob <see cref="M:System.Data.DataRow.AcceptChanges" /> während eines <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> aufgerufen wird.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.Data.DataRow.AcceptChanges" /> während eines <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> aufgerufen wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Ruft einen Wert ab, der angibt, ob beim Auftreten eines Fehlers während der Aktualisierung von Zeilen eine Ausnahme ausgelöst werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Aktualisierung ohne Auslösen einer Ausnahme fortgesetzt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Ruft die <see cref="T:System.Data.LoadOption" /> ab, die bestimmt, wie der Adapter die <see cref="T:System.Data.DataTable" /> vom <see cref="T:System.Data.Common.DbDataReader" /> füllt, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.LoadOption" />-Wert.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Bestimmt die Aktion, die ausgeführt werden soll, wenn für eingehende Daten keine entsprechende Tabelle oder Spalte vorhanden ist.</summary>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingMappingAction" />-Werte.</exception>
      <returns>Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte. Der Standardwert ist <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</summary>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</exception>
      <returns>Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte. Der Standardwert ist <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Ruft ab oder legt fest, ob die <see langword="Fill" />-Methode anbieterspezifische Werte oder allgemeine CLS-kompatible Werte zurückgeben soll.</summary>
      <returns>
        <see langword="true" />, wenn die <see langword="Fill" />-Methode anbieterspezifische Werte zurückgeben soll, andernfalls <see langword="false" />, um allgemeine CLS-kompatible Werte zurückzugeben.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Gibt an, wie eine Quelltabelle einer Datasettabelle zugeordnet wird.</summary>
      <returns>Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Ruft eine Auflistung ab, die die Masterzuordnung zwischen einer Quelltabelle und einer <see cref="T:System.Data.DataTable" /> bereitstellt.</summary>
      <returns>Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Enthält eine generische Spaltenzuordnung für ein Objekt, das von <see cref="T:System.Data.Common.DataAdapter" /> erbt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse mit dem angegebenen Quellspaltennamen und dem <see cref="T:System.Data.DataSet" />-Spaltennamen, für den die Zuordnung erfolgen soll.</summary>
      <param name="sourceColumn">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn">Der Spaltenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Ruft eine <see cref="T:System.Data.DataColumn" /> aus der angegebenen <see cref="T:System.Data.DataTable" /> unter Verwendung der <see cref="T:System.Data.MissingSchemaAction" />-Eigenschaft und der <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />-Eigenschaft ab.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, aus der die Spalte abgerufen werden soll.</param>
      <param name="dataType">Der <see cref="T:System.Type" /> der Datenspalte.</param>
      <param name="schemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns>Eine Datenspalte.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Eine statische Version von <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" />, die ohne Instanziierung eines <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts aufgerufen werden kann.</summary>
      <param name="sourceColumn">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn">Der Spaltenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataTable">Eine Instanz von <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">Der Datentyp für die Spalte, die zugeordnet wird.</param>
      <param name="schemaAction">Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</param>
      <returns>Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns>Eine Kopie des aktuellen Objekts.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Konvertiert den aktuellen <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" />-Namen in eine Zeichenfolge.</summary>
      <returns>Der aktuelle <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" />-Name als Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Ruft den Namen der Spalte in dem <see cref="T:System.Data.DataSet" /> ab, für das die Zuordnung erfolgen soll, oder legt diesen fest.</summary>
      <returns>Der Name der Spalte in dem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll. Bei dem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Ruft den Namen der Spalte in der Datenquelle ab, aus der die Zuordnung erfolgen soll, oder legt diesen fest. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <returns>Der Name der Spalte in der Datenquelle unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Enthält eine Auflistung von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Erstellt ein leeres <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt hinzu.</summary>
      <param name="value">Ein der Auflistung hinzuzufügendes <see langword="DataColumnMapping" />-Objekt.</param>
      <exception cref="T:System.InvalidCastException">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
      <returns>Der Index des <see langword="DataColumnMapping" />-Objekts, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt hinzu, sofern ein Quellspaltenname und ein <see cref="T:System.Data.DataSet" />-Spaltenname angegeben sind.</summary>
      <param name="sourceColumn">Der Name der Quellspalte, für die die Zuordnung erfolgen soll, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumn">Der Name der <see cref="T:System.Data.DataSet" />-Spalte, für die die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das der Auflistung hinzugefügte <see langword="DataColumnMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Kopiert die Elemente der angegebenen <see cref="T:System.Array" /> an das Ende der Auflistung.</summary>
      <param name="values">Der der Auflistung hinzuzufügende <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.Common.DataColumnMapping" />-Arrays an das Ende der Auflistung.</summary>
      <param name="values">Das Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Entfernt alle <see cref="T:System.Data.Common.DataColumnMapping" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Object" /> in der Auflistung vorhanden ist.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das die <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <exception cref="T:System.InvalidCastException">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
      <returns>
        <see langword="true" />, wenn die Auflistung das angegebene <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen in der Auflistung vorhanden ist.</summary>
      <param name="value">Der Quellspaltenname des <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente von <see cref="T:System.Data.Common.DataColumnMappingCollection" /> in das angegebene Array.</summary>
      <param name="array">Ein <see cref="T:System.Array" />, in das <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Data.Common.DataColumnMappingCollection" /> in das angegebene <see cref="T:System.Data.Common.DataColumnMapping" />-Array.</summary>
      <param name="array">Ein <see cref="T:System.Data.Common.DataColumnMapping" />-Array, in das die <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, ab dem kopiert wird.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="value">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Spalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Ruft eine <see cref="T:System.Data.Common.DataColumnMapping" /> für die angegebene <see cref="T:System.Data.Common.DataColumnMappingCollection" />, den angegebenen Quellspaltennamen und die angegebene <see cref="T:System.Data.MissingMappingAction" /> ab.</summary>
      <param name="columnMappings">Die <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Der zu suchende Quellspaltenname unter Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="mappingAction">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <exception cref="T:System.InvalidOperationException">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
      <returns>Ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Eine statische Methode, die ein <see cref="T:System.Data.DataColumn" />-Objekt zurückgibt, ohne ein <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Objekt zu instanziieren.</summary>
      <param name="columnMappings">Die <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">Der Spaltenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataType">Der Datentyp für die Spalte, die zugeordnet wird.</param>
      <param name="dataTable">Eine Instanz von <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <param name="schemaAction">Bestimmt die Aktion, die ausgeführt werden soll, wenn das vorhandene <see cref="T:System.Data.DataSet" />-Schema eingehenden Daten nicht entspricht.</param>
      <returns>Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Ruft die Position des angegebenen <see cref="T:System.Object" /> ab, das eine <see cref="T:System.Data.Common.DataColumnMapping" /> in der Auflistung ist.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das die zu suchende <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <returns>Die nullbasierte Position des angegebenen <see cref="T:System.Object" />, das ein <see cref="T:System.Data.Common.DataColumnMapping" /> in der Auflistung ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Ruft die Position der <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen Quellspaltennamen ab.</summary>
      <param name="sourceColumn">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position der <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen Quellspaltennamen unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Ruft die Position der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumn">Der Name der zu suchenden Datasetspalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> mit dem angegebenen <see langword="DataSet" />-Spaltennamen oder -1, wenn das <see langword="DataColumnMapping" />-Objekt in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Fügt ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein.</summary>
      <param name="index">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <param name="value">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Fügt ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein.</summary>
      <param name="index">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <param name="value">Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Entfernt den angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> aus der Auflistung.</summary>
      <param name="value">Das zu entfernende <see cref="T:System.Data.Common.DataColumnMapping" />-Element.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Entfernt das <see cref="T:System.Object" />, das eine <see cref="T:System.Data.Common.DataColumnMapping" /> ist, aus der Auflistung.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das die zu entfernende <see cref="T:System.Data.Common.DataColumnMapping" /> ist.</param>
      <exception cref="T:System.InvalidCastException">Das angegebene Objekt war kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt.</exception>
      <exception cref="T:System.ArgumentException">Das angegebene Objekt ist in der Auflistung nicht vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Index vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen aus der Auflistung.</summary>
      <param name="sourceColumn">Der Quellspaltenname mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Fügt der <see cref="T:System.Data.Common.DataColumnMapping" />-Auflistung mithilfe des Namens der Quellspalte und des Namens der <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Spalte ein <see cref="T:System.Data.DataSet" />-Objekt hinzu.</summary>
      <param name="sourceColumnName">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumnName">Der Name der <see cref="T:System.Data.DataSet" />-Spalte.</param>
      <returns>Das ColumnMapping-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumnName">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Spalte ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Ruft die Anzahl der <see cref="T:System.Data.Common.DataColumnMapping" />-Objekte in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des zu suchenden <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts.</param>
      <returns>Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen ab oder legt dieses fest.</summary>
      <param name="sourceColumn">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> eine feste Größe hat.</summary>
      <returns>Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Ruft das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen ab oder legt dieses fest.</summary>
      <param name="index">Der Index des Elements.</param>
      <returns>Das <see langword="IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Enthält eine Beschreibung einer zugeordneten Beziehung zwischen einer Quelltabelle und einer <see cref="T:System.Data.DataTable" />. Diese Klasse wird von einem <see cref="T:System.Data.Common.DataAdapter" /> verwendet, wenn ein <see cref="T:System.Data.DataSet" /> aufgefüllt wird.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse mit einer Quelle, sofern ein Quelltabellenname und ein <see cref="T:System.Data.DataTable" />-Name angegeben sind.</summary>
      <param name="sourceTable">Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse, sofern ein Quelltabellenname, ein <see cref="T:System.Data.DataTable" />-Name und ein Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten angegeben sind.</summary>
      <param name="sourceTable">Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
      <param name="columnMappings">Ein Array von <see cref="T:System.Data.Common.DataColumnMapping" />-Objekten.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Ruft eine <see cref="T:System.Data.DataColumn" /> aus der angegebenen <see cref="T:System.Data.DataTable" /> ab, wobei der angegebene <see cref="T:System.Data.MissingMappingAction" />-Wert und der Name der <see cref="T:System.Data.DataColumn" /> verwendet werden.</summary>
      <param name="sourceColumn">Der Name von <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <exception cref="T:System.InvalidOperationException">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
      <returns>Eine Datenspalte.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Gibt ein <see cref="T:System.Data.DataColumn" />-Objekt für einen angegebenen Spaltennamen zurück.</summary>
      <param name="sourceColumn">Der Name von <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">Der Datentyp für <paramref name="sourceColumn" />.</param>
      <param name="dataTable">Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll.</param>
      <param name="mappingAction">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <param name="schemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns>Ein <see cref="T:System.Data.DataColumn" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Ruft die aktuelle <see cref="T:System.Data.DataTable" /> für das angegebene <see cref="T:System.Data.DataSet" /> unter Verwendung des angegebenen <see cref="T:System.Data.MissingSchemaAction" />-Werts ab.</summary>
      <param name="dataSet">Das <see cref="T:System.Data.DataSet" />, aus dem die <see cref="T:System.Data.DataTable" /> abgerufen werden soll.</param>
      <param name="schemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <returns>Datentabelle</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns>Ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Konvertiert den aktuellen <see cref="P:System.Data.Common.DataTableMapping.SourceTable" />-Namen in eine Zeichenfolge.</summary>
      <returns>Der aktuelle <see cref="P:System.Data.Common.DataTableMapping.SourceTable" />-Name als Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Ruft den <see cref="T:System.Data.Common.DataColumnMappingCollection" /> für den <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns>Eine Datenspalten-Zuordnungssammlung.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Ruft den Tabellennamen aus einem <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns>Der Tabellenname aus einem <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Ruft den Quelltabellennamen aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns>Der Quelltabellenname aus einer Datenquelle mit Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Ruft die abgeleitete <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Klasse für die <see cref="T:System.Data.DataTable" />-Klasse ab.</summary>
      <returns>Eine Datenspalten-Zuordnungssammlung.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Eine Auflistung von <see cref="T:System.Data.Common.DataTableMapping" />-Objekten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DataTableMappingCollection" />-Klasse. Diese neue Instanz ist leer, d. h., sie enthält noch keine <see cref="T:System.Data.Common.DataTableMapping" />-Objekte.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Object" /> hinzu, das eine Tabellenzuordnung ist.</summary>
      <param name="value">Ein der Auflistung hinzuzufügendes <see langword="DataTableMapping" />-Objekt.</param>
      <exception cref="T:System.InvalidCastException">Das übergebene Objekt war kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</exception>
      <returns>Der Index des <see langword="DataTableMapping" />-Objekts, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Fügt der Auflistung ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt hinzu, sofern ein Quelltabellename und ein <see cref="T:System.Data.DataSet" />-Tabellenname angegeben sind.</summary>
      <param name="sourceTable">Der Name der Quelltabelle, aus der die Zuordnung erfolgen soll, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle, für die die Zuordnung erfolgen soll, ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das der Auflistung hinzugefügte <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Kopiert die Elemente der angegebenen <see cref="T:System.Array" /> an das Ende der Auflistung.</summary>
      <param name="values">Ein der Auflistung hinzuzufügendes <see cref="T:System.Array" /> von Werten.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Arrays an das Ende der Auflistung.</summary>
      <param name="values">Das Array von <see cref="T:System.Data.Common.DataTableMapping" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Entfernt alle <see cref="T:System.Data.Common.DataTableMapping" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt in der Auflistung vorhanden ist.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das die <see cref="T:System.Data.Common.DataTableMapping" /> ist.</param>
      <returns>
        <see langword="true" />, wenn diese Auflistung das angegebene <see cref="T:System.Data.Common.DataTableMapping" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen in der Auflistung vorhanden ist.</summary>
      <param name="value">Der Name der Quelltabelle, die das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt enthält, mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit diesem Quelltabellennamen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente von <see cref="T:System.Data.Common.DataTableMappingCollection" /> in das angegebene Array.</summary>
      <param name="array">Ein <see cref="T:System.Array" />, in das die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Kopiert die Elemente von <see cref="T:System.Data.Common.DataTableMapping" /> in das angegebene Array.</summary>
      <param name="array">Eine <see cref="T:System.Data.Common.DataTableMapping" />, in die die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Elemente kopiert werden sollen.</param>
      <param name="index">Der Anfangsindex des Arrays.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTable">Der Name der zu suchenden <see cref="T:System.Data.DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Auflistung durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.Common.DataColumnMapping" /> ein <see cref="T:System.Data.DataSet" />-Objekt mit dem angegebenen Quelltabellennamen und <see cref="T:System.Data.MissingMappingAction" />-Tabellennamen ab.</summary>
      <param name="tableMappings">Die zu durchsuchende <see cref="T:System.Data.Common.DataTableMappingCollection" />-Auflistung.</param>
      <param name="sourceTable">Der Name der zugeordneten Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTable">Der Name der zugeordneten <see cref="T:System.Data.DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="mappingAction">Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte.</param>
      <exception cref="T:System.InvalidOperationException">Der <paramref name="mappingAction" />-Parameter wurde auf <see langword="Error" /> festgelegt, und es wurde keine Zuordnung angegeben.</exception>
      <returns>Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Ruft die Position des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Objekts in der Auflistung ab.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, das das zu suchende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt ist.</param>
      <returns>Die nullbasierte Position des angegebenen <see cref="T:System.Data.Common.DataTableMapping" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Ruft die Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen Quelltabellennamen ab.</summary>
      <param name="sourceTable">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen Quelltabellennamen.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Ruft die Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTable">Der Name der zu suchenden <see langword="DataSet" />-Tabelle ohne Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position des <see cref="T:System.Data.Common.DataTableMapping" />-Objekts mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen oder -1, wenn das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Fügt ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataTableMappingCollection" /> ein.</summary>
      <param name="index">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <param name="value">Das einzufügende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Fügt ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index in die <see cref="T:System.Data.Common.DataTableMappingCollection" /> ein.</summary>
      <param name="index">Der nullbasierte Index des einzufügenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <param name="value">Das einzufügende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Entfernt das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt aus der Auflistung.</summary>
      <param name="value">Das zu entfernende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Entfernt das angegebene <see cref="T:System.Data.Common.DataTableMapping" />-Objekt aus der Auflistung.</summary>
      <param name="value">Das zu entfernende <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <exception cref="T:System.InvalidCastException">Das angegebene Objekt war kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</exception>
      <exception cref="T:System.ArgumentException">Das angegebene Objekt ist in der Auflistung nicht vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es ist kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Index vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen aus der Auflistung.</summary>
      <param name="sourceTable">Der zu suchende Quelltabellenname unter Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es ist kein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen vorhanden.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Fügt der Auflistung eine Tabellenzuordnung hinzu.</summary>
      <param name="sourceTableName">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTableName">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle.</param>
      <returns>Ein Verweis auf das neu zugeordnete <see cref="T:System.Data.ITableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Ruft das TableMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTableName">Der Name der <see langword="DataSet" />-Tabelle in der Auflistung.</param>
      <returns>Das TableMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Ruft die Anzahl der <see cref="T:System.Data.Common.DataTableMapping" />-Objekte in der Auflistung ab.</summary>
      <returns>Die Anzahl der <see langword="DataTableMapping" />-Objekte in der Auflistung.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des zurückzugebenden <see cref="T:System.Data.Common.DataTableMapping" />-Objekts.</param>
      <returns>Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen ab oder legt dieses fest.</summary>
      <param name="sourceTable">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Das <see cref="T:System.Data.Common.DataTableMapping" />-Objekt mit dem angegebenen Quelltabellennamen.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> eine feste Größe aufweist.</summary>
      <returns>Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IList" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.IList" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft ein Element am angegebenen Index aus der Auflistung ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Ruft die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen ab oder legt diese fest.</summary>
      <param name="index">Der <see langword="SourceTable" />-Name der <see cref="T:System.Data.ITableMapping" />-Schnittstelle.</param>
      <returns>Die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see langword="SourceTable" />-Namen.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Stellt eine Spalte mit einer Datenquelle dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbColumn" />-Klasse.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob <see langword="DBNull" />-Werte in dieser Spalte zulässig sind, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob <see langword="DBNull" />-Werte in dieser Spalte zulässig sind, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn <see langword="DBNull" />-Werte in dieser Spalte nicht zulässig sind; andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Ruft den Katalognamen auf, der der Datenquelle zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Katalognamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns>Der Katalogname, der der Datenquelle zugeordnet ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Ruft den Namen der Basisspalte ab; ist andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Spaltennamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns>Der Name der Basisspalte; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Ruft den Schemanamen auf, der der Datenquelle zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Schemanamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns>Der Schemaname, der mit der Datenquelle verknüpft ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Ruft den Servernamen ab, der der Spalte zugeordnet ist; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Servernamen oder <see langword="null" /> festgelegt werden.</summary>
      <returns>Der Servername, der der Spalte zugeordnet ist; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Ruft den Tabellennamen im Schema ab. Andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde. Kann entweder auf den Tabellennamen oder <see langword="null" /> festgelegt werden, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns>Der Tabellenname ist das Schema. Andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt wurde.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Ruft den Namen der Spalte ab. Kann beim Überschreiben in einer abgeleiteten Klasse auf den Spaltennamen festgelegt werden.</summary>
      <returns>Der Name der Spalte.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Ruft die Position der Spalte (ordinal) in der Zeile der Datenquelle ab; andernfalls <see langword="null" />, falls kein Wert festgelegt ist. Sie kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die Spaltenposition anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Ein <see langword="int32" />-Wert für die Ordnungszahl der Spalte; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Ruft die Größe der Spalte ab. Ist andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Sie kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die Spaltengröße anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Ein- <see langword="int32" /> Wert für die Spaltengröße; andernfalls ein NULL-Verweis ( <see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Gibt den Typ der in der Spalte gespeicherten Daten zurück. Kann auf ein <see cref="T:System.Type" />-Objekt festgelegt werden, dass den Datentyp in der Spalte darstellt, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns>Ein <see cref="T:System.Type" />-Objekt, das den in der Spalte enthaltenen Datentyp darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Ruft den Namen des Datentyps ab; andernfalls <see langword="null" />, wenn kein Wert festgelegt wurde. Kann entweder auf den Datentypnamen oder <see langword="null" /> festgelegt werden, wenn es in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns>Der Name des Datentyps; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Alias ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Alias ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn diese Spalte ein Alias ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob Werte in dieser Spalte automatisch inkrementiert werden, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob Werte in dieser Spalte automatisch inkrementiert werden, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn Werte in dieser Spalte automatisch inkrementiert werden; andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Ausdruck ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Ausdruck ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn diese Spalte ein Ausdruck ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ausgeblendet ist oder <see langword="null" /> zurückgibt, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ausgeblendet ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn die Spalte ausgeblendet ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte eine Identität ist, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte eine Identität ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn diese Spalte eine Identität ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte ein Schlüssel ist oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte ein Schlüssel ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn diese Spalte ein Schlüssel ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte lange Daten enthält, oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte lange Daten enthält, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn diese Spalte lange Daten enthält; andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob diese Spalte schreibgeschützt ist oder <see langword="null" /> zurückgibt, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob die Spalte schreibgeschützt ist, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn die Spalte schreibgeschützt ist, andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Ruft einen booleschen NULL-Wert auf, der angibt, ob eine eindeutige Einschränkung für diese Spalte gilt oder gibt <see langword="null" /> zurück, wenn kein Wert festgelegt ist. Kann entweder auf <see langword="true" /> oder <see langword="false" /> festgelegt werden, was angibt, ob eine eindeutige Einschränkung für diese Spalte gilt, oder <see langword="null" /> (<see langword="Nothing" /> in Visual Basic), wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Gibt <see langword="true" /> zurück, wenn eine eindeutige Einschränkung für diese Spalte gilt; andernfalls <see langword="false" />. Wenn kein Wert festgelegt ist, wird ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Ruft das Objekt auf Grundlage des Spalteneigenschaftennamens ab.</summary>
      <param name="property">Der Spalteneigenschaftenname.</param>
      <returns>Das Objekt auf Grundlage des Spalteneigenschaftennamens.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Ruft die numerische Präzision der Spaltendaten ab; andernfalls <see langword="null" />, wenn kein Fest angegeben wurde. Kann entweder auf einen <see langword="int32" />-Wert festgelegt werden, um die numerische Präzision der Spaltendaten anzugeben, oder auf <see langword="null" />, wenn sie in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Ein- <see langword="int32" /> Wert, der die Genauigkeit der Spaltendaten angibt, wenn die Daten numerisch sind; andernfalls ein NULL-Verweis ( <see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Ruft einen auf NULL-festlegbaren <see langword="int32" />-Wert ab, der entweder <see langword="null" /> oder den numerischen Bereich der Spaltendaten zurückgibt. Kann für den numerischen Bereich der Spaltendaten entweder auf <see langword="null" /> oder auf einen <see langword="int32" />-Wert festgelegt werden, wenn er in einer abgeleiteten Klasse außer Kraft gesetzt wird.</summary>
      <returns>Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt wurde. Andernfalls ein <see langword="int32" />-Wert, der den Bereich der Spaltendaten angibt, wenn die Daten numerisch sind.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Ruft den durch die Assembly qualifizierten Namen des <see cref="T:System.Type" />-Objekts ab, das den Datentyp in der Spalte darstellt; andernfalls <see langword="null" />, wenn kein Wert festgelegt ist. Kann beim Überschreiben in einer abgeleiteten Klasse auf den durch die Assembly qualifizierten Namen oder <see langword="null" /> festgelegt werden.</summary>
      <returns>Der durch die Assembly qualifizierte Name des <see cref="T:System.Type" />-Objekts, das den Datentyp in der Spalte darstellt; andernfalls ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn kein Wert festgelegt ist.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Stellt eine SQL-Anweisung oder eine gespeicherte Prozedur dar, die in einer Datenquelle ausgeführt werden soll. Stellt eine Basisklasse für datenbankspezifische Klassen bereit, die Befehle darstellen. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Erstellt eine Instanz des <see cref="T:System.Data.Common.DbCommand" />-Objekts.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>Versucht bei Überschreibung in einer abgeleiteten Klasse, das Ausführen eines <see cref="T:System.Data.Common.DbCommand" /> abzubrechen.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>Erstellt bei Überschreibung in einer abgeleiteten Klasse eine neue Instanz eines <see cref="T:System.Data.Common.DbParameter" />-Objekts.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Erstellt eine neue Instanz eines <see cref="T:System.Data.Common.DbParameter" />-Objekts.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary>Stellt das Befehlsobjekt asynchron bereit.</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>Führt bei Überschreibung in einer abgeleiteten Klasse den Befehlstext für die Verbindung aus.</summary>
      <param name="behavior">Eine Instanz von <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Anbieter sollten diese Methode implementieren, um eine nicht standardmäßige Implementierung für <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />-Überladungen bereitzustellen.  
  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteReader" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat. Die Ausnahmen, die von ExecuteReader ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
  
Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern. Implementierungen können diese Anforderung ignorieren.</summary>
      <param name="behavior">Optionen zur Ausführung der Anweisung und zum Datenabruf.</param>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>Führt bei Überschreibung in einer abgeleiteten Klasse eine SQL-Anweisung für ein Verbindungsobjekt aus.</summary>
      <returns>Die Anzahl der betroffenen Zeilen.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary>Eine asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, die eine SQL-Anweisung für ein Verbindungsobjekt ausführt.  
  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional ignoriert werden.  
  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat.  Die Ausnahmen, die von <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbCommand" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Führt <see cref="P:System.Data.Common.DbCommand.CommandText" /> für die <see cref="P:System.Data.Common.DbCommand.Connection" /> aus und gibt einen <see cref="T:System.Data.Common.DbDataReader" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Führt <see cref="P:System.Data.Common.DbCommand.CommandText" /> für die <see cref="P:System.Data.Common.DbCommand.Connection" /> aus und gibt einen <see cref="T:System.Data.Common.DbDataReader" /> mit einem der <see cref="T:System.Data.CommandBehavior" />-Werte zurück.</summary>
      <param name="behavior">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <returns>Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary>Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.  
  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt.  
  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="behavior">Einer der Enumerationswerte, die das Befehlsverhalten angegeben haben.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="behavior">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Eine asynchrone Version von <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, die <see cref="P:System.Data.Common.DbCommand.CommandText" /> gegen <see cref="P:System.Data.Common.DbCommand.Connection" /> ausführt und <see cref="T:System.Data.Common.DbDataReader" /> zurückgibt. Diese Methode gibt eine Benachrichtigung darüber weiter, dass Vorgänge abgebrochen werden sollen.  
  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> auf.</summary>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <exception cref="T:System.ArgumentException">Ein ungültiger <see cref="T:System.Data.CommandBehavior" />-Wert.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>Führt bei Überschreibung in einer abgeleiteten Klasse die Abfrage aus und gibt die erste Spalte der ersten Zeile des Resultsets zurück, das für die Abfrage zurückgegeben wurde. Alle anderen Spalten und Zeilen werden ignoriert.</summary>
      <returns>Die erste Spalte der ersten Zeile im Resultset.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary>Eine asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, die die Abfrage ausführt und die erste Spalte der ersten Zeile im Resultset zurückgibt. Alle anderen Spalten und Zeilen werden ignoriert.  
  
Ruft <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional ignoriert werden.  
  
Die Standardimplementierung ruft die synchrone <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />-Methode auf und gibt eine abgeschlossene Aufgabe zurück. Der aufrufende Thread wird blockiert. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen Abbruchtoken erhalten hat. Die Ausnahmen, die von ExecuteReader ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbCommand" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>Erstellt bei Überschreibung in einer abgeleiteten Klasse eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary>Erstellt asynchron eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Erstellt eine neue Instanz eines <see cref="T:System.Data.IDbDataParameter" /> -Objekts.</summary>
      <returns>Ein <see langword="IDbDataParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Führt den <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt einen <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Führt <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt mit einem der <see cref="T:System.Data.IDataReader" />-Werte einen <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Einer der Enumerationswerte, die das Befehlsverhalten angeben.</param>
      <returns>Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse den für die Datenquelle auszuführenden Textbefehl ab bzw. legt ihn fest.</summary>
      <returns>Der auszuführende Textbefehl. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse die Zeit (in Sekunden) ab, die gewartet werden soll, bis der Versuch einer Befehlsausführung beendet und ein Fehler generiert wird, oder legt diese fest.</summary>
      <returns>Die Dauer in Sekunden, für die auf die Ausführung des Befehls gewartet werden soll.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse ab, wie die <see cref="P:System.Data.Common.DbCommand.CommandText" />-Eigenschaft interpretiert wird, oder legt fest, wie sie interpretiert wird.</summary>
      <returns>Einer der Enumerationswerte, der angibt, wie eine Befehls Zeichenfolge interpretiert wird. Der Standardwert ist <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Ruft die von diesem <see cref="T:System.Data.Common.DbConnection" /> verwendete <see cref="T:System.Data.Common.DbCommand" /> ab oder legt diese fest.</summary>
      <returns>Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse die <see cref="T:System.Data.Common.DbConnection" />-Eigenschaft ab, die für diesen <see cref="T:System.Data.Common.DbCommand" /> verwendet wird.</summary>
      <returns>Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse die Sammlung von <see cref="T:System.Data.Common.DbParameter" />-Objekten ab.</summary>
      <returns>Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse die <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt diese Transaktion fest.</summary>
      <returns>Die Transaktion, in der ein Befehls Objekt eines .NET-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob das Befehlsobjekt in einem benutzerdefinierten Schnittstellensteuerelement sichtbar sein soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Befehlsobjekt in einem Steuerelement sichtbar sein soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Ruft die Auflistung von <see cref="T:System.Data.Common.DbParameter" />-Objekten ab. Weitere Informationen zu Parametern finden Sie unter Konfigurieren von Parametern und Parameterdatentypen.</summary>
      <returns>Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Ruft die <see cref="T:System.Data.IDbConnection" /> ab, die von dieser Instanz des <see cref="T:System.Data.IDbCommand" /> verwendet wird, oder legt diese fest.</summary>
      <returns>Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Ruft das <see cref="T:System.Data.IDataParameterCollection" /> ab.</summary>
      <returns>Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Ruft die <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt sie fest.</summary>
      <returns>Die Transaktion, innerhalb der das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Ruft die <see cref="T:System.Data.Common.DbTransaction" /> ab, in der dieses <see cref="T:System.Data.Common.DbCommand" />-Objekt ausgeführt wird, oder legt sie fest.</summary>
      <returns>Die Transaktion, innerhalb der das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse ab, wie Befehlsergebnisse auf <see cref="T:System.Data.DataRow" /> angewendet werden, wenn diese von der Update-Methode eines <see cref="T:System.Data.Common.DbDataAdapter" /> verwendet wird, oder legt fest, wie Befehlsergebnisse angewendet werden.</summary>
      <returns>Einer der Enumerationswerte, der angibt, wie die Befehls Ergebnisse angewendet werden. Die Standardeinstellung ist <see langword="Both" />, sofern der Befehl nicht automatisch generiert wird. Dann ist die Standardeinstellung <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Generiert automatisch Befehle für einzelne Tabellen, durch die an einem <see cref="T:System.Data.DataSet" /> vorgenommene Änderungen mit der zugeordneten Datenbank abgeglichen werden. Dies ist eine abstrakte Klasse, die nur geerbt werden kann.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz einer Klasse, die von der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse erbt.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Ermöglicht es der Anbieterimplementierung der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse, zusätzliche Parametereigenschaften zu behandeln.</summary>
      <param name="parameter">Ein <see cref="T:System.Data.Common.DbParameter" />, auf den die zusätzlichen Änderungen angewendet werden.</param>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> aus der von <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> bereitgestellten Schematabelle.</param>
      <param name="statementType">Der Typ von Befehl, der generiert wird: INSERT, UPDATE oder DELETE.</param>
      <param name="whereClause">
        <see langword="true" />, wenn der Parameter Teil der WHERE-Klausel für update oder delete ist, <see langword="false" />, wenn er Teil des Werts für insert oder update ist.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Data.Common.DbCommandBuilder" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Löschvorgängen in der Datenquelle erforderlich ist.</summary>
      <returns>Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Löschvorgängen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Wenn der Wert <see langword="false" /> ist, werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns>Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich ist.</summary>
      <returns>Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Einfügevorgängen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Wenn der Wert <see langword="false" /> ist, werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns>Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Gibt den Namen des angegebenen Parameters im Format <c>@p#</c> zurück. Verwenden Sie diesen zum Erstellen eines benutzerdefinierten Befehls-Generators.</summary>
      <param name="parameterOrdinal">Die Zahl, die als Teil des Parameternamens eingeschlossen werden muss.</param>
      <returns>Der Name des Parameters mit der angegebenen Zahl, die als Teil des Parameternamens angefügt wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Gibt den vollständigen Parameternamen zurück, wenn der partielle Parameternamen angegeben ist.</summary>
      <param name="parameterName">Der partielle Name des Parameters.</param>
      <returns>Der vollständige Parametername, der dem angeforderten partiellen Parameternamen entspricht.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Gibt den Platzhalter für den Parameter in der zugeordneten SQL-Anweisung zurück.</summary>
      <param name="parameterOrdinal">Die Zahl, die als Teil des Parameternamens eingeschlossen werden muss.</param>
      <returns>Der Name des Parameters, an den die festgelegte Zahl angefügt ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Gibt die Schematabelle für den <see cref="T:System.Data.Common.DbCommandBuilder" /> zurück.</summary>
      <param name="sourceCommand">Der <see cref="T:System.Data.Common.DbCommand" /> für den die entsprechende Schematabelle abgerufen werden soll.</param>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die das Schema für den bestimmten <see cref="T:System.Data.Common.DbCommand" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Aktualisierungen in der Datenquelle erforderlich ist.</summary>
      <returns>Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Ruft das automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt ab, das zum Ausführen von Aktualisierungen in der Datenquelle erforderlich ist, wobei optional Spalten für Parameternamen verwendet werden.</summary>
      <param name="useColumnsForParameterNames">Generiert bei einem Wert von <see langword="true" /> Parameternamen, die den Spaltennamen entsprechen (falls möglich). Bei <see langword="false" /> werden <c>@p1</c>, <c>@p2</c> usw. generiert.</param>
      <returns>Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Legt die Eigenschaften <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> und <see cref="T:System.Data.UpdateRowSource" /> für <see cref="T:System.Data.Common.DbCommand" /> erneut fest.</summary>
      <param name="command">Der <see cref="T:System.Data.Common.DbCommand" />, der vom Befehls-Generator für einen der entsprechenden Befehle insert, update oder delete verwendet werden muss.</param>
      <returns>Eine <see cref="T:System.Data.Common.DbCommand" />-Instanz, die für die einzelnen Operationen insert, update oder delete verwendet werden muss. Durch Übergeben eines NULL-Werts kann die <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> -Methode ein <see cref="T:System.Data.Common.DbCommand" />-Objekt erstellen. Dies erfolgt auf der Grundlage des Select-Befehls, der dem <see cref="T:System.Data.Common.DbCommandBuilder" /> zugeordnet ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Bei einem Bezeichner ohne Anführungszeichen in der richtigen Katalogschreibweise wird die korrekte Form des jeweiligen Bezeichners mit Anführungszeichen zurückgegeben, einschließlich der ordnungsgemäßen Escapezeichen für ggf. vorhandene eingebettete Anführungszeichen im Bezeichner.</summary>
      <param name="unquotedIdentifier">Der ursprüngliche Bezeichner ohne Anführungszeichen.</param>
      <returns>Die Version des Bezeichners mit Anführungszeichen. Eingebettete Anführungszeichen im Bezeichner werden ordnungsgemäß mit Escapezeichen versehen.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Löscht die diesem <see cref="T:System.Data.Common.DbCommandBuilder" /> zugeordneten Befehle.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Fügt einen Ereignishandler für das <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />-Ereignis hinzu.</summary>
      <param name="rowUpdatingEvent">Eine Instanz von <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> mit Informationen über das Ereignis.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Registriert den <see cref="T:System.Data.Common.DbCommandBuilder" /> zum Behandeln des <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />-Ereignisses für einen <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">Der für die Aktualisierung zu verwendende <see cref="T:System.Data.Common.DbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Bei einem Bezeichner mit Anführungszeichen wird die richtige Form des Bezeichners ohne Anführungszeichen zurückgegeben. Dies schließt ein, dass Escapezeichen für eingebettete Anführungszeichen im Bezeichner ordnungsgemäß entfernt werden.</summary>
      <param name="quotedIdentifier">Der Bezeichner, dessen eingebettete Anführungszeichen entfernt werden.</param>
      <returns>Der Bezeichner ohne Anführungszeichen, bei dem die Escapezeichen für eingebettete Anführungszeichen ordnungsgemäß entfernt wurden.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Ruft die <see cref="T:System.Data.Common.CatalogLocation" /> für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse ab oder legt sie fest.</summary>
      <returns>Ein <see cref="T:System.Data.Common.CatalogLocation" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Ruft eine Zeichenfolge als Katalogtrennzeichen für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse ab oder legt sie fest.</summary>
      <returns>Eine Zeichenfolge, die das Katalogtrennzeichen zur Verwendung mit einer Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse angibt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Gibt an, welche <see cref="T:System.Data.ConflictOption" /> vom <see cref="T:System.Data.Common.DbCommandBuilder" /> verwendet werden muss.</summary>
      <returns>Gibt einen der <see cref="T:System.Data.ConflictOption" />-Werte zurück, der das Verhalten dieses <see cref="T:System.Data.Common.DbCommandBuilder" /> beschreibt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Ruft ein <see cref="T:System.Data.Common.DbDataAdapter" />-Objekt ab, für das automatisch Transact-SQL-Anweisungen generiert werden, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbDataAdapter" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Ruft das oder die Anfangszeichen ab, die beim Angeben von Datenbankobjekten (z. B. Tabellen oder Spalten) verwendet werden sollen, deren Namen Zeichen wie Leerzeichen oder reservierte Token enthalten, oder legt diese fest.</summary>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft kann nicht geändert werden, nachdem ein INSERT-Befehl, ein UPDATE-Befehl oder ein DELETE-Befehl generiert wurde.</exception>
      <returns>Das oder die zu verwendende(n) Anfangszeichen. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Ruft das oder die Endzeichen ab, die beim Angeben von Datenbankobjekten (z. B. Tabellen oder Spalten) verwendet werden sollen, deren Namen Zeichen wie Leerzeichen oder reservierte Token enthalten, oder legt diese fest.</summary>
      <returns>Das oder die zu verwendende(n) Endzeichen. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Ruft das als Trennzeichen zwischen dem Schemabezeichner und anderen Bezeichnern zu verwendende Zeichen ab oder legt dieses fest.</summary>
      <returns>Das Zeichen, das als Schematrennzeichen verwendet werden soll.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Gibt an, ob alle Spaltenwerte oder nur die geänderten in einer Aktualisierungsanweisung eingeschlossen sind.</summary>
      <returns>
        <see langword="true" />, wenn die vom <see cref="T:System.Data.Common.DbCommandBuilder" /> generierte UPDATE-Anweisung alle Spalten einschließt; <see langword="false" />, wenn nur die geänderten Spalten eingeschlossen werden.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Definiert das Kernverhalten der Datenbankverbindungen und stellt eine Basisklasse für datenbankspezifische Verbindungen bereit</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Tritt auf, wenn sich der Status der Verbindung ändert.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse eine Datenbanktransaktion</summary>
      <param name="isolationLevel">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Startet asynchron eine Datenbanktransaktion</summary>
      <param name="isolationLevel">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Startet eine Datenbanktransaktion.</summary>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Startet eine Datenbanktransaktion mit dem angegebenen Isolationsgrad.</summary>
      <param name="isolationLevel">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Startet asynchron eine Datenbanktransaktion</summary>
      <param name="isolationLevel">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>Startet asynchron eine Datenbanktransaktion</summary>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft ein Objekt ist, das die neue Transaktion darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>Ändert beim Überschreiben in einer abgeleiteten Klasse die aktuelle Datenbank für eine geöffnete Verbindung</summary>
      <param name="databaseName">Der Name der Datenbank für die zu verwendende Verbindung</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Ändert asynchron die aktuelle Datenbank für eine offene Verbindung</summary>
      <param name="databaseName">Der Name der Datenbank für die zu verwendende Verbindung</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse die Verbindung zur Datenbank</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary>Schließt asynchron die Verbindung mit der Datenbank</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Erstellt ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt es zurück.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt es zurück</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary>Stellt das Verbindungsobjekt asynchron bereit</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Führt zu einem Eintrag in der angegebenen Transaktion.</summary>
      <param name="transaction">Ein Verweis auf eine vorhandene <see cref="T:System.Transactions.Transaction" />, in der die Eintragung vorgenommen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> zurück.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens zurück.</summary>
      <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> ist als null angegeben.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Gibt Schemainformationen für die Datenquelle dieser <see cref="T:System.Data.Common.DbConnection" /> mithilfe der angegebenen Zeichenfolge des Schemanamens und des angegebenen Zeichenfolgenarrays der Einschränkungswerte zurück.</summary>
      <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <param name="restrictionValues">Gibt eine Gruppe von Einschränkungswerten für das angeforderte Schema an.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> ist als null angegeben.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />.
Anbieter sollten mit einer entsprechenden Implementierung überschreiben.
Das <paramref name="cancellationToken" /> kann optional berücksichtigt werden.
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück.
Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen <paramref name="cancellationToken" /> erhalten wird.
Die Ausnahmen, die von <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.</summary>
      <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <param name="restrictionValues">Gibt eine Gruppe von Einschränkungswerten für das angeforderte Schema an.</param>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />.
Anbieter sollten mit einer entsprechenden Implementierung überschreiben.
Das <paramref name="cancellationToken" /> kann optional berücksichtigt werden.
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück.
Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen <paramref name="cancellationToken" /> erhalten wird.
Die Ausnahmen, die von <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.</summary>
      <param name="collectionName">Gibt den zurückzugebenden Namen des Schemas an.</param>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary>Dies ist eine asynchrone Version von <see cref="M:System.Data.Common.DbConnection.GetSchema" />.
Anbieter sollten mit einer entsprechenden Implementierung überschreiben.
Das <paramref name="cancellationToken" /> kann optional berücksichtigt werden.
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück.
Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen <paramref name="cancellationToken" /> erhalten wird.
Die Ausnahmen, die von <see cref="M:System.Data.Common.DbConnection.GetSchema" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.Common.DbConnection.StateChange" />-Ereignis aus.</summary>
      <param name="stateChange">Ein <see cref="T:System.Data.StateChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>Öffnet beim Überschreiben in einer abgeleiteten Klasse eine Datenbankverbindung mit den Einstellungen, die durch <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> angegeben werden</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Eine asynchrone Version von <see cref="M:System.Data.Common.DbConnection.Open" />, die eine Datenbankverbindung mit den Einstellungen öffnet, die durch <see cref="P:System.Data.Common.DbConnection.ConnectionString" /> angegeben werden. Diese Methode ruft die virtuelle Methode <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> mit CancellationToken.None auf.</summary>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbConnection.Open" />. Anbieter sollten mit einer entsprechenden Implementierung überschreiben. Das Abbruchtoken kann optional berücksichtigt werden.  
  
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbConnection.Open" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück. Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen cancellationToken erhalten hat. Die Ausnahmen, die von Open ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.  
  
Rufen Sie keine anderen Methoden und Eigenschaften des <see langword="DbConnection" />-Objekts auf, bis die zurückgegebene Aufgabe abgeschlossen ist.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Beginnt eine Datenbanktransaktion.</summary>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Beginnt eine Datenbanktransaktion mit der angegebenen Isolationsstufe.</summary>
      <param name="isolationLevel">Einer der Enumerationswerte, der die Isolationsstufe für die zu verwendende Transaktion angibt</param>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Erstellt ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der aktuellen Verbindung zugeordnet ist, und gibt dieses zurück.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das der Verbindung zugeordnet ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Zeichenfolge, die für die Verbindung benötigt wird, ab oder legt sie fest</summary>
      <returns>Die Verbindungszeichenfolge, mit der die ursprüngliche Verbindung hergestellt wird. Der genaue Inhalt der Verbindungszeichenfolge hängt von der bestimmten Datenquelle für diese Verbindung ab. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Ruft die Zeit (in Sekunden) ab, die beim Verbindungsaufbau gewartet werden soll, bis der Versuch beendet und ein Fehler generiert wird.</summary>
      <returns>Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert wird vom bestimmten Verbindungstyp bestimmt, den Sie verwenden.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen der aktuellen Datenbank ab, nachdem eine Verbindung geöffnet wurde, oder ruft den in der Verbindungszeichenfolge angegebenen Datenbanknamen ab, bevor die Verbindung geöffnet wird</summary>
      <returns>Der Name der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Datenbankservers ab, zu dem die Verbindung hergestellt werden soll</summary>
      <returns>Der Name des Datenbankervers, mit dem eine Verbindung hergestellt werden soll. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Ruft den <see cref="T:System.Data.Common.DbProviderFactory" /> für diesen <see cref="T:System.Data.Common.DbConnection" /> ab.</summary>
      <returns>Ein Satz von Methoden für das Erstellen von Instanzen der Implementierung eines Anbieters der Datenquellenklassen.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Zeichenfolge ab, die die Version des Servers darstellt, mit der das Objekt verbunden ist</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> wurde aufgerufen, während die zurückgegebene Aufgabe nicht abgeschlossen wurde, und die Verbindung wurde nach einem Aufruf von <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" /> nicht geöffnet.</exception>
      <returns>Die Version der Datenbank. Das Format der zurückgegebenen Zeichenfolge hängt vom bestimmten Verbindungstyp ab, den Sie verwenden.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Ruft eine Zeichenfolge ab, die den Zustand der Verbindung beschreibt.</summary>
      <returns>Der Zustand der Verbindung. Das Format der zurückgegebenen Zeichenfolge hängt vom bestimmten Verbindungstyp ab, den Sie verwenden.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Stellt eine Basisklasse für stark typisierte Verbindungszeichenfolgen-Generatoren bereit.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse, wobei optional ODBC-Regeln zum Zitieren von Werten verwendet werden.</summary>
      <param name="useOdbcRules">
        <see langword="true" /> zum Begrenzen von Feldern mit {}, <see langword="false" /> zum Verwenden von Anführungszeichen.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Fügt dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="keyword">Der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hinzuzufügende Schlüssel.</param>
      <param name="value">Der Wert des angegebenen Schlüssels.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.

- oder -

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Bietet eine effiziente und sichere Möglichkeit, einen Schlüssel und Wert an ein vorhandenes <see cref="T:System.Text.StringBuilder" />-Objekt anzufügen.</summary>
      <param name="builder">Der <see cref="T:System.Text.StringBuilder" />, dem das Schlüssel-Wert-Paar hinzugefügt werden soll.</param>
      <param name="keyword">Der hinzuzufügende Schlüssel.</param>
      <param name="value">Der Wert für den bereitgestellten Schlüssel.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Bietet eine effiziente und sichere Möglichkeit, einen Schlüssel und Wert an ein vorhandenes <see cref="T:System.Text.StringBuilder" />-Objekt anzufügen.</summary>
      <param name="builder">Der <see cref="T:System.Text.StringBuilder" />, dem das Schlüssel-Wert-Paar hinzugefügt werden soll.</param>
      <param name="keyword">Der hinzuzufügende Schlüssel.</param>
      <param name="value">Der Wert für den bereitgestellten Schlüssel.</param>
      <param name="useOdbcRules">
        <see langword="true" /> zum Begrenzen von Feldern mit {}, <see langword="false" /> zum Verwenden von Anführungszeichen.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Löscht den Inhalt der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Löscht die Auflistung von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnet sind.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Stellt fest, ob der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen bestimmten Schlüssel enthält.</summary>
      <param name="keyword">Der im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Vergleicht die Verbindungsinformationen in diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekt mit den Verbindungsinformationen im angegebenen Objekt.</summary>
      <param name="connectionStringBuilder">Der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, der mit diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekt verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Verbindungsinformationen in beiden <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Objekten eine gleichwertige Verbindungszeichenfolge ergeben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Füllt eine angegebene <see cref="T:System.Collections.Hashtable" /> mit Informationen zu allen Eigenschaften dieses <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">Die <see cref="T:System.Collections.Hashtable" />, die mit Informationen zu diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zu füllen ist.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Entfernt den Eintrag mit dem angegebenen Schlüssel aus der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz.</summary>
      <param name="keyword">Der Schlüssel des Schlüssel-Wert-Paars, das aus der Verbindungszeichenfolge in diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt, oder <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
      <returns>
        <see langword="true" />, wenn der Schlüssel in der Verbindungszeichenfolge vorhanden war und entfernt wurde, <see langword="false" />, wenn der Schlüssel nicht vorhanden war.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Gibt an, ob der angegebene Schlüssel in dieser <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz vorhanden ist.</summary>
      <param name="keyword">Der im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> einen Eintrag mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Fügt dem <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="keyword">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</param>
      <param name="value">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.IDictionary" />-Objekt ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <param name="keyword">Der im <see cref="T:System.Collections.IDictionary" />-Objekt zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Gibt ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" />-Objekt für das <see cref="T:System.Collections.IDictionary" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />-Objekt.</summary>
      <param name="keyword">Der Schlüssel des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" />, die die Attribute für dieses Objekt enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Klassenname des Objekts oder <see langword="null" />, wenn die Klasse keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Name des Objekts oder <see langword="null" />, wenn das Objekt keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" />, der der Konverter für dieses Objekt ist, oder <see langword="null" />, wenn für dieses Objekt kein <see cref="T:System.ComponentModel.TypeConverter" /> vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" />, das das Standardereignis für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Ereignisse aufweist.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Eigenschaften hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns>Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück, wobei das angegebene Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die gefilterten Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück, wobei das Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die gefilterten Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Gibt die diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnete Verbindungszeichenfolge zurück.</summary>
      <returns>Die aktuelle <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Ruft einen Wert ab, der dem von diesem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> bereitgestellten Schlüssel entspricht.</summary>
      <param name="keyword">Der Schlüssel des abzurufenden Elements.</param>
      <param name="value">Der Wert, der dem <paramref name="keyword" /> entspricht.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> enthält einen NULL-Wert (<see langword="Nothing" /> in Visual Basic).</exception>
      <returns>
        <see langword="true" />, wenn <paramref name="keyword" /> in der Verbindungszeichenfolge gefunden wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft in Visual Studio-Designern sichtbar ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Verbindungszeichenfolge in Designern sichtbar ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Ruft die dem <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> zugeordnete Verbindungszeichenfolge ab oder legt sie fest.</summary>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiges Argument für eine Verbindungszeichenfolge bereitgestellt.</exception>
      <returns>Die aktuelle Verbindungszeichenfolge, die aus den im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthaltenen Schlüssel-Wert-Paaren erstellt wird. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Ruft die aktuelle Anzahl von Schlüsseln ab, die in der <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />-Eigenschaft enthalten sind.</summary>
      <returns>Die Anzahl der Schlüssel in der Verbindungszeichenfolge, die von der <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Instanz verwaltet wird.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> eine feste Größe hat.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Auflistung schreibgeschützt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <param name="keyword">Der Schlüssel des abzurufenden oder festzulegenden Elements.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">Die Eigenschaft wird festgelegt, und der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> ist schreibgeschützt.

- oder -

Die Eigenschaft wird festgelegt, <paramref name="keyword" /> ist in der Auflistung nicht vorhanden, und der <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> hat eine feste Größe.</exception>
      <returns>Der dem angegebenen Schlüssel zugeordnete Wert. Wenn der angegebene Schlüssel nicht gefunden werden kann, wird beim Abrufen dieses Schlüssels ein Nullverweis (<see langword="Nothing" /> in Visual Basic) zurückgegeben, und beim Festlegen wird ein neues Element mit dem angegebenen Schlüssel erstellt.

Beim Übergeben eines Nullschlüssels (<see langword="Nothing" /> in Visual Basic) wird eine <see cref="T:System.ArgumentNullException" /> ausgelöst. Durch Zuweisen eines NULL-Werts wird das Schlüssel-Wert-Paar entfernt.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="keyword">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element mit dem angegebenen Schlüssel.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Ruft ein <see cref="T:System.Collections.ICollection" /> ab, das die Werte im <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte aus den <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> enthält.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Unterstützt die Implementierung der <see cref="T:System.Data.IDbDataAdapter" />-Schnittstelle. Vererber von <see cref="T:System.Data.Common.DbDataAdapter" /> implementieren verschiedene Funktion zur Bereitstellung einer starken Typisierung, aber vererben die meisten Funktionen, die benötigt werden, um einen DataAdapter vollständig zu implementieren.</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>Der vom <see cref="T:System.Data.Common.DataAdapter" />-Objekt verwendete Standardname für Tabellenzuordnungen.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Initialisiert eine neue Instanz einer DataAdapter Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Initialisiert eine neue Instanz einer <see langword="DataAdapter" />-Klasse aus einem vorhandenen Objekt desselben Typs.</summary>
      <param name="adapter">Ein für die Erstellung des neuen <see langword="DataAdapter" /> verwendetes <see langword="DataAdapter" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Fügt im aktuellen Batch einen <see cref="T:System.Data.IDbCommand" /> hinzu.</summary>
      <param name="command">Der dem Batch hinzuzufügende <see cref="T:System.Data.IDbCommand" />.</param>
      <exception cref="T:System.NotSupportedException">Der Adapter unterstützt keine Batches.</exception>
      <returns>Die Anzahl der Befehle im Batch vor dem Hinzufügen des <see cref="T:System.Data.IDbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Entfernt alle <see cref="T:System.Data.IDbCommand" />-Objekte aus dem Batch.</summary>
      <exception cref="T:System.NotSupportedException">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</summary>
      <param name="dataRow">Die <see cref="T:System.Data.DataRow" />, mit der die Datenquelle aktualisiert wird.</param>
      <param name="command">Der während des <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Gibt an, ob es sich bei dem Befehl um eine UPDATE-Anweisung, INSERT-Anweisung, DELETE-Anweisung oder SELECT-Anweisung handelt.</param>
      <param name="tableMapping">Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <returns>Eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</summary>
      <param name="dataRow">Die <see cref="T:System.Data.DataRow" />, mit der die Datenquelle aktualisiert wird.</param>
      <param name="command">Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Gibt an, ob es sich bei dem Befehl um eine UPDATE-Anweisung, INSERT-Anweisung, DELETE-Anweisung oder SELECT-Anweisung handelt.</param>
      <param name="tableMapping">Ein <see cref="T:System.Data.Common.DataTableMapping" />-Objekt.</param>
      <returns>Eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Data.Common.DbDataAdapter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Führt den aktuellen Batch aus.</summary>
      <returns>Der Rückgabewert des letzten Befehls im Batch.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Fügt Zeilen in <see cref="T:System.Data.DataSet" /> hinzu oder aktualisiert diese.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="startRecord">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.  
  
 - oder -  
  
 Die Verbindung ist ungültig.</exception>
      <exception cref="T:System.InvalidCastException">Die Verbindung konnte nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  
  
- oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich im <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" />, den Namen der Quelltabelle, die Befehlszeichenfolge und das Befehlsverhalten verwenden.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="startRecord">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="command">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  
  
- oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Aktualisiert Zeilen im <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <exception cref="T:System.SystemException">Die Quelltabelle ist ungültig.</exception>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den <see cref="T:System.Data.DataTable" />-Namen verwendet.</summary>
      <param name="dataTable">Der Name der <see cref="T:System.Data.DataTable" />, die für die Tabellenzuordnung verwendet werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Aktualisiert Zeilen in einer <see cref="T:System.Data.DataTable" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, wobei die angegebenen Werte für <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> und <see cref="T:System.Data.CommandBehavior" /> verwendet werden.</summary>
      <param name="dataTable">Ein <see cref="T:System.Data.DataTable" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <param name="command">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Aktualisiert Zeilen in einem angegebenen Bereich des <see cref="T:System.Data.DataSet" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen, die den Namen des <see cref="T:System.Data.DataSet" /> und den Namen der <see cref="T:System.Data.DataTable" /> verwenden.</summary>
      <param name="dataTables">Die <see cref="T:System.Data.DataTable" />-Objekte, die aus der Datenquelle gefüllt werden sollen.</param>
      <param name="startRecord">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="command">Der <see cref="T:System.Data.IDbCommand" />, der ausgeführt wird, um die <see cref="T:System.Data.DataTable" />-Objekte zu füllen.</param>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.  
  
 - oder -  
  
 Die Verbindung ist ungültig.</exception>
      <exception cref="T:System.InvalidCastException">Die Verbindung konnte nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="startRecord" />-Parameter ist kleiner als 0.  
  
- oder - 
Der <paramref name="maxRecords" />-Parameter ist kleiner als 0.</exception>
      <returns>Die Anzahl der Zeilen, die in den Datentabellen hinzugefügt bzw. darin aktualisiert wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Aktualisiert Zeilen in einer <see cref="T:System.Data.DataTable" /> oder fügt Zeilen hinzu, um Übereinstimmung mit den Zeilen in der Datenquelle herzustellen. Dabei wird mit dem angegebenen Datensatz begonnen, und es werden bis zur angegebenen Anzahl an Datensätzen abgerufen.</summary>
      <param name="startRecord">Die nullbasierte Datensatznummer, bei der begonnen wird.</param>
      <param name="maxRecords">Die maximale Anzahl der abzurufenden Datensätze.</param>
      <param name="dataTables">Die <see cref="T:System.Data.DataTable" />-Objekte, die aus der Datenquelle gefüllt werden sollen.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataTable" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dieser Wert schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Fügt eine <see cref="T:System.Data.DataTable" /> namens „Tabelle“ zum angegebenen <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, in das das Schema eingefügt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte, die angeben, wie das Schema eingefügt wird.</param>
      <returns>Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.DataTable" /> eine <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, die mit dem Schema aus der Datenquelle gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="command">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns>Ein Array von <see cref="T:System.Data.DataTable" />-Objekten, die aus der Datenquelle zurückgegebene Schemainformationen enthalten.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.DataSet" /> eine <see cref="T:System.Data.DataTable" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" /> und der angegebenen <see cref="T:System.Data.DataTable" /> so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, in das das Schema eingefügt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte, die angeben, wie das Schema eingefügt wird.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Eine Quelltabelle, aus der das Schema abgerufen werden soll, konnte nicht gefunden werden.</exception>
      <returns>Ein Verweis auf eine Auflistung von <see cref="T:System.Data.DataTable" />-Objekten, die dem <see cref="T:System.Data.DataSet" /> hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Konfiguriert das Schema der angegebenen <see cref="T:System.Data.DataTable" /> auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, die mit dem Schema aus der Datenquelle gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die von der Datenquelle zurückgegebenen Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Konfiguriert das Schema der angegebenen <see cref="T:System.Data.DataTable" /> auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" />, der angegebenen Befehlszeichenfolge und der angegebenen <see cref="T:System.Data.CommandBehavior" />-Werte.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, die mit dem Schema aus der Datenquelle gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <param name="command">Die SQL-SELECT-Anweisung, mit der Zeilen aus der Datenquelle abgerufen werden.</param>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns>Ein <see cref="T:System.Data.DataTable" />-Objekt, das aus der Datenquelle zurückgegebene Schemainformationen enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Gibt einen <see cref="T:System.Data.IDataParameter" /> von einem der Befehle im aktuellen Batch zurück.</summary>
      <param name="commandIdentifier">Der Index des Befehls, dessen Parameter abgerufen werden soll.</param>
      <param name="parameterIndex">Der Index des Parameter im Befehl.</param>
      <exception cref="T:System.NotSupportedException">Der Adapter unterstützt keine Batches.</exception>
      <returns>Der angegebene <see cref="T:System.Data.IDataParameter" /> .</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Gibt Informationen über einen einzelnen Updateversuch innerhalb eines größeren Updates im Batchmodus zurück.</summary>
      <param name="commandIdentifier">Die nullbasierte Ordnungszahl der Spalte des einzelnen Befehls im Batch.</param>
      <param name="recordsAffected">Die Anzahl der Zeilen im Datenspeicher, auf die sich der angegebene Befehl im Batch auswirkt.</param>
      <param name="error">Eine <see cref="T:System.Exception" />, die während der Ausführung des angegebenen Befehls ausgelöst wird. Gibt <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) zurück, wenn keine Ausnahme ausgelöst wird.</param>
      <returns>Informationen über einen einzelnen Updateversuch innerhalb eines größeren Updates im Batchmodus.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns>Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Initialisiert die Batchverarbeitung für den <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Löst das <see langword="RowUpdated" />-Ereignis eines .NET Framework-Datenanbieters aus.</summary>
      <param name="value">Ein <see cref="T:System.Data.Common.RowUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Löst das <see langword="RowUpdating" />-Ereignis eines .NET Framework-Datenanbieters aus.</summary>
      <param name="value">Ein <see cref="T:System.Data.Common.RowUpdatingEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns>Ein neues Objekt, das eine Kopie dieser Instanz ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Beendet die Batchverarbeitung für den <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">Der Adapter unterstützt keine Batches.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen Array in <see cref="T:System.Data.DataSet" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataRows">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, mit denen die Datenquelle aktualisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  
  
- oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  
  
- oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen Array von <see cref="T:System.Data.DataSet" />-Objekten die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataRows">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, mit denen die Datenquelle aktualisiert wird.</param>
      <param name="tableMapping">Die zu verwendende <see cref="P:System.Data.IDataAdapter.TableMappings" />-Auflistung.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  
  
- oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  
  
- oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen <see cref="T:System.Data.DataSet" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Aktualisiert die Werte in der Datenbank, indem es die jeweiligen Anweisungen „Einfügen“, „Aktualisieren“ oder „Löschen“ für jede eingefügte, aktualisierte oder gelöschte Zeile in dem <see cref="T:System.Data.DataSet" /> mit dem angegebenen <see cref="T:System.Data.DataTable" />-Namen ausführt.</summary>
      <param name="dataSet">Das zum Aktualisieren der Datenquelle zu verwendende <see cref="T:System.Data.DataSet" />.</param>
      <param name="srcTable">Der Name der Quelltabelle, die für die Tabellenzuordnung verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Aktualisiert die Werte in der Datenbank, indem für jede eingefügte, aktualisierte oder gelöschte Zeile im angegebenen <see cref="T:System.Data.DataTable" /> die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung ausgeführt werden.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, mit der die Datenquelle aktualisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die Quelltabelle ist ungültig.</exception>
      <exception cref="T:System.SystemException">Es ist keine zu aktualisierende <see cref="T:System.Data.DataRow" /> vorhanden.  
  
- oder - 
Es ist keine zu aktualisierende <see cref="T:System.Data.DataTable" /> vorhanden.  
  
- oder - 
Es ist kein <see cref="T:System.Data.DataSet" /> vorhanden, das als Quelle verwendet werden kann.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Ruft einen Befehl zum Löschen von Datensätzen aus dem Dataset ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Ruft das Verhalten des Befehls für das Füllen des Datenadapters ab oder dieses legt.</summary>
      <returns>Das <see cref="T:System.Data.CommandBehavior" /> des Befehls für das Füllen des Datenadapters.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Ruft einen Befehl ab, der zum Einfügen neuer Datensätze in der Datenquelle verwendet wird, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Ruft einen Befehl ab, mit dem Datensätze in der Datenquelle ausgewählt werden, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Ruft eine SQL-Anweisung zum Löschen von Datensätzen aus dem Dataset ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der neue Datensätze in die Datenquelle eingefügt werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle ausgewählt werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle aktualisiert werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, mit dem die Batchverarbeitung aktiviert bzw. deaktiviert wird, und gibt die Anzahl der Befehle an, die pro Batch ausgeführt werden können.</summary>
      <returns>Die Anzahl der Zeilen, die pro Batch verarbeitet werden.  
  
 <list type="table"><listheader><term> Wert</term><description> Auswirkung</description></listheader><item><term> 0</term><description> Es gibt keine Beschränkung für die Batchgröße.</description></item><item><term> 1</term><description> Deaktiviert die Batchaktualisierung.</description></item><item><term> &gt; 1</term><description> Änderungen werden mit Batches von <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />-Operationen gleichzeitig übertragen.</description></item></list>  

 Wenn Sie diese Einstellung auf einen anderen Wert als 1 festlegen, muss für alle Befehle, die dem zugeordnet sind, die- <see cref="T:System.Data.Common.DbDataAdapter" /><see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> Eigenschaft auf None oder OutputParametersfestgelegt sein. Andernfalls wird eine Ausnahme ausgelöst.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Ruft einen Befehl ab, mit dem Datensätze in der Datenquelle aktualisiert werden, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Liest einen Vorwärtsstream von Zeilen aus einer Datenquelle.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Schließt das <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary>Schließt das <see cref="T:System.Data.Common.DbDataReader" />-Objekt asynchron</summary>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Data.Common.DbDataReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um verwaltete und nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Data.Common.DbDataReader" />-Klasse verwendeten Ressourcen asynchron frei.</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den booleschen Wert der angegebenen Spalte ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Bytewert der angegebenen Spalte ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataOffset">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length">Die maximale Anzahl der zu lesenden Bytes.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Bytes.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse Wert der angegebenen Spalte als einzelnes Zeichen ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataOffset">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <returns>Die tatsächlich gelesene Anzahl von Zeichen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />.
Anbieter sollten mit einer entsprechenden Implementierung überschreiben.
Das <paramref name="cancellationToken" /> kann optional berücksichtigt werden.
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück.
Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen <paramref name="cancellationToken" /> erhalten wird.
Die Ausnahmen, die von <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Ein Datenreader.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen des Datentyps der angegebenen Spalte ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Der Name des Datentyps.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Gibt ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt für die angeforderte Spaltenordnungszahl zurück, das mit einer anbieterspezifischen Implementierung überschrieben werden kann.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns>Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Enumerator zurück, mit dem die Zeilen im Datenleser durchlaufen werden kann</summary>
      <returns>Ein Enumerator, mit dem die Zeilen im Datenleser durchlaufen werden können</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Datentyp der angegebenen Spalte ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Datentyp der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

- oder - 
Der Datenreader wurde während des Datenabrufs geschlossen.  
  
- oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).  

- oder -

Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

- oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

- oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Globally Unique Identifier (GUID) ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 16 Bit ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 32 Bit ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen von 64 Bit ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse den Namen der Spalte mit der nullbasierten Ordnungszahl der Spalte ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns>Der Name der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse die Ordnungszahl der Spalte mit dem Spaltennamen ab</summary>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Die nullbasierte Ordnungszahl der Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Ein anbieterspezifischer .NET-Typ.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Ruft alle anbieterspezifischen Attributspalten in der Auflistung der aktuellen Zeile ab.</summary>
      <param name="values">Ein Array vom Typ <see cref="T:System.Object" />, in das die Attributspalten kopiert werden sollen.</param>
      <returns>Die Anzahl der Instanzen von Elementen im Array.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.Common.DbDataReader" /> beschreibt.</summary>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Data.Common.DbDataReader" /> ist geschlossen.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.NotSupportedException">Nur .NET Core: Dieser Member wird nicht unterstützt.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary>Dies ist die asynchrone Version von <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.
Anbieter sollten mit einer entsprechenden Implementierung überschreiben.
Das <paramref name="cancellationToken" /> kann optional berücksichtigt werden.
Die Standardimplementierung ruft den asynchronen <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />-Aufruf auf und gibt eine abgeschlossene Aufgabe zurück.
Die Standardimplementierung gibt eine abgebrochene Aufgabe zurück, wenn sie einen bereits abgebrochenen <paramref name="cancellationToken" /> erhalten wird.
Die Ausnahmen, die von <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> ausgelöst werden, werden über die zurückgegebene Task Exception-Eigenschaft übermittelt.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</exception>
      <returns>Ein Stream.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Instanz von <see cref="T:System.String" /> ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</exception>
      <returns>Ein Textreader.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Instanz von <see cref="T:System.Object" /> ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>Füllt beim Überschreiben in einer abgeleiteten Klasse ein Array von Objekten mit den Spaltenwerten der aktuellen Zeile auf</summary>
      <param name="values">Ein Array vom Typ <see cref="T:System.Object" />, in das die Attributspalten kopiert werden sollen.</param>
      <returns>Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal">Die nullbasierte abzurufende Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal">Die nullbasierte abzurufende Spalte.</param>
      <param name="cancellationToken">Ein Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder - 
Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>Setzt beim Überschreiben in einer abgeleiteten Klasse den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis</summary>
      <returns>
        <see langword="true" />, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Setzt den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis.</summary>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" /></returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Setzt den Datenreader beim Lesen der Ergebnisse von Batchanweisungen asynchron auf das nächste Ergebnis.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Resultsets vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>Verschiebt beim Überschreiben in einer abgeleiteten Klasse den Reader auf den nächsten Datensatz in einem Resultset</summary>
      <returns>
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Setzt den Reader asynchron auf den nächsten Datensatz in einem Resultset.</summary>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Zeilen vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Setzt den Reader asynchron auf den nächsten Datensatz in einem Resultset.</summary>
      <param name="cancellationToken">Die Abbruchanweisung.</param>
      <exception cref="T:System.Data.Common.DbException">Ein Fehler, der beim Ausführen des Befehlstextes aufgetreten ist.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn weitere Zeilen vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns>Eine Instanz von <see cref="T:System.Data.IDataReader" />, die verwendet werden soll, wenn das Feld auf weitere strukturierte Remotedaten zeigt.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</summary>
      <returns>Die Tiefe der Schachtelung für die aktuelle Zeile.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Spalten in der aktuellen Zeile ab</summary>
      <exception cref="T:System.NotSupportedException">Es ist keine aktuelle Verbindung zu einer Instanz von SQL Server vorhanden.</exception>
      <returns>Die Anzahl der Spalten in der aktuellen Zeile.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>Ruft bei Überschreibung in einer abgeleiteten Klasse einen Wert ab, der angibt, ob <see cref="T:System.Data.Common.DbDataReader" /> eine Zeile oder mehrere Zeilen enthält</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.Common.DbDataReader" /> eine oder mehrere Zeilen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DbDataReader" />-Klasse geschlossen ist</summary>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Data.Common.DbDataReader" /> ist geschlossen.</exception>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.Common.DbDataReader" /> geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Instanz von <see cref="T:System.Object" /> ab</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Spaltenindex ist außerhalb des gültigen Bereichs.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert der angegebenen Spalte als Instanz von <see cref="T:System.Object" /> ab</summary>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es wurde keine Spalte mit dem angegebenen Namen gefunden.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab</summary>
      <returns>Die Anzahl der Zeilen, die geändert, eingefügt oder gelöscht wurden. -1 für SELECT-Anweisungen, 0, wenn keine Zeilen betroffen sind oder die Anweisung fehlgeschlagen ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Ruft die Anzahl der nicht ausgeblendeten Felder im <see cref="T:System.Data.Common.DbDataReader" /> ab.</summary>
      <returns>Die Anzahl der nicht ausgeblendeten Felder.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Diese Klasse enthält Spaltenschema-Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt ein Spaltenschema haben kann.</summary>
      <param name="reader">Das <see cref="T:System.Data.Common.DbDataReader" />-Objekt, das auf Unterstützung für Spaltenschemas geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.Common.DbDataReader" />-Objekt ein Spaltenschema abrufen kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Ruft das Spaltenschema für ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt ab (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</summary>
      <param name="reader">Das <see cref="T:System.Data.Common.DbDataReader" />-Objekt, das das Spaltenschema zurückgeben soll.</param>
      <returns>Das Spaltenschema für ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Implementiert <see cref="T:System.Data.IDataRecord" /> und <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, und unterstützt die Datenbindung für <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbDataRecord" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als booleschen Wert zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>
        <see langword="true" />, wenn der boolesche Wert <see langword="true" /> ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Byte zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Bytearray zurück.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex">Der Index im Feld, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferIndex">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length">Die Anzahl der zu lesenden Bytes.</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Zeichen zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Zeichenarray zurück.</summary>
      <param name="i">Spaltenordnungszahl.</param>
      <param name="dataIndex">Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="buffer">Maximale Länge, die in den Puffer kopiert werden kann.</param>
      <param name="bufferIndex">Startpunkt innerhalb des Puffers.</param>
      <param name="length">Startpunkt innerhalb der Quelldaten.</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>Wird derzeit nicht unterstützt.</summary>
      <param name="i">Wird derzeit nicht unterstützt.</param>
      <returns>Wird derzeit nicht unterstützt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Gibt den Namen des Back-End-Datentyps zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Name des Back-End-Datentyps.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Gibt ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt für die angeforderte Spaltenordnungszahl zurück, das mit einer anbieterspezifischen Implementierung überschrieben werden kann.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <returns>Ein <see cref="T:System.Data.Common.DbDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als <see cref="T:System.Decimal" />-Objekt zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Gibt den <see cref="T:System.Type" /> zurück, der der Datentyp des Objekts ist.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Gibt den GUID-Wert des angegebenen Felds zurück.</summary>
      <param name="i">Der Index des zurückzugebenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der GUID-Wert des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als 16-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als 32-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als 64-Bit-Ganzzahlwert mit Vorzeichen zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Gibt den Namen der angegebenen Spalte zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Name der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Ruft bei angegebenem Spaltennamen die Ordnungszahl der Spalte ab.</summary>
      <param name="name">Der Name der Spalte.</param>
      <returns>Die Ordnungszahl der Spalte</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Zeichenfolge zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Gibt den Wert an der angegebenen Spalte im nativen Format zurück.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der zurückzugebende Wert.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Füllt ein Array von Objekten mit den Spaltenwerten des aktuellen Datensatzes.</summary>
      <param name="values">Ein Array von <see cref="T:System.Object" />, in das die Attributfelder kopiert werden.</param>
      <returns>Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Wird zum Angeben nicht vorhandener Werte verwendet.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für dieses Objekt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Klassenname des Objekts oder <see langword="null" />, wenn die Klasse keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Name des Objekts oder <see langword="null" />, wenn das Objekt keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" />, der der Konverter für dieses Objekt ist, oder <see langword="null" />, wenn für dieses Objekt kein <see cref="T:System.ComponentModel.TypeConverter" /> vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" />, das das Standardereignis für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Ereignisse aufweist.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Eigenschaften hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns>Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück, wobei das angegebene Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die gefilterten Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück, wobei das Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die gefilterten Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Gibt die Anzahl von Feldern im aktuellen Datensatz an. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.NotSupportedException">Keine Verbindung zu einer Datenquelle, aus der gelesen werden kann.</exception>
      <returns>Die Anzahl von Feldern im aktuellen Datensatz.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Gibt den Wert an der angegebenen Spalte im nativen Format an, wenn die Spaltenordnungszahl angegeben wird. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="i">Die Ordnungszahl der Spalte</param>
      <returns>Der Wert an der angegebenen Spalte im nativen Format.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Gibt den Wert an der angegebenen Spalte im nativen Format an, sofern es sich um den Spaltennamen handelt. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="name">Der Spaltenname.</param>
      <returns>Der Wert an der angegebenen Spalte im nativen Format.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Stellt einen Mechanismus für das Auflisten aller verfügbaren Instanzen von Datenbankservern im lokalen Netzwerk bereit.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Ruft eine <see cref="T:System.Data.DataTable" /> mit Informationen über alle sichtbaren Instanzen des Servers ab, der durch die stark typisierte Instanz dieser Klasse dargestellt wird.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" /> mit Informationen über die sichtbaren Instanzen der zugeordneten Datenquelle.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Macht die <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode verfügbar, die eine einfache Iteration über eine Auflistung durch einen .NET Framework-Datenanbieter unterstützt.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen Datenreader.</summary>
      <param name="reader">Der Datenreader, der durchlaufen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen Reader und gibt an, ob der Reader nach dem Durchlaufen seiner Daten automatisch geschlossen werden soll.</summary>
      <param name="reader">Der Datenreader, der durchlaufen werden soll.</param>
      <param name="closeReader">
        <see langword="true" />, um den Datenreader nach dem Durchlaufen seiner Daten automatisch zu schließen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen <see langword="DataReader" />.</summary>
      <param name="reader">Der <see langword="DataReader" />, der durchlaufen werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbEnumerator" />-Klasse mit dem angegebenen <see langword="DataReader" />, und gibt an, ob der <see langword="DataReader" /> nach dem Durchlaufen seiner Daten automatisch geschlossen werden soll.</summary>
      <param name="reader">Der <see langword="DataReader" />, der durchlaufen werden soll.</param>
      <param name="closeReader">
        <see langword="true" />, um den <see langword="DataReader" /> nach dem Durchlaufen seiner Daten automatisch zu schließen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Element der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
      <returns>
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">Die Sammlung wurde nach der Erstellung des Enumerators geändert.</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Ruft das aktuelle Element in der Auflistung ab.</summary>
      <exception cref="T:System.InvalidOperationException">Der Enumerator befindet sich vor dem ersten Element der Sammlung oder hinter dem letzten Element.</exception>
      <returns>Das aktuelle Element in der Auflistung.</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>Die Basisklasse für alle bezüglich der Datenquelle ausgelösten Ausnahmen.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Kontext.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</param>
      <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Kontextinformationen über die Quelle oder das Ziel enthält.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Die für diese Ausnahme anzuzeigende Meldung.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Zeichenfolge der Fehlermeldung.</param>
      <param name="innerException">Der Verweis auf die interne Ausnahme.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbException" />-Klasse mit der angegebenen Fehlermeldung und dem angegebenen Fehlercode.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="errorCode">Der Fehlercode für die Ausnahme.</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary>Gibt an, ob der Fehler, der von dieser <see cref="T:System.Data.Common.DbException" /> dargestellt wird, ein vorübergehender Fehler sein könnte, d. h., ob die Wiederholung des Auslösevorgangs ohne sonstige Änderung erfolgreich sein könnte.</summary>
      <returns>
        <see langword="true" /> , wenn der dargestellte Fehler ein vorübergehender Fehler sein könnte. <see langword="false" /> andernfalls.</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary>
        <para> Enthält für Datenbankanbieter, die dies unterstützen, einen standardmäßigen SQL 5-Zeichenrückgabecode, der angibt, ob der Datenbankvorgang erfolgreich war oder nicht. Die ersten 2 Zeichen stellen die <strong>Klasse</strong> des Rückgabecodes (z. B. Fehler, Erfolg) dar, während die letzten 3 Zeichen die <strong>Unterklasse</strong> darstellen und die Erkennung von Fehlerszenarios auf datenbankportierbare Weise ermöglichen.</para>
        <para> Für Datenbankanbieter, die dies nicht unterstützen, oder für nicht anwendbare Fehlerszenarios ist <see langword="null" /> enthalten.</para>
      </summary>
      <returns>Ein standardmäßiger SQL 5-Zeichen-Rückgabecode oder <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Stellt eine Liste von Konstanten der bekannten MetaDataCollections bereit: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords und Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die DataSourceInformation-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die DataTypes-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die MetaDataCollections-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die ReservedWords-Auflistung darstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Eine Konstante für die Verwendung mit der <see cref="M:System.Data.Common.DbConnection.GetSchema" />-Methode, die die Restrictions-Auflistung darstellt.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Stellt statische Werte bereit, die als Spaltennamen in den MetaDataCollection-Objekten verwendet werden, die in der <see cref="T:System.Data.DataTable" /> enthalten sind. Die <see cref="T:System.Data.DataTable" /> wird von der GetSchema-Methode erstellt.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Wird von der GetSchema-Methode zum Erstellen der CollectionName-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ColumnSize-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der CompositeIdentifierSeparatorPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Wird von der GetSchema-Methode zum Erstellen der CreateFormat-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Wird von der GetSchema-Methode zum Erstellen der CreateParameter-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Wird von der GetSchema-Methode zum Erstellen der DataSourceProductName-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Wird von der GetSchema-Methode zum Erstellen der DataSourceProductVersion-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Wird von der GetSchema-Methode zum Erstellen der DataSourceProductVersionNormalized-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Wird von der GetSchema-Methode zum Erstellen der DataType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Wird von der GetSchema-Methode zum Erstellen der GroupByBehavior-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IdentifierCase-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IdentifierPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsAutoIncrementable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsBestMatch-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsCaseSensitive-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsConcurrencyType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsFixedLength-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsFixedPrecisionScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsLiteralSupported-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsLong-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsNullable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsSearchable-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsSearchableWithLike-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Wird von der GetSchema-Methode zum Erstellen der IsUnsigned-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Wird von der GetSchema-Methode zum Erstellen der LiteralPrefix-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Wird von der GetSchema-Methode zum Erstellen der LiteralSuffix-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Wird von der GetSchema-Methode zum Erstellen der MaximumScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Wird von der GetSchema-Methode zum Erstellen der MinimumScale-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Wird von der GetSchema-Methode zum Erstellen der NumberOfIdentifierParts-Spalte in der MetaDataCollections-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Wird von der GetSchema-Methode zum Erstellen der NumberOfRestrictions-Spalte in der MetaDataCollections-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Wird von der GetSchema-Methode zum Erstellen der OrderByColumnsInSelect-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ParameterMarkerFormat-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ParameterMarkerPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ParameterNameMaxLength-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ParameterNamePattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ProviderDbType-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Wird von der GetSchema-Methode zum Erstellen der QuotedIdentifierCase-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der QuotedIdentifierPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Wird von der GetSchema-Methode zum Erstellen der ReservedWord-Spalte in der ReservedWords-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der StatementSeparatorPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Wird von der GetSchema-Methode zum Erstellen der StringLiteralPattern-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Wird von der GetSchema-Methode zum Erstellen der SupportedJoinOperators-Spalte in der DataSourceInformation-Auflistung verwendet.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Wird von der GetSchema-Methode zum Erstellen der TypeName-Spalte in der DataTypes-Auflistung verwendet.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Stellt einen Parameter für einen <see cref="T:System.Data.Common.DbCommand" /> und optional für seine Zuordnung zu einer <see cref="T:System.Data.DataSet" />-Spalte dar. Weitere Informationen zu Parametern finden Sie unter Konfigurieren von Parametern und Parameterdatentypen.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbParameter" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Setzt die DbType-Eigenschaft auf ihre ursprünglichen Einstellungen zurück.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Ruft den <see cref="T:System.Data.DbType" /> des Parameters ab oder legt ihn fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft ist nicht auf einen gültigen <see cref="T:System.Data.DbType" /> festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.DbType" />-Werte. Der Standardwert ist <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Parameter nur zur Eingabe, nur zur Ausgabe oder bidirektional verwendet wird oder ob es sich um einen Parameter für den Rückgabewert einer gespeicherten Prozedur handelt.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft ist nicht auf einen der gültigen <see cref="T:System.Data.ParameterDirection" />-Werte festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.ParameterDirection" />-Werte. Der Standardwert ist <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob der Parameter NULL-Werte akzeptiert, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn NULL-Werte akzeptiert werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Ruft den Namen der <see cref="T:System.Data.Common.DbParameter" /> ab oder legt diesen fest.</summary>
      <returns>Der Name von <see cref="T:System.Data.Common.DbParameter" />. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Ruft die maximale Anzahl von Stellen ab, die verwendet werden, um die <see cref="P:System.Data.Common.DbParameter.Value" />-Eigenschaft darzustellen, oder legt diese fest.</summary>
      <returns>Die maximale Anzahl von Stellen, die verwendet wird, um die <see cref="P:System.Data.Common.DbParameter.Value" />-Eigenschaft darzustellen.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Ruft die Anzahl der Dezimalstellen ab, in die <see cref="P:System.Data.Common.DbParameter.Value" /> aufgelöst wird, oder legt diese fest.</summary>
      <returns>Die Anzahl der Dezimalstellen, mit der <see cref="P:System.Data.Common.DbParameter.Value" /> aufgelöst wird.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Ruft die maximale Größe der Daten in der Spalte in Byte ab oder legt diese fest.</summary>
      <returns>Die maximale Größe in Byte der Daten in der Spalte. Der Standardwert wird aus dem Parameterwert hergeleitet.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Ruft den Namen der Quellspalte ab, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist und zum Laden oder Zurückgeben des <see cref="P:System.Data.Common.DbParameter.Value" /> verwendet wird, oder legt diesen fest.</summary>
      <returns>Der Name der Quellspalte, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Ruft einen Wert ab, der angibt, ob die Quellspalte NULL-Werte zulässt, oder legt diesen fest. Dadurch kann <see cref="T:System.Data.Common.DbCommandBuilder" /> ordnungsgemäß Update-Anweisungen für Spalten generieren, die NULL-Werte zulassen.</summary>
      <returns>
        <see langword="true" />, wenn die Quellspalte NULL-Werte zulässt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Ruft die <see cref="T:System.Data.DataRowVersion" /> ab, die beim Laden von <see cref="P:System.Data.Common.DbParameter.Value" /> verwendet werden soll, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft ist nicht auf einen der <see cref="T:System.Data.DataRowVersion" />-Werte festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Der Standardwert ist <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Gibt die Genauigkeit numerischer Parameter an.</summary>
      <returns>Die maximale Anzahl von Ziffern für die Darstellung der <see langword="Value" />-Eigenschaft eines Datenanbieter-<see langword="Parameter" />-Objekts. Der Standardwert ist 0 (null) und gibt an, dass ein Datenanbieter die Genauigkeit für <see langword="Value" /> festlegt.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>Die Anzahl der Dezimalstellen, mit der <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird. Die Standardeinstellung ist 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Ruft den Wert des Parameters ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den Wert des Parameters darstellt. Der Standardwert ist "null".</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>Die Basisklasse für eine Auflistung von Parametern, die für einen <see cref="T:System.Data.Common.DbCommand" /> relevant sind.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.DbParameterCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Fügt dem <see cref="T:System.Data.Common.DbParameter" />-Objekt das angegebene <see cref="T:System.Data.Common.DbParameterCollection" />-Objekt hinzu.</summary>
      <param name="value">Der <see cref="P:System.Data.Common.DbParameter.Value" /> von <see cref="T:System.Data.Common.DbParameter" />, der der Auflistung hinzugefügt werden soll.</param>
      <returns>Der Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Fügt ein Array von Elementen mit den angegebenen Werten zu <see cref="T:System.Data.Common.DbParameterCollection" /> hinzu.</summary>
      <param name="values">Ein Array von Werten vom <see cref="T:System.Data.Common.DbParameter" />-Typ, die zur Auflistung hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Entfernt sämtliche <see cref="T:System.Data.Common.DbParameter" />-Werte aus <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Gibt an, ob ein <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen <see cref="P:System.Data.Common.DbParameter.Value" /> in der Auflistung vorhanden ist.</summary>
      <param name="value">Der <see cref="P:System.Data.Common.DbParameter.Value" /> des <see cref="T:System.Data.Common.DbParameter" />, nach dem in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn sich der <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Gibt an, ob ein <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen in der Auflistung vorhanden ist.</summary>
      <param name="value">Der Name des <see cref="T:System.Data.Common.DbParameter" />, nach dem in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn sich der <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert ein Array von Elementen in die Auflistung, wobei am angegebenen Index begonnen wird.</summary>
      <param name="array">Das Array von Elementen, das in die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index in der Auflistung, an den die Elemente kopiert werden sollen.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Macht die <see cref="M:System.Collections.IEnumerable.GetEnumerator" />-Methode verfügbar, die eine einfache Iteration über eine Auflistung durch einen .NET Framework-Datenanbieter unterstützt.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Gibt das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index in der Auflistung zurück.</summary>
      <param name="index">Der Index des <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung.</param>
      <returns>Das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Gibt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen zurück.</summary>
      <param name="parameterName">Der Name des <see cref="T:System.Data.Common.DbParameter" /> in der Auflistung.</param>
      <returns>Das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Gibt den Index des angegebenen <see cref="T:System.Data.Common.DbParameter" />-Objekts zurück.</summary>
      <param name="value">Das <see cref="T:System.Data.Common.DbParameter" />-Objekt in der Auflistung.</param>
      <returns>Der Index des angegebenen <see cref="T:System.Data.Common.DbParameter" />-Objekts zurück.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Gibt den Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts mit dem angegebenen Namen zurück.</summary>
      <param name="parameterName">Der Name des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</param>
      <returns>Der Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts mit dem angegebenen Namen.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Fügt den angegebenen Index des <see cref="T:System.Data.Common.DbParameter" />-Objekts mit dem angegebenen Namen am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der Index, an dem das <see cref="T:System.Data.Common.DbParameter" />-Objekt eingefügt werden soll.</param>
      <param name="value">Das <see cref="T:System.Data.Common.DbParameter" />-Objekt, das in die Auflistung eingefügt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Entfernt das angegebene <see cref="T:System.Data.Common.DbParameter" />-Objekt aus der Auflistung.</summary>
      <param name="value">Das zu entfernende <see cref="T:System.Data.Common.DbParameter" />-Objekt.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DbParameter" />-Objekt aus der Auflistung.</summary>
      <param name="index">Der Index, in dem sich das <see cref="T:System.Data.Common.DbParameter" />-Objekt befindet.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="parameterName">Der Name des zu entfernenden <see cref="T:System.Data.Common.DbParameter" />-Objekts.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Legt das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index auf einen neuen Wert fest.</summary>
      <param name="index">Der Index, in dem sich das <see cref="T:System.Data.Common.DbParameter" />-Objekt befindet.</param>
      <param name="value">Der neue <see cref="T:System.Data.Common.DbParameter" />-Wert.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Legt das <see cref="T:System.Data.Common.DbParameter" />-Objekt mit dem angegebenen Namen auf einen neuen Wert fest.</summary>
      <param name="parameterName">Der Name des <see cref="T:System.Data.Common.DbParameter" />-Objekts in der Auflistung.</param>
      <param name="value">Der neue <see cref="T:System.Data.Common.DbParameter" />-Wert.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
      <param name="value">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Gibt die Anzahl der Elemente in der Auflistung an.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Gibt an, ob die Auflistung eine feste Größe hat.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Gibt an, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Gibt an, ob die Auflistung synchronisiert wird.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung synchronisiert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.Data.Common.DbParameter" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
      <param name="index">Der nullbasierte Index des Parameters.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Index ist nicht vorhanden.</exception>
      <returns>Das <see cref="T:System.Data.Common.DbParameter" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Ruft den <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen ab oder legt diesen fest.</summary>
      <param name="parameterName">Der Name des Parameters.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Index ist nicht vorhanden.</exception>
      <returns>Der <see cref="T:System.Data.Common.DbParameter" /> mit dem angegebenen Namen.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Gibt das <see cref="T:System.Object" /> an, mit dem der Zugriff auf die Auflistung synchronisiert werden soll.</summary>
      <returns>Ein <see cref="T:System.Object" />, mit dem der Zugriff auf die <see cref="T:System.Data.Common.DbParameterCollection" /> synchronisiert werden soll.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Ruft den Parameter am angegebenen Index ab oder legt diesen fest.</summary>
      <param name="parameterName">Der Name des abzurufenden Parameters.</param>
      <returns>Ein <see cref="T:System.Object" /> am angegebenen Index.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Stellt einen Satz von statischen Methoden für das Erstellen einer oder mehrerer Instanzen von <see cref="T:System.Data.Common.DbProviderFactory" />-Klassen dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="connection">Die verwendete Verbindung.</param>
      <returns>Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für eine angegebene Verbindung.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="providerRow">Die <see cref="T:System.Data.DataRow" /> mit den Konfigurationsinformationen des Anbieters.</param>
      <returns>Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für eine angegebene <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Gibt eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <param name="providerInvariantName">Unveränderlicher Name eines Anbieters.</param>
      <returns>Eine Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" /> für einen angegebenen Anbieternamen.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Informationen über alle installierten Anbieter enthält, die <see cref="T:System.Data.Common.DbProviderFactory" /> implementieren.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" /> mit <see cref="T:System.Data.DataRow" />-Objekten, die die folgenden Daten enthalten: 
 <list type="table"><listheader><term> Spaltenordinalzahl</term><description> Spaltenname</description><description> Beschreibung</description></listheader><item><term> 0</term><description> Name</description><description> Lesbarer Name für den Datenanbieter.</description></item><item><term> 1</term><description> Beschreibung</description><description> Lesbare Beschreibung des Datenanbieters.</description></item><item><term> 2</term><description> InvariantName</description><description> Name, mit dem programmgesteuert auf den Datenanbieter verwiesen werden kann.</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> Vollqualifizierter Name der Factoryklasse, der ausreichende Informationen für das Instanziieren des Objekts enthält.</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary>Gibt die invarianten Anbieternamen für alle registrierten Instanzen von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</summary>
      <returns>Gibt die invarianten Anbieternamen für alle registrierten Instanzen von <see cref="T:System.Data.Common.DbProviderFactory" /> zurück.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary>Registriert eine Instanz von <see cref="T:System.Data.Common.DbProviderFactory" /> unter dem angegebenen invarianten Anbieternamen.</summary>
      <param name="providerInvariantName">Der invariante Anbietername, unter dem der Anbieter registriert werden soll.</param>
      <param name="factory">Die Instanz der Anbieterfactory, die registriert werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary>Registriert eine <see cref="T:System.Data.Common.DbProviderFactory" /> mit dem angegebenen, durch die Assembly qualifizierten Namen unter dem angegebenen invarianten Anbieternamen.</summary>
      <param name="providerInvariantName">Der invariante Anbietername, unter dem der Anbieter registriert werden soll.</param>
      <param name="factoryTypeAssemblyQualifiedName">Der durch die Assembly qualifizierte Name für eine <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary>Registriert eine <see cref="T:System.Data.Common.DbProviderFactory" /> mit dem angegebenen Typ unter dem angegebenen invarianten Anbieternamen.</summary>
      <param name="providerInvariantName">Der invariante Anbietername, unter dem der Anbieter registriert werden soll.</param>
      <param name="providerFactoryClass">Der Typ, der eine <see cref="T:System.Data.Common.DbProviderFactory" /> darstellt.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary>Versucht, die <see cref="T:System.Data.Common.DbProviderFactory" /> abzurufen, die unter dem angegebenen invarianten Anbieternamen registriert ist.</summary>
      <param name="providerInvariantName">Der invariante Anbietername, der nachgeschlagen werden soll.</param>
      <param name="factory">Die Rückgabe dieser Methode enthält die <see cref="T:System.Data.Common.DbProviderFactory" />, die dem angegebenen invarianten Anbieternamen zugeordnet ist, wenn der Name gefunden wurde, andernfalls <see langword="null" />. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <returns>
        <see langword="true" />, wenn ein Anbieter unter dem angegebenen invarianten Anbieternamen registriert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary>Entfernt eine <see cref="T:System.Data.Common.DbProviderFactory" />-Registrierung für den angegebenen invarianten Anbieternamen.</summary>
      <param name="providerInvariantName">Der invariante Anbietername der zu entfernenden Registrierung.</param>
      <returns>
        <see langword="true" />, wenn die Registrierung gefunden und erfolgreich entfernt wurde, andernfalls <see langword="false" />. Diese Methode gibt <see langword="false" /> zurück, wenn eine Registrierung für <paramref name="providerInvariantName" /> nicht gefunden wurde.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Stellt einen Satz von Methoden für das Erstellen von Instanzen der Implementierung eines Anbieters der Datenquellenklassen dar.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DbProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbCommand" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbConnection" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbConnectionStringBuilder" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbDataAdapter" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Gibt eine neue Instanz der Klasse des Anbieters zurück, die die <see cref="T:System.Data.Common.DbParameter" />-Klasse implementiert.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary>Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse unterstützt</summary>
      <returns>
        <see langword="true" /> , wenn diese Instanz die-Klasse unterstützt, <see cref="T:System.Data.Common.DbCommandBuilder" /> andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary>Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbDataAdapter" />-Klasse unterstützt</summary>
      <returns>
        <see langword="true" /> , wenn die-Instanz die-Klasse unterstützt, <see cref="T:System.Data.Common.DbDataAdapter" /> andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbProviderFactory" />-Instanz die <see cref="T:System.Data.Common.DbDataSourceEnumerator" />-Klasse unterstützt</summary>
      <returns>
        <see langword="true" /> , wenn die-Instanz die-Klasse unterstützt, <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Gibt an, welche anbieterspezifische Eigenschaft in den stark typisierten Parameterklassen beim Festlegen eines anbieterspezifischen Typs verwendet werden soll.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />-Klasse.</summary>
      <param name="isProviderSpecificTypeProperty">Gibt an, ob diese Eigenschaft eine anbieterspezifische Eigenschaft ist.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Gibt an, ob die attributierte Eigenschaft ein anbieterspezifischer Typ ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft, auf die dieses Attribut angewendet wird, eine anbieterspezifische Typeigenschaft ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Definiert das Kernverhalten der Datenbanktransaktionen und stellt eine Basisklasse für datenbankspezifische Transaktionen bereit</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Initialisiert ein neues <see cref="T:System.Data.Common.DbTransaction" />-Objekt.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>Committet die Datenbanktransaktion beim Überschreiben in einer abgeleiteten Klasse.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary>Führt einen asynchronen Commit der Datenbanktransaktion aus.</summary>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Gibt die von <see cref="T:System.Data.Common.DbTransaction" /> verwendeten, nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Data.Common.DbTransaction" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">Wenn <see langword="true" />, gibt diese Methode alle Ressourcen frei, die von verwalteten Objekten verwendet werden, auf die diese <see cref="T:System.Data.Common.DbTransaction" /> verweist.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary>Stellt das Transaktionsobjekt asynchron bereit.</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.ValueTask" />, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary>Löscht einen Sicherungspunkt, der zuvor in der aktuellen Transaktion definiert wurde. Dies ermöglicht es dem System, einige Ressourcen freizugeben, bevor die Transaktion beendet wird.</summary>
      <param name="savepointName">Der Name des freizugebenden Sicherungspunkts.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Löscht einen Sicherungspunkt, der zuvor in der aktuellen Transaktion definiert wurde. Dies ermöglicht es dem System, einige Ressourcen freizugeben, bevor die Transaktion beendet wird.</summary>
      <param name="savepointName">Der Name des freizugebenden Sicherungspunkts.</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>Führt beim Überschreiben in einer abgeleiteten Klasse einen Rollback für eine Transaktion aus einem ausstehenden Zustand aus.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary>Führt einen Rollback für alle Befehle aus, die ausgeführt wurden, nachdem der angegebene Sicherungspunkt eingerichtet wurde.</summary>
      <param name="savepointName">Der Name des Sicherungspunkts, auf den ein Rollback ausgeführt werden soll.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary>Führt einen Rollback für alle Befehle aus, die ausgeführt wurden, nachdem der angegebene Sicherungspunkt eingerichtet wurde.</summary>
      <param name="savepointName">Der Name des Sicherungspunkts, auf den ein Rollback ausgeführt werden soll.</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary>Führt einen asynchronen Rollback für eine Transaktion aus einem ausstehenden Zustand durch.</summary>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine Aufgabe, die den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary>Erstellt einen Sicherungspunkt in der Transaktion. Dadurch kann für alle Befehle, die ausgeführt werden, nachdem der Sicherungspunkt festgelegt wurde, ein Rollback ausgeführt werden, sodass der Transaktionszustand so wiederhergestellt wird, wie er zum Zeitpunkt des Sicherungspunkts bestanden hat.</summary>
      <param name="savepointName">Der Name des zu erstellenden Sicherungspunkts.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary>Erstellt einen Sicherungspunkt in der Transaktion. Dadurch kann für alle Befehle, die ausgeführt werden, nachdem der Sicherungspunkt festgelegt wurde, ein Rollback ausgeführt werden, sodass der Transaktionszustand so wiederhergestellt wird, wie er zum Zeitpunkt des Sicherungspunkts bestanden hat.</summary>
      <param name="savepointName">Der Name des zu erstellenden Sicherungspunkts.</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs. Der Standardwert ist <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task" />, die den asynchronen Vorgang darstellt</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Gibt das <see cref="T:System.Data.Common.DbConnection" />-Objekt an, das der Transaktion zugeordnet ist.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das der Transaktion zugeordnete <see cref="T:System.Data.Common.DbConnection" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Isolationsstufe für diese Transaktion ab.</summary>
      <returns>Die Isolationsstufe für diese Transaktion.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary>Ruft einen Wert ab, der angibt, ob diese <see cref="T:System.Data.Common.DbTransaction" />-Instanz Datenbanksicherungspunkte unterstützt.
Wenn <see langword="false" />, wird erwartet, dass die Methoden <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />, <see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" /> und <see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" /> sowie deren synchrone Entsprechungen <see cref="T:System.NotSupportedException" /> auslösen.</summary>
      <returns>
        <see langword="true" /> , wenn diese <see cref="T:System.Data.Common.DbTransaction" /> Instanz Daten Bank Sicherungs Punkte unterstützt, andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Ruft das der Transaktion zugeordnete <see cref="T:System.Data.Common.DbConnection" />-Objekt ab, oder einen NULL-Verweis, wenn die Transaktion nicht mehr gültig ist.</summary>
      <returns>Ein <see cref="T:System.Data.Common.DbConnection" />-Objekt, das der Transaktion zugeordnet ist.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Gibt die Beziehung zwischen den Spalten in einer GROUP BY-Klausel und nicht zusammengesetzten Spalten in der Select-Liste einer SELECT-Anweisung an.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>Die GROUP BY-Klausel muss alle nicht zusammengesetzten Spalten in der Select-Liste enthalten und darf keine anderen Spalten enthalten, die nicht in der Select-Liste enthalten sind.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>Die GROUP BY-Klausel muss alle nicht zusammengesetzten Spalten in der Select-Liste enthalten und kann andere Spalten enthalten, die nicht in der Select-Liste enthalten sind.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>Die GROUP BY-Klausel wird nicht unterstützt.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>Die Unterstützung für die GROUP BY-Klausel ist unbekannt.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>Es gibt keine Beziehung zwischen den Spalten in der GROUP BY-Klausel und den nicht zusammengesetzten Spalten in der SELECT-Liste. Sie können nach einer beliebigen Spalte gruppieren.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Generiert ein Spaltenschema.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Ruft das Spaltenschema ab (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</summary>
      <returns>Das Spaltenschema (<see cref="T:System.Data.Common.DbColumn" />-Auflistung).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Gibt an, wie Bezeichner von der Datenquelle behandelt werden, wenn der Systemkatalog durchsucht wird.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>Die Datenquelle ignoriert beim Durchsuchen des Systemkatalogs die Groß- und Kleinschreibung von Bezeichnern. Die Bezeichner "ab" und "AB" werden gleich behandelt.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>Die Datenquelle berücksichtigt beim Durchsuchen des Systemkatalogs die Groß- und Kleinschreibung von Bezeichnern. Die Bezeichner "ab" und "AB" werden nicht gleich behandelt.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>Die Datenquelle verfügt über verschiedene Regeln hinsichtlich der Groß- und Kleinschreibung von Bezeichnern und kann diese Informationen nicht ermitteln.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Stellt Daten für das <see langword="RowUpdated" />-Ereignis eines .NET Framework-Datenproviders bereit.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatedEventArgs" />-Klasse.</summary>
      <param name="dataRow">Die durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Der Typ der ausgeführten SQL-Anweisung.</param>
      <param name="tableMapping">Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Kopiert Verweise auf die geänderten Zeilen in das bereitgestellte Array.</summary>
      <param name="array">Das Array, in das <see cref="T:System.Data.DataRow" /> kopiert werden soll.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Kopiert Verweise auf die geänderten Zeilen in das bereitgestellte Array.</summary>
      <param name="array">Das Array, in das <see cref="T:System.Data.DataRow" /> kopiert werden soll.</param>
      <param name="arrayIndex">Der Index im Array, an dem der Kopiervorgang gestartet werden soll.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Ruft den beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführten <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns>Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> ausgeführte <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Ruft alle Fehler ab, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</summary>
      <returns>Die Fehler, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</summary>
      <returns>Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Ruft das durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns>Die durch ein <see cref="T:System.Data.DataRow" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Ruft die Anzahl von Zeilen ab, die in einem Batch aktualisierter Datensätze verarbeitet wurden.</summary>
      <returns>
        <see langword="int" />, der die Anzahl verarbeiteter Zeilen angibt.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Ruft den Typ der ausgeführten SQL-Anweisung ab.</summary>
      <returns>Der Typ der ausgeführten SQL-Anweisung.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Ruft den <see cref="T:System.Data.UpdateStatus" /> der <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />-Eigenschaft ab.</summary>
      <returns>Einer der <see cref="T:System.Data.UpdateStatus" />-Werte. Der Standardwert ist <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Ruft das durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns>Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> gesendete <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Stellt die Daten für das RowUpdating-Ereignis eines .NET Framework-Datenanbieters bereit.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.RowUpdatingEventArgs" />-Klasse.</summary>
      <param name="dataRow">Die <see cref="T:System.Data.DataRow" /> für das <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">Der beim Aufruf von <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Der Typ der auszuführenden SQL-Anweisung.</param>
      <param name="tableMapping">Die durch ein <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Ruft das <see cref="T:System.Data.IDbCommand" />-Objekt für eine Instanz dieser Klasse ab oder legt dieses fest.</summary>
      <returns>Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Ruft den während der <see cref="T:System.Data.IDbCommand" />-Operation auszuführenden <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns>Das während des <see cref="T:System.Data.IDbCommand" /> auszuführende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Ruft alle Fehler ab, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</summary>
      <returns>Die Fehler, die während der Ausführung des <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" /> durch den .NET Framework-Datenanbieter generiert wurden.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Ruft die <see cref="T:System.Data.DataRow" /> ab, die beim Einfügen, Aktualisieren oder Löschen an den Server gesendet wird.</summary>
      <returns>Die durch ein <see cref="T:System.Data.DataRow" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Ruft den Typ der auszuführenden SQL-Anweisung ab.</summary>
      <returns>Der Typ der auszuführenden SQL-Anweisung.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Ruft den <see cref="T:System.Data.UpdateStatus" /> der <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />-Eigenschaft ab oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Data.UpdateStatus" />-Werte. Der Standardwert ist <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Ruft die durch das <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> ab.</summary>
      <returns>Die durch das <see cref="T:System.Data.Common.DataTableMapping" /> zu sendende <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Beschreibt die Spaltenmetadaten des Schemas für eine Datenbanktabelle.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Gibt an, ob der Wert <see langword="DBNull" /> zulässig ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Gibt den Namen der Spalte in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Gibt den Namen des Schemas in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Gibt den Namen der Tabelle in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Gibt den Namen der Spalte in der Schematabelle an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Gibt die Ordnungszahl der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Gibt die Größe der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Gibt den Typ der Daten in der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Gibt an, ob diese Spalte einen Alias besitzt.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Gibt an, ob diese Spalte ein Ausdruck ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Gibt an, ob diese Spalte ein Schlüssel für die Tabelle ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Gibt an, ob diese Spalte long-Daten enthält.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Gibt an, ob eine Unique-Einschränkung für diese Spalte gilt.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Gibt den anbieterspezifischen Datentyp ohne Versionsangabe der Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Gibt die Genauigkeit der Spaltendaten an, wenn die Daten numerisch sind.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Gibt die Skalierung der Spaltendaten an, wenn die Daten numerisch sind.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Gibt den anbieterspezifischen Datentyp der Spalte an.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Beschreibt optionale Spaltenmetadaten des Schemas für eine Datenbanktabelle.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Gibt den Wert an, bei dem die Reihe für neue Identitätsspalten zugewiesen wird.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Gibt die Schrittweite zwischen Werten in der Identitätsspalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>Der Name des den Ergebnissen der letzten Abfrage zugeordneten Katalogs.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Der Namespace der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Der Servername der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Der Namespace für die Tabelle mit der Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Gibt die Zuordnung für die Spalte an.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Der Standardwert für die Spalte.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>Der Ausdruck, der zum Berechnen der Spalte verwendet wird.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Gibt an, ob die Spaltenwerte in der Spalte automatisch inkrementiert werden.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Gibt an, ob diese Spalte ausgeblendet ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Gibt an, ob diese Spalte schreibgeschützt ist.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Gibt an, ob diese Spalte Zeilenversionsinformationen enthält.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Gibt den anbieterspezifischen Datentyp der Spalte an.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Gibt an, welche Typen von Transact-SQL-Joinanweisungen von der Datenquelle unterstützt werden.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>Die Datenquelle unterstützt vollständige äußere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>Die Datenquelle unterstützt innere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>Die Datenquelle unterstützt linke äußere Joins.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>Die Datenquelle unterstützt keine Joinabfragen.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>Die Datenquelle unterstützt rechte äußere Joins.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Gibt an, wie Konflikte verursachende Änderungen an der Datenquelle erkannt und aufgelöst werden.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Update- und Delete-Anweisungen schließen alle Spalten aus der Tabelle, nach denen gesucht werden kann, in die WHERE-Klausel ein. Dies entspricht dem Angeben von <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Wenn in der Tabelle Timestampspalten vorhanden sind, werden sie in der WHERE-Klausel für alle generierten Update-Anweisungen verwendet. Dies entspricht dem Angeben von <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>Alle Update- und Delete-Anweisungen schließen ausschließlich <see cref="P:System.Data.DataTable.PrimaryKey" />-Spalten in die WHERE-Klausel ein. Wenn kein <see cref="P:System.Data.DataTable.PrimaryKey" /> definiert wird, werden alle Spalten, nach denen gesucht werden kann, in die WHERE-Klausel eingeschlossen. Das entspricht <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Beschreibt den aktuellen Status der Verbindung mit einer Datenquelle.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>Die Verbindung mit der Datenquelle ist unterbrochen. Dies kann nur nach dem Öffnen der Verbindung auftreten. Eine Verbindung in diesem Zustand kann geschlossen und anschließend erneut geöffnet werden. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>Die Verbindung ist geschlossen.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>Das Verbindungsobjekt stellt eine Verbindung mit der Datenquelle her.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>Das Verbindungsobjekt führt einen Befehl aus. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>Das Verbindungsobjekt ruft Daten ab. (Dieser Wert ist für zukünftige Versionen des Produkts reserviert.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>Die Verbindung ist geöffnet.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Stellt eine Einschränkung dar, die für ein oder mehrere <see cref="T:System.Data.DataColumn" />-Objekte erzwungen werden kann.</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Legt das <see cref="T:System.Data.DataSet" /> der Einschränkung fest.</summary>
      <param name="dataSet">Das <see cref="T:System.Data.DataSet" />, zu dem diese Einschränkung gehören wird.</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Ruft den <see cref="P:System.Data.Constraint.ConstraintName" /> (falls vorhanden) als Zeichenfolge ab.</summary>
      <returns>Der Zeichenfolgenwert des <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
      <returns>Das <see cref="T:System.Data.DataSet" />, zu dem diese Einschränkung gehört.</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>Der Name einer Einschränkung in der <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <exception cref="T:System.ArgumentException">Der <see cref="T:System.Data.Constraint" />-Name ist ein NULL-Wert oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die <see cref="T:System.Data.ConstraintCollection" /> enthält bereits eine <see cref="T:System.Data.Constraint" /> mit demselben Namen (Vergleich ohne Berücksichtigung von Groß- und Kleinschreibung).</exception>
      <returns>Der Name von <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Ruft die Auflistung von benutzerdefinierten Einschränkungseigenschaften ab.</summary>
      <returns>Eine <see cref="T:System.Data.PropertyCollection" /> mit benutzerdefinierten Informationen.</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, auf die die Einschränkung angewendet wird.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, auf die die Einschränkung angewendet wird.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Stellt eine Auflistung von Einschränkungen für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Tritt immer dann ein, wenn die <see cref="T:System.Data.ConstraintCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.Constraint" />-Objekten geändert wurde.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Fügt der Auflistung das angegebene <see cref="T:System.Data.Constraint" />-Objekt hinzu.</summary>
      <param name="constraint">Das hinzuzufügende <see langword="Constraint" />.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="constraint" />-Argument ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Einschränkung gehört bereits zu dieser oder einer anderen Sammlung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Sammlung enthält bereits eine Einschränkung gleichen Namens. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Erstellt eine neue <see cref="T:System.Data.UniqueConstraint" /> mit dem angegebenen Namen der <see cref="T:System.Data.DataColumn" /> sowie einem Wert, der angibt, ob die Spalte eine Primärschlüsselspalte ist, und fügt diese der Auflistung hinzu.</summary>
      <param name="name">Der Name von <see langword="UniqueConstraint" />.</param>
      <param name="column">Die <see cref="T:System.Data.DataColumn" />, auf die die Einschränkung angewendet wird.</param>
      <param name="primaryKey">Gibt an, ob die Spalte der Primärschlüssel sein sollte. Wenn <see langword="true" />, dann ist die Spalte eine Primärschlüsselspalte.</param>
      <exception cref="T:System.ArgumentException">Die Einschränkung gehört bereits zu dieser Auflistung.  
  
 -Oder-  
  
 Die Einschränkung gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Einschränkung mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <returns>Ein neuer <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Erstellt eine neue <see cref="T:System.Data.ForeignKeyConstraint" /> mit dem angegebenen Namen, der angegebenen übergeordneten Spalte sowie der angegebenen untergeordneten Spalte und fügt der Auflistung die Einschränkung hinzu.</summary>
      <param name="name">Der Name von <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">Die übergeordnete oder Primärschlüssel, <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn">Der untergeordnete oder Fremdschlüssel, <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Ein neuer <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Erstellt eine neue <see cref="T:System.Data.UniqueConstraint" /> mit dem angegebenen Namen, einem Array von <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob die Spalte eine Primärschlüsselspalte ist, und fügt diese der Auflistung hinzu.</summary>
      <param name="name">Der Name von <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, auf die die Einschränkung angewendet wird.</param>
      <param name="primaryKey">Gibt an, ob die Spalte der Primärschlüssel sein sollte. Wenn <see langword="true" />, dann ist die Spalte eine Primärschlüsselspalte.</param>
      <exception cref="T:System.ArgumentException">Die Einschränkung gehört bereits zu dieser Auflistung.  
  
 -Oder-  
  
 Die Einschränkung gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Einschränkung mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <returns>Ein neuer <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Erstellt eine neue <see cref="T:System.Data.ForeignKeyConstraint" /> mit den angegebenen Arrays von übergeordneten und untergeordneten Spalten und fügt die Einschränkung der Auflistung hinzu.</summary>
      <param name="name">Der Name von <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die Primärschlüsselspalten oder übergeordneten Spalten sind.</param>
      <param name="foreignKeyColumns">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die Fremdschlüsselspalten oder untergeordneten Spalten sind.</param>
      <returns>Ein neuer <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.ConstraintCollection" />-Arrays an das Ende der Auflistung.</summary>
      <param name="constraints">Ein Array von <see cref="T:System.Data.ConstraintCollection" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Gibt an, ob eine <see cref="T:System.Data.Constraint" /> entfernt werden kann.</summary>
      <param name="constraint">Die <see cref="T:System.Data.Constraint" />, für die untersucht werden soll, ob sie aus der Auflistung entfernt werden kann.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Data.Constraint" /> entfernt werden kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Löscht sämtliche <see cref="T:System.Data.Constraint" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Gibt an, ob das mit Namen angegebene <see cref="T:System.Data.Constraint" />-Objekt in der Auflistung vorhanden ist.</summary>
      <param name="name">Der <see cref="P:System.Data.Constraint.ConstraintName" /> der Einschränkung.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung die angegebene Einschränkung enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Ruft den Index der angegebenen <see cref="T:System.Data.Constraint" /> ab.</summary>
      <param name="constraint">Die zu suchende <see cref="T:System.Data.Constraint" />.</param>
      <returns>Der nullbasierte Index der <see cref="T:System.Data.Constraint" />, wenn sich diese in der Auflistung befindet, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Ruft den Index der mit Namen angegebenen <see cref="T:System.Data.Constraint" /> ab.</summary>
      <param name="constraintName">Der Name von <see cref="T:System.Data.Constraint" />.</param>
      <returns>Der Index der <see cref="T:System.Data.Constraint" />, wenn sich diese in der Auflistung befindet, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Entfernt den angegebenen <see cref="T:System.Data.Constraint" /> aus der Auflistung.</summary>
      <param name="constraint">Das zu entfernende <see cref="T:System.Data.Constraint" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="constraint" />-Argument lautet <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Einschränkung gehört nicht zu der Auflistung.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Entfernt das mit Namen angegebene <see cref="T:System.Data.Constraint" />-Objekt aus der Auflistung.</summary>
      <param name="name">Der Name des zu entfernenden <see cref="T:System.Data.Constraint" />-Objekts.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Data.Constraint" />-Objekt am angegebenen Index aus der Sammlung.</summary>
      <param name="index">Der Index der zu entfernenden <see cref="T:System.Data.Constraint" />-Klasse.</param>
      <exception cref="T:System.IndexOutOfRangeException">In der Auflistung ist an diesem Index keine Einschränkung vorhanden.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.Data.Constraint" /> am angegebenen Index aus der Auflistung ab.</summary>
      <param name="index">Der Index der zurückzugebenden Einschränkung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <returns>Das <see cref="T:System.Data.Constraint" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Ruft die <see cref="T:System.Data.Constraint" /> mit dem angegebenen Namen aus der Auflistung ab.</summary>
      <param name="name">Der <see cref="P:System.Data.Constraint.ConstraintName" /> der zurückzugebenden Einschränkung.</param>
      <returns>Die <see cref="T:System.Data.Constraint" /> mit dem angegebenen Namen, andernfalls ein NULL-Wert, wenn die <see cref="T:System.Data.Constraint" /> nicht vorhanden ist.</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn eine Aktion versucht wird, die gegen eine Einschränkung verstößt.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse. Dies ist der parameterlose Konstruktor.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse mit der angegebenen Serialisierung und dem angegebenen Datenstromkontext.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ConstraintException" />-Klasse, die die angegebene Zeichenfolge und die angegebene innere Ausnahme verwendet.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException">Ruft die <see langword="Exception" />-Instanz ab, die die aktuelle Ausnahme verursacht hat.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Stellt das Schema einer Spalte in einer Datentabelle (<see cref="T:System.Data.DataTable" />) dar.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataColumn" />-Klasse als type-Zeichenfolge.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse als type-Zeichenfolge und unter Verwendung des angegebenen Spaltennamens.</summary>
      <param name="columnName">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Spaltennamens und Datentyps.</summary>
      <param name="columnName">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <exception cref="T:System.ArgumentNullException">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Namens, Datentyps und Ausdrucks.</summary>
      <param name="columnName">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Der Ausdruck, der zum Erstellen dieser Spalte verwendet wird. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</param>
      <exception cref="T:System.ArgumentNullException">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumn" />-Klasse unter Verwendung des angegebenen Namens, Datentyps, Ausdrucks und des Werts, der bestimmt, ob es sich bei der Spalte um ein Attribut handelt.</summary>
      <param name="columnName">Eine Zeichenfolge, die den Namen der zu erstellenden Spalte darstellt. Wenn diese auf <see langword="null" /> oder eine leere Zeichenfolge ("") festgelegt ist, wird beim Hinzufügen zur Spaltenauflistung ein Standardname zugewiesen.</param>
      <param name="dataType">Ein unterstützter <see cref="P:System.Data.DataColumn.DataType" />.</param>
      <param name="expr">Der Ausdruck, der zum Erstellen dieser Spalte verwendet wird. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</param>
      <param name="type">Einer der <see cref="T:System.Data.MappingType" />-Werte.</param>
      <exception cref="T:System.ArgumentNullException">Es wurde kein <paramref name="dataType" /> angegeben.</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="pcevent">Parameterverweis.</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="name">Parameterverweis.</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Ändert die Ordnungszahl oder Position der <see cref="T:System.Data.DataColumn" /> in die angegebene Ordnungszahl oder Position.</summary>
      <param name="ordinal">Die angegebene Ordnungszahl.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Ruft den <see cref="P:System.Data.DataColumn.Expression" /> der Spalte ab, sofern ein solcher vorhanden ist.</summary>
      <returns>Der <see cref="P:System.Data.DataColumn.Expression" />-Wert, wenn die Eigenschaft festgelegt ist, andernfalls die <see cref="P:System.Data.DataColumn.ColumnName" />-Eigenschaft.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Ruft einen Wert ab, der angibt, ob in dieser Spalte für die zur Tabelle gehörenden Zeilen NULL-Werte zulässig sind, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" /> , wenn NULL-Werte zulässig sind. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Ruft einen Wert ab, der angibt, ob der Wert der Spalte für neu zur Tabelle hinzugefügte Zeilen in der Spalte automatisch erhöht wird, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Die Spalte ist eine berechnete Spalte.</exception>
      <returns>
        <see langword="true" />, wenn der Wert der Spalte automatisch erhöht wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Ruft den Anfangswert für eine Spalte ab, deren <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft auf <see langword="true" /> festgelegt ist, oder legt diesen fest. Die Standardeinstellung ist 0.</summary>
      <returns>Der Anfangswert für das <see cref="P:System.Data.DataColumn.AutoIncrement" />-Feature.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Ruft die Schrittweite ab, die von einer Spalte verwendet wird, deren <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft auf <see langword="true" /> festgelegt ist, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert ist 0.</exception>
      <returns>Die Zahl, um die der Wert der Spalte automatisch erhöht wird. Der Standardwert ist 1.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Ruft die Beschriftung für die Spalte ab, oder legt diese fest.</summary>
      <returns>Die Beschriftung der Spalte. Wenn nicht festgelegt, wird der <see cref="P:System.Data.DataColumn.ColumnName" />-Wert zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Ruft den <see cref="T:System.Data.MappingType" /> der Spalte ab oder legt ihn fest.</summary>
      <returns>Einer der <see cref="T:System.Data.MappingType" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Ruft den Namen der Spalte in der <see cref="T:System.Data.DataColumnCollection" /> ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft ist auf <see langword="null" /> oder eine leere Zeichenfolge festgelegt, und die Spalte gehört zu einer Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Eine Spalte mit demselben Namen ist bereits in der Auflistung vorhanden. Beim Namensvergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.</exception>
      <returns>Der Name der Spalte.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Ruft den Typ der in der Spalte gespeicherten Daten ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">In der Spalte sind bereits Daten gespeichert.</exception>
      <returns>Ein <see cref="T:System.Type" />, der den Datentyp der Spalte darstellt.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Ruft den <see langword="DateTimeMode" /> für die Spalte ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Data.DataSetDateTime" /> für die angegebene Spalte.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Ruft beim Erstellen neuer Zeilen den Standardwert für die Spalte ab oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidCastException">Beim Hinzufügen einer Zeile stellt der Standardwert keine Instanz des Datentyps der Spalte dar.</exception>
      <returns>Ein Wert, der dem <see cref="P:System.Data.DataColumn.DataType" /> der Spalte entspricht.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Ruft den Ausdruck ab, mit dem Zeilen gefiltert, die Werte in einer Spalte berechnet oder eine Aggregatspalte erstellt werden, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Data.DataColumn.AutoIncrement" />-Eigenschaft oder die <see cref="P:System.Data.DataColumn.Unique" />-Eigenschaft ist auf <see langword="true" /> festgelegt.</exception>
      <exception cref="T:System.FormatException">Bei der Verwendung der CONVERT-Funktion wird der Ausdruck als Zeichenfolge ausgewertet, die Zeichenfolge enthält jedoch keine Darstellung, die in den Typparameter konvertiert werden kann.</exception>
      <exception cref="T:System.InvalidCastException">Bei der Verwendung der CONVERT-Funktion ist die angeforderte Umwandlung nicht möglich. Ausführliche Informationen zu möglichen Umwandlungen finden Sie im folgenden Abschnitt unter der Konvertierungsfunktion.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Bei der Verwendung der SUBSTRING-Funktion befindet sich das Anfangsargument außerhalb des gültigen Bereichs.  
  
 -Oder-  
  
 Bei der Verwendung der SUBSTRING-Funktion befindet sich das Längenargument außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.Exception">Bei der Verwendung der LEN-Funktion oder der TRIM-Funktion wird der Ausdruck nicht als Zeichenfolge ausgewertet. Dies gilt auch für Ausdrücke, die als <see cref="T:System.Char" /> ausgewertet werden.</exception>
      <returns>Ein Ausdruck, mit dem der Wert einer Spalte berechnet oder eine Aggregatspalte erstellt wird. Der Rückgabetyp eines Ausdrucks wird durch den <see cref="P:System.Data.DataColumn.DataType" /> der Spalte bestimmt.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Ruft die Auflistung der benutzerdefinierten Benutzerinformationen ab, die einer <see cref="T:System.Data.DataColumn" /> zugeordnet ist.</summary>
      <returns>Eine <see cref="T:System.Data.PropertyCollection" /> mit benutzerdefinierten Informationen.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Ruft die maximale Länge einer Textspalte ab oder legt diese fest.</summary>
      <returns>Die maximale Länge der Spalte in Zeichen. Wenn die Spalte keine maximale Länge aufweist, ist der Wert-1 (Standard).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Ruft den Namespace der <see cref="T:System.Data.DataColumn" /> ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Der Namespace enthält bereits Daten.</exception>
      <returns>Der Namespace von <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Ruft die nullbasierte Position der Spalte in der <see cref="T:System.Data.DataColumnCollection" /> Auflistung ab.</summary>
      <returns>Die Position der Spalte. Ruft -1 ab, wenn die Spalte kein Member der Auflistung ist.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Ruft ein XML-Präfix ab, das als Alias für den Namespace der <see cref="T:System.Data.DataTable" /> fungiert, oder legt dieses fest.</summary>
      <returns>Das XML-Präfix für den <see cref="T:System.Data.DataTable" />-Namespace.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Spalte nach dem Hinzufügen einer Zeile zur Tabelle Änderungen zulässt, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft ist für eine berechnete Spalte auf <see langword="false" /> festgelegt.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte schreibgeschützt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, zu der die Spalte gehört.</summary>
      <returns>Die <see cref="T:System.Data.DataTable" />, zu der die <see cref="T:System.Data.DataColumn" /> gehört.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Ruft einen Wert ab, der angibt, ob die Werte in allen Zeilen der Spalte eindeutig sein müssen, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Die Spalte ist eine berechnete Spalte.</exception>
      <returns>
        <see langword="true" />, wenn der Wert eindeutig sein muss, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataColumnChangeEventArgs" />-Klasse.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> der Spalte mit dem Wert, der geändert wird.</param>
      <param name="column">Die <see cref="T:System.Data.DataColumn" /> mit dem Wert, der geändert wird.</param>
      <param name="value">Der neue Wert.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Ruft die <see cref="T:System.Data.DataColumn" /> mit einem Wert ab, der geändert wird.</summary>
      <returns>Die <see cref="T:System.Data.DataColumn" /> mit einem Wert, der geändert wird.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Ruft den vorgeschlagenen neuen Wert für die Spalte ab oder legt diesen fest.</summary>
      <returns>Der vorgeschlagene Wert vom Typ <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Ruft die <see cref="T:System.Data.DataRow" /> der Spalte mit einem Wert ab, der geändert wird.</summary>
      <returns>Die <see cref="T:System.Data.DataRow" /> der Spalte mit einem Wert, der geändert wird.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.Data.DataColumn" />-Objekten für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Tritt ein, wenn sich die Auflistung der Spalten durch Hinzufügen oder Entfernen einer Spalte ändert.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <returns>Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Erstellt das angegebene <see cref="T:System.Data.DataColumn" />-Objekt und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="column">Das hinzuzufügende <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="column" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Spalte gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <returns>Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen und Typ und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName">Der beim Erstellen der Spalte zu verwendende <see cref="P:System.Data.DataColumn.ColumnName" />.</param>
      <param name="type">Der <see cref="P:System.Data.DataColumn.DataType" /> der neuen Spalte.</param>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
      <returns>Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Erstellt ein <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen, Typ und Ausdruck und fügt dieses der <see cref="T:System.Data.DataColumnCollection" /> hinzu.</summary>
      <param name="columnName">Der beim Erstellen der Spalte zu verwendende Name.</param>
      <param name="type">Der <see cref="P:System.Data.DataColumn.DataType" /> der neuen Spalte.</param>
      <param name="expression">Der Ausdruck, der der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft zugewiesen werden soll.</param>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Spalte mit dem angegebenen Namen. (Beim Vergleich wird die Groß-/Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">Der Ausdruck ist ungültig. Weitere Informationen zum Erstellen von Ausdrücken finden Sie unter der <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft.</exception>
      <returns>Der neu erstellte <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataColumn" />-Arrays an das Ende der Auflistung.</summary>
      <param name="columns">Das Array von <see cref="T:System.Data.DataColumn" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Überprüft, ob eine bestimmte Spalte aus der Auflistung entfernt werden kann.</summary>
      <param name="column">Eine <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="column" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu dieser Auflistung.
        
- oder -

Die Spalte ist Teil einer Beziehung.

- oder -

Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte entfernt werden kann. <see langword="false" /> falls, 
–   Der <paramref name="column" />-Parameter ist <see langword="null" />.  
  
–   Die Spalte gehört nicht zu dieser Auflistung.  
  
–   Die Spalte ist Teil einer Beziehung.  
  
–   Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Löscht sämtliche Spalten aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Überprüft, ob die Auflistung eine Spalte mit dem angegebenen Namen enthält.</summary>
      <param name="name">Der <see cref="P:System.Data.DataColumn.ColumnName" /> der zu suchenden Spalte.</param>
      <returns>
        <see langword="true" />, wenn eine Spalte mit diesem Namen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Kopiert die gesamte Auflistung ab einem angegebenen Index in einem vorhandenen Array in das Array.</summary>
      <param name="array">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, in das die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Ruft den Index einer durch den Namen angegebenen Spalte ab.</summary>
      <param name="column">Der Name der zurückzugebenden Spalte.</param>
      <returns>Der Index der durch <paramref name="column" /> angegebenen Spalte, wenn diese gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Ruft den Index der Spalte mit dem bestimmten Namen ab, bei dem die Groß- und Kleinschreibung nicht berücksichtigt wird.</summary>
      <param name="columnName">Der Name der zu suchenden Spalte.</param>
      <returns>Der nullbasierte Index der Spalte mit dem angegebenen Namen oder -1, wenn die Spalte in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Entfernt das angegebene <see cref="T:System.Data.DataColumn" />-Objekt aus der Auflistung.</summary>
      <param name="column">Das zu entfernende <see cref="T:System.Data.DataColumn" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="column" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu dieser Auflistung.  
  
 -Oder-  
  
 Die Spalte ist Teil einer Beziehung.  
  
 -Oder-  
  
 Der Ausdruck einer anderen Spalte ist von dieser Spalte abhängig.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.DataColumn" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name">Der Name der zu entfernenden Spalte.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Spalte mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Entfernt die Spalte am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der Index der zu entfernenden Spalte.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Spalte am angegebenen Index.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.Data.DataColumn" /> am angegebenen Index aus der Auflistung ab.</summary>
      <param name="index">Der nullbasierte Index der zurückzugebenden Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <returns>Das <see cref="T:System.Data.DataColumn" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Ruft die <see cref="T:System.Data.DataColumn" /> mit dem angegebenen Namen aus der Auflistung ab.</summary>
      <param name="name">Der <see cref="P:System.Data.DataColumn.ColumnName" /> der zurückzugebenden Spalte.</param>
      <returns>Die <see cref="T:System.Data.DataColumn" /> in der Auflistung mit dem angegebenen <see cref="P:System.Data.DataColumn.ColumnName" />. Andernfalls ein NULL-Wert, wenn die <see cref="T:System.Data.DataColumn" /> nicht vorhanden ist.</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn Fehler bei der Verwendung von ADO.NET-Komponenten generiert werden.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse. Dies ist der parameterlose Konstruktor.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Kontext.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen inneren Ausnahme.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary>Stellt Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" /> bereit.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als ein Byte ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <param name="dataOffset">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Bytes.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als Einzelzeichen ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Liest eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <param name="dataOffset">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den die Daten kopiert werden sollen.</param>
      <param name="bufferOffset">Der Index im Puffer, an den die Daten kopiert werden.</param>
      <param name="length">Die maximale Anzahl der zu lesenden Zeichen.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Zeichen.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary>Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Ein Datenreader.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Namen des Datentyps der angegebenen Spalte ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Name des Spaltentyps abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Der Name des Datentyps.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Datentyp der angegebenen Spalte ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Feldtyp abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Datentyp der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

- oder - 
Der Datenreader wurde während des Datenabrufs geschlossen.  
  
- oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).  

- oder -

Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
      <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

- oder -

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als GUID (Globally Unique Identifier) ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Ein anbieterspezifischer .NET-Typ.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</exception>
      <returns>Ein Stream.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.String" /> ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder -

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</exception>
      <returns>Ein Textreader.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.Object" /> ab.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>
        <see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
      <param name="name">Der Name der Spalte.</param>
      <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
      <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
- oder -

Der Datenreader wurde während des Datenabrufs geschlossen.  

- oder -

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

- oder -

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

- oder - 
Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Stellt die hierarchische Beziehung zwischen zwei <see cref="T:System.Data.DataTable" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen <see cref="T:System.Data.DataRelation" />-Namens sowie der angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte.</summary>
      <param name="relationName">Der Name von <see cref="T:System.Data.DataRelation" />. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumn">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="childColumn">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <exception cref="T:System.ArgumentNullException">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf. 
-Oder- 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen Namens, der übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte sowie eines Werts, der angibt, ob Einschränkungen erstellt werden sollen.</summary>
      <param name="relationName">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumn">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="childColumn">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Beziehung.</param>
      <param name="createConstraints">Ein Wert, der angibt, ob Einschränkungen erstellt werden. <see langword="true" />, wenn Einschränkungen erstellt werden, Andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf. 
-Oder- 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen <see cref="T:System.Data.DataRelation" />-Namens sowie der übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="relationName">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns">Ein Array von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <exception cref="T:System.ArgumentNullException">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte enthalten <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die <see cref="T:System.Data.DataColumn" />-Objekte weisen unterschiedliche Datentypen auf. 
-Oder- 
Eines oder beide der Arrays setzen sich nicht aus unterschiedlichen Spalten aus derselben Tabelle zusammen.  
  
-Oder- 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelation" />-Klasse unter Verwendung des angegebenen Namens, der übereinstimmenden Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten sowie eines Werts, der angibt, ob Einschränkungen erstellt werden sollen.</summary>
      <param name="relationName">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns">Ein Array von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="createConstraints">Ein Wert, der angibt, ob Einschränkungen erstellt werden sollen. <see langword="true" />, wenn Einschränkungen erstellt werden, Andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Eines oder beide der <see cref="T:System.Data.DataColumn" />-Objekte ist bzw. sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf. 
-Oder- 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt.</summary>
      <param name="relationName">Der Name von <see cref="T:System.Data.DataRelation" />. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentTableName">Der Name der <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle der Beziehung ist.</param>
      <param name="parentTableNamespace">Der Name des Namespaces der übergeordneten Tabelle.</param>
      <param name="childTableName">Der Name der <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung ist.</param>
      <param name="childTableNamespace">Der Name des Namespaces der untergeordneten Tabelle.</param>
      <param name="parentColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der übergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="childColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="nested">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt.</summary>
      <param name="relationName">Der Name der Beziehung. Bei <see langword="null" /> oder einer leeren Zeichenfolge ("") wird beim Hinzufügen des erstellten Objekts zur <see cref="T:System.Data.DataRelationCollection" /> ein Standardname vergeben.</param>
      <param name="parentTableName">Der Name der <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle der Beziehung ist.</param>
      <param name="childTableName">Der Name der <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung ist.</param>
      <param name="parentColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der übergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="childColumnNames">Ein Array von <see cref="T:System.Data.DataColumn" />-Objektnamen in der untergeordneten <see cref="T:System.Data.DataTable" /> der Beziehung.</param>
      <param name="nested">Ein Wert, der angibt, ob Beziehungen geschachtelt sind.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <exception cref="T:System.Data.DataException">Die übergeordnete und die untergeordnete Tabelle gehören zu verschiedenen <see cref="T:System.Data.DataSet" />-Objekten.  
  
-Oder- 
Mindestens eines der Paare von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten weist unterschiedliche Datentypen auf.  
  
-Oder- 
Das übergeordnete und das untergeordnete <see cref="T:System.Data.DataColumn" />-Objekt sind identisch.</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="pcevent">Parameterverweis.</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="name">Parameterverweis.</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Ruft den <see cref="P:System.Data.DataRelation.RelationName" /> ab, sofern vorhanden.</summary>
      <returns>Der Wert der <see cref="P:System.Data.DataRelation.RelationName" />-Eigenschaft.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Ruft die untergeordneten <see cref="T:System.Data.DataColumn" />-Objekte dieser Beziehung ab.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Ruft die <see cref="T:System.Data.ForeignKeyConstraint" /> für die Beziehung ab.</summary>
      <returns>Ein <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Ruft die untergeordnete Tabelle dieser Beziehung ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle der Beziehung darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem die <see cref="T:System.Data.DataRelation" /> gehört.</summary>
      <returns>Ein <see cref="T:System.Data.DataSet" />, zu dem die <see cref="T:System.Data.DataRelation" /> gehört.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Ruft die Auflistung ab, in der angepasste Eigenschaften gespeichert werden.</summary>
      <returns>Eine <see cref="T:System.Data.PropertyCollection" />, die benutzerdefinierte Eigenschaften enthält.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.DataRelation" />-Objekte geschachtelt sind, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.DataRelation" />-Objekte geschachtelt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Ruft ein Array von <see cref="T:System.Data.DataColumn" />-Objekten ab, die die übergeordneten Spalten dieser <see cref="T:System.Data.DataRelation" /> darstellen.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die übergeordneten Spalten dieser <see cref="T:System.Data.DataRelation" /> darstellen.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Ruft die <see cref="T:System.Data.UniqueConstraint" /> ab, durch die sichergestellt wird, dass Werte in der übergeordneten Spalte einer <see cref="T:System.Data.DataRelation" /> eindeutig sind.</summary>
      <returns>Eine <see cref="T:System.Data.UniqueConstraint" />, durch die sichergestellt wird, dass Werte in einer übergeordneten Spalte eindeutig sind.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Ruft das übergeordnete <see cref="T:System.Data.DataTable" /> dieses <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die übergeordnete Tabelle dieser Beziehung ist.</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Ruft den Namen ab, der zum Abrufen einer <see cref="T:System.Data.DataRelation" /> aus der <see cref="T:System.Data.DataRelationCollection" /> verwendet wird, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> oder eine leere Zeichenfolge ("") wurde an eine <see cref="T:System.Data.DataColumn" /> übergeben, die eine <see cref="T:System.Data.DataRelation" /> ist.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die <see cref="T:System.Data.DataRelation" /> gehört zu einer Auflistung, die bereits eine <see cref="T:System.Data.DataRelation" /> mit demselben Namen enthält.</exception>
      <returns>Der Name der <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Stellt die Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten für dieses <see cref="T:System.Data.DataSet" /> dar.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Tritt ein, wenn die Auflistung geändert wurde.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRelationCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Erstellt eine <see cref="T:System.Data.DataRelation" /> mit der angegebenen übergeordneten und untergeordneten Spalte und fügt sie der Auflistung hinzu.</summary>
      <param name="parentColumn">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn">Die untergeordnete Spalte in der Beziehung.</param>
      <returns>Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Erstellt eine <see cref="T:System.Data.DataRelation" /> mit den angegebenen übergeordneten und untergeordneten Spalten und fügt sie der Auflistung hinzu.</summary>
      <param name="parentColumns">Die übergeordneten Spalten in der Beziehung.</param>
      <param name="childColumns">Die untergeordneten Spalten in der Beziehung.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="relation" />-Argument ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
      <returns>Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Fügt der <see cref="T:System.Data.DataRelation" /> einen <see cref="T:System.Data.DataRelationCollection" /> hinzu.</summary>
      <param name="relation">Der der Auflistung hinzuzufügende <see langword="DataRelation" />.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="relation" />-Parameter ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Beziehung mit dem angegebenen Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Erstellt eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen und den angegebenen übergeordneten und untergeordneten Spalten und fügt sie der Auflistung hinzu.</summary>
      <param name="name">Der Name der Beziehung.</param>
      <param name="parentColumn">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn">Die untergeordnete Spalte in der Beziehung.</param>
      <returns>Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Erstellt eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen, übergeordneten und untergeordneten Spalten mit optionalen Beschränkungen entsprechend dem Wert des <paramref name="createConstraints" />-Parameters und fügt diese der Auflistung hinzu.</summary>
      <param name="name">Der Name der Beziehung.</param>
      <param name="parentColumn">Die übergeordnete Spalte in der Beziehung.</param>
      <param name="childColumn">Die untergeordnete Spalte in der Beziehung.</param>
      <param name="createConstraints">
        <see langword="true" />, wenn Einschränkungen erstellt werden sollen, andernfalls <see langword="false" />. (Der Standardwert ist <see langword="true" />).</param>
      <returns>Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Erstellt mit dem angegebenen Namen sowie den angegebenen Arrays der übergeordneten und untergeordneten Spalten eine <see cref="T:System.Data.DataRelation" /> und fügt diese der Auflistung hinzu.</summary>
      <param name="name">Der Name der zu erstellenden <see langword="DataRelation" />.</param>
      <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns">Ein Array von untergeordneten <see langword="DataColumn" />-Objekten.</param>
      <exception cref="T:System.ArgumentNullException">Der Name der Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
      <returns>Der erstellte <see langword="DataRelation" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Erstellt mit dem angegebenen Namen, den angegebenen Arrays der übergeordneten und untergeordneten Spalten sowie dem Wert, der angibt, ob eine Einschränkung erstellt werden soll, eine <see cref="T:System.Data.DataRelation" /> und fügt diese der Auflistung hinzu.</summary>
      <param name="name">Der Name der zu erstellenden <see langword="DataRelation" />.</param>
      <param name="parentColumns">Ein Array von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="childColumns">Ein Array von untergeordneten <see langword="DataColumn" />-Objekten.</param>
      <param name="createConstraints">
        <see langword="true" />, wenn eine Einschränkung erstellt werden soll, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Der Name der Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Beziehung hat einen ungültigen Zustand angenommen, nachdem sie erstellt wurde.</exception>
      <returns>Die erstellte Beziehung.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Führt eine Überprüfung der Tabelle durch.</summary>
      <param name="relation">Die zu überprüfende Beziehung.</param>
      <exception cref="T:System.ArgumentNullException">Die Beziehung ist NULL.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Auflistung enthält bereits eine Beziehung mit demselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataRelation" />-Arrays an das Ende der Auflistung.</summary>
      <param name="relations">Das Array von <see cref="T:System.Data.DataRelation" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Überprüft, ob die angegebene <see cref="T:System.Data.DataRelation" /> aus der Auflistung entfernt werden kann.</summary>
      <param name="relation">Die Beziehung, für die die Überprüfung durchgeführt werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Data.DataRelation" /> entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Löscht sämtliche Beziehungen aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Überprüft, ob eine <see cref="T:System.Data.DataRelation" /> mit dem angegebenen Namen (ohne Berücksichtigung von Groß- und Kleinschreibung) in der Auflistung vorhanden ist.</summary>
      <param name="name">Der Name der zu suchenden Beziehung.</param>
      <returns>
        <see langword="true" />, wenn eine Beziehung mit dem angegebenen Namen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Kopiert die Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten ab dem angegebenen Index.</summary>
      <param name="array">Das Array von <see cref="T:System.Data.DataRelation" />-Objekten, in das die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <returns>Das DataSet, auf das verwiesen wird.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Ruft den Index des angegebenen <see cref="T:System.Data.DataRelation" />-Objekts ab.</summary>
      <param name="relation">Die zu suchende Beziehung.</param>
      <returns>Der nullbasierte Index der Beziehung oder -1, wenn die Beziehung nicht in der Auflistung gefunden wird.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Ruft den Index der mit Namen angegebenen <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName">Der Name der zu suchenden Beziehung.</param>
      <returns>Der nullbasierte Index der Beziehung mit dem angegebenen Namen oder -1, wenn die Beziehung in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus.</summary>
      <param name="ccevent">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus.</summary>
      <param name="ccevent">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Entfernt die angegebene Beziehung aus der Auflistung.</summary>
      <param name="relation">Die zu entfernende Beziehung.</param>
      <exception cref="T:System.ArgumentNullException">Die Beziehung ist ein NULL-Wert.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört nicht zur Auflistung.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Entfernt die Beziehung mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name">Der Name der zu entfernenden Beziehung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Die Auflistung enthält keine Beziehung mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Entfernt die Beziehung am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der Index der zu entfernenden Beziehung.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Beziehung am angegebenen Index.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Führt eine Überprüfung des angegebenen <see cref="T:System.Data.DataRelation" />-Objekts durch.</summary>
      <param name="relation">Das zu überprüfende <see langword="DataRelation" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">Die Auflistung enthält keine Beziehung am angegebenen Index.</exception>
      <exception cref="T:System.ArgumentException">Die angegebene Beziehung gehört nicht zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Ruft das <see cref="T:System.Data.DataRelation" />-Objekt am angegebenen Index ab.</summary>
      <param name="index">Der zu suchende nullbasierte Index.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <returns>Die <see cref="T:System.Data.DataRelation" /> oder ein NULL-Wert, wenn die angegebene <see cref="T:System.Data.DataRelation" /> nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Ruft das durch den Namen angegebene <see cref="T:System.Data.DataRelation" />-Objekt ab.</summary>
      <param name="name">Der Name der zu suchenden Beziehung.</param>
      <returns>Die benannte <see cref="T:System.Data.DataRelation" /> oder ein NULL-Wert, wenn die angegebene <see cref="T:System.Data.DataRelation" /> nicht vorhanden ist.</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Stellt eine Datenzeile in einer <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Initialisiert eine neue Instanz von DataRow. Erstellt eine Zeile aus dem Generator. Nur zur internen Verwendung.</summary>
      <param name="builder">der Generator.</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Führt einen Commit für alle Änderungen aus, die an dieser Zeile seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> vorgenommen wurden.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Startet einen Bearbeitungsvorgang für ein <see cref="T:System.Data.DataRow" />-Objekt.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Methode wurde für eine gelöschte Zeile aufgerufen.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Bricht den aktuellen Bearbeitungsvorgang für die Zeile ab.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Löscht die Fehler für die Zeile. Dazu zählen auch der <see cref="P:System.Data.DataRow.RowError" /> und Fehler, die mit <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> festgelegt wurden.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Löscht die <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Die <see cref="T:System.Data.DataRow" /> wurde bereits gelöscht.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Beendet den Bearbeitungsvorgang an der Zeile.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
      <exception cref="T:System.Data.ConstraintException">Bei dem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Die Zeile gehört zu der Tabelle, und beim Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Beim Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die untergeordneten Zeilen dieser <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">Die Beziehung ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und einer <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Ruft die Fehlerbeschreibung der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
      <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Der Text der Fehlerbeschreibung.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Ruft die Fehlerbeschreibung für die durch den Index angegebene Spalte ab.</summary>
      <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <returns>Der Text der Fehlerbeschreibung.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Ruft die Fehlerbeschreibung für eine durch den Namen angegebene Spalte ab.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <returns>Der Text der Fehlerbeschreibung.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Ruft ein Array von Spalten ab, die Fehler enthalten.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die Fehler enthalten.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="relation" /> gehört nicht zur <see cref="T:System.Data.DataTable" />.  
  
- oder -

Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Diese Zeile gehört nicht zur untergeordneten Tabelle des <see cref="T:System.Data.DataRelation" />-Objekts.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
      <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
      <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.  
  
- oder -

Die <paramref name="relation" /> gehört nicht zu den übergeordneten Beziehungen dieser Tabelle.</exception>
      <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
      <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
      <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
      <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Ruft einen Wert ab, der angibt, ob eine angegebene Version vorhanden ist.</summary>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt.</param>
      <returns>
        <see langword="true" />, wenn die Version vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> einen NULL-Wert enthält.</summary>
      <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> und <see cref="T:System.Data.DataRowVersion" /> einen NULL-Wert enthält.</summary>
      <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <paramref name="version" />.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Ruft einen Wert ab, der angibt, ob die Spalte am angegebenen Index einen NULL-Wert enthält.</summary>
      <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Dem durch <paramref name="columnIndex" /> angegebenen Index entspricht keine Spalte.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob die benannte Spalte einen NULL-Wert enthält.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      <returns>
        <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Lehnt alle Änderungen ab, die seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> an der Zeile vorgenommen wurden.</summary>
      <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Legt die Fehlerbeschreibung für eine als <see cref="T:System.Data.DataColumn" /> angegebene Spalte fest.</summary>
      <param name="column">Die <see cref="T:System.Data.DataColumn" />, für die die Fehlerbeschreibung festgelegt werden soll.</param>
      <param name="error">Die Fehlerbeschreibung.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Legt die Fehlerbeschreibung für eine durch den Index angegebene Spalte fest.</summary>
      <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
      <param name="error">Die Fehlerbeschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Legt die Fehlerbeschreibung für eine durch den Namen angegebene Spalte fest.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <param name="error">Die Fehlerbeschreibung.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Legt den Wert der angegebenen <see cref="T:System.Data.DataColumn" /> auf einen NULL-Wert fest.</summary>
      <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> fest.</summary>
      <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> fest.</summary>
      <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
      <param name="relation">Die zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.Data.RowNotInTableException">Eine der Zeilen gehört nicht zu einer Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">Eine der Zeilen ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Beziehung gehört nicht zur <see cref="T:System.Data.DataRelationCollection" /> des <see cref="T:System.Data.DataSet" />-Objekts.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete <see cref="T:System.Data.DataTable" /> der Beziehung ist nicht die Tabelle, zu der diese Zeile gehört.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Ruft einen Wert ab, der angibt, ob eine Zeile Fehler enthält.</summary>
      <returns>
        <see langword="true" />, wenn die Zeile einen Fehler enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Ruft die in der angegebenen <see cref="T:System.Data.DataColumn" /> gespeicherten Daten ab oder legt diese fest.</summary>
      <param name="column">Ein <see cref="T:System.Data.DataColumn" />, der die Daten enthält.</param>
      <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu dieser Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">Die <paramref name="column" /> ist NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Ruft die angegebene Version der Daten aus der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
      <param name="column">Eine <see cref="T:System.Data.DataColumn" />, die Informationen über die Spalte enthält.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu der Tabelle.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="column" />-Argument ist NULL.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Ruft die Daten aus der durch den Index angegebenen Spalte ab oder legt diese fest.</summary>
      <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Wird ausgelöst, wenn Sie einen Wert festlegen und der <see cref="T:System.Type" /> des neuen Werts nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Ruft die durch den Index und die Version angegebenen Daten aus der Spalte ab.</summary>
      <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Ruft die Daten aus der durch den Namen angegebenen Spalte ab oder legt diese fest.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException">Tritt auf, wenn Sie einen Wert festlegen, dessen <see cref="T:System.Type" /> nicht mit <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Tritt auf, wenn Sie versuchen, einen NULL-Wert in eine Spalte einzufügen, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> zu <see langword="false" /> festgelegt ist.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Ruft die angegebene Version der Daten aus der benannten Spalte ab.</summary>
      <param name="columnName">Der Name der Spalte.</param>
      <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
      <returns>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Ruft alle Werte für diese Zeile über ein Array ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException">Ein Wert im Array stimmt nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> in der entsprechenden <see cref="T:System.Data.DataColumn" /> überein.</exception>
      <exception cref="T:System.Data.ConstraintException">Bei einem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Bei einem Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Bei einem Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> für das <see cref="T:System.Data.DataColumn" />-Objekts <see langword="false" /> ist.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
      <returns>Ein Array vom Typ <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Ruft die benutzerdefinierte Fehlerbeschreibung für eine Zeile ab oder legt diese fest.</summary>
      <returns>Der Text, der einen Fehler beschreibt.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Ruft den aktuellen Zustand der Zeile bezüglich ihrer Beziehung zur <see cref="T:System.Data.DataRowCollection" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Data.DataRowState" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, für die diese Zeile über ein Schema verfügt.</summary>
      <returns>Die <see cref="T:System.Data.DataTable" />, zu der diese Zeile gehört.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Beschreibt eine Aktion, die für eine <see cref="T:System.Data.DataRow" /> ausgeführt wird.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>Die Zeile wurde der Tabelle hinzugefügt.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>Die Zeile wurde geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>Die ursprünglichen und die aktuellen Versionen der Zeile wurden geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>Die ursprüngliche Version der Zeile wurde geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>Die Änderungen an der Zeile wurden übernommen.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>Die Zeile wurde aus der Tabelle gelöscht.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>Die Zeile wurde nicht geändert.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>Für die letzte Änderung an der Zeile wurde ein Rollback ausgeführt.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>Der <see langword="DataRowBuilder" />-Typ unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code ausgelegt.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Data.DataTable.RowChanged" />-Ereignis, das <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis, das <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />-Ereignis und das <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataRowChangeEventArgs" />-Klasse.</summary>
      <param name="row">Das <see cref="T:System.Data.DataRow" />-Element, für das eine Aktion ausgeführt wird.</param>
      <param name="action">Einer der <see cref="T:System.Data.DataRowAction" />-Werte.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Ruft die Aktion ab, die für eine <see cref="T:System.Data.DataRow" /> durchgeführt wurde.</summary>
      <returns>Einer der <see cref="T:System.Data.DataRowAction" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Ruft die Zeile ab, für die eine Aktion durchgeführt wurde.</summary>
      <returns>Die <see cref="T:System.Data.DataRow" />, für die eine Aktion durchgeführt wurde.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Stellt die Methode dar, die die folgenden Ereignisse einer <see cref="E:System.Data.DataTable.RowChanging" /> behandelt:<see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, <see cref="E:System.Data.DataTable.RowDeleted" /> und <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Stellt eine Auflistung von Zeilen für eine <see cref="T:System.Data.DataTable" /> dar.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Fügt dem <see cref="T:System.Data.DataRow" />-Objekt die angegebene <see cref="T:System.Data.DataRowCollection" /> hinzu.</summary>
      <param name="row">Das hinzuzufügende <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.ArgumentNullException">Die Zeile ist NULL.</exception>
      <exception cref="T:System.ArgumentException">Die Zeile gehört entweder zu einer anderen Tabelle, oder sie gehört bereits zu dieser Tabelle.</exception>
      <exception cref="T:System.Data.ConstraintException">Durch das Hinzufügen wird eine Einschränkung ungültig gemacht.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Beim Hinzufügen wird versucht, eine NULL in einer <see cref="T:System.Data.DataColumn" /> zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Erstellt eine Zeile mit den angegebenen Werten und fügt diese der <see cref="T:System.Data.DataRowCollection" /> hinzu.</summary>
      <param name="values">Das Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <exception cref="T:System.ArgumentException">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException">Ein Wert stimmt nicht mit seinem entsprechenden Spaltentyp überein.</exception>
      <exception cref="T:System.Data.ConstraintException">Durch das Hinzufügen der Zeile wird eine Einschränkung für ungültig erklärt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Es wird versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
      <returns>Keine.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Löscht alle Zeilen aus der Auflistung.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">Eine <see cref="T:System.Data.ForeignKeyConstraint" /> wird für die <see cref="T:System.Data.DataRowCollection" /> erzwungen.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob der Primärschlüssel einer Zeile in der Auflistung den angegebenen Wert enthält.</summary>
      <param name="key">Der Wert des Primärschlüssels, der überprüft werden soll.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
      <returns>
        <see langword="true" />, wenn die Auflistung eine <see cref="T:System.Data.DataRow" /> mit dem angegebenen Primärschlüsselwert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Ruft einen Wert ab, der angibt, ob die Primärschlüsselspalten der Zeilen in der Auflistung die im Objektarray angegebenen Werte enthalten.</summary>
      <param name="keys">Ein Array von Primärschlüsselwerten, die überprüft werden sollen.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Data.DataRowCollection" /> eine <see cref="T:System.Data.DataRow" /> mit den angegebenen Schlüsselwerten enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle <see cref="T:System.Data.DataRow" />-Objekte ab dem angegebenen Index aus der Auflistung in das angegebene Array ab dem angegebenen Index im Zielarray.</summary>
      <param name="ar">Das eindimensionale Array, das das Ziel der aus <see langword="DataRowCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Kopiert alle <see cref="T:System.Data.DataRow" />-Objekte ab dem angegebenen Index aus der Auflistung in das angegebene Array ab dem angegebenen Index im Zielarray.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see langword="DataRowCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Ruft die durch den Primärschlüsselwert angegebene Zeile ab.</summary>
      <param name="key">Der Primärschlüsselwert der zu suchenden <see cref="T:System.Data.DataRow" />.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
      <returns>Eine <see cref="T:System.Data.DataRow" />, die den angegebenen Primärschlüsselwert enthält, andernfalls ein NULL-Wert, wenn der Primärschlüsselwert in der <see cref="T:System.Data.DataRowCollection" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Ruft die Zeile mit den angegebenen Primärschlüsselwerten ab.</summary>
      <param name="keys">Ein Array von zu suchenden Primärschlüsselwerten. Der Typ des Arrays ist <see langword="Object" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Diesem Indexwert entspricht keine Zeile.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">Die Tabelle verfügt über keinen Primärschlüssel.</exception>
      <returns>Ein <see cref="T:System.Data.DataRow" />-Objekt, das die angegebenen Primärschlüsselwerte enthält, andernfalls ein NULL-Wert, wenn der Primärschlüsselwert in der <see cref="T:System.Data.DataRowCollection" /> nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Ruft einen <see cref="T:System.Collections.IEnumerator" /> für diese Auflistung ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für diese Auflistung.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Ruft den Index des angegebenen <see cref="T:System.Data.DataRow" />-Objekts ab.</summary>
      <param name="row">Die zu suchende <see langword="DataRow" />.</param>
      <returns>Der nullbasierte Index der angegebenen Zeile oder -1, wenn die Zeile in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Fügt eine neue Zeile an der angegebenen Position in die Auflistung ein.</summary>
      <param name="row">Das hinzuzufügende <see cref="T:System.Data.DataRow" />.</param>
      <param name="pos">Die (nullbasierte) Position in der Auflistung, wo Sie die <see langword="DataRow" /> hinzufügen möchten.</param>
      <exception cref="T:System.IndexOutOfRangeException">Die <paramref name="pos" /> ist kleiner als 0.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Entfernt den angegebenen <see cref="T:System.Data.DataRow" /> aus der Auflistung.</summary>
      <param name="row">Das zu entfernende <see cref="T:System.Data.DataRow" />-Element.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Entfernt die Zeile am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der Index der zu entfernenden Zeile.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Ruft die Gesamtanzahl der <see cref="T:System.Data.DataRow" />-Objekte in dieser Auflistung ab.</summary>
      <returns>Die Gesamtanzahl der <see cref="T:System.Data.DataRow" />-Objekte in dieser Auflistung.</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Ruft die Zeile am angegebenen Index ab.</summary>
      <param name="index">Der nullbasierte Index der zurückzugebenden Zeile.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <returns>Das angegebene <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary>Gibt eine Singletoninstanz der <see cref="T:System.Data.DataRowComparer`1" />-Klasse zurück.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Ruft eine Singletoninstanz von <see cref="T:System.Data.DataRowComparer`1" /> ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Eine Instanz von <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Vergleicht zwei <see cref="T:System.Data.DataRow" />-Objekte in einem wertbasiertem Vergleich auf Übereinstimmung.</summary>
      <typeparam name="TRow">Die Objekttypen, die verglichen werden, i. d. R. <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Vergleicht zwei <see cref="T:System.Data.DataRow" />-Objekte in einem spaltenweisen, wertbasierten Vergleich.</summary>
      <param name="leftRow">Das erste zu vergleichende <see cref="T:System.Data.DataRow" />-Objekt.</param>
      <param name="rightRow">Das zweite zu vergleichende <see cref="T:System.Data.DataRow" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">Mindestens eines der <see cref="T:System.Data.DataRow" />-Quellobjekte ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn die beiden <see cref="T:System.Data.DataRow" />-Objekte über geordnete Mengen von gleichen Spaltenwerten verfügen; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Gibt einen Hashcode für das angegebene <see cref="T:System.Data.DataRow" />-Objekt zurück.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" />, aus der der Hashcode berechnet werden soll.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRow" />-Quellobjekte gehören nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Data.DataRow" />-Quellobjekte sind <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Int32" />-Wert, der den Hashcode der Zeile darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Ruft eine Singletoninstanz von <see cref="T:System.Data.DataRowComparer`1" /> ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Eine Instanz von <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataRow" />-Klasse. Dies ist eine statische Klasse.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
      <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex">Der Spaltenindex.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnIndex" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex">Die nullbasierte Ordnungszahl der Spalte, deren Wert zurückgegeben werden soll.</param>
      <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="ordinal" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein <see langword="null" />-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
      <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
      <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein NULL-Wert zugewiesen.</exception>
      <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="column">Die <see cref="T:System.Data.DataColumn" /> für die Eingabe gibt an, welcher Zeilenwert abgerufen werden soll.</param>
      <param name="value">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.ArgumentException">Die durch <paramref name="column" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> ist NULL.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest, für die die Methode aufgerufen wird. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnIndex">Die nullbasierte Ordnungszahl der Spalte, deren Wert festgelegt werden soll.</param>
      <param name="value">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="ordinal" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
      <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
      <param name="columnName">Der Name der Spalte, deren Wert festgelegt werden soll.</param>
      <param name="value">Der neue Zeilenwert für die angegebene Spalte vom Typ <paramref name="T" />.</param>
      <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
      <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
      <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Ruft den Zustand eines <see cref="T:System.Data.DataRow" />-Objekts ab.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>Die Zeile wurde einer <see cref="T:System.Data.DataRowCollection" />-Klasse hinzugefügt, und <see cref="M:System.Data.DataRow.AcceptChanges" /> wurde nicht aufgerufen.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>Die Zeile wurde mit der <see cref="M:System.Data.DataRow.Delete" />-Methode von <see cref="T:System.Data.DataRow" /> gelöscht.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>Die Zeile wurde zwar erstellt, gehört aber keiner <see cref="T:System.Data.DataRowCollection" /> an. Eine <see cref="T:System.Data.DataRow" />-Klasse befindet sich in diesem Zustand, wenn sie unmittelbar nach ihrer Erstellung noch keiner Auflistung hinzugefügt wurde oder wenn sie aus einer Auflistung entfernt wurde.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>Die Zeile wurde geändert, und <see cref="M:System.Data.DataRow.AcceptChanges" /> wurde nicht aufgerufen.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>Die Zeile wurde seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> nicht geändert.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Beschreibt die Version einer <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>Die Zeile enthält aktuelle Werte.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>Die Standardversion von <see cref="T:System.Data.DataRowState" />. Für einen <see langword="DataRowState" />-Wert von <see langword="Added" />, <see langword="Modified" /> oder <see langword="Deleted" /> ist die Standardversion <see langword="Current" />. Für einen <see cref="T:System.Data.DataRowState" />-Wert von <see langword="Detached" /> ist die Version <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>Die Zeile enthält die ursprünglichen Werte.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>Die Zeile enthält einen vorgeschlagenen Wert.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Stellt eine benutzerdefinierte Ansicht einer <see cref="T:System.Data.DataRow" /> dar.</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Das Ereignis, das ausgelöst wird, wenn eine <see cref="T:System.Data.DataRowView" />-Eigenschaft geändert wird.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Beginnt eine Bearbeitungsprozedur.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Bricht eine Bearbeitungsprozedur ab.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen untergeordneten <see cref="T:System.Data.DataRelation" /> zurück.</summary>
      <param name="relation">Das <see cref="T:System.Data.DataRelation" />-Objekt.</param>
      <returns>Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Gibt eine <see cref="T:System.Data.DataView" /> für das untergeordnete <see cref="T:System.Data.DataTable" /> Element mit dem angegebenen übergeordnetem <see cref="T:System.Data.DataRelation" />-Element zurück.</summary>
      <param name="relation">Das <see cref="T:System.Data.DataRelation" />-Objekt.</param>
      <param name="followParent">Das übergeordnete -Objekt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <returns>Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen untergeordneten <see cref="T:System.Data.DataRelation" />-Namen zurück.</summary>
      <param name="relationName">Eine Zeichenfolge, die den <see cref="T:System.Data.DataRelation" />-Namen enthält.</param>
      <returns>Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Gibt eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" /> mit dem angegebenen <see cref="T:System.Data.DataRelation" />-Namen und übergeordnetem Element zurück.</summary>
      <param name="relationName">Eine Zeichenfolge, die den <see cref="T:System.Data.DataRelation" />-Namen enthält.</param>
      <param name="followParent">
        <see langword="true" />, um die erstellte untergeordnete Ansicht synchron mit der übergeordneten Ansicht zu erhalten; sonst <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> ist <see langword="null" />.</exception>
      <returns>Eine <see cref="T:System.Data.DataView" /> für die untergeordnete <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Löscht eine Zeile.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Führt Änderungen in der zugrunde liegenden <see cref="T:System.Data.DataRow" /> durch und beendet die Sitzung, die mit <see cref="M:System.Data.DataRowView.BeginEdit" /> gestartet wurde.  Verwenden Sie <see cref="M:System.Data.DataRowView.CancelEdit" />, um die Änderungen zu verwerfen, die an <see cref="T:System.Data.DataRow" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Data.DataRowView" /> mit dem angegebenen Objekt identisch ist</summary>
      <param name="other">Ein zu vergleichendes <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="object" /> eine <see cref="T:System.Data.DataRowView" /> ist und dieselbe Zeile wie die aktuelle <see cref="T:System.Data.DataRowView" /> zurückgibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Gibt den Hashcode des <see cref="T:System.Data.DataRow" />-Objekts zurück</summary>
      <returns>Der 32-Bit-Ganzzahl-Hashcode 1 mit Vorzeichen, der den booleschen Wert <see langword="true" /> darstellt, wenn der Wert dieser Instanz ungleich 0 (null) ist. Andernfalls die ganze Zahl 0 (null), die den booleschen Wert <see langword="false" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine AttributeCollection, die die Attribute für dieses Objekt enthält.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Klassenname dieser Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Namen dieser Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns>Der Typkonverter für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns>Das Standardereignis für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns>Die Standardeigenschaft für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns>Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns>Die Ereignisse für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente mit angegebenen Attributen zurück.</summary>
      <param name="attributes">Die Attribute.</param>
      <returns>Die Ereignisse für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns>Die Eigenschaften für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente mit angegebenen Attributen zurück.</summary>
      <param name="attributes">Die Attribute.</param>
      <returns>Die Eigenschaften für diese Instanz einer Komponente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Ruft die <see cref="T:System.Data.DataView" /> ab, zu der diese Zeile gehört.</summary>
      <returns>Die <see langword="DataView" />, zu der diese Zeile gehört.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Gibt an, ob sich die Zeile im Bearbeitungsmodus befindet.</summary>
      <returns>
        <see langword="true" />, wenn sich die Zeile im Bearbeitungsmodus befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Gibt an, ob eine <see cref="T:System.Data.DataRowView" /> neu ist.</summary>
      <returns>
        <see langword="true" />, wenn die Zeile neu ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Ruft einen Wert in einer angegebenen Spalte ab oder legt diesen fest.</summary>
      <param name="ndx">Der Spaltenindex.</param>
      <exception cref="T:System.Data.DataException">Die <see cref="P:System.Data.DataRowView.DataView" />-Eigenschaft kann nicht bearbeitet werden, und die <see cref="T:System.Data.DataRowView" />-Klasse ist nicht neu.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Diesem Indexwert entspricht keine Spalte.</exception>
      <returns>Der Wert der Spalte.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Ruft einen Wert in einer angegebenen Spalte ab oder legt diesen fest.</summary>
      <param name="property">Eine Zeichenfolge, die die angegebene Spalte enthält.</param>
      <exception cref="T:System.ArgumentException">Eine Spalte mit dem angegebenen Namen oder der Beziehung, die nicht gefunden wurde.
        
- oder -

Die <see cref="P:System.Data.DataRowView.DataView" />-Eigenschaft kann nicht bearbeitet werden, und die <see cref="T:System.Data.DataRowView" />-Klasse ist nicht neu.</exception>
      <exception cref="T:System.Data.DataException">Nicht übereinstimmende <paramref name="property" /> beim Festlegen eines Werts.</exception>
      <returns>Der Wert der Spalte.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Ruft die angezeigte <see cref="T:System.Data.DataRow" /> ab.</summary>
      <returns>Die <see cref="T:System.Data.DataRow" />, die über die <see cref="T:System.Data.DataRowView" /> angezeigt wird.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Ruft die aktuelle Versionsbeschreibung der <see cref="T:System.Data.DataRow" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Mögliche Werte für die <see cref="P:System.Data.DataRowView.RowVersion" />-Eigenschaft sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Ruft eine Meldung ab, die alle Validierungsfehler für das Objekt beschreibt.</summary>
      <returns>Der Validierungsfehler für das Objekt.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Ruft die Fehlermeldung für die Eigenschaft mit dem angegebenen Namen ab.</summary>
      <param name="colName">Der Name der Eigenschaft, deren Fehlermeldung abgerufen werden soll.</param>
      <returns>Die Fehlermeldung für die Eigenschaft. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Stellt einen In-Memory-Cache von Daten dar.</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Tritt nach dem Initialisieren der <see cref="T:System.Data.DataSet" /> auf.</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Tritt auf, wenn eine Ziel- und eine Quell-<see cref="T:System.Data.DataRow" /> denselben Primärschlüsselwert aufweisen und <see cref="P:System.Data.DataSet.EnforceConstraints" /> auf True festgelegt ist.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSet" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataSet" />-Klasse, die über die angegebenen Serialisierungsinformationen und den angegebenen Kontext verfügt.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSet" />-Klasse.</summary>
      <param name="info">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
      <param name="ConstructSchema">Der boolesche Wert.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.DataSet" />-Klasse mit dem angegebenen Namen.</summary>
      <param name="dataSetName">Der Name von <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Führt einen Commit für alle Änderungen aus, die an diesem <see cref="T:System.Data.DataSet" /> seit dem letzten Ladevorgang oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Beginnt die Initialisierung einer <see cref="T:System.Data.DataSet" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Entfernt alle Daten aus dem <see cref="T:System.Data.DataSet" />, indem alle Zeilen in sämtlichen Tabellen entfernt werden.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Kopiert die Struktur des <see cref="T:System.Data.DataSet" />, einschließlich aller Schemas, Beziehungen und Einschränkungen von <see cref="T:System.Data.DataTable" />. Es werden keine Daten kopiert.</summary>
      <returns>Ein neues <see cref="T:System.Data.DataSet" /> mit demselben Schema wie das aktuelle <see cref="T:System.Data.DataSet" />, jedoch nicht mit den darin enthaltenen Daten.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Kopiert die Struktur und die Daten für diese <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Ein neues <see cref="T:System.Data.DataSet" /> mit derselben Struktur (Tabellenschemas, -beziehungen und -einschränkungen) und denselben Daten wie dieses <see cref="T:System.Data.DataSet" />.  
  
 <block subset="none" type="note"><para>  
 Wenn diese Klassen in Unterklassen unterteilt wurden, besteht die Kopie aus denselben Unterklassen.</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Gibt einen <see cref="T:System.Data.DataTableReader" /> mit einem Resultset pro <see cref="T:System.Data.DataTable" /> zurück, und zwar in der Reihenfolge der Tabellen in der <see cref="P:System.Data.DataSet.Tables" />-Auflistung.</summary>
      <returns>Ein <see cref="T:System.Data.DataTableReader" /> mit einem oder mehreren Resultsets, die den im Quell-<see cref="T:System.Data.DataTable" /> enthaltenen <see cref="T:System.Data.DataSet" />-Instanzen entsprechen.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Gibt einen <see cref="T:System.Data.DataTableReader" /> mit einem Resultset pro <see cref="T:System.Data.DataTable" /> zurück.</summary>
      <param name="dataTables">Ein Array von DataTables, das die Reihenfolge der im <see cref="T:System.Data.DataTableReader" /> zurückzugebenden Resultsets angibt.</param>
      <returns>Ein <see cref="T:System.Data.DataTableReader" /> mit einem oder mehreren Resultsets, die den im Quell-<see cref="T:System.Data.DataTable" /> enthaltenen <see cref="T:System.Data.DataSet" />-Instanzen entsprechen. Die Resultsets werden in der vom <paramref name="dataTables" />-Parameter angegebenen Reihenfolge zurückgegeben.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Bestimmt den <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, mit der der geschützte <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Konstruktor eines <see langword="DataSet" /> bei der Deserialisierung in Remotingszenarios aufgerufen wird.</param>
      <param name="context">Die <see cref="T:System.Runtime.Serialization.StreamingContext" />, mit der der geschützte <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />-Konstruktor eines <see langword="DataSet" /> bei der Deserialisierung in Remotingszenarios aufgerufen wird.</param>
      <returns>Eine <see cref="T:System.Data.SchemaSerializationMode" />-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Bestimmt den <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Die <see cref="T:System.Xml.XmlReader" />-Instanz, die bei der Deserialisierung des <see cref="T:System.Data.DataSet" /> übergeben wird.</param>
      <returns>Eine <see cref="T:System.Data.SchemaSerializationMode" />-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Beendet die Initialisierung einer <see cref="T:System.Data.DataSet" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Ruft eine Kopie des <see cref="T:System.Data.DataSet" /> ab, die sämtliche seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommenen Änderungen enthält.</summary>
      <returns>Eine Kopie der Änderungen aus diesem <see cref="T:System.Data.DataSet" />, für das Aktionen ausgeführt werden können und das nachfolgend durch Verwendung von <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> wieder zusammengeführt werden kann. Wenn keine geänderten Zeilen gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Ruft eine Kopie der <see cref="T:System.Data.DataSet" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommenen und durch <see cref="T:System.Data.DataRowState" /> gefilterten Änderungen enthält.</summary>
      <param name="rowStates">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns>Eine gefilterte Kopie des <see cref="T:System.Data.DataSet" />, für die Aktionen durchgeführt werden und die nachfolgend mithilfe von <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> wieder mit dem Original zusammengeführt werden kann. Wenn keine Zeilen mit dem gewünschten <see cref="T:System.Data.DataRowState" /> gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Ruft eine Kopie von <see cref="T:System.Xml.Schema.XmlSchemaSet" /> für das DataSet ab.</summary>
      <param name="schemaSet">Das angegebene Schemaset.</param>
      <returns>Eine Kopie von <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Data.DataSet" /> erforderlich sind.</summary>
      <param name="info">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten, die der <see cref="T:System.Data.DataSet" /> zugeordnet sind.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der Quelle und Ziel des serialisierten Streams enthält, der dem <see cref="T:System.Data.DataSet" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="info" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Gibt eine serialisierbare <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz zurück.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Deserialisiert die Tabellendaten aus dem Binär- oder XML-Stream.</summary>
      <param name="info">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz.</param>
      <param name="context">Der Streamingkontext.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Gibt die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten zurück.</summary>
      <returns>Eine Zeichenfolge, die eine Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten ist.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Gibt das XSD-Schema für die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten zurück.</summary>
      <returns>Eine Zeichenfolge, die das XSD-Schema für die XML-Darstellung der im <see cref="T:System.Data.DataSet" /> gespeicherten Daten darstellt.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen, gefiltert durch <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Data.DataSet" /> Änderungen aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Wendet das XML-Schema aus dem angegebenen <see cref="T:System.IO.Stream" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="stream">Der <see langword="Stream" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Wendet das XML-Schema aus dem angegebenen <see cref="T:System.IO.TextReader" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="reader">Der <see langword="TextReader" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Wendet das XML-Schema aus der angegebenen Datei auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="fileName">Der Name der Datei, aus der das Schema gelesen werden soll, einschließlich des Pfades.</param>
      <param name="nsArray">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Wendet das XML-Schema aus dem angegebenen <see cref="T:System.Xml.XmlReader" /> auf das <see cref="T:System.Data.DataSet" /> an.</summary>
      <param name="reader">Der <see langword="XMLReader" />, aus dem das Schema gelesen werden soll.</param>
      <param name="nsArray">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Deserialisiert alle Tabellendaten des Dataset aus dem Binär- oder XML-Stream.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überprüft das Format der serialisierten Darstellung des <see langword="DataSet" />.</summary>
      <param name="info">Das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Das <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
      <returns>
        <see langword="true" />, wenn die angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" /> ein in seinem Binärformat serialisiertes <see langword="DataSet" /> darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von <see cref="T:System.Data.DataTable" />-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see cref="T:System.Data.DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="tables">Ein Array von <see cref="T:System.Data.DataTable" />-Instanzen, aus dem die <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />-Methode Namens- und Namespaceinformationen abruft. Jede dieser Tabellen muss ein Member der <see cref="T:System.Data.DataTableCollection" /> sein, die in diesem <see cref="T:System.Data.DataSet" /> enthalten ist.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von <see cref="T:System.Data.DataTable" />-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see cref="T:System.Data.DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="errorHandler">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</param>
      <param name="tables">Ein Array von <see cref="T:System.Data.DataTable" />-Instanzen, aus dem die <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />-Methode Namens- und Namespaceinformationen abruft.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Füllt ein <see cref="T:System.Data.DataSet" /> mit Werten aus einer Datenquelle. Dazu wird der bereitgestellte <see cref="T:System.Data.IDataReader" /> sowie ein Array von Zeichenfolgen verwendet, mit dem die Namen der Tabellen im <see langword="DataSet" /> bereitgestellt werden.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in den <see cref="T:System.Data.DataTable" />-Instanzen des <see langword="DataSet" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="tables">Ein Zeichenfolgenarray, aus dem die <see langword="Load" />-Methode Tabellennameninformationen abruft.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Führt ein Array von <see cref="T:System.Data.DataRow" />-Objekten mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen.</summary>
      <param name="rows">Das Array von <see langword="DataRow" />-Objekten, das mit dem <see langword="DataSet" /> zusammengeführt werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Führt ein Array von <see cref="T:System.Data.DataRow" />-Objekten mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen. Dabei werden Änderungen des <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="rows">Das Array von <see cref="T:System.Data.DataRow" />-Objekten, das mit dem <see langword="DataSet" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges">
        <see langword="true" />, um am <see langword="DataSet" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und das entsprechende Schema mit dem aktuellen <see langword="DataSet" /> zusammen.</summary>
      <param name="dataSet">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <exception cref="T:System.Data.ConstraintException">Mindestens eine Einschränkung kann nicht aktiviert werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und sein Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden entsprechend dem angegebenen Argument alle Änderungen in diesem <see langword="DataSet" /> beibehalten oder verworfen.</summary>
      <param name="dataSet">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges">
        <see langword="true" />, um Änderungen im aktuellen <see langword="DataSet" /> beizubehalten, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Führt ein angegebenes <see cref="T:System.Data.DataSet" /> und sein Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden Änderungen des aktuellen <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="dataSet">Die <see langword="DataSet" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges">
        <see langword="true" />, um Änderungen im aktuellen <see langword="DataSet" /> beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Führt ein angegebenes <see cref="T:System.Data.DataTable" /> und das entsprechende Schema mit dem aktuellen <see cref="T:System.Data.DataSet" /> zusammen.</summary>
      <param name="table">Die <see cref="T:System.Data.DataTable" />, deren Daten und Schema zusammengeführt werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Führt eine angegebene <see cref="T:System.Data.DataTable" /> und ihr Schema mit dem aktuellen <see langword="DataSet" /> zusammen. Dabei werden Änderungen des aktuellen <see langword="DataSet" /> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</summary>
      <param name="table">Die <see langword="DataTable" />, deren Daten und Schema zusammengeführt werden.</param>
      <param name="preserveChanges">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
      <param name="missingSchemaAction">
        <see langword="true" />, um am <see langword="DataSet" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />-Ereignis aus.</summary>
      <param name="pcevent">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Tritt beim Entfernen eines <see cref="T:System.Data.DataRelation" />-Objekts aus einer <see cref="T:System.Data.DataTable" /> ein.</summary>
      <param name="relation">Die <see cref="T:System.Data.DataRelation" />, die entfernt wird.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Tritt beim Entfernen einer <see cref="T:System.Data.DataTable" /> aus einem <see cref="T:System.Data.DataSet" /> ein.</summary>
      <param name="table">Die <see cref="T:System.Data.DataTable" />, die entfernt wird.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Sendet eine Benachrichtigung, dass die angegebene <see cref="T:System.Data.DataSet" />-Eigenschaft gerade geändert wird.</summary>
      <param name="name">Der Name der Eigenschaft, die gerade geändert wird.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Ein von <see cref="T:System.IO.Stream" /> abgeleitetes Objekt.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.Stream" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="stream">Der <see cref="T:System.IO.Stream" />, aus dem gelesen werden soll.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Der <see langword="TextReader" />, aus dem das Schema und die Daten gelesen werden sollen.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.TextReader" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Der <see cref="T:System.IO.TextReader" />, aus dem gelesen werden soll.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Liest mithilfe der angegebenen Datei das XML-Schema und die XML-Daten in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Liest mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="fileName">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> das XML-Schema und die XML-Daten in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.Xml.XmlReader" /> das XML-Schema und die XML-Daten in das <see cref="T:System.Data.XmlReadMode" />.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlReadMode" />-Werte.</param>
      <returns>Der zum Lesen der Daten verwendete <see langword="XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Liest das XML-Schema aus dem angegebenen <see cref="T:System.IO.Stream" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">Der <see cref="T:System.IO.Stream" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Liest das XML-Schema aus dem angegebenen <see cref="T:System.IO.TextReader" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Der <see cref="T:System.IO.TextReader" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Liest das XML-Schema aus der angegebenen Datei in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Liest das XML-Schema aus dem angegebenen <see cref="T:System.Xml.XmlReader" /> in das <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Ignoriert Attribute und gibt ein leeres DataSet zurück.</summary>
      <param name="reader">Der angegebene XML-Reader.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Führt einen Rollback aller Änderungen aus, die am <see cref="T:System.Data.DataSet" /> seit dessen Erstellung oder seit dem letzten Aufruf von <see cref="M:System.Data.DataSet.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Löscht alle Tabellen und entfernt alle Beziehungen, Einschränkungen und fremden Tabellen von <see cref="T:System.Data.DataSet" />. Untergeordnete Klassen müssen <see cref="M:System.Data.DataSet.Reset" /> überschreiben, um ein <see cref="T:System.Data.DataSet" /> mit dem ursprünglichen Zustand wiederherzustellen.</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.DataSet.Relations" />-Eigenschaft beibehalten werden soll.</summary>
      <returns>
        <see langword="true" />, wenn der Eigenschaftswert von seinem Standardwert geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.DataSet.Tables" />-Eigenschaft beibehalten werden soll.</summary>
      <returns>
        <see langword="true" />, wenn der Eigenschaftswert von seinem Standardwert geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten für das <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.Stream" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="stream">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten für das <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Das <see cref="T:System.IO.TextWriter" />-Objekt, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer">Ein <see cref="T:System.IO.TextWriter" />-Objekt, mit dem das Dokument geschrieben wird.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Schreibt die aktuellen Daten für das <see cref="T:System.Data.DataSet" /> in die angegebene Datei.</summary>
      <param name="fileName">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Schreibt im angegebenen <see cref="T:System.Data.DataSet" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="fileName">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Schreibt die aktuellen Daten für das <see cref="T:System.Data.DataSet" /> in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataSet" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, mit dem geschrieben werden soll.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schreibt in das angegebene <see cref="T:System.IO.Stream" />-Objekt.</summary>
      <param name="stream">Ein <see cref="T:System.IO.Stream" />-Objekt, mit dem in eine Datei geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schreibt in das angegebene <see cref="T:System.IO.Stream" />-Objekt.</summary>
      <param name="stream">Ein <see cref="T:System.IO.Stream" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schreibt in das angegebene <see cref="T:System.IO.TextWriter" />-Objekt.</summary>
      <param name="writer">Das <see cref="T:System.IO.TextWriter" />-Objekt, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in den angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Ein <see cref="T:System.IO.TextWriter" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in eine Datei.</summary>
      <param name="fileName">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> ist nicht auf <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> festgelegt.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in eine Datei.</summary>
      <param name="fileName">Der Name der Datei, in die geschrieben werden soll.</param>
      <param name="multipleTargetConverter">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, in den geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Schreibt die <see cref="T:System.Data.DataSet" />-Struktur als XML-Schema in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, in das geschrieben werden soll.</param>
      <param name="multipleTargetConverter">Ein Delegat, der zum Konvertieren von <see cref="T:System.Type" /> in String verwendet wird.</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Ruft einen Wert ab, der angibt, ob bei Zeichenfolgenvergleichen in <see cref="T:System.Data.DataTable" />-Objekten die Groß- und Kleinschreibung berücksichtigt wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" /> Wenn bei Zeichen folgen vergleichen die Groß-/Kleinschreibung beachtet andernfalls <see langword="false" /> . Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Ruft den Namen des aktuellen <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns>Der Name von <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Ruft eine benutzerdefinierte Ansicht der im <see cref="T:System.Data.DataSet" /> enthaltenen Daten ab, mit der unter Verwendung eines benutzerdefinierten <see cref="T:System.Data.DataViewManager" /> gefiltert, gesucht und navigiert werden kann.</summary>
      <returns>Ein <see cref="T:System.Data.DataViewManager" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Ruft einen Wert ab, der angibt, ob bei Aktualisierungen Einschränkungsregeln beachtet werden, oder legt diesen fest.</summary>
      <exception cref="T:System.Data.ConstraintException">Mindestens eine Einschränkung kann nicht erzwungen werden.</exception>
      <returns>
        <see langword="true" /> , wenn Regeln erzwungen werden. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Ruft die dem <see langword="DataSet" /> zugeordnete Auflistung von benutzerdefinierten Benutzerinformationen ab.</summary>
      <returns>Eine <see cref="T:System.Data.PropertyCollection" /> mit sämtlichen benutzerdefinierten Benutzerinformationen.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Ruft einen Wert ab, der angibt, ob in diesem <see cref="T:System.Data.DataTable" /> in einem der <see cref="T:System.Data.DataSet" />-Objekte Fehler vorliegen.</summary>
      <returns>
        <see langword="true" /> , wenn eine Tabelle einen Fehler enthält. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataSet" /> initialisiert wurde.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass die Komponente die Initialisierung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Globalization.CultureInfo" />, die Daten zum Computergebietsschema des Benutzers enthält. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Ruft den Namespace der <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Der Namespace enthält bereits Daten.</exception>
      <returns>Der Namespace von <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Ruft ein XML-Präfix ab, das als Alias für den Namespace der <see cref="T:System.Data.DataSet" /> fungiert, oder legt dieses fest.</summary>
      <returns>Das XML-Präfix für den <see cref="T:System.Data.DataSet" />-Namespace.</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Ruft die Collection der Beziehungen ab, die Tabellen verknüpfen und die Navigation von übergeordneten Tabellen zu untergeordneten Tabellen ermöglichen.</summary>
      <returns>Ein <see cref="T:System.Data.DataRelationCollection" />, das eine Auflistung von <see cref="T:System.Data.DataRelation" />-Objekten enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Ruft das <see cref="T:System.Data.SerializationFormat" /> für das beim Remoting verwendete <see cref="T:System.Data.DataSet" /> ab oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Data.SerializationFormat" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Ruft einen <see cref="T:System.Data.SchemaSerializationMode" /> für ein <see cref="T:System.Data.DataSet" /> ab oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.Data.SchemaSerializationMode" /> für <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.Data.DataSet" /> ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Ruft die Auflistung der im <see cref="T:System.Data.DataSet" /> enthaltenen Tabellen ab.</summary>
      <returns>Die in diesem <see cref="T:System.Data.DataTableCollection" /> enthaltene <see cref="T:System.Data.DataSet" />. Wenn keine <see cref="T:System.Data.DataTable" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Beschreibt das Serialisierungsformat für <see cref="T:System.DateTime" />-Spalten in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> wird immer in Local gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Utc" /> oder <see cref="F:System.Data.DataSetDateTime.Unspecified" /> einer Spalte in diesem Modus zugewiesen werden, werden sie zuerst in Local konvertiert. Die Serialisierung in diesem Modus wird immer in Local ausgeführt. Während der Serialisierung gibt es einen Offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> wird immer in Unspecified gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Utc" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in <see cref="F:System.Data.DataSetDateTime.Unspecified" /> konvertiert. Die Serialisierung in diesem Modus verursacht keinen Offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> wird in Unspecified gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Utc" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in <see cref="F:System.Data.DataSetDateTime.Unspecified" /> konvertiert. Die Serialisierung in diesem Modus verursacht einen Offset. Dieses Standardverhalten ist abwärts kompatibel. Diese Option sollte bezüglich der Speicherung als Unspecified betrachtet werden. Sie wendet jedoch während der Serialisierung einen Offset an, der <see cref="F:System.Data.DataSetDateTime.Local" /> ähnlich ist.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>
        <see langword="DateTime" /> wird in Universal Coordinated Time (UTC) gespeichert. Wenn <see cref="F:System.Data.DataSetDateTime.Local" /> oder <see cref="F:System.Data.DataSetDateTime.Unspecified" /> einer Spalte in diesem Modus zugewiesen wird, wird der Wert zuerst in das <see langword="Utc" />-Format konvertiert. Die Serialisierung in diesem Modus wird immer in <see langword="Utc" /> ausgeführt. Während der Serialisierung gibt es keinen Offset.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Kennzeichnet eine Eigenschaft, ein Ereignis oder einen Extender mit einer Beschreibung. In visuellen Designern kann diese Beschreibung beim Verweisen auf den Member angezeigt werden.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataSysDescriptionAttribute" />-Klasse unter Verwendung der angegebenen Beschreibungszeichenfolge.</summary>
      <param name="description">Die Beschreibungszeichenfolge.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Ruft den Text für die Beschreibung ab.</summary>
      <returns>Die Beschreibungszeichenfolge.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Stellt eine Tabelle mit Daten im Arbeitsspeicher dar.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Tritt ein, nachdem ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Tritt ein, wenn ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wird.</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Tritt nach dem Initialisieren der <see cref="T:System.Data.DataTable" /> auf.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Tritt auf, nachdem eine <see cref="T:System.Data.DataRow" /> erfolgreich geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Tritt ein, wenn eine <see cref="T:System.Data.DataRow" /> geändert wird.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Tritt ein, nachdem eine Zeile in der Tabelle gelöscht wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Tritt ein, bevor eine Zeile in der Tabelle gelöscht wird.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Tritt ein, nachdem eine <see cref="T:System.Data.DataTable" /> gelöscht wurde.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Tritt ein, wenn eine <see cref="T:System.Data.DataTable" /> gelöscht wird.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Tritt ein, wenn eine neue <see cref="T:System.Data.DataRow" /> eingefügt wird.</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Überprüft, ob die Initialisierung gegenwärtig ausgeführt wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse ohne Argumente.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen.</summary>
      <param name="tableName">Der Name, der der Tabelle gegeben werden soll. Wenn <paramref name="tableName" /><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zur <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen und Namespace.</summary>
      <param name="tableName">Der Name, der der Tabelle gegeben werden soll. Wenn <paramref name="tableName" /><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zur <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</param>
      <param name="tableNamespace">Der Namespace für die XML-Darstellung der in der <see langword="DataTable" /> gespeicherten Daten.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Übernimmt alle Änderungen, die an dieser Tabelle seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Beginnt die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Deaktiviert während des Ladens von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Löscht alle Daten aus der <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Klont die Struktur der <see cref="T:System.Data.DataTable" />, einschließlich aller Schemas und Einschränkungen der <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.DataTable" /> mit demselben Schema wie die aktuelle <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Berechnet den angegebenen Ausdruck für die aktuellen Zeilen, die die Filterkriterien erfüllen.</summary>
      <param name="expression">Der zu berechnende Ausdruck.</param>
      <param name="filter">Der Filter zum Begrenzen der Zeilen, die in dem Ausdruck ausgewertet werden.</param>
      <returns>Ein <see cref="T:System.Object" />, das auf das Ergebnis der Berechnung festgelegt ist. Wenn der Ausdruck NULL ergibt, ist der Rückgabewert <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Kopiert die Struktur und die Daten für diese <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.DataTable" /> mit derselben Struktur (Tabellenschemas und Einschränkungen) und denselben Daten wie diese <see cref="T:System.Data.DataTable" />.  
  
Wenn diese Klassen abgeleitet wurden, besteht die Kopie aus denselben abgeleiteten Klassen.  
  
 <see cref="M:System.Data.DataTable.Copy" /> erstellt ein neues <see cref="T:System.Data.DataTable" /> mit der gleichen Struktur und den Daten wie das ursprüngliche <see cref="T:System.Data.DataTable" />. Um die Struktur, nicht jedoch die Daten, zu neuen <see cref="T:System.Data.DataTable" />, zu kopieren, verwenden Sie <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Gibt einen <see cref="T:System.Data.DataTableReader" /> zurück, der den Daten innerhalb dieser <see cref="T:System.Data.DataTable" /> entspricht.</summary>
      <returns>Ein <see cref="T:System.Data.DataTableReader" />, der entsprechend der <see cref="T:System.Data.DataTable" />-Quellinstanz ein Resultset enthält.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Erstellt eine neue Instanz von <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Der neue Ausdruck.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Beendet die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Aktiviert nach dem Laden von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen Änderungen enthält.</summary>
      <returns>Eine Kopie der Änderungen aus dieser <see cref="T:System.Data.DataTable" /> oder <see langword="null" />, wenn keine Änderungen gefunden wurden.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen und durch <see cref="T:System.Data.DataRowState" /> gefilterten Änderungen enthält.</summary>
      <param name="rowStates">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</param>
      <returns>Eine gefilterte Kopie der <see cref="T:System.Data.DataTable" />, für die Aktionen ausgeführt werden können und die nachfolgend durch Verwendung von <see cref="T:System.Data.DataTable" /> wieder mit der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> zusammengeführt werden kann. Wenn keine Zeilen mit dem gewünschten <see cref="T:System.Data.DataRowState" /> gefunden werden, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Diese Methode gibt eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz mit der WSDL (Web Services Description Language) zurück, die die <see cref="T:System.Data.DataTable" /> für Webdienste beschreibt.</summary>
      <param name="schemaSet">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</param>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Ruft ein Array von <see cref="T:System.Data.DataRow" />-Objekten ab, die Fehler enthalten.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die Fehler enthalten.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Data.DataTable" /> erforderlich sind.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den serialisierten Daten, die der <see cref="T:System.Data.DataTable" /> zugeordnet sind.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit Quelle und Ziel des serialisierten Streams, der der <see cref="T:System.Data.DataTable" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Ruft den Zeilentyp ab.</summary>
      <returns>Der Typ des <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />, das die XML-Darstellung des Objekts beschreibt, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erzeugt wird und durch die <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Kopiert eine <see cref="T:System.Data.DataRow" /> in eine <see cref="T:System.Data.DataTable" />, wobei alle Eigenschafteneinstellungen sowie die ursprünglichen und die aktuellen Werte beibehalten werden.</summary>
      <param name="row">Die zu importierende <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet. Wenn die <see cref="T:System.Data.DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet. Wenn die <see langword="DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten gemäß dem Wert des <paramref name="loadOption" />-Parameters aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</param>
      <param name="loadOption">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle mit dem bereitgestellten <see cref="T:System.Data.IDataReader" /> und unter Verwendung eines Fehlerbehandlungsdelegaten.</summary>
      <param name="reader">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</param>
      <param name="loadOption">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</param>
      <param name="errorHandler">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Sucht eine bestimmte Zeile und aktualisiert diese. Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</summary>
      <param name="values">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <param name="fAcceptChanges">
        <see langword="true" />, um Änderungen anzunehmen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
      <exception cref="T:System.InvalidCastException">Ein Wert stimmt nicht mit dem entsprechenden Spaltentyp überein.</exception>
      <exception cref="T:System.Data.ConstraintException">Durch das Hinzufügen der Zeile wird eine Einschränkung für ungültig erklärt.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Es wird versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
      <returns>Die neue <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Sucht eine bestimmte Zeile und aktualisiert diese. Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</summary>
      <param name="values">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</param>
      <param name="loadOption">Wird verwendet, um zu bestimmen, wie die Arraywerte auf die entsprechenden Werte in einer vorhandenen Zeile angewendet werden.</param>
      <returns>Die neue <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammen.</summary>
      <param name="table">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen.</summary>
      <param name="table">Die <see langword="DataTable" />, die mit der aktuellen <see langword="DataTable" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges">
        <see langword="true" />, um an der aktuellen <see langword="DataTable" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen und wie das fehlende Schema behandelt werden soll.</summary>
      <param name="table">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</param>
      <param name="preserveChanges">
        <see langword="true" />, um an der aktuellen <see cref="T:System.Data.DataTable" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</param>
      <param name="missingSchemaAction">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Erstellt eine neue <see cref="T:System.Data.DataRow" /> mit dem Schema der Tabelle.</summary>
      <returns>Eine <see cref="T:System.Data.DataRow" /> mit demselben Schema wie die <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Gibt ein Array von <see cref="T:System.Data.DataRow" /> zurück.</summary>
      <param name="size">Ein <see cref="T:System.Int32" />-Wert, der die Größe des Arrays beschreibt.</param>
      <returns>Das neue Array.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Erstellt eine neue Zeile aus einer vorhandenen Zeile.</summary>
      <param name="builder">Ein <see cref="T:System.Data.DataRowBuilder" />-Objekt.</param>
      <returns>Eine von <see cref="T:System.Data.DataRow" /> abgeleitete Klasse.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.ColumnChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis aus.</summary>
      <param name="pcevent">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Benachrichtigt die <see cref="T:System.Data.DataTable" />, dass eine <see cref="T:System.Data.DataColumn" /> entfernt wird.</summary>
      <param name="column">Die <see cref="T:System.Data.DataColumn" />, die entfernt wird.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.RowChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.RowDeleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.RowDeleting" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.TableCleared" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.TableClearing" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataTable.TableNewRow" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Data.DataTableNewRowEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">Ein von <see cref="T:System.IO.Stream" /> abgeleitetes Objekt.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Der <see cref="T:System.IO.TextReader" />, der verwendet wird, um die Daten zu lesen.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Liest das XML-Schema und die XML-Daten in die <see cref="T:System.Data.DataTable" /> aus der angegebenen Datei.</summary>
      <param name="fileName">Der Name der Datei, aus der die Daten gelesen werden sollen.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Liest das XML-Schema und die XML-Daten mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, der verwendet wird, um die Daten zu lesen.</param>
      <returns>Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Liest ein XML-Schema mit dem angegebenen Stream in die <see cref="T:System.Data.DataTable" />.</summary>
      <param name="stream">Der zum Lesen des Schemas verwendete Stream.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.IO.TextReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Liest ein XML-Schema aus der angegebenen Datei in die <see cref="T:System.Data.DataTable" />.</summary>
      <param name="fileName">Der Name der Datei, aus der die Schemainformationen gelesen werden sollen.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Liest aus einem XML-Stream.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Führt einen Rollback aller Änderungen durch, die an der Tabelle seit dem Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Setzt die <see cref="T:System.Data.DataTable" /> auf den ursprünglichen Zustand zurück. Zurücksetzen entfernt alle Daten, Indizes, Beziehungen und Spalten der Tabelle. Wenn ein DataSet ein DataTable umfasst, ist die Tabelle noch ein Teil des DataSet, nachdem die Tabelle zurückgesetzt ist.</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die den Filterkriterien entsprechen.</summary>
      <param name="filterExpression">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte, die die Filterkriterien erfüllen, in der angegebenen Sortierreihenfolge ab.</summary>
      <param name="filterExpression">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <param name="sort">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</param>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die dem Filterausdruck entsprechen.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die die Filterkriterien in der Sortierreihenfolge erfüllen und zum angegebenen Zustand passen.</summary>
      <param name="filterExpression">Die beim Filtern der Zeilen zu verwendenden Kriterien. Beispiele zum Filtern von Zeilen finden Sie unter DataView RowFilter Syntax [C#].</param>
      <param name="sort">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</param>
      <param name="recordStates">Einer der <see cref="T:System.Data.DataViewRowState" />-Werte.</param>
      <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Eine <see cref="T:System.Collections.IList" />, die an eine Datenquelle eines Objekts gebunden werden kann.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />, das die XML-Darstellung des Objekts beschreibt, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erzeugt wird und durch die <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Ein XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Ein XmlWriter.</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Ruft den <see cref="P:System.Data.DataTable.TableName" /> und den <see cref="P:System.Data.DataTable.DisplayExpression" />, sofern vorhanden, als verkettete Zeichenfolge ab.</summary>
      <returns>Eine Zeichenfolge, die aus dem <see cref="P:System.Data.DataTable.TableName" />-Wert und dem <see cref="P:System.Data.DataTable.DisplayExpression" />-Wert besteht.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format.</summary>
      <param name="stream">Der Stream, in den die Daten geschrieben werden.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="stream">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream">Der Stream, in den die Daten geschrieben werden.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei.</summary>
      <param name="fileName">Die Datei, in die die XML-Daten geschrieben werden sollen.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName">Die Datei, in die die XML-Daten geschrieben werden sollen.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="fileName">Der Name der Datei, in die die Daten geschrieben werden.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName">Der Name der Datei, in die die Daten geschrieben werden.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</summary>
      <param name="writer">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />. Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest. Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="mode">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream.</summary>
      <param name="stream">Der Stream, in den das XML-Schema geschrieben wird.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="stream">Der Stream, in den das XML-Schema geschrieben wird.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei.</summary>
      <param name="fileName">Der Name der zu verwendenden Datei.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="fileName">Der Name der zu verwendenden Datei.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Der zu verwendende <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />. Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</summary>
      <param name="writer">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="writeHierarchy">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben. Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Gibt an, ob Vergleiche zwischen Zeichenfolgen in der Tabelle unter Berücksichtigung der Groß- und Kleinschreibung ausgeführt werden.</summary>
      <returns>
        <see langword="true" />, wenn beim Vergleich zwischen Groß- und Kleinschreibung unterschieden wird, andernfalls <see langword="false" />. Der Standard ist auf die <see cref="T:System.Data.DataSet" />-Eigenschaft des übergeordneten <see cref="P:System.Data.DataSet.CaseSensitive" />-Objekts festgelegt oder auf <see langword="false" />, wenn die <see cref="T:System.Data.DataTable" /> unabhängig von einem <see cref="T:System.Data.DataSet" /> erstellt wurde.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Ruft die Auflistung untergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataRelationCollection" />, die die untergeordneten Beziehungen für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Ruft die Auflistung der Spalten ab, die zu dieser Tabelle gehören.</summary>
      <returns>Eine <see cref="T:System.Data.DataColumnCollection" />, die die Auflistung von <see cref="T:System.Data.DataColumn" />-Objekten für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataColumn" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Ruft die Auflistung der Einschränkungen ab, die von dieser Tabelle verwaltet werden.</summary>
      <returns>Eine <see cref="T:System.Data.ConstraintCollection" />, die die Auflistung von <see cref="T:System.Data.Constraint" />-Objekten für die Tabelle enthält. Wenn keine <see cref="T:System.Data.Constraint" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</summary>
      <returns>Das <see cref="T:System.Data.DataSet" />, zu dem diese Tabelle gehört.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Ruft eine benutzerdefinierte Sicht der Tabelle ab, wobei es sich um eine gefilterte Sicht oder eine Cursorposition handeln kann.</summary>
      <returns>Der mit dem <see cref="T:System.Data.DataView" /> verknüpfte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Ruft den Ausdruck ab, der einen Wert für die Darstellung dieser Tabelle auf der Benutzeroberfläche zurückgibt, oder legt diesen fest. Mit der <see langword="DisplayExpression" />-Eigenschaft können Sie den Namen dieser Tabelle auf einer Benutzeroberfläche anzeigen.</summary>
      <returns>Eine Anzeigezeichenfolge.</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Ruft die Auflistung benutzerdefinierter Benutzerinformationen ab.</summary>
      <returns>Eine <see cref="T:System.Data.PropertyCollection" />, die benutzerdefinierte Benutzerinformationen enthält.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Ruft einen Wert ab, der angibt, ob in einer Zeile in einer Tabelle des <see cref="T:System.Data.DataSet" />, zu dem die Tabelle gehört, Fehler aufgetreten sind.</summary>
      <returns>
        <see langword="true" />, wenn Fehler vorhanden sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataTable" /> initialisiert wurde.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass die Initialisierung der Komponente abgeschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Globalization.CultureInfo" />, die Daten zum Computergebietsschema des Benutzers enthält. Der Standard ist die <see cref="T:System.Data.DataSet" /> des <see cref="T:System.Globalization.CultureInfo" />-Objekts (von der <see cref="P:System.Data.DataSet.Locale" />-Eigenschaft zurückgegeben), zu der die <see cref="T:System.Data.DataTable" /> gehört. Wenn die Tabelle keinem <see cref="T:System.Data.DataSet" /> angehört, wird die aktuelle <see cref="T:System.Globalization.CultureInfo" /> des Systems standardmäßig verwendet.</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Ruft die Ausgangsgröße für diese Tabelle ab oder legt diese fest.</summary>
      <returns>Die Ausgangsgröße dieser Tabelle in Zeilen. Der Standardwert ist 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</summary>
      <returns>Der Namespace von <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Ruft die Auflistung übergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataRelationCollection" />, die die übergeordneten Beziehungen für die Tabelle enthält. Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</summary>
      <returns>Das Präfix der <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Ruft ein Array von Spalten ab, die als Primärschlüssel für die Datentabelle verwendet werden, oder legt dieses fest.</summary>
      <exception cref="T:System.Data.DataException">Der Schlüssel ist ein Fremdschlüssel.</exception>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Ruft das Serialisierungsformat ab oder legt dieses fest.</summary>
      <returns>Eine <see cref="T:System.Data.SerializationFormat" />-Enumeration, die <see langword="Binary" />- oder <see langword="Xml" />-Serialisierung angibt.</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Ruft die Auflistung der Zeilen ab, die zu dieser Tabelle gehören.</summary>
      <returns>Eine <see cref="T:System.Data.DataRowCollection" />, die <see cref="T:System.Data.DataRow" />-Objekte enthält, andernfalls ein NULL-Wert, wenn keine <see cref="T:System.Data.DataRow" />-Objekte vorhanden sind.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.Data.DataTable" /> ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Ruft den Namen der <see cref="T:System.Data.DataTable" /> ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Es wird <see langword="null" /> oder eine leere Zeichenfolge ("") übergeben, und diese Tabelle gehört zu einer Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Die Tabelle gehört zu einer Auflistung, die bereits eine Tabelle mit demselben Namen enthält. (Beim Vergleich wird die Groß- und Kleinschreibung berücksichtigt.)</exception>
      <returns>Der Name von <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Stellt Daten für die <see cref="M:System.Data.DataTable.Clear" />-Methode bereit.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTableClearEventArgs" />-Klasse.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, deren Zeilen gelöscht werden.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Ruft die Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns>Die <see cref="T:System.Data.DataTable" />, deren Zeilen gelöscht werden.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Ruft den Namen der Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Tabellennamen angibt.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Ruft den Namespace der Tabelle ab, deren Zeilen gelöscht werden.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Namespacenamen angibt.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Stellt die Methode dar, die die <see cref="M:System.Data.DataTable.Clear" />-Methode behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Stellt die Auflistung von Tabellen für das <see cref="T:System.Data.DataSet" /> dar.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Tritt ein, wenn die <see cref="T:System.Data.DataTableCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.DataTable" />-Objekten geändert wurde.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Tritt ein, während die <see cref="T:System.Data.DataTableCollection" /> aufgrund des Hinzufügens oder Entfernens von <see cref="T:System.Data.DataTable" />-Objekten geändert wird.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Erstellt ein neues <see cref="T:System.Data.DataTable" />-Objekt mit einem Standardnamen und fügt es der Auflistung hinzu.</summary>
      <returns>Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Fügt der Auflistung den angegebenen <see langword="DataTable" /> hinzu.</summary>
      <param name="table">Das hinzuzufügende <see langword="DataTable" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">Der für die Tabelle angegebene Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Tabelle gehört bereits zu dieser Auflistung, oder sie gehört zu einer anderen Auflistung.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Eine Tabelle in der Auflistung hat bereits denselben Namen. Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Erstellt ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und fügt es der Auflistung hinzu.</summary>
      <param name="name">Der Name, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <exception cref="T:System.Data.DuplicateNameException">Eine Tabelle in der Auflistung hat bereits denselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <returns>Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Erstellt ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und fügt es der Auflistung hinzu.</summary>
      <param name="name">Der Name, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <param name="tableNamespace">Der Namespace, den die erstellte <see cref="T:System.Data.DataTable" /> erhalten soll.</param>
      <exception cref="T:System.Data.DuplicateNameException">Eine Tabelle in der Auflistung hat bereits denselben Namen. (Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.)</exception>
      <returns>Der neu erstellte <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Kopiert die Elemente des angegebenen <see cref="T:System.Data.DataTable" />-Arrays an das Ende der Auflistung.</summary>
      <param name="tables">Das Array von <see cref="T:System.Data.DataTable" />-Objekten, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Überprüft, ob das angegebene <see cref="T:System.Data.DataTable" />-Objekt aus der Auflistung entfernt werden kann.</summary>
      <param name="table">Die <see langword="DataTable" /> in der Auflistung, für die die Überprüfung durchgeführt werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Tabelle entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Löscht alle <see cref="T:System.Data.DataTable" />-Objekte aus der Auflistung.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen in der Auflistung vorhanden ist.</summary>
      <param name="name">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Tabelle vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen und dem angegebenen Tabellennamespace in der Auflistung vorhanden ist.</summary>
      <param name="name">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <param name="tableNamespace">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Tabelle vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Kopiert alle Elemente der aktuellen <see cref="T:System.Data.DataTableCollection" /> in ein eindimensionales <see cref="T:System.Array" />, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, in das die Elemente des aktuellen <see cref="T:System.Data.DataTableCollection" />-Objekts kopiert werden sollen.</param>
      <param name="index">Der Index des Ziel-<see cref="T:System.Array" />, an dem mit dem Kopieren begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Ruft den Index des angegebenen <see cref="T:System.Data.DataTable" />-Objekts ab.</summary>
      <param name="table">Die zu suchende <see langword="DataTable" />.</param>
      <returns>Der nullbasierte Index der angegebenen Tabelle oder -1, wenn das Element in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Ruft den Index des <see cref="T:System.Data.DataTable" />-Objekts mit dem angegebenen Namen in der Auflistung ab.</summary>
      <param name="tableName">Der Name des zu suchenden <see langword="DataTable" />-Objekts.</param>
      <returns>Der nullbasierte Index der <see langword="DataTable" /> mit dem angegebenen Namen, oder -1, wenn die Tabelle in der Auflistung nicht vorhanden ist.  
  
 <block subset="none" type="note"><para>  
 Gibt -1 zurück, wenn zwei oder mehr Tabellen den gleichen Namen besitzen, aber über unterschiedliche Namespaces verfügen. Der Aufruf führt zu einem Fehler, wenn beim Zuordnen eines Tabellenamen zu genau einer Tabelle Mehrdeutigkeiten auftreten.</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Ruft den Index des angegebenen <see cref="T:System.Data.DataTable" />-Objekts in der Auflistung ab.</summary>
      <param name="tableName">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <param name="tableNamespace">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns>Der nullbasierte Index der <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen, oder -1, wenn die Tabelle in der Auflistung nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Entfernt das angegebene <see cref="T:System.Data.DataTable" />-Objekt aus der Auflistung.</summary>
      <param name="table">Das zu entfernende <see langword="DataTable" />-Element.</param>
      <exception cref="T:System.ArgumentNullException">Der für die Tabelle angegebene Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Tabelle gehört nicht zu dieser Auflistung.  
  
 - oder -  
  
 Die Tabelle ist Teil einer Beziehung.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name">Der Name des zu entfernenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Tabelle mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Entfernt das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen aus der Auflistung.</summary>
      <param name="name">Der Name des zu entfernenden <see cref="T:System.Data.DataTable" />-Objekts.</param>
      <param name="tableNamespace">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Tabelle mit dem angegebenen Namen.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Data.DataTable" />-Objekt am angegebenen Index aus der Sammlung.</summary>
      <param name="index">Der Index der zu entfernenden <see langword="DataTable" />-Klasse.</param>
      <exception cref="T:System.ArgumentException">Die Auflistung enthält keine Tabelle am angegebenen Index.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Ruft das <see cref="T:System.Data.DataTable" />-Objekt am angegebenen Index ab.</summary>
      <param name="index">Der nullbasierte Index der zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der Indexwert ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <returns>Ein <see cref="T:System.Data.DataTable" /> mit dem angegebenen Index; andernfalls, <see langword="null" /> Wenn der <see cref="T:System.Data.DataTable" /> nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen ab.</summary>
      <param name="name">Der Name des zu suchenden <see langword="DataTable" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen oder <see langword="null" />, wenn <see cref="T:System.Data.DataTable" /> nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Ruft das <see cref="T:System.Data.DataTable" />-Objekt mit dem angegebenen Namen im angegebenen Namespace ab.</summary>
      <param name="name">Der Name des zu suchenden <see langword="DataTable" />.</param>
      <param name="tableNamespace">Der Name des zu durchsuchenden <see cref="T:System.Data.DataTable" />-Namespaces.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> mit dem angegebenen Namen oder <see langword="null" />, wenn <see cref="T:System.Data.DataTable" /> nicht vorhanden ist.</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataTable" />-Klasse. <see cref="T:System.Data.DataTableExtensions" /> ist eine statische Klasse.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt und gibt es zurück.</summary>
      <param name="table">Die Quell-<see cref="T:System.Data.DataTable" />, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
      <returns>Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt, das die LINQ to DataSet-Abfrage darstellt, und gibt es zurück.</summary>
      <param name="source">Die LINQ to DataSet-Quellabfrage, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
      <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Gibt ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt zurück, bei dem der generische Parameter <paramref name="T" /> gleich <see cref="T:System.Data.DataRow" /> ist. Dieses Objekt kann in einem LINQ-Ausdruck oder einer Methodenabfrage verwendet werden.</summary>
      <param name="source">Die Quell-<see cref="T:System.Data.DataTable" />, die als aufzählbar festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Die Quell <see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Kopien der <see cref="T:System.Data.DataRow" />-Objekte enthält, wenn ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt vorhanden ist, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</summary>
      <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, und es kann keine neue Tabelle erstellt werden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die Eingabesequenz als den Typ von <see cref="T:System.Data.DataRow" />-Objekten enthält.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
      <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <param name="table">Das Ziel-<see cref="T:System.Data.DataTable" />.</param>
      <param name="options">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
      <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
      <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
      <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
      <param name="table">Das Ziel-<see cref="T:System.Data.DataTable" />.</param>
      <param name="options">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
      <param name="errorHandler">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der die Methode darstellt, die einen Fehler behandelt.</param>
      <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
      <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
- oder - 
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
- oder - 
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Stellt Daten für die <see cref="M:System.Data.DataTable.NewRow" />-Methode bereit.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">Die <see cref="T:System.Data.DataRow" />, die hinzugefügt wird.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Ruft die Zeile ab, die hinzugefügt wird.</summary>
      <returns>Die <see cref="T:System.Data.DataRow" />, die hinzugefügt wird.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Stellt die Methode dar, die die <see cref="M:System.Data.DataTable.NewRow" />-Methode behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Data.DataTableNewRowEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>Der <see cref="T:System.Data.DataTableReader" /> ruft den Inhalt eines oder mehrerer <see cref="T:System.Data.DataTable" />-Objekte in Form eines oder mehrerer schreibgeschützter vorwärts gerichteter Resultsets ab.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Initialisiert unter Verwendung von Daten aus der bereitgestellten <see cref="T:System.Data.DataTableReader" /> eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />, von der der neue <see cref="T:System.Data.DataTableReader" /> sein Resultset erhält.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTableReader" />-Klasse unter Verwendung des bereitgestellten Arrays von <see cref="T:System.Data.DataTable" />-Objekten.</summary>
      <param name="dataTables">Das Array von <see cref="T:System.Data.DataTable" />-Objekten, das die Ergebnisse für das neue <see cref="T:System.Data.DataTableReader" />-Objekt bereitstellt.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Schließt den aktuellen <see cref="T:System.Data.DataTableReader" />.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.Boolean" /> ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keinen <see langword="Boolean" />.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als ein Byte ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält kein Byte.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Liest beginnend am jeweiligen Pufferoffset einen Stream von Bytes aus dem angegebenen Spaltenoffset als Array in den Puffer.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex">Der Index im Feld, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den der Bytestream gelesen werden soll.</param>
      <param name="bufferIndex">Der Index innerhalb des Puffers, an dem mit dem Platzieren der Daten begonnen werden soll.</param>
      <param name="length">Die maximale Länge, die in den Puffer kopiert werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält kein Bytearray.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Bytes.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als Zeichen ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Das angegebene Feld enthält kein Zeichen.</exception>
      <returns>Der Wert der Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Gibt den Wert der angegebenen Spalte als Zeichenarray zurück.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="dataIndex">Der Index im Feld, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den der Zeichenstream gelesen werden soll.</param>
      <param name="bufferIndex">Der Index innerhalb des Puffers, an dem mit dem Platzieren der Daten begonnen werden soll.</param>
      <param name="length">Die maximale Länge, die in den Puffer kopiert werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält kein Zeichenarray.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Zeichen.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Ruft eine Zeichenfolge ab, die den Datentyp der angegebenen Spalte darstellt.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Eine Zeichenfolge, die den Datentyp der Spalte darstellt.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keinen DateTime-Wert.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keinen <see langword="Decimal" />-Wert.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Ruft den Wert der Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see langword="DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine Gleitkommazahl mit doppelter Genauigkeit.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der zum Durchlaufen der Elementauflistung verwendet werden kann.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das die Elementauflistung darstellt.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Ruft den <see cref="T:System.Type" /> ab, der den Datentyp des Objekts darstellt.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <returns>Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine Gleitkommazahl mit einfacher Genauigkeit.</exception>
      <returns>Der Wert der Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als global eindeutigen Bezeichner (Globally Unique Identifier, GUID) ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine GUID.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine 16-Bit-Ganzzahl mit Vorzeichen.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keinen 32-Bit-Ganzzahlwert mit Vorzeichen.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine ganze Zahl mit Vorzeichen und einer Länge von 64 Bit.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.String" /> ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Der Name der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Ruft bei angegebenem Spaltennamen die Ordnungszahl der Spalte ab.</summary>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <returns>Die nullbasierte Ordnungszahl der Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Ruft den Typ der angegebenen Spalte im anbieterspezifischen Format ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Der <see cref="T:System.Type" />, der der Datentyp des Objekts ist.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte im anbieterspezifischen Format ab.</summary>
      <param name="ordinal">Die nullbasierte Anzahl der Spalten, deren Wert abgerufen wird.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Ruft den Wert der angegebenen Spalte im anbieterspezifischen Format ab.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Füllt das angegebene Array mit anbieterspezifischen Typinformationen für alle Spalten im <see cref="T:System.Data.DataTableReader" /> auf.</summary>
      <param name="values">Ein Objektarray, das mit Typinformationen für die Spalten im <see cref="T:System.Data.DataTableReader" /> aufgefüllt werden soll.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Die Anzahl der in das Array kopierten Spaltenwerte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.DataTableReader" /> beschreibt.</summary>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Data.DataTableReader" /> ist geschlossen.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als eine Zeichenfolge ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <exception cref="T:System.InvalidCastException">Die angegebene Spalte enthält keine Zeichenfolge.</exception>
      <returns>Der Wert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, die Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <returns>Der Wert der angegebenen Spalte. Die Methode gibt für Spalten mit NULL-Werten <see langword="DBNull" /> zurück.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Füllt ein Array von Objekten mit den Spaltenwerten der aktuellen Zeile auf.</summary>
      <param name="values">Ein Array vom Typ <see cref="T:System.Object" />, in das die Spaltenwerte aus dem <see cref="T:System.Data.DataTableReader" /> kopiert werden sollen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <returns>Die Anzahl der in das Array kopierten Spaltenwerte.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <returns>
        <see langword="true" />, wenn der angegebene Spaltenwert <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Setzt den <see cref="T:System.Data.DataTableReader" /> auf das nächste Resultset, sofern vorhanden.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, innerhalb eines geschlossenen <see cref="T:System.Data.DataTableReader" /> zu navigieren.</exception>
      <returns>
        <see langword="true" />, wenn ein anderes Resultsets vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Setzt den <see cref="T:System.Data.DataTableReader" /> auf den nächsten Datensatz.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder auf sie zuzugreifen.</exception>
      <returns>
        <see langword="true" />, wenn eine andere zu lesende Zeile vorhanden war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>Die Tiefe der Schachtelung für die aktuelle Zeile des <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Die Tiefe der Schachtelung für die aktuelle Zeile, immer 0 (null).</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Gibt die Anzahl der Spalten in der aktuellen Zeile zurück.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, die Feldanzahl in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> abzurufen.</exception>
      <returns>Wenn die Position außerhalb eines gültigen Resultsets liegt, 0 (null), andernfalls die Anzahl der Spalten in der aktuellen Zeile.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.DataTableReader" /> eine oder mehrere Zeilen enthält.</summary>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, Informationen über einen geschlossenen <see cref="T:System.Data.DataTableReader" /> abzurufen.</exception>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.DataTableReader" /> eine oder mehrere Zeilen enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Data.DataTableReader" /> synchronisiert ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.DataTableReader" /> geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Ruft bei angegebener Spaltenordnungszahl den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="ordinal">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.DataTableReader.FieldCount" /> -1.</exception>
      <returns>Der Wert der angegebenen Spalte im systemeigenen Format.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Ruft bei angegebenem Spaltennamen den Wert der angegebenen Spalte im systemeigenen Format ab.</summary>
      <param name="name">Der Name der Spalte.</param>
      <exception cref="T:System.ArgumentException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, Daten aus einer gelöschten Zeile abzurufen.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine Spalte in einem geschlossenen <see cref="T:System.Data.DataTableReader" /> zu lesen oder darauf zuzugreifen.</exception>
      <returns>Der Wert der angegebenen Spalte im systemeigenen Format.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Ruft die Anzahl der durch die Ausführung der SQL-Anweisung eingefügten, geänderten oder gelöschten Zeilen ab.</summary>
      <returns>Der <see cref="T:System.Data.DataTableReader" /> unterstützt diese Eigenschaft nicht und gibt immer 0 zurück.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Stellt eine an Daten bindbare, benutzerdefinierte Ansicht einer <see cref="T:System.Data.DataTable" /> zum Sortieren, Filtern, Durchsuchen, Bearbeiten und Navigieren dar. <see cref="T:System.Data.DataView" /> speichert keine Daten, sondern stellt stattdessen eine verbundene Ansicht der entsprechenden <see cref="T:System.Data.DataTable" /> dar. Änderungen an den Daten von <see cref="T:System.Data.DataView" /> wirken sich auf <see cref="T:System.Data.DataTable" /> aus. Änderungen an den Daten von <see cref="T:System.Data.DataTable" /> wirken sich auf alle <see cref="T:System.Data.DataView" />-Ansichten aus, die dieser zugeordnet sind.</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Tritt auf, wenn die Initialisierung von <see cref="T:System.Data.DataView" /> abgeschlossen ist.</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Tritt auf, wenn die von <see cref="T:System.Data.DataView" /> verwaltete Liste geändert wird.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse mit der angegebenen <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Ein <see cref="T:System.Data.DataTable" />, das zu <see cref="T:System.Data.DataView" /> hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataView" />-Klasse mit den angegebenen <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> und <see cref="T:System.Data.DataViewRowState" />.</summary>
      <param name="table">Ein <see cref="T:System.Data.DataTable" />, das zu <see cref="T:System.Data.DataView" /> hinzugefügt werden soll.</param>
      <param name="RowFilter">Ein <see cref="P:System.Data.DataView.RowFilter" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
      <param name="Sort">Ein <see cref="P:System.Data.DataView.Sort" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
      <param name="RowState">Ein <see cref="T:System.Data.DataViewRowState" />, das auf <see cref="T:System.Data.DataView" /> angewendet werden soll.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Fügt <see cref="T:System.Data.DataView" /> eine neue Zeile hinzu.</summary>
      <returns>Ein neues <see cref="T:System.Data.DataRowView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Startet die Initialisierung einer <see cref="T:System.Data.DataView" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Schließt die <see cref="T:System.Data.DataView" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Tritt auf, nachdem eine <see cref="T:System.Data.DataColumnCollection" /> erfolgreich geändert wurde.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente in ein Array. Nur für Web Forms-Schnittstellen.</summary>
      <param name="array">Array, in das kopiert werden soll.</param>
      <param name="index">Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Löscht eine Zeile am angegebenen Index.</summary>
      <param name="index">Der Index der zu löschenden Zeile.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Löscht (außer den Speicherressourcen) alle Ressourcen, die vom <see cref="T:System.Data.DataView" />-Objekt verwendet werden.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Beendet die Initialisierung einer <see cref="T:System.Data.DataView" />, die in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Stellt fest, ob die angegebenen <see cref="T:System.Data.DataView" />-Instanzen als gleich betrachtet werden.</summary>
      <param name="view">Die zu vergleichende <see cref="T:System.Data.DataView" />.</param>
      <returns>
        <see langword="true" />, wenn die beiden <see cref="T:System.Data.DataView" />-Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Sucht eine Zeile in der <see cref="T:System.Data.DataView" /> anhand des angegebenen Sortierschlüsselwerts.</summary>
      <param name="key">Das Objekt, nach dem gesucht werden soll.</param>
      <returns>Der Index der Zeile in der <see cref="T:System.Data.DataView" />, die den angegebenen Sortierschlüsselwert enthält. Andernfalls -1, wenn der Sortierschlüsselwert nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Sucht eine Zeile in der <see cref="T:System.Data.DataView" /> anhand der angegebenen Sortierschlüsselwerte.</summary>
      <param name="key">Ein Array von Werten als <see cref="T:System.Object" />-Typ.</param>
      <returns>Der Index der Position der ersten Zeile in der <see cref="T:System.Data.DataView" />, die mit den angegebenen Sortierschlüsselwerten übereinstimmt, andernfalls -1, wenn keine übereinstimmenden Sorrtierschlüsselwerte vorhanden sind.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Gibt ein Array von <see cref="T:System.Data.DataRowView" />-Objekten zurück, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen.</summary>
      <param name="key">Der als <see cref="T:System.Object" /> typisierte Spaltenwert, nach dem gesucht wird.</param>
      <returns>Ein Array von <see langword="DataRowView" />-Objekten, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen. Wenn keine Zeilen die angegebenen Sortierschlüsselwerte enthalten, ist dies ein leeres <see langword="DataRowView" />-Array.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Gibt ein Array von <see cref="T:System.Data.DataRowView" />-Objekten zurück, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen.</summary>
      <param name="key">Ein Array von Spaltenwerten als <see cref="T:System.Object" />-Typ, nach denen gesucht werden soll.</param>
      <returns>Ein Array von <see langword="DataRowView" />-Objekten, dessen Spalten dem angegebenen Sortierschlüsselwert entsprechen. Wenn keine Zeilen die angegebenen Sortierschlüsselwerte enthalten, ist dies ein leeres <see langword="DataRowView" />-Array.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Ruft einen Enumerator für diese <see cref="T:System.Data.DataView" /> ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> zum Navigieren in der Liste.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Tritt auf, nachdem eine <see cref="T:System.Data.DataView" /> erfolgreich geändert wurde.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataView.ListChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Öffnet eine <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Nur für die interne Verwendung vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Ein <see cref="T:System.Int32" />-Wert.</param>
      <param name="value">Ein <see cref="T:System.Object" />-Wert, der eingefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Ein <see cref="T:System.Object" />-Wert.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Ein <see cref="T:System.Int32" />-Wert.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Das der Liste hinzugefügte Element.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
      <param name="direction">Ein <see cref="T:System.ComponentModel.ListSortDirection" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
      <param name="key">Ein <see cref="T:System.Object" />-Wert.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Ein <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />-Objekt.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die in der Sammlung als bindbar gesucht werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <returns>Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="distinct">Wenn auf <see langword="true" /> festgelegt, enthält die zurückgegebene <see cref="T:System.Data.DataTable" /> Zeilen mit unterschiedlichen Werten für alle Spalten. Der Standardwert ist <see langword="false" />.</param>
      <param name="columnNames">Ein Zeichenfolgenarray mit einer Liste der Spaltennamen, die in der zurückgegebenen <see cref="T:System.Data.DataTable" /> enthalten sein sollen. Die <see cref="T:System.Data.DataTable" /> enthält die angegebenen Spalten in der Reihenfolge, in der sie in diesem Array angezeigt werden.</param>
      <returns>Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="tableName">Der Name der zurückgegebenen <see cref="T:System.Data.DataTable" />.</param>
      <returns>Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Erstellt eine neue <see cref="T:System.Data.DataTable" /> basierend auf den Zeilen in einer vorhandenen <see cref="T:System.Data.DataView" /> und gibt diese zurück.</summary>
      <param name="tableName">Der Name der zurückgegebenen <see cref="T:System.Data.DataTable" />.</param>
      <param name="distinct">Wenn auf <see langword="true" /> festgelegt, enthält die zurückgegebene <see cref="T:System.Data.DataTable" /> Zeilen mit unterschiedlichen Werten für alle Spalten. Der Standardwert ist <see langword="false" />.</param>
      <param name="columnNames">Ein Zeichenfolgenarray mit einer Liste der Spaltennamen, die in der zurückgegebenen <see cref="T:System.Data.DataTable" /> enthalten sein sollen. Die <see langword="DataTable" /> enthält die angegebenen Spalten in der Reihenfolge, in der sie in diesem Array angezeigt werden.</param>
      <returns>Eine neue <see cref="T:System.Data.DataTable" />-Instanz, die die angeforderten Zeilen und Spalten enthält.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Nur für die interne Verwendung vorgesehen.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Nur für die interne Verwendung vorgesehen.</summary>
      <param name="force">Nur für die interne Verwendung vorgesehen.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Ruft einen Wert ab, der angibt, ob Löschungen zulässig sind, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Löschungen zulässig sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Ruft einen Wert ab, der angibt, ob Bearbeitungen zulässig sind, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Bearbeitungen zulässig sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Ruft einen Wert ab, der angibt, ob die neuen Zeilen mithilfe der <see cref="M:System.Data.DataView.AddNew" />-Methode hinzugefügt werden können, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Zeilen hinzugefügt werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Ruft einen Wert ab, der angibt, ob die Standardsortierung verwendet werden soll, oder legt diesen Wert fest. Die Standardsortierung erfolgt nach allen Primärschlüsseln (in aufsteigender Reihenfolge), wie durch <see cref="P:System.Data.DataTable.PrimaryKey" /> angegeben.</summary>
      <returns>
        <see langword="true" />, wenn die Standardsortierung verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Ruft die Anzahl der Datensätze in <see cref="T:System.Data.DataView" /> ab, nachdem <see cref="P:System.Data.DataView.RowFilter" /> und <see cref="P:System.Data.DataView.RowStateFilter" /> angewendet wurden.</summary>
      <returns>Die Anzahl der Datensätze in der <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Ruft den <see cref="T:System.Data.DataViewManager" /> ab, der dieser Ansicht zugeordnet ist.</summary>
      <returns>Der <see langword="DataViewManager" />, der diese Ansicht erstellt hat. Ist dies die standardmäßige <see cref="T:System.Data.DataView" /> für eine <see cref="T:System.Data.DataTable" />, gibt die <see langword="DataViewManager" />-Eigenschaft den standardmäßigen <see langword="DataViewManager" /> für den <see langword="DataSet" /> zurück. Wenn die <see langword="DataView" /> hingegen ohne <see langword="DataViewManager" /> erstellt wurde, ist diese Eigenschaft <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Ruft einen Wert ab, der angibt, ob die Komponente initialisiert wurde.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass die Komponente die Initialisierung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Ruft einen Wert ab, der angibt, ob die Datenquelle aktuell geöffnet ist und Ansichten der Daten in der <see cref="T:System.Data.DataTable" /> projiziert.</summary>
      <returns>
        <see langword="true" />, wenn die Quelle geöffnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Ruft eine Datenzeile aus einer angegebenen Tabelle ab.</summary>
      <param name="recordIndex">Der Index eines Datensatzes in der <see cref="T:System.Data.DataTable" />.</param>
      <returns>Eine Ansicht (<see cref="T:System.Data.DataRowView" />) der von Ihnen gewünschten Zeile.</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Ruft den Ausdruck ab, mit dem die in <see cref="T:System.Data.DataView" /> anzuzeigenden Zeilen gefiltert werden, oder legt diesen fest.</summary>
      <returns>Eine Zeichenfolge, die angibt, wie Zeilen gefiltert werden sollen.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Dient zum Abrufen oder Festlegen des Zeilenstatusfilters, der in der <see cref="T:System.Data.DataView" /> verwendet wird.</summary>
      <returns>Einer der <see cref="T:System.Data.DataViewRowState" />-Werte.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Ruft die Sortierspalte(n) und die Sortierreihenfolge für die <see cref="T:System.Data.DataView" /> ab oder legt sie fest.</summary>
      <returns>Eine Zeichenfolge, die den Spaltennamen gefolgt von "ASC" (aufsteigend) oder "DESC" (absteigend) enthält. Spalten werden standardmäßig in aufsteigender Reihenfolge sortiert. Mehrere Spalten können durch Kommas getrennt werden.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Ein <see cref="T:System.Int32" />-Wert.</param>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Ruft die Quell-<see cref="T:System.Data.DataTable" /> ab oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die Daten für diese Ansicht bereitstellt.</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Enthält eine standardmäßige <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see cref="T:System.Data.DataTable" /> in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Tritt ein, nachdem einer <see cref="T:System.Data.DataView" /> eine Zeile hinzugefügt bzw. eine Zeile aus dieser gelöscht wurde.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataViewManager" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DataViewManager" />-Klasse für den angegebenen <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">Der Name des zu verwendenden <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Erstellt einen <see cref="T:System.Data.DataView" /> für das angegebene <see cref="T:System.Data.DataTable" />.</summary>
      <param name="table">Der Name der <see cref="T:System.Data.DataTable" />, die in der <see cref="T:System.Data.DataView" /> verwendet werden soll.</param>
      <returns>Ein <see cref="T:System.Data.DataView" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Data.DataViewManager.ListChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Löst ein <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />-Ereignis aus, wenn eine <see cref="T:System.Data.DataRelation" /> zur <see cref="T:System.Data.DataRelationCollection" /> hinzugefügt bzw. aus dieser entfernt wird.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der <see cref="T:System.Collections.ICollection" /> in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob die <see cref="T:System.Collections.IList" /> einen bestimmten Wert enthält.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Object" /> in der <see cref="T:System.Collections.IList" /> gefunden wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der <see cref="T:System.Collections.IList" /> gesucht werden soll.</param>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die <see cref="T:System.Collections.IList" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Die <see cref="T:System.Object" />, die in die <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Der <see cref="T:System.Object" />, der aus der <see cref="T:System.Collections.IList" /> entfernt werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das <see cref="T:System.Collections.IList" />-Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Fügt den Indizes, die für die Suche verwendet werden, den <see cref="T:System.ComponentModel.PropertyDescriptor" /> hinzu.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der den Indizes hinzugefügt werden soll, die für die Suche verwendet werden.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sortiert die Liste entsprechend einem <see cref="T:System.ComponentModel.PropertyDescriptor" /> und einer <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, nach dem sortiert werden soll.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Gibt den Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, in dem gesucht werden soll.</param>
      <param name="key">Der Wert des property-Parameters, nach dem gesucht werden soll.</param>
      <returns>Der Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Entfernt den <see cref="T:System.ComponentModel.PropertyDescriptor" /> aus den Indizes, die für die Suche verwendet werden.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der aus den für die Suche verwendeten Indizes entfernt werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Entfernt alle Sortierungen, die unter Verwendung von <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> angewendet wurden.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Gibt die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse zurück, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die in der Sammlung als bindbar gesucht werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Gibt den Namen der Liste zurück.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, für die der Listenname zurückgegeben wird. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Der Name der Liste.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Löst ein <see cref="E:System.Data.DataTableCollection.CollectionChanged" />-Ereignis aus, wenn eine <see cref="T:System.Data.DataTable" /> zur <see cref="T:System.Data.DataTableCollection" /> hinzugefügt bzw. aus dieser entfernt wird.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Ruft den für das <see cref="T:System.Data.DataSet" /> zu verwendenden <see cref="T:System.Data.DataViewManager" /> ab oder legt diesen fest.</summary>
      <returns>Der zu verwendende <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Ruft einen Wert ab, der für die Codedauerhaftigkeit verwendet wird, oder legt diesen fest.</summary>
      <returns>Ein Wert, der für die Codedauerhaftigkeit verwendet wird.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Ruft die <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see cref="T:System.Data.DataTable" /> im <see cref="T:System.Data.DataSet" /> ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataViewSettingCollection" /> für jede <see langword="DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Collections.ICollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IList" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Beschreibt die Version der Daten in einer <see cref="T:System.Data.DataRow" />-Klasse.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Eine neue Zeile.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Aktuelle Zeilen, einschließlich unveränderter, neuer und geänderter Zeilen. <see cref="T:System.Data.DataViewRowState" /> ist standardmäßig auf CurrentRows festgelegt.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Eine gelöschte Zeile.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>Eine aktuelle Version von ursprünglichen Daten, die geändert wurden (siehe <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>Die ursprüngliche Version der geänderten Daten. (Obwohl die Daten inzwischen geändert wurden, ist sie als <see langword="ModifiedCurrent" /> verfügbar).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>Keine.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Ursprüngliche Zeilen, einschließlich unveränderter und gelöschter Zeilen.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Eine nicht geänderte Zeile.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Stellt die Standardeinstellungen für <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> und <see cref="P:System.Data.DataView.Table" /> für DataViews dar, die vom <see cref="T:System.Data.DataViewManager" /> erstellt wurden.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Ruft einen Wert ab, der angibt, ob die Standardsortierung verwendet werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Standardsortierung verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Ruft die <see cref="T:System.Data.DataViewManager" /> ab, die <see cref="T:System.Data.DataViewSetting" /> enthält.</summary>
      <returns>Ein <see cref="T:System.Data.DataViewManager" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Ruft den Filter ab, der in der <see cref="T:System.Data.DataView" /> angewendet werden soll, oder legt diesen fest. Siehe <see cref="P:System.Data.DataView.RowFilter" /> für ein Codebeispiel mit RowFilter.</summary>
      <returns>Eine Zeichenfolge, die den anzuwendenden Filter enthält.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Ruft einen Wert ab, der angibt, ob Current, Deleted, ModifiedCurrent, ModifiedOriginal, New, Original, Unchanged oder keine Zeilen in der <see cref="T:System.Data.DataView" /> angezeigt werden sollen, oder legt diesen fest.</summary>
      <returns>Ein Wert, der angibt, welche Zeilen angezeigt werden sollen.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Ruft einen Wert ab, der die Sortierung angibt, die in der <see cref="T:System.Data.DataView" /> angewendet werden soll, oder legt diesen fest.</summary>
      <returns>Die in der <see cref="T:System.Data.DataView" /> anzuwendende Sortierung.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, auf die die <see cref="T:System.Data.DataViewSetting" />-Eigenschaften angewendet werden.</summary>
      <returns>Ein <see cref="T:System.Data.DataTable" />-Objekt.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Enthält eine schreibgeschützte Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten für jede <see cref="T:System.Data.DataTable" /> in einem <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="ar">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Kopiert die Auflistungsobjekte in eine eindimensionale <see cref="T:System.Array" />-Instanz, beginnend am angegebenen Index.</summary>
      <param name="ar">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Werte ist.</param>
      <param name="index">Der Index des Arrays, an dem mit dem Einfügen begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Ruft einen <see cref="T:System.Collections.IEnumerator" /> für die Auflistung ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Ruft die Anzahl der <see cref="T:System.Data.DataViewSetting" />-Objekte in <see cref="T:System.Data.DataViewSettingCollection" /> ab.</summary>
      <returns>Die Anzahl der <see cref="T:System.Data.DataViewSetting" />-Objekte in der Auflistung.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataViewSettingCollection" /> schreibgeschützt ist.</summary>
      <returns>Gibt immer zurück <see langword="true" /> , um anzugeben, dass die Auflistung schreibgeschützt ist.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>Diese Eigenschaft ist immer <see langword="false" />, es sei denn, sie wird von einer abgeleiteten Klasse überschrieben.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Ruft die <see cref="T:System.Data.DataViewSetting" />-Objekte der angegebenen <see cref="T:System.Data.DataTable" /> aus der Auflistung ab.</summary>
      <param name="table">Das zu suchende <see cref="T:System.Data.DataTable" />.</param>
      <returns>Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.Data.DataViewSetting" />-Objekte aus der durch den Index angegebenen <see cref="T:System.Data.DataTable" /> ab.</summary>
      <param name="index">Der nullbasierte Index der zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns>Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Ruft die durch den Namen angegebene <see cref="T:System.Data.DataViewSetting" /> der <see cref="T:System.Data.DataTable" /> ab.</summary>
      <param name="tableName">Der Name des zu suchenden <see cref="T:System.Data.DataTable" />.</param>
      <returns>Eine Auflistung von <see cref="T:System.Data.DataViewSetting" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf <see cref="T:System.Data.DataViewSettingCollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>Die Ausnahme, die vom <see cref="T:System.Data.Common.DataAdapter" /> während eines Einfügungs-, Aktualisierungs- oder Löschvorgangs ausgelöst wird, wenn die Anzahl der betroffenen Zeilen 0 (null) ist.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message">Die Textzeichenfolge, die die Einzelheiten der Ausnahme beschreibt.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message">Die Textzeichenfolge, die die Einzelheiten der Ausnahme beschreibt.</param>
      <param name="inner">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DBConcurrencyException" />-Klasse.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache dieser Ausnahme erklärt wird.</param>
      <param name="inner">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
      <param name="dataRows">Ein Array, das die <see cref="T:System.Data.DataRow" />-Objekte enthält, deren Aktualisierungsfehler diese Ausnahme generiert hat.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Kopiert die <see cref="T:System.Data.DataRow" />-Objekte, deren Aktualisierungsfehler diese Ausnahme generiert hat, in das angegebene Array von <see cref="T:System.Data.DataRow" />-Objekten.</summary>
      <param name="array">Das eindimensionale Array von <see cref="T:System.Data.DataRow" />-Objekten, in das die <see cref="T:System.Data.DataRow" />-Objekte kopiert werden sollen.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Kopiert die <see cref="T:System.Data.DataRow" />-Objekte, deren Aktualisierungsfehler diese Ausnahme generiert hat, in das angegebene Array von <see cref="T:System.Data.DataRow" />-Objekten ab dem angegebenen Index im Zielarray.</summary>
      <param name="array">Das eindimensionale Array von <see cref="T:System.Data.DataRow" />-Objekten, in das die <see cref="T:System.Data.DataRow" />-Objekte kopiert werden sollen.</param>
      <param name="arrayIndex">Der Index im Zielarray, an dem der Kopiervorgang gestartet werden soll.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt das angegebene Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Data.DBConcurrencyException" /> erforderlich sind.</summary>
      <param name="info">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten, die der <see cref="T:System.Data.DBConcurrencyException" /> zugeordnet sind.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der Quelle und Ziel des serialisierten Streams enthält, der dem <see cref="T:System.Data.DBConcurrencyException" /> zugeordnet ist.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Ruft den Wert der <see cref="T:System.Data.DataRow" />, die die <see cref="T:System.Data.DBConcurrencyException" /> generiert hat, ab oder legt diesen fest.</summary>
      <returns>Der Wert des <see cref="T:System.Data.DataRow" />-Objekts.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Ruft die Anzahl von Zeilen ab, deren Aktualisierung zu einem Fehler geführt und dadurch diese Ausnahme generiert hat.</summary>
      <returns>Eine ganze Zahl, die die Anzahl der Zeilen enthält, deren Aktualisierung zu einem Fehler geführt hat.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Gibt den Datentyp eines Felds, einer Eigenschaft oder eines <see langword="Parameter" />-Objekts eines .NET Framework-Datenproviders an.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Ein Stream variabler Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Ein Stream fester Länge mit Nicht-Unicode-Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Ein Stream variabler Länge mit Binärdaten in einem Bereich zwischen 1 und 8000 Bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Ein einfacher Typ zur Darstellung der booleschen Werte <see langword="true" /> und <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>Eine 8-Bit-Ganzzahl ohne Vorzeichen, deren Wert im Bereich von 0 bis 255 liegt.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Ein Währungswert im Bereich von –2 63 (bzw. –922.337.203.685.477,5808) bis 2 63 –1 (bzw. +922.337.203.685.477,5807) mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Ein Typ, der einen Datumswert darstellt.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Ein Typ zur Darstellung des Werts für Datum und Uhrzeit.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Datums- und Uhrzeitdaten. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Datums- und Zeitdaten mit Unterstützung von Zeitzonen. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Der Wertbereich für Zeitzonen liegt zwischen -14: 00 und +14: 00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Ein einfacher Typ zur Darstellung der Werte im Bereich von 1,0 x 10 –28 bis ungefähr 7,9 x 10 28 mit 28–29 signifikanten Ziffern.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 5,0 x 10 –324 bis 1,7 x 10 308 mit einer Genauigkeit von 15–16 Stellen.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>Eine GUID (Globally Unique Identifier, globaler eindeutiger Bezeichner).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Ein ganzzahliger Typ zur Darstellung von 16-Bit-Ganzzahlen mit Vorzeichen und mit Werten zwischen -32768 und 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 32 Bit sowie mit Werten zwischen –2147483648 und 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 64 Bit sowie mit Werten zwischen –9223372036854775808 und 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Ein allgemeiner Typ, der jeden Verweis bzw. Werttyp darstellt, der nicht explizit durch einen anderen <see langword="DbType" />-Wert dargestellt wird.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen mit Vorzeichen und einer Länge von 8 Bit sowie mit Werten zwischen –128 und 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Ein Gleitkommatyp zur Darstellung von Werten im Bereich von ungefähr 1,5 x 10 –45 bis 3,4 x 10 38 mit einer Genauigkeit von 7 Stellen.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Ein Typ, der Zeichenfolgen mit Unicode-Zeichen darstellt.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Eine Zeichenfolge mit fester Länge mit Unicode-Zeichen.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Ein Typ, der einen SQL Server-<see langword="DateTime" />-Wert darstellt. Wenn Sie einen SQL Server-<see langword="time" />-Wert verwenden möchten, verwenden Sie <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und mit einer Länge von 16 Bit mit Werten zwischen 0 und 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und einer Länge von 32 Bit mit Werten zwischen 0 und 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Ein integraler Typ zur Darstellung von ganzen Zahlen ohne Vorzeichen und einer Länge von 64-Bit mit Werten zwischen 0 und 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Ein numerischer Wert mit variabler Länge.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Eine analysierte Darstellung eines XML-Dokuments oder eines XML-Fragments.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, eine Aktion für eine gelöschte <see cref="T:System.Data.DataRow" /> auszuführen.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DeletedRowInaccessibleException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn während eines Hinzufügevorgangs in einem <see cref="T:System.Data.DataSet" />-bezogenen Objekt ein doppelter Datenbankobjektname auftritt.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.DuplicateNameException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen Ausnahme.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.Data.DataRow" />-Objekten dar, die von einer LINQ to DataSet-Abfrage zurückgegeben werden. Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator für die Auflistung von <see cref="T:System.Data.DataRow" />-Objekten zurück. Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Auflistung der <see cref="T:System.Data.DataRow" />-Objekte durchlaufen werden kann.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Stellt eine Auflistung von <see cref="T:System.Data.DataRow" />-Objekten dar, die von einer Abfrage zurückgegeben werden.</summary>
      <typeparam name="TRow">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Gibt einen Enumerator für die Auflistung der enthaltenen Zeilenobjekte zurück.</summary>
      <returns>Ein stark typisierter <see cref="T:System.Collections.Generic.IEnumerator`1" />, mit dem die Auflistung von <paramref name="TRow" />-Objekten durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator für die Auflistung von <see cref="T:System.Data.DataRow" />-Objekten zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die Auflistung der <see cref="T:System.Data.DataRow" />-Objekte durchlaufen werden kann.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Enthält die Erweiterungsmethoden für die Datenzeilenauflistungsklassen.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Konvertiert die Elemente einer <see cref="T:System.Data.EnumerableRowCollection" /> in den angegebenen Typ.</summary>
      <param name="source">Das <see cref="T:System.Data.EnumerableRowCollection" />, das die zu konvertierenden Elemente enthält.</param>
      <typeparam name="TResult">Der Typ, in den die Elemente der Quelle konvertiert werden sollen.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Ein Element in der Sequenz kann nicht in den Typ <paramref name="TResult" /> umgewandelt werden.</exception>
      <returns>Eine <see cref="T:System.Data.EnumerableRowCollection" />, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Projiziert jedes Element einer <see cref="T:System.Data.EnumerableRowCollection`1" /> in ein neues Format.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">Der Typ, in den <paramref name="TRow" /> transformiert wird.</typeparam>
      <returns>Ein <see cref="T:System.Data.EnumerableRowCollection`1" />, dessen Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel durch.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel durch.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Filtert eine Sequenz von Zeilen auf Grundlage des angegebenen Prädikats.</summary>
      <param name="source">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den zu filternden <see cref="T:System.Data.DataRow" />-Elementen.</param>
      <param name="predicate">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, die Zeilen aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft einer <see cref="T:System.Data.DataColumn" /> nicht ausgewertet werden kann.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines bestimmten serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.EvaluateException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Data.Common.DataAdapter.FillError" />-Ereignis eines <see cref="T:System.Data.Common.DbDataAdapter" /> bereit.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.FillErrorEventArgs" />-Klasse.</summary>
      <param name="dataTable">Die <see cref="T:System.Data.DataTable" />-Klasse, die aktualisiert wird.</param>
      <param name="values">Die Werte für die Zeile, die aktualisiert wird.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Ruft einen Wert ab, der angibt, ob der Füllvorgang trotz des Fehlers fortgesetzt werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der Füllvorgang fortgesetzt werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Ruft die <see cref="T:System.Data.DataTable" />-Klasse ab, die aktualisiert wurde, als der Fehler auftrat.</summary>
      <returns>Die <see cref="T:System.Data.DataTable" />-Klasse, die aktualisiert wird.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Ruft die Fehler ab, die behandelt werden.</summary>
      <returns>Die Fehler, die behandelt werden.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Ruft die Werte für die Zeile ab, die aktualisiert wurde, als der Fehler aufgetreten ist.</summary>
      <returns>Die Werte für die Zeile, die aktualisiert wird.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Data.Common.DataAdapter.FillError" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.Data.FillErrorEventArgs" />-Element, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Stellt eine Aktionsbeschränkung dar, die für eine Gruppe von Spalten in einer Primärschlüssel/Fremdschlüssel-Beziehung erzwungen wird, wenn ein Wert oder eine Spalte gelöscht oder aktualisiert wird.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit den angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="parentColumn">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumn">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit den angegebenen Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="parentColumns">Ein Array der übergeordneten <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumns">Ein Array der untergeordneten <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit dem angegebenen Namen und den angegebenen übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="constraintName">Der Name der Einschränkung.</param>
      <param name="parentColumn">Die übergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumn">Die untergeordnete <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ForeignKeyConstraint" />-Klasse mit dem angegebenen Namen und den Arrays von übergeordneten und untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="constraintName">Der Name von <see cref="T:System.Data.ForeignKeyConstraint" />. Wenn <see langword="null" /> oder eine leere Zeichenfolge, wird beim Hinzufügen zur Auflistung der Einschränkungen ein Standardname zugewiesen.</param>
      <param name="parentColumns">Ein Array der übergeordneten <see cref="T:System.Data.DataColumn" /> in der Einschränkung.</param>
      <param name="childColumns">Ein Array der untergeordneten <see cref="T:System.Data.DataColumn" /> in der Auflistung.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt. Mit diesem Konstruktor erstellte <see cref="T:System.Data.ForeignKeyConstraint" />-Objekte müssen der Auflistung anschließend über <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> hinzugefügt werden. Tabellen und Spalten mit den angegebenen Namen müssen zum Zeitpunkt des Aufrufs der Methode vorhanden sein. Wenn <see cref="M:System.Data.DataTable.BeginInit" /> vor dem Aufrufen dieses Konstruktors aufgerufen wurde, müssen die Tabellen und Spalten mit den angegebenen Namen zum Zeitpunkt des Aufrufs von <see cref="M:System.Data.DataTable.EndInit" /> vorhanden sein.</summary>
      <param name="constraintName">Der Name der Einschränkung.</param>
      <param name="parentTableName">Der Name der übergeordneten <see cref="T:System.Data.DataTable" />-Klasse, die übergeordnete <see cref="T:System.Data.DataColumn" />-Objekte in der Einschränkung enthält.</param>
      <param name="parentTableNamespace">Der Name von <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Ein Array der Namen von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="childColumnNames">Ein Array der Namen von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="acceptRejectRule">Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" />, <see langword="Cascade" /> und <see langword="Default" />.</param>
      <param name="deleteRule">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Löschen einer Zeile verwendet werden soll. Der Standardwert ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <param name="updateRule">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Aktualisieren einer Zeile verwendet werden soll. Der Standardwert ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Dieser Konstruktor wird für die Unterstützung zur Entwurfszeit in der Visual Studio-Umgebung bereitgestellt. Mit diesem Konstruktor erstellte <see cref="T:System.Data.ForeignKeyConstraint" />-Objekte müssen der Auflistung anschließend über <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" /> hinzugefügt werden. Tabellen und Spalten mit den angegebenen Namen müssen zum Zeitpunkt des Aufrufs der Methode vorhanden sein. Wenn <see cref="M:System.Data.DataTable.BeginInit" /> vor dem Aufrufen dieses Konstruktors aufgerufen wurde, müssen die Tabellen und Spalten mit den angegebenen Namen zum Zeitpunkt des Aufrufs von <see cref="M:System.Data.DataTable.EndInit" /> vorhanden sein.</summary>
      <param name="constraintName">Der Name der Einschränkung.</param>
      <param name="parentTableName">Der Name der übergeordneten <see cref="T:System.Data.DataTable" />-Klasse, die übergeordnete <see cref="T:System.Data.DataColumn" />-Objekte in der Einschränkung enthält.</param>
      <param name="parentColumnNames">Ein Array der Namen von übergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="childColumnNames">Ein Array der Namen von untergeordneten <see cref="T:System.Data.DataColumn" />-Objekten in der Einschränkung.</param>
      <param name="acceptRejectRule">Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" />, <see langword="Cascade" /> und <see langword="Default" />.</param>
      <param name="deleteRule">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Löschen einer Zeile verwendet werden soll. Der Standardwert ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <param name="updateRule">Einer der <see cref="T:System.Data.Rule" />-Werte, der beim Aktualisieren einer Zeile verwendet werden soll. Der Standardwert ist <see langword="Cascade" />. Mögliche Werte sind: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> und <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Eine oder beide der Spalten sind <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Die Spalten weisen unterschiedliche Datentypen auf.  
  
– oder – 
Die Tabellen gehören nicht zu demselben <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle <see cref="T:System.Data.ForeignKeyConstraint" /> mit dem angegebenen Objekt identisch ist</summary>
      <param name="key">Das Objekt, mit dem diese <see cref="T:System.Data.ForeignKeyConstraint" /> verglichen wird. Zwei <see cref="T:System.Data.ForeignKeyConstraint" /> sind gleich, wenn sie dieselben Spalten einschränken.</param>
      <returns>
        <see langword="true" />, wenn die Objekte identisch sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Ruft den Hashcode dieser Instanz des <see cref="T:System.Data.ForeignKeyConstraint" />-Objekts ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Gibt die Aktion an, die für die gesamte Einschränkung ausgeführt werden soll, wenn <see cref="M:System.Data.DataTable.AcceptChanges" /> aufgerufen wird.</summary>
      <returns>Einer der <see cref="T:System.Data.AcceptRejectRule" />-Werte. Mögliche Werte sind <see langword="None" /> und <see langword="Cascade" />. Der Standardwert ist <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Ruft die untergeordneten Spalten dieser Einschränkung ab.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die untergeordneten Spalten der Einschränkung sind.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Ruft die Aktion ab, die für diese Einschränkung beim Löschen einer Zeile ausgeführt wird, oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Data.Rule" />-Werte. Der Standardwert ist <see langword="Cascade" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>Die übergeordneten Spalten dieser Einschränkung.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die die übergeordneten Spalten der Einschränkung sind.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Ruft die übergeordnete Tabelle dieser Einschränkung ab.</summary>
      <returns>Die übergeordnete <see cref="T:System.Data.DataTable" /> dieser Einschränkung.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Ruft die untergeordnete Tabelle dieser Einschränkung ab.</summary>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die untergeordnete Tabelle in der Einschränkung ist.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Ruft die Aktion ab, die für diese Einschränkung beim Aktualisieren einer Zeile ausgeführt wird, oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Data.Rule" />-Werte. Der Standardwert ist <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Ordnet einer <see cref="T:System.Data.DataSet" />-Spalte eine Spalte einer Datenquelle zu und wird von der <see cref="T:System.Data.Common.DataColumnMapping" />-Klasse implementiert, die von allen .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Ruft den Namen der Spalte in dem <see cref="T:System.Data.DataSet" /> ab, für das die Zuordnung erfolgen soll, oder legt diesen fest.</summary>
      <returns>Der Name der Spalte in dem <see cref="T:System.Data.DataSet" />, für das die Zuordnung erfolgen soll. Bei dem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Ruft den Namen der Spalte in der Datenquelle ab, aus der die Zuordnung erfolgen soll, oder legt diesen fest. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <returns>Der Name der Spalte in der Datenquelle unter Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Enthält eine Auflistung von DataColumnMapping-Objekten und wird durch die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> implementiert, die von allen .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Fügt der ColumnMapping-Auflistung mithilfe des Namens der Quellspalte und des Namens der <see cref="T:System.Data.DataSet" />-Spalte ein ColumnMapping-Objekt hinzu.</summary>
      <param name="sourceColumnName">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetColumnName">Der Name der <see cref="T:System.Data.DataSet" />-Spalte.</param>
      <returns>Das ColumnMapping-Objekt, das der Auflistung hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.Common.DataColumnMappingCollection" /> ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen enthält.</summary>
      <param name="sourceColumnName">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>
        <see langword="true" />, wenn ein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen Quellspaltennamen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Ruft das ColumnMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Spaltennamen ab.</summary>
      <param name="dataSetColumnName">Der Name der <see cref="T:System.Data.DataSet" />-Spalte in der Auflistung.</param>
      <returns>Das ColumnMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Spaltennamen.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Ruft die Position des <see cref="T:System.Data.Common.DataColumnMapping" />-Objekts mit dem angegebenen Quellspaltennamen ab. Bei dem Namen wird die Groß- und Kleinschreibung berücksichtigt.</summary>
      <param name="sourceColumnName">Der Name der Quellspalte mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position des <see langword="DataColumnMapping" />-Objekts mit dem angegebenen Quellspaltennamen.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see cref="P:System.Data.IColumnMapping.SourceColumn" />-Namen aus der Auflistung.</summary>
      <param name="sourceColumnName">Der <see langword="SourceColumn" />-Name mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es ist kein <see cref="T:System.Data.Common.DataColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen vorhanden.</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Data.IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen ab oder legt dieses fest.</summary>
      <param name="index">Der <see langword="SourceColumn" />-Name des zu suchenden <see langword="IColumnMapping" />-Objekts.</param>
      <returns>Das <see langword="IColumnMapping" />-Objekt mit dem angegebenen <see langword="SourceColumn" />-Namen.</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Ermöglicht einem Objekt das Implementieren eines DataAdapter und stellt eine Gruppe von Methoden und zuordnungsbezogenen Eigenschaften dar, mit denen ein <see cref="T:System.Data.DataSet" /> gefüllt und aktualisiert sowie eine Datenquelle aktualisiert wird.  
  
 <see cref="T:System.Data.IDbDataAdapter" />-Instanzen gelten für Datenquellen, die relationale Datenbanken mit Textbefehlen (wie Transact-SQL) sind (oder ihnen ähneln), während <see cref="T:System.Data.IDataAdapter" />-Instanzen jeden Datenquelltyp verwenden können.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Fügt dem <see cref="T:System.Data.DataSet" /> unter Verwendung des <see cref="T:System.Data.DataSet" />-Namens Zeilen hinzu bzw. aktualisiert diese, um eine Übereinstimmung mit den Zeilen in der Datenquelle zu erzielen, und erstellt eine <see cref="T:System.Data.DataTable" /> mit der Bezeichnung "Table".</summary>
      <param name="dataSet">Ein <see cref="T:System.Data.DataSet" />, das mit Datensätzen und bei Bedarf mit einem Schema gefüllt wird.</param>
      <returns>Die Anzahl der Zeilen, die dem <see cref="T:System.Data.DataSet" /> erfolgreich hinzufügt bzw. darin aktualisiert wurden. Dies schließt keine Zeilen ein, die von Anweisungen betroffen sind, die keine Zeilen zurückgeben.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Fügt eine <see cref="T:System.Data.DataTable" /> namens „Tabelle“ zum angegebenen <see cref="T:System.Data.DataSet" /> hinzu und konfiguriert das Schema auf der Grundlage des angegebenen <see cref="T:System.Data.SchemaType" /> so, dass es mit dem Schema in der Datenquelle übereinstimmt.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, die mit dem Schema aus der Datenquelle gefüllt werden soll.</param>
      <param name="schemaType">Einer der <see cref="T:System.Data.SchemaType" />-Werte.</param>
      <returns>Ein Array von <see cref="T:System.Data.DataTable" />-Objekten, die aus der Datenquelle zurückgegebene Schemainformationen enthalten.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Ruft die Parameter ab, die vom Benutzer beim Ausführen einer SQL-SELECT-Anweisung festgelegt wurden.</summary>
      <returns>Ein Array von <see cref="T:System.Data.IDataParameter" />-Objekten, das die vom Benutzer festgelegten Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Ruft für jede Zeile im angegebenen <see cref="T:System.Data.DataSet" /> einer <see cref="T:System.Data.DataTable" /> mit dem Namen "Table", die eingefügt, aktualisiert oder gelöscht wird, die INSERT-Anweisung, die UPDATE-Anweisung bzw. die DELETE-Anweisung auf.</summary>
      <param name="dataSet">Die <see cref="T:System.Data.DataSet" />, mit der die Datenquelle aktualisiert wird.</param>
      <exception cref="T:System.Data.DBConcurrencyException">Der Versuch, eine INSERT-Anweisung, UPDATE-Anweisung oder DELETE-Anweisung auszuführen, ergab 0 (null) betroffene Datensätze.</exception>
      <returns>Die Anzahl der erfolgreich aktualisierten Zeilen im <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Gibt an, ob nicht zugeordnete Quelltabellen oder Spalten mit ihren Quellnamen zum Filtern übergeben werden, oder ob ein Fehler ausgelöst wird.</summary>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingMappingAction" />-Werte.</exception>
      <returns>Einer der <see cref="T:System.Data.MissingMappingAction" />-Werte. Der Standardwert ist <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Gibt an, ob fehlende Quelltabellen, Spalten und ihre Beziehungen dem Datasetschema hinzugefügt oder ignoriert werden, oder ob ein Fehler ausgelöst wird.</summary>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert ist keiner der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</exception>
      <returns>Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte. Der Standardwert ist <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Gibt an, wie eine Quelltabelle einer Datasettabelle zugeordnet wird.</summary>
      <returns>Eine Auflistung, die die Masterzuordnung zwischen den zurückgegebenen Datensätzen und dem <see cref="T:System.Data.DataSet" /> bereitstellt. Der Standardwert ist eine leere Auflistung.</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Stellt einen Parameter sowie optional dessen Zuordnung zu <see cref="T:System.Data.DataSet" />-Spalten für ein Command-Objekt dar und wird von .NET Framework-Datenanbietern implementiert, die auf Datenquellen zugreifen.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Ruft den <see cref="T:System.Data.DbType" /> des Parameters ab oder legt ihn fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wurde nicht auf einen gültigen <see cref="T:System.Data.DbType" /> festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.DbType" />-Werte. Der Standardwert ist <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Ruft einen Wert ab, der angibt, ob der Parameter nur zur Eingabe, nur zur Ausgabe oder bidirektional verwendet wird oder ob es sich um einen Parameter für den Rückgabewert einer gespeicherten Prozedur handelt, oder legt diesen Wert fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wurde nicht auf einen der gültigen <see cref="T:System.Data.ParameterDirection" />-Werte festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.ParameterDirection" />-Werte. Der Standardwert ist <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Ruft einen Wert ab, der anzeigt, ob der Parameter NULL-Werte akzeptiert.</summary>
      <returns>
        <see langword="true" />, wenn NULL-Werte akzeptiert werden; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Ruft den Namen der <see cref="T:System.Data.IDataParameter" /> ab oder legt diesen fest.</summary>
      <returns>Der Name von <see cref="T:System.Data.IDataParameter" />. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Ruft den Namen der Quellspalte ab, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist und zum Laden oder Zurückgeben des <see cref="P:System.Data.IDataParameter.Value" /> verwendet wird, oder legt diesen Namen fest.</summary>
      <returns>Der Name der Quellspalte, die dem <see cref="T:System.Data.DataSet" /> zugeordnet ist. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Ruft die <see cref="T:System.Data.DataRowVersion" /> ab, die beim Laden von <see cref="P:System.Data.IDataParameter.Value" /> verwendet werden soll, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Die Eigenschaft wurde nicht auf einen der <see cref="T:System.Data.DataRowVersion" />-Werte festgelegt.</exception>
      <returns>Einer der <see cref="T:System.Data.DataRowVersion" />-Werte. Der Standardwert ist <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Ruft den Wert des Parameters ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Object" />, das den Wert des Parameters darstellt. Der Standardwert ist "null".</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Sammelt alle relevanten Parameter für ein Command-Objekt sowie deren Zuordnungen zu <see cref="T:System.Data.DataSet" />-Spalten, und wird von .NET Framework-Datenanbietern implementiert, die auf Datenquellen zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob in der Sammlung ein Parameter mit dem angegebenen Namen vorhanden ist.</summary>
      <param name="parameterName">Der Name des Parameters.</param>
      <returns>
        <see langword="true" />, wenn die Sammlung den Parameter enthält; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Ruft die Position des angegebenen <see cref="T:System.Data.IDataParameter" /> in der Sammlung ab.</summary>
      <param name="parameterName">Der Name des Parameters.</param>
      <returns>Die nullbasierte Position des angegebenen <see cref="T:System.Data.IDataParameter" /> in der Sammlung.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.IDataParameter" /> aus der Auflistung.</summary>
      <param name="parameterName">Der Name des Parameters.</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Ruft den Parameter am angegebenen Index ab oder legt diesen fest.</summary>
      <param name="parameterName">Der Name des abzurufenden Parameters.</param>
      <returns>Ein <see cref="T:System.Object" /> am angegebenen Index.</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Ermöglicht das Lesen eines oder mehrerer Vorwärtsdatenströme von Resultsets, die durch Ausführen eines Befehls für eine Datenquelle abgerufen wurden, und wird von .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Schließt das <see cref="T:System.Data.IDataReader" />-Objekt.</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.IDataReader" /> beschreibt.</summary>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Data.IDataReader" /> ist geschlossen.</exception>
      <returns>Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Setzt den Datenleser beim Lesen der Ergebnisse von SQL-Anweisungen auf das nächste Ergebnis.</summary>
      <returns>
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Setzt den <see cref="T:System.Data.IDataReader" /> auf den nächsten Datensatz.</summary>
      <returns>
        <see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</summary>
      <returns>Die Schachtelungsebene.</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Ruft einen Wert ab, der angibt, ob der Datenreader geschlossen ist.</summary>
      <returns>
        <see langword="true" />, wenn der Datenreader geschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</summary>
      <returns>Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Ermöglicht den Zugriff auf die Spaltenwerte in den einzelnen Zeilen für einen <see langword="DataReader" />, und wird von .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Wert der Spalte.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Ruft den 8-Bit-Ganzzahlwert ohne Vorzeichen der angegebenen Spalte ab.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der 8-Bit-Ganzzahlwert ohne Vorzeichen der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Liest einen Datenstrom aus dem angegebenen Spaltenoffset als Array in den Puffer, beginnend am angegebenen Pufferoffset.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="fieldOffset">Der Index im Feld, an dem der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferoffset">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length">Die Anzahl der zu lesenden Bytes.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Bytes.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Ruft den Zeichenwert der angegebenen Spalte ab.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Zeichenwert der angegebenen Spalte.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Liest einen Zeichendatenstrom aus dem angegebenen Spaltenoffset als Array in den Puffer, beginnend am angegebenen Pufferoffset.</summary>
      <param name="i">Die nullbasierte Ordnungszahl der Spalte.</param>
      <param name="fieldoffset">Der Index in der Zeile, in der der Lesevorgang beginnen soll.</param>
      <param name="buffer">Der Puffer, in den der Bytedatenstrom gelesen werden soll.</param>
      <param name="bufferoffset">Der Index für <paramref name="buffer" /> für den Beginn des Lesevorgangs.</param>
      <param name="length">Die Anzahl der zu lesenden Bytes.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Die tatsächlich gelesene Anzahl von Zeichen.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Gibt einen <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl zurück.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der <see cref="T:System.Data.IDataReader" /> für die angegebene Spaltenordnungszahl.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Ruft die Datentypinformationen für das angegebene Feld ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Die Datentypinformationen für das angegebene Feld.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Ruft das Datum und die Uhrzeit des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Das Datum und die Uhrzeit des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Ruft den an fester Position befindlichen numerischen Wert des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der an fester Position befindliche numerische Wert des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Ruft den Wert des angegebenen Felds als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Wert des angegebenen Felds als Gleitkommazahl mit doppelter Genauigkeit.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Ruft die <see cref="T:System.Type" />-Informationen entsprechend dem Typ von <see cref="T:System.Object" /> ab, die von <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> zurückgegeben würden.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Die <see cref="T:System.Type" />-Informationen entsprechend dem Typ von <see cref="T:System.Object" />, die von <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> zurückgegeben würden.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Ruft den Wert des angegebenen Felds als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Wert des angegebenen Felds als Gleitkommazahl mit einfacher Genauigkeit.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Gibt den GUID-Wert des angegebenen Felds zurück.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der GUID-Wert des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Ruft den 16-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der 16-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Ruft den 32-Bit-Ganzzahl-mit-Vorzeichen-Wert des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der 32-Bit-Ganzzahl-mit-Vorzeichen-Wert des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Ruft den 64-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der 64-Bit-Ganzzahlwert mit Vorzeichen des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Ruft den Namen des zu suchenden Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Name des Felds oder eine leere Zeichenfolge (""), wenn kein Wert zurückgegeben werden kann.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Gibt den Index des benannten Felds zurück.</summary>
      <param name="name">Der Name des zu suchenden Felds.</param>
      <returns>Der Index des benannten Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Ruft den Zeichenfolgenwert des angegebenen Felds ab.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Der Zeichenfolgenwert des angegebenen Felds.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Gibt den Wert des angegebenen Felds zurück.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Das <see cref="T:System.Object" />, das bei der Rückgabe den Feldwert enthält.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Füllt ein Array von Objekten mit den Spaltenwerten des aktuellen Datensatzes.</summary>
      <param name="values">Ein Array von <see cref="T:System.Object" />, in das die Attributfelder kopiert werden.</param>
      <returns>Die Anzahl der Instanzen von <see cref="T:System.Object" /> im Array.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Gibt zurück, ob das angegebene Feld auf NULL festgelegt ist.</summary>
      <param name="i">Der Index des zu suchenden Felds.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see langword="true" />, wenn das angegebene Feld auf NULL festgelegt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Ruft die Anzahl der Spalten in der aktuellen Zeile ab.</summary>
      <returns>Falls in keinem gültigen Recordset positioniert, 0; andernfalls die Anzahl der Spalten im aktuellen Datensatz. Der Standard ist -1.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Ruft die Spalte ab, die sich am angegebenen Index befindet.</summary>
      <param name="i">Der nullbasierte Index der Spalte, die abgerufen werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index lag außerhalb des Bereichs von 0 bis <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Die Spalte, die sich als <see cref="T:System.Object" /> am angegebenen Index befindet.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Ruft die Spalte mit dem angegebenen Namen ab.</summary>
      <param name="name">Der Name der zu suchenden Spalte.</param>
      <exception cref="T:System.IndexOutOfRangeException">Es wurde keine Spalte mit dem angegebenen Namen gefunden.</exception>
      <returns>Die Spalte mit dem angegebenen Namen als <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Stellt eine SQL-Anweisung dar, die während der Verbindung mit einer Datenquelle ausgeführt wird, und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Versucht, die Ausführung eines <see cref="T:System.Data.IDbCommand" /> abzubrechen.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Erstellt eine neue Instanz eines <see cref="T:System.Data.IDbDataParameter" /> -Objekts.</summary>
      <returns>Ein <see langword="IDbDataParameter" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Führt eine SQL-Anweisung für das <see langword="Connection" />-Objekt eines .NET Framework-Datenanbieters aus und gibt die Anzahl der betroffenen Zeilen zurück.</summary>
      <exception cref="T:System.InvalidOperationException">Die Verbindung ist nicht vorhanden.  
  
 - oder -  
  
 Die Verbindung ist nicht offen.</exception>
      <returns>Die Anzahl der betroffenen Zeilen.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Führt den <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt einen <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Führt <see cref="P:System.Data.IDbCommand.CommandText" /> für die <see cref="P:System.Data.IDbCommand.Connection" /> aus und erstellt mit einem der <see cref="T:System.Data.IDataReader" />-Werte einen <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Einer der <see cref="T:System.Data.CommandBehavior" />-Werte.</param>
      <returns>Ein <see cref="T:System.Data.IDataReader" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Führt die Abfrage aus und gibt die erste Spalte der ersten Zeile im Resultset zurück, das durch die Abfrage zurückgegeben wird. Zusätzliche Spalten oder Zeilen werden ignoriert.</summary>
      <returns>Die erste Spalte der ersten Zeile im Resultset.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Erstellt eine vorbereitete (oder kompilierte) Version des Befehls für die Datenquelle.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ist nicht festgelegt.  
  
- oder - 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ist nicht <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Ruft den für die Datenquelle auszuführenden Textbefehl ab bzw. legt ihn fest.</summary>
      <returns>Der auszuführende Textbefehl. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Ruft die Zeit (in Sekunden) ab, die gewartet werden soll, bis der Versuch einer Befehlsausführung beendet und ein Fehler generiert wird, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Der zugewiesene Eigenschaftswert ist kleiner als 0.</exception>
      <returns>Die Zeit (in Sekunden), die auf die Ausführung des Befehls gewartet wird. Der Standardwert ist 30 Sekunden.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Gibt an bzw. legt fest, wie die <see cref="P:System.Data.IDbCommand.CommandText" />-Eigenschaft interpretiert wird.</summary>
      <returns>Einer der <see cref="T:System.Data.CommandType" />-Werte. Der Standardwert ist <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Ruft die <see cref="T:System.Data.IDbConnection" /> ab, die von dieser Instanz des <see cref="T:System.Data.IDbCommand" /> verwendet wird, oder legt diese fest.</summary>
      <returns>Die Verbindung mit der Datenquelle.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Ruft das <see cref="T:System.Data.IDataParameterCollection" /> ab.</summary>
      <returns>Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Ruft die Transaktion ab, in der das <see langword="Command" />-Objekt eines .NET Framework-Datenproviders ausgeführt wird, oder legt diese fest.</summary>
      <returns>Die Transaktion, innerhalb derer das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Ruft ab oder legt fest, wie die Ergebnisse von Befehlen auf <see cref="T:System.Data.DataRow" /> angewendet werden, wenn diese von der <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />-Methode eines <see cref="T:System.Data.Common.DbDataAdapter" /> verwendet werden.</summary>
      <exception cref="T:System.ArgumentException">Der eingegebene Wert war keiner der <see cref="T:System.Data.UpdateRowSource" />-Werte.</exception>
      <returns>Einer der <see cref="T:System.Data.UpdateRowSource" />-Werte. Die Standardeinstellung ist <see langword="Both" />, sofern der Befehl nicht automatisch generiert wird. Dann ist die Standardeinstellung <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Stellt eine offene Verbindung mit einer Datenquelle dar und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Beginnt eine Datenbanktransaktion.</summary>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Beginnt eine Datenbanktransaktion mit dem angegebenen <see cref="T:System.Data.IsolationLevel" />-Wert.</summary>
      <param name="il">Einer der <see cref="T:System.Data.IsolationLevel" />-Werte.</param>
      <returns>Ein Objekt, das die neue Transaktion darstellt.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Ändert die aktuelle Datenbank für ein offenes <see langword="Connection" />-Objekt.</summary>
      <param name="databaseName">Der Name der Datenbank, die anstelle der aktuellen Datenbank verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Schließt die Verbindung mit der Datenbank.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Erstellt ein Command-Objekt, das der Verbindung zugeordnet ist, und gibt dieses zurück.</summary>
      <returns>Ein Command-Objekt, das der Verbindung zugeordnet ist.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Öffnet eine Datenbankverbindung mit den Einstellungen, die durch die <see langword="ConnectionString" />-Eigenschaft des anbieterspezifischen Verbindungsobjekts angegebenen werden.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Ruft die Zeichenfolge ab, mit der eine Datenbank geöffnet wird, oder legt diese fest.</summary>
      <returns>Eine Zeichenfolge mit Verbindungseinstellungen.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Ruft die Zeit (in Sekunden) ab, die beim Verbindungsaufbau gewartet werden soll, bis der Versuch beendet und ein Fehler generiert wird.</summary>
      <returns>Der Zeitraum in Sekunden, in dem auf das Öffnen einer Verbindung gewartet werden soll. Der Standardwert beträgt 15 Sekunden.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Ruft den Namen der aktuellen Datenbank oder der nach dem Öffnen einer Verbindung zu verwendenden Datenbank ab.</summary>
      <returns>Der Name der aktuellen Datenbank oder der Name der nach dem Öffnen einer Verbindung zu verwendenden Datenbank. Der Standardwert ist eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Ruft den aktuellen Zustand der Verbindung ab.</summary>
      <returns>Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Stellt eine Gruppe von befehlsbezogenen Eigenschaften dar, die zum Auffüllen des <see cref="T:System.Data.DataSet" /> und zum Aktualisieren einer Datenquelle verwendet werden. Die Implementierung erfolgt durch .NET Framework-Datenanbieter, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Ruft eine SQL-Anweisung zum Löschen von Datensätzen aus dem Dataset ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu löschen, die gelöschten Zeilen im DataSet entsprechen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der neue Datensätze in die Datenquelle eingefügt werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in die Datenquelle einzufügen, die neuen Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle ausgewählt werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, der während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze aus der Datenquelle zur Platzierung im Dataset auszuwählen.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Ruft eine SQL-Anweisung ab, mit der Datensätze in der Datenquelle aktualisiert werden, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Data.IDbCommand" />, das während der Ausführung von <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> verwendet wird, um Datensätze in der Datenquelle zu aktualisieren, die geänderten Zeilen im Dataset entsprechen.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Hiermit stellt der Visual Basic .NET-Daten-Designer einen Parameter für ein Command-Objekt dar und optional dessen Zuordnung zu <see cref="T:System.Data.DataSet" />-Spalten.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Gibt die Genauigkeit numerischer Parameter an.</summary>
      <returns>Die maximale Anzahl von Ziffern für die Darstellung der Value-Eigenschaft des Parameter-Objekts eines Datenanbieters. Der Standardwert ist 0 (null) und gibt an, dass ein Datenanbieter die Genauigkeit für „Value“ festlegt.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Gibt die Größe numerischer Parameter an.</summary>
      <returns>Die Anzahl der Dezimalstellen, mit der <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> aufgelöst wird. Die Standardeinstellung ist 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>Die Größe des Parameters.</summary>
      <returns>Die maximale Größe in Byte der Daten in der Spalte. Der Standardwert wird aus dem Parameterwert hergeleitet.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Stellt eine Transaktion dar, die in einer Datenquelle ausgeführt werden soll, und wird von den .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Führt einen Commit der Datenbanktransaktion aus.</summary>
      <exception cref="T:System.Exception">Fehler beim Ausführen eines Commits der Transaktion.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde bereits ein Commit bzw. ein Rollback für die Transaktion ausgeführt.  
  
 - oder -  
  
 Die Verbindung ist unterbrochen.</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Führt einen Rollback für eine Transaktion aus einem ausstehenden Zustand durch.</summary>
      <exception cref="T:System.Exception">Fehler beim Ausführen eines Commits der Transaktion.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde bereits ein Commit bzw. ein Rollback für die Transaktion ausgeführt.  
  
 - oder -  
  
 Die Verbindung ist unterbrochen.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Gibt das mit der Transaktion zu verknüpfende Connection-Objekt an.</summary>
      <returns>Das mit der Transaktion zu verknüpfende Connection-Objekt.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Gibt den <see cref="T:System.Data.IsolationLevel" /> für diese Transaktion an.</summary>
      <returns>Der <see cref="T:System.Data.IsolationLevel" /> für diese Transaktion. Der Standardwert ist <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="M:System.Data.DataRow.EndEdit" />-Methode im <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis aufgerufen wird.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InRowChangingEventException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Stellt die Basisfunktionen für das Erstellen von Auflistungen bereit.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InternalDataCollectionBase" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert alle Elemente der aktuellen <see cref="T:System.Data.InternalDataCollectionBase" /> in ein eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen <see cref="T:System.Data.InternalDataCollectionBase" />-Index.</summary>
      <param name="ar">Das eindimensionale <see cref="T:System.Array" />, in das die Elemente des aktuellen <see cref="T:System.Data.InternalDataCollectionBase" />-Objekts kopiert werden sollen.</param>
      <param name="index">Der Index des Ziel-<see cref="T:System.Array" />, an dem mit dem Kopieren begonnen werden soll.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Ruft einen <see cref="T:System.Collections.IEnumerator" /> für die Auflistung ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für die Auflistung.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Ruft die Gesamtzahl der Elemente in einer Auflistung ab.</summary>
      <returns>Die Gesamtzahl der Elemente in einer Auflistung.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.InternalDataCollectionBase" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.InternalDataCollectionBase" /> synchronisiert ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung synchronisiert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Ruft die Elemente der Auflistung als Liste ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ArrayList" />, die die Auflistung enthält.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem die Auflistung synchronisiert werden kann.</summary>
      <returns>Das <see cref="T:System.Object" />, mit dem die Auflistung synchronisiert wird.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Stellt die Ausnahme dar, die bei einem fehlgeschlagenen Versuch ausgelöst wird, eine Beziehung zu erstellen oder auf eine Beziehung zuzugreifen.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidConstraintException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, einer <see cref="T:System.Data.DataColumn" /> eine <see cref="P:System.Data.DataColumn.Expression" /> hinzuzufügen, die einen ungültigen <see cref="T:System.Data.DataColumnCollection" /> enthält.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.InvalidExpressionException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Gibt das Sperrverhalten für Transaktionen für die Verbindung an.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>Die ausstehenden Änderungen von höher isolierten Transaktionen können nicht überschrieben werden.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>Beim Lesen der Daten werden gemeinsame Sperren verwendet, um das Lesen geänderter Daten zu verhindern. Die Daten können jedoch vor dem Ende der Transaktion geändert werden, was zu nicht wiederholbaren Lesevorgängen oder Phantomdaten führen kann.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Ein Lesen geänderter Daten ist möglich. Das heißt, dass keine gemeinsamen Sperren ausgegeben und keine exklusiven Sperren berücksichtigt werden.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Die Sperren gelten für alle in einer Abfrage verwendeten Daten, damit die Daten nicht durch andere Benutzer aktualisiert werden können. Nicht wiederholbare Lesevorgänge werden dadurch verhindert, es sind jedoch weiterhin Phantomzeilen möglich.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Eine Bereichssperre wird für die <see cref="T:System.Data.DataSet" />-Klasse festgelegt. Dadurch wird verhindert, dass andere Benutzer vor dem Abschluss der Transaktion Zeilen in das Dataset einfügen oder darin aktualisieren.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Reduziert das Blockieren durch Speichern einer Version von Daten, die von einer Anwendung gelesen werden können, während sie von einer anderen Anwendung geändert werden. Gibt an, dass Sie von einer Transaktion aus keine Änderungen sehen können, die in anderen Transaktionen vorgenommen wurden, auch wenn Sie diese erneut abfragen.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Es wird nicht der angegebene Isolationsgrad verwendet, der Grad kann jedoch nicht bestimmt werden.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Ordnet einer Tabelle in einer <see cref="T:System.Data.DataSet" />-Klasse eine Quelltabelle zu und wird von der <see cref="T:System.Data.Common.DataTableMapping" />-Klasse implementiert, die von .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Ruft die abgeleitete <see cref="T:System.Data.Common.DataColumnMappingCollection" />-Klasse für die <see cref="T:System.Data.DataTable" />-Klasse ab.</summary>
      <returns>Eine Sammlung der Datenspaltenzuordnungen.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Ruft den Namen der Tabelle in <see cref="T:System.Data.DataSet" /> ohne Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns>Der Name der Tabelle in <see cref="T:System.Data.DataSet" /> ohne Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Ruft den Namen der Quelltabelle unter Berücksichtigung von Groß- und Kleinschreibung ab oder legt diesen fest.</summary>
      <returns>Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Enthält eine Auflistung von TableMapping-Objekten und wird durch die <see cref="T:System.Data.Common.DataTableMappingCollection" />-Klasse implementiert, die von .NET Framework-Datenanbietern gemeinsam verwendet wird.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Fügt der Auflistung eine Tabellenzuordnung hinzu.</summary>
      <param name="sourceTableName">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <param name="dataSetTableName">Der Name der <see cref="T:System.Data.DataSet" />-Tabelle.</param>
      <returns>Ein Verweis auf das neu zugeordnete <see cref="T:System.Data.ITableMapping" />-Objekt.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine Tabellenzuordnung mit dem angegebenen Quelltabellennamen enthält.</summary>
      <param name="sourceTableName">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>
        <see langword="true" />, wenn eine Tabellenzuordnung mit dem angegebenen Quelltabellennamen vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Ruft das TableMapping-Objekt mit dem angegebenen <see cref="T:System.Data.DataSet" />-Tabellennamen ab.</summary>
      <param name="dataSetTableName">Der Name der <see langword="DataSet" />-Tabelle in der Auflistung.</param>
      <returns>Das TableMapping-Objekt mit dem angegebenen <see langword="DataSet" />-Tabellennamen.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Ruft die Position des <see cref="T:System.Data.ITableMapping" />-Objekts in der Auflistung ab.</summary>
      <param name="sourceTableName">Der Name der Quelltabelle mit Berücksichtigung von Groß- und Kleinschreibung.</param>
      <returns>Die nullbasierte Position des <see cref="T:System.Data.ITableMapping" />-Objekts in der Auflistung.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Entfernt das <see cref="T:System.Data.ITableMapping" />-Objekt mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen aus der Auflistung.</summary>
      <param name="sourceTableName">Der Name der <see langword="SourceTable" /> mit Berücksichtigung von Groß- und Kleinschreibung.</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Ruft die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see cref="P:System.Data.ITableMapping.SourceTable" />-Namen ab oder legt diese fest.</summary>
      <param name="index">Der <see langword="SourceTable" />-Name der <see cref="T:System.Data.ITableMapping" />-Schnittstelle.</param>
      <returns>Die Instanz von <see cref="T:System.Data.ITableMapping" /> mit dem angegebenen <see langword="SourceTable" />-Namen.</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Bezeichnet eine Liste von durch die <see langword="KeyRestrictions" />-Eigenschaft angegebenen Parametern für Verbindungszeichenfolgen, die zulässig oder nicht zulässig sind.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>Standard. Gibt die einzigen zulässigen Zusatzparameter für eine Verbindungszeichenfolge an.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Gibt nicht zulässige Zusatzparameter für eine Verbindungszeichenfolge an.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Steuert das Anwenden von Werten der Datenquelle auf vorhandene Zeilen bei Verwendung der <see cref="Overload:System.Data.DataTable.Load" />-Methode oder der <see cref="Overload:System.Data.DataSet.Load" />-Methode.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Die eingehenden Werte für diese Zeile werden sowohl in den aktuellen Wert als auch in die ursprünglichen Werte der Daten der einzelnen Spalten geschrieben.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Die eingehenden Werte für diese Zeile werden in die ursprünglichen Werte der einzelnen Spalten geschrieben. Die aktuelle Version der Daten in den einzelnen Spalten wird nicht geändert.  Dies ist die Standardoption.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Die eingehenden Werte für diese Zeile werden in die aktuellen Werte der einzelnen Spalten geschrieben. Die ursprüngliche Version der Daten in den einzelnen Spalten wird nicht geändert.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Gibt an, wie eine <see cref="T:System.Data.DataColumn" /> zugeordnet wird.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>Die Spalte wird einem XML-Attribut zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>Die Spalte wird einem XML-Element zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>Die Spalte wird einer internen Struktur zugeordnet.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>Die Spalte wird einem <see cref="T:System.Xml.XmlText" />-Knoten zugeordnet.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Tritt ein, wenn eine Ziel- und eine Quell-<see langword="DataRow" /> denselben Primärschlüsselwert aufweisen und die <see cref="P:System.Data.DataSet.EnforceConstraints" />-Eigenschaft auf True festgelegt ist.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Data.MergeFailedEventArgs" />-Klasse mit der <see cref="T:System.Data.DataTable" /> und einer Beschreibung des Mergekonflikts.</summary>
      <param name="table">Das <see cref="T:System.Data.DataTable" />-Objekt.</param>
      <param name="conflict">Eine Beschreibung des Mergekonflikts.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Gibt eine Beschreibung des Mergekonflikts zurück.</summary>
      <returns>Eine Beschreibung des Mergekonflikts.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Gibt das <see cref="T:System.Data.DataTable" />-Objekt zurück.</summary>
      <returns>Das <see cref="T:System.Data.DataTable" />-Objekt.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Data.DataSet.MergeFailed" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Daten für das Ereignis.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Bestimmt die Aktion, die ausgeführt wird, wenn für eine Quelltabelle oder eine Quellspalte eine Zuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme wird ausgelöst, wenn die angegebene Spaltenzuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>Die Spalte bzw. Tabelle ohne Zuordnung wird ignoriert. Gibt <see langword="null" />zurück.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>Die Quellspalte bzw. Quelltabelle wird erstellt und mit ihrem ursprünglichen Namen der <see cref="T:System.Data.DataSet" />-Klasse hinzugefügt.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, auf eine Zeile in einer Tabelle ohne Primärschlüssel zuzugreifen.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Eine Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.MissingPrimaryKeyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Gibt an, welche Aktion ausgeführt werden soll, wenn der <see cref="T:System.Data.DataSet" />-Klasse Daten hinzugefügt werden und die erforderliche <see cref="T:System.Data.DataTable" />-Klasse bzw. <see cref="T:System.Data.DataColumn" />-Klasse nicht vorhanden ist.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Fügt die erforderlichen Spalten zum Vervollständigen des Schemas hinzu.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Fügt die erforderlichen Spalten und Primärschlüsselinformationen zum Vervollständigen des Schemas hinzu. Weitere Informationen über das Hinzufügen von Primärschlüsselinformationen zu einer <see cref="T:System.Data.DataTable" /> finden Sie unter <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Damit eine ordnungsgemäße Funktionsweise mit dem .NET Framework-Datenanbieter für OLE DB gewährleistet wird, ist es für <see langword="AddWithKey" /> erforderlich, dass der systemeigene OLE DB-Anbieter die benötigten Primärschlüsselinformationen durch Festlegen der DBPROP_UNIQUEROWS-Eigenschaft abruft. Anschließend muss durch Überprüfen von DBCOLUMN_KEYCOLUMN in IColumnsRowset bestimmt werden, bei welchen Spalten es sich um Primärschlüsselspalten handelt. Der Benutzer kann aber auch explizit die Primärschlüsseleinschränkungen für jedes <see cref="T:System.Data.DataTable" />-Objekt festlegen. Dadurch wird sichergestellt, dass eingehende, vorhandenen Datensätzen entsprechende Datensätze nicht angefügt, sondern aktualisiert werden. Bei der Verwendung von <see langword="AddWithKey" /> fügt der .NET Framework-Datenanbieter für SQL Server eine FOR BROWSE-Klausel an die ausgeführte Anweisung an. Der Benutzer muss mögliche Nebeneffekte beachten, z. B. Beeinträchtigungen bei der Verwendung von SET FMTONLY ON-Anweisungen. Weitere Informationen finden Sie unter SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Eine <see cref="T:System.InvalidOperationException" />-Ausnahme wird ausgelöst, wenn die angegebene Spaltenzuordnung fehlt.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Ignoriert die zusätzlichen Spalten.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, einen NULL-Wert in eine Spalte einzufügen, bei der <see cref="P:System.Data.DataColumn.AllowDBNull" /> auf <see langword="false" /> festgelegt wurde.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.NoNullAllowedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>Stellt eine Sammlung von sortierten <see cref="T:System.Data.DataRow" /> Objekten dar, die von einer Abfrage zurückgegeben werden.</summary>
      <typeparam name="TRow">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Gibt den Typ eines Parameters in einer Abfrage relativ zum <see cref="T:System.Data.DataSet" /> an.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>Der Parameter ist ein Eingabeparameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>Der Parameter unterstützt sowohl Eingabe als auch Ausgabe.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>Der Parameter ist ein Ausgabeparameter.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>Der Parameter steht für einen Eingabewert aus einem Vorgang, wie z. B. einer gespeicherten Prozedur, einer integrierten Funktion oder einer benutzerdefinierten Funktion.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Stellt eine Auflistung von Eigenschaften dar, die <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> oder <see cref="T:System.Data.DataTable" /> hinzugefügt werden können.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.PropertyCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.PropertyCollection" />-Klasse.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Erstellt eine flache Kopie des <see cref="T:System.Data.PropertyCollection" />-Objekts.</summary>
      <returns>Gibt <see cref="T:System.Object" /> zurück eine flache Kopie <see cref="T:System.Data.PropertyCollection" />-Objekts zurück.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, den Wert einer schreibgeschützten Spalte zu ändern.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.ReadOnlyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Stellt die Ausnahme dar, die beim Versuch ausgelöst wird, eine Operation für eine <see cref="T:System.Data.DataRow" /> auszuführen, die sich nicht in einer <see cref="T:System.Data.DataTable" /> befindet.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.RowNotInTableException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Gibt die Aktion an, die beim Erzwingen einer <see cref="T:System.Data.ForeignKeyConstraint" /> ausgeführt wird.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Verknüpfte Zeilen werden gelöscht oder aktualisiert. Dies ist die Standardoption.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>Es wird keine Aktion für verknüpfte Zeilen ausgeführt.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Festlegen der Werte in verknüpften Zeilen auf den Wert in der <see cref="P:System.Data.DataColumn.DefaultValue" />-Eigenschaft.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Festlegen der Werte in verknüpften Zeilen auf <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Gibt den Schemaserialisierungsmodus für ein typisiertes <see cref="T:System.Data.DataSet" /> an.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Überspringt die Schemaserialisierung für ein typisiertes <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Schließt die Schemaserialisierung für ein typisiertes <see cref="T:System.Data.DataSet" /> ein. Der Standardwert.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Gibt an, wie vorhandene Schemazuordnungen beim Durchführen einer <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />-Operation behandelt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Anwenden aller vorhandenen Tabellenzuordnungen auf das eingehende Schema. Konfigurieren des <see cref="T:System.Data.DataSet" /> mit dem transformierten Schema.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Ignorieren sämtlicher Tabellenzuordnungen für den DataAdapter. Konfigurieren des <see cref="T:System.Data.DataSet" /> mit dem eingehenden Schema ohne Anwendung von Transformationen.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Bestimmt das Serialisierungsformat für ein <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Als binären Inhalt serialisieren. Nur in ADO.NET 2.0 verfügbar.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Als XML-Inhalt serialisieren. Der Standardwert.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Gibt den SQL Server-Datentyp eines Felds oder einer Eigenschaft zur Verwendung in einem <see cref="T:System.Data.SqlClient.SqlParameter" /> an.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" /> Eine 64-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream fester Länge mit Binärdaten in einem Bereich zwischen 1 und 8.000 Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" /> Ein numerischer Wert ohne Vorzeichen, der 0 (null), 1 oder <see langword="null" /> sein kann.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" /> Ein Stream fester Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8.000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Datumsdaten mit einem Wert zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" /> Daten zu Datum und Uhrzeit, deren Wert zwischen dem 1. Januar 1753 und dem 31. Dezember 9999 liegt, mit einer Genauigkeit von 3,33 Millisekunden.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Datums- und Uhrzeitdaten. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Datums- und Zeitdaten mit Unterstützung von Zeitzonen. Der Bereich für Datumswerte liegt zwischen dem 1. Januar 1 n. Chr. und dem 31. Dezember 9999 n. Chr. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Der Wertbereich für Zeitzonen liegt zwischen -14: 00 und +14: 00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" /> Ein numerischer Wert mit fester Genauigkeit und Dezimalstellen zwischen –10 38 –1 und 10 38 –1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" /> Eine Gleitkommazahl im Bereich von -1,79E+308 bis 1,79E+308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream variabler Länge mit Binärdaten im Bereich von 0 (null) bis 2 31 –1 (oder 2.147.483.647) Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" /> Eine 32-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" /> Ein Währungswert im Bereich von –2 63 (oder –9.223.372.036.854.775.808) bis 2 63 –1 (oder +9.223.372.036.854.775.807) mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" /> Ein Stream fester Länge von Unicode-Zeichen im Bereich zwischen 1 und 4.000 Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" /> Ein Stream variabler Länge mit Unicode-Daten mit einer maximalen Länge von 2 30 –1 (oder 1.073.741.823) Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" /> Ein Stream variabler Länge von Unicode-Zeichen im Bereich zwischen 1 und 4.000 Zeichen. Die implizite Konvertierung schlägt fehl, wenn die Zeichenfolge mehr als 4000 Zeichen enthält. Legen Sie das Objekt explizit fest, wenn Sie Zeichenfolgen mit einer Länge von mehr als 4000 Zeichen verwenden. Verwenden Sie <see cref="F:System.Data.SqlDbType.NVarChar" />, wenn die Datenbankspalte <see langword="nvarchar(max)" /> ist.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" /> Eine Gleitkommazahl im Bereich von -3,40E+38 bis 3,40E+38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" /> Daten zu Datum und Uhrzeit mit einem Wert im Bereich vom 1. Januar 1900 bis 6. Juni 2079 mit einer Genauigkeit von einer Minute.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" /> Eine 16-Bit-Ganzzahl mit Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" /> Ein Währungswert im Bereich von -214.748,3648 bis +214.748,3647 mit einer Genauigkeit von einem Zehntausendstel einer Währungseinheit.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Ein besonderer Datentyp zum Angeben von strukturierten Daten in Tabellenwertparametern.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" /> Ein Stream variabler Länge mit Nicht-Unicode-Daten mit einer maximalen Länge von 2 31 –1 (oder 2.147.483.647) Zeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Zeitdaten auf Grundlage des 24-Stunden-Formats. Der Bereich für den Zeitwert liegt zwischen 00:00:00 und 23:59:59.9999999 mit einer Genauigkeit von 100 Nanosekunden. Entspricht einem SQL Server-<see langword="time" />-Wert.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Automatisch generierte binäre Zahlen, die innerhalb einer Datenbank garantiert eindeutig sind. <see langword="timestamp" /> wird normalerweise zum Hinzufügen eines Versionsstempels zu Tabellenzeilen verwendet. Die Größe des Speichers beträgt 8 Bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" /> Eine 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Ein benutzerdefinierter SQL Server-Typ (UDT)</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" /> Eine GUID (Globally Unique Identifier, globaler eindeutiger Bezeichner).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>Eine <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />. Ein Stream variabler Länge mit Binärdaten in einem Bereich zwischen 1 und 8000 Bytes. Die implizite Konvertierung schlägt fehl, wenn das Bytearray mehr als 8000 Bytes enthält. Legen Sie das Objekt explizit fest, wenn Sie Bytearrays verwenden, die größer als 8000 Bytes sind.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" /> Ein Stream variabler Länge von Nicht-Unicode-Zeichen in einem Bereich zwischen 1 und 8000 Zeichen. Verwenden Sie <see cref="F:System.Data.SqlDbType.VarChar" />, wenn die Datenbankspalte <see langword="varchar(max)" /> ist.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" /> Ein spezieller Datentyp, der numerische Daten, Zeichenfolgendaten, binäre Daten oder Datumsdaten sowie die SQL Server-Werte Empty und NULL enthalten kann. Dieser wird angenommen, wenn kein anderer Typ deklariert wird.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Ein XML-Wert. Rufen Sie den XML-Wert als Zeichenfolge ab, und verwenden Sie dazu die <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />-Methode oder die <see cref="P:System.Data.SqlTypes.SqlXml.Value" />-Eigenschaft. Sie können den Wert auch als <see cref="T:System.Xml.XmlReader" /> abrufen, indem Sie die <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />-Methode aufrufen.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Alle <see cref="N:System.Data.SqlTypes" />-Objekte und -Strukturen implementieren die <see langword="INullable" />-Schnittstelle.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Gibt an, ob eine Struktur NULL ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />, wenn der Wert dieses Objekts NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>Die <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als Klasse, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />-Klasse.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="e">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Stellt einen binären Datenstream variabler Länge dar, der in einer Datenbank gespeichert oder aus dieser abgerufen wird.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und legt die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft auf den Inhalt des bereitgestellten Bytearrays fest.</summary>
      <param name="value">Das zu speichernde oder abzurufende Bytearray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlBinary" />-Werte, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />, der der verkettete Wert von x und y ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt mit dem bereitgestellten <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Das mit dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu vergleichende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist mit dem Objekt identisch.</description></item><item><term> Größer als 0 (null)</term><description> Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" /> Objekt ist größer als das-Objekt, oder das-Objekt ist ein NULL-Verweis.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt mit dem bereitgestellten Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Das mit dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu vergleichende Objekt.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt ist mit dem Objekt identisch.</description></item><item><term> Größer als 0 (null)</term><description> Dieses <see cref="T:System.Data.SqlTypes.SqlBinary" /> Objekt ist größer als das-Objekt, oder das-Objekt ist ein NULL-Verweis.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Verkettet zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Die verketteten Werte des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlBinary" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Verkettet die beiden <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameter, um eine neue <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur zu erstellen.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Die verketteten Werte des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur in ein <see cref="T:System.Byte" />-Array.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Byte" />-Array.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Konvertiert ein Bytearray in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="x">Das zu konvertierende Bytearray.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur, die das konvertierte Bytearray darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchema" />-Instanz.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlBinary" /> in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Konvertiert dieses <see cref="T:System.Data.SqlTypes.SqlBinary" />-Objekt in eine Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge mit dem <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBinary" />. Wenn der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> NULL ist, enthält die Zeichenfolge "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur NULL ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>
        <see langword="true" /> wenn <see langword="null" />; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Ruft aus der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft das einzelne Byte ab, das sich an der durch den Ganzzahlparameter <paramref name="index" /> angegebenen Position befindet. Wenn <paramref name="index" /> eine Position hinter dem Ende des Bytearrays angibt, wird eine <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> ausgelöst. Diese Eigenschaft ist schreibgeschützt.</summary>
      <param name="index">Die Position des abzurufenden Bytes.</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Eigenschaft wird gelesen, wenn die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.  
  
- oder - 
Der <paramref name="index" />-Parameter gibt eine Position an, die sich außerhalb der durch die <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />-Eigenschaft angegebenen Länge des Bytearrays befindet.</exception>
      <returns>Das Byte, das sich an der durch den ganzzahligen Parameter angegebenen Position befindet.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Ruft die Länge der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft in Bytes ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />-Eigenschaft wird gelesen, wenn die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.</exception>
      <returns>Die Länge der Binärdaten in der <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />-Eigenschaft wird gelesen, wenn die Eigenschaft <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> enthält.</exception>
      <returns>Der Wert der <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Stellt einen Ganzzahlwert von entweder 1 oder 0 dar, der in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Stellt einen false-Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Stellt einen Wert von 1 dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Stellt einen true-Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur unter Verwendung des angegebenen booleschen Werts.</summary>
      <param name="value">Der Wert für die neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur; entweder <see langword="true" /> oder <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur unter Verwendung des angegebenen Ganzzahl.</summary>
      <param name="value">Die ganze Zahl, deren Wert für die neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Berechnet das bitweise AND von zwei angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Ergebnis der logischen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt mit dem bereitgestellten <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Ein zu vergleichendes <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert der Instanz und dem Wert angibt.  
  
 <list type="table"><listheader><term> Wert</term><description> BESCHREIBUNG</description></listheader><item><term> Eine negative ganze Zahl</term><description> Diese Instanz ist kleiner als <paramref name="value" />.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich <paramref name="value" />.</description></item><item><term> Eine positive ganze Zahl</term><description> Diese Instanz ist größer als <paramref name="value" /> , oder <paramref name="value" /> ist ein NULL-Verweis ( <see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Ein zu vergleichendes Objekt oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert der Instanz und dem Wert angibt.  
  
 <list type="table"><listheader><term> Wert</term><description> BESCHREIBUNG</description></listheader><item><term> Eine negative ganze Zahl</term><description> Diese Instanz ist kleiner als <paramref name="value" />.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich <paramref name="value" />.</description></item><item><term> Eine positive ganze Zahl</term><description> Diese Instanz ist größer als <paramref name="value" /> , oder <paramref name="value" /> ist ein NULL-Verweis ( <see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> ist und beide gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner oder gleich der zweiten ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Prüft zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Gleichheit.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen nicht gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine Einerkomplementoperation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Einerkomplement des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Berechnet das bitweise AND von zwei angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Ergebnis der logischen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Berechnet das bitweise OR der Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Die Ergebnisse der logischen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Prüft zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Gleichheit.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine bitweise exklusive OR-(XOR-)Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Ergebnis der logischen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Konvertiert einen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in einen booleschen Wert.</summary>
      <param name="x">Ein zu konvertierendes <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Ein boolescher Wert, der auf den <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> festgelegt ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlDouble" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlSingle" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />, das in eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur konvertiert werden soll.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>Mit dem Operator False kann der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> getestet werden, um zu bestimmen, ob dieser false ist.</summary>
      <param name="x">Die zu testende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Parameter <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="false" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Objekt.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer als die zweite ist, andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Konvertiert den angegebenen Bytewert in einen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Ein Bytewert, der in <see cref="T:System.Data.SqlTypes.SqlBoolean" /> konvertiert werden soll.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Wert, der 0 (null) oder 1 enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> auf Ungleichheit.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die beiden Instanzen nicht gleich sind, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner als die zweite ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlBoolean" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn die erste Instanz kleiner oder gleich der zweiten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine NOT-Operation für einen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> aus.</summary>
      <param name="x">Der <see cref="T:System.Data.SqlTypes.SqlBoolean" />, für den die NOT-Operation ausgeführt wird.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" /> mit dem <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />, wenn das Argument true war, oder <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, wenn das Argument NULL war; andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine Einerkomplementoperation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Einerkomplement des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>Mit dem Operator True kann der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> getestet werden, um zu bestimmen, ob dieser true ist.</summary>
      <param name="x">Die zu testende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Parameter <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see langword="true" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine bitweise OR-Operation für die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Strukturen durch.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur, deren Wert das Ergebnis der bitweisen OR-Operation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Konvertiert die angegebene <see cref="T:System.String" />-Darstellung eines logischen Werts in seine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Entsprechung.</summary>
      <param name="s">Der zu konvertierende <see cref="T:System.String" />.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur mit dem analysierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Eine neue <see langword="SqlInt16" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt16" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Eine neue <see langword="SqlInt32" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt32" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine neue <see langword="SqlInt64" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur gleich 1. Andernfalls ist der Wert der neuen <see langword="SqlInt64" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, ist der neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Wert 1. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="false" /> ist, ist der neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Wert 0. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur weder 1 noch 0 ist, ist der neue Wert von <see cref="T:System.Data.SqlTypes.SqlMoney" /><see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren Wert 1 oder 0 ist.  
  
Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur True ist, ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur 1, andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert 1 oder 0 ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur gleich <see langword="true" /> ist, dann ist der Wert der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur 1. Andernfalls ist der Wert der neuen <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in eine Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge mit dem Wert von <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Wenn der Wert NULL ist, enthält die Zeichenfolge "null".</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Das Ergebnis der logischen XOR-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur als Byte ab.</summary>
      <returns>Ein Byte, das den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Gibt an, ob der aktuelle <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist.</summary>
      <returns>
        <see langword="true" />, wenn <see langword="Value" /> gleich <see langword="False" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" /> , wenn die- <see cref="T:System.Data.SqlTypes.SqlBoolean" /> Struktur NULL ist, <see langword="false" /> andernfalls.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist.</summary>
      <returns>
        <see langword="true" />, wenn <see langword="Value" /> gleich <see langword="true" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Eigenschaft ist auf NULL festgelegt.</exception>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Stellt eine 8-Bit-Ganzzahl ohne Vorzeichen im Bereich zwischen 0 und 255 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlByte" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlByte" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur unter Verwendung des angegebenen Byte.</summary>
      <param name="value">Ein Bytewert, der in der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gespeichert werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" />-Eigenschaft das Ergebnis der Addition enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht diese Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekt und gibt eine Angabe über das Verhältnis der Werte zurück.</summary>
      <param name="value">Das zu vergleichende <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekt.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Vergleicht diese Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlByte" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Vergleicht den angegebenen <see cref="T:System.Object" />-Parameter mit der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Objekts.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" /> auf Ungleichheit.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Der Einerkomplementoperator führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, dessen <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Summe der beiden Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlByte" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter, der in ein <see cref="T:System.Data.SqlTypes.SqlByte" /> konvertiert werden soll.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, dessen <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein Byte.</summary>
      <param name="x">Die <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, die in ein Byte konvertiert werden soll.</param>
      <returns>Ein Byte, dessen Wert gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see langword="SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see langword="SqlMoney" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" /> in ein <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Eine Instanz der <see langword="SqlString" />-Klasse.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem vom <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellten numerischen Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see langword="SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Konvertiert den angegebenen Bytewert in einen <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Ein Bytewert, der in <see cref="T:System.Data.SqlTypes.SqlByte" /> konvertiert werden soll.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft gleich dem angegebenen Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" /> auf Ungleichheit.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlByte" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>Der Einerkomplementoperator führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft das Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Das Ergebnis der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 8-Bit-Ganzzahl ohne Vorzeichen.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur mit der 8-Bit-Zahl, die durch den <see langword="String" />-Parameter dargestellt wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Das Ergebnis der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden vom ersten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Eine <see langword="SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Eine <see langword="SqlDouble" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Eine <see langword="SqlInt16" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Konvertiert dieses <see cref="T:System.Data.SqlTypes.SqlByte" /> in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Eine <see langword="SqlInt32" />-Struktur mit demselben Wert wie dieses <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine <see langword="SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlByte" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine <see langword="SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine <see langword="SqlSingle" />-Struktur mit demselben <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> wie diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlByte" /> in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Ein <see langword="SqlString" />, der die Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlByte" /> der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns>Eine Zeichenfolge mit dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" />. Wenn der <see langword="Value" /> NULL ist, ist der <see langword="String" /> eine NULL-Zeichenfolge.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Die Ergebnisse der XOR-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Der Wert der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Stellt einen veränderlichen Referenztyp dar, der entweder einen <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> oder einen <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" /> umschließt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Initialisiert anhand des angegebenen Bytearrays eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse.</summary>
      <param name="buffer">Das Array der Bytes ohne Vorzeichen.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse auf Grundlage des angegebenen <see cref="T:System.Data.SqlTypes.SqlBinary" />-Werts.</summary>
      <param name="value">Ein <see cref="T:System.Data.SqlTypes.SqlBinary" />-Wert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Klasse auf Grundlage des angegebenen <see cref="T:System.IO.Stream" />-Werts.</summary>
      <param name="s">Ein <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />, der die XSD des angegebenen <see langword="XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBytes" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlBinary" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Kopiert Bytes aus dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz in den übergebenen Puffer und gibt die Anzahl kopierter Bytes zurück.</summary>
      <param name="offset">Ein <see cref="T:System.Int64" />-long-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</param>
      <param name="buffer">Der Bytearraypuffer, in den kopiert werden soll.</param>
      <param name="offsetInBuffer">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Bytes darstellt.</param>
      <returns>Ein <see cref="T:System.Int64" />-long-Wert, der die Anzahl der kopierten Bytes darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Legt die Länge dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz fest.</summary>
      <param name="value">Der <see cref="T:System.Int64" />-long-Wert, der die Länge darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Legt diese <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz auf NULL fest.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Instanziieren dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz benötigt werden.</summary>
      <param name="info">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context">Der Zielkontext der Serialisierung.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Erstellt eine <see cref="T:System.Data.SqlTypes.SqlBinary" /> von dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz oder gibt diese zurück.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBinary" /> von dieser Instanz.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Kopiert Bytes aus dem übergebenen Puffer in diese <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz.</summary>
      <param name="offset">Ein <see cref="T:System.Int64" />-long-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</param>
      <param name="buffer">Der Bytearraypuffer, in den kopiert werden soll.</param>
      <param name="offsetInBuffer">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Bytes darstellt.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Gibt einen Verweis auf den internen Puffer zurück.</summary>
      <returns>Ein Verweis auf den internen Puffer. Für <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanzen, die auf nicht verwalteten Zeigern erstellt wurden, wird eine verwaltete Kopie des internen Puffers zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlBytes" /> NULL, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Ruft die <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz am angegebenen Index ab oder legt diese fest.</summary>
      <param name="offset">Ein <see cref="T:System.Int64" />-Wert.</param>
      <returns>Ein <see cref="T:System.Byte" />-Wert.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Ruft die Länge des Werts ab, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Länge des Werts darstellt, der in der <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz enthalten ist.  
  
Gibt -1 zurück, wenn der Instanz kein Puffer zur Verfügung steht oder wenn der Wert NULL ist.  
  
Gibt eine <see cref="P:System.IO.Stream.Length" /> für eine mit dem Stream umschlossene Instanz zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Ruft die maximale Länge des Werts des internen Puffers dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> ab.</summary>
      <returns>Ein long-Wert, der die maximale Länge des Werts des internen Puffers darstellt. Gibt -1 für ein mit dem Stream umschlossenes <see cref="T:System.Data.SqlTypes.SqlBytes" /> zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Ruft eine NULL-Instanz dieses <see cref="T:System.Data.SqlTypes.SqlBytes" />-Objekts ab.</summary>
      <returns>Eine-Instanz, deren- <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> Eigenschaft zurückgibt <see langword="true" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Gibt Informationen über den Speicherzustand dieser <see cref="T:System.Data.SqlTypes.SqlBytes" />-Instanz zurück.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Ruft die Daten dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> als Stream ab oder legt diese als solchen fest.</summary>
      <returns>Der Stream, der die SqlBytes-Daten enthält.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Gibt eine verwaltete Kopie des Werts, der in diesem <see cref="T:System.Data.SqlTypes.SqlBytes" /> enthalten ist, zurück.</summary>
      <returns>Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlBytes" /> als Bytearray.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> ist ein veränderlicher Referenztyp, der ein <see cref="T:System.Char" />-Array oder eine <see cref="T:System.Data.SqlTypes.SqlString" />-Instanz umschließt.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Initialisiert anhand des angegebenen Zeichenarrays eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse.</summary>
      <param name="buffer">Ein <see cref="T:System.Char" />-Array.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlChars" />-Klasse auf Grundlage des angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Werts.</summary>
      <param name="value">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlChars" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Kopiert Zeichen aus dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz in den übergebenen Puffer und gibt die Anzahl kopierter Zeichen zurück.</summary>
      <param name="offset">Ein <see cref="T:System.Int64" />-<see langword="long" />-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</param>
      <param name="buffer">Der Zeichenarraypuffer, in den hineinkopiert werden soll.</param>
      <param name="offsetInBuffer">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count">Ein <see cref="T:System.Int32" />-Ganzzahlwert, der die Anzahl der zu kopierenden Zeichen darstellt.</param>
      <returns>Ein <see cref="T:System.Int64" />-<see langword="long" />-Wert, der die Anzahl der kopierten Bytes darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Legt die Länge dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz fest.</summary>
      <param name="value">Der <see cref="T:System.Int64" />-<see langword="long" />-Wert, der die Länge darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Legt diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz auf NULL fest.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Instanziieren dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz benötigt werden.</summary>
      <param name="info">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</param>
      <param name="context">Der Zielkontext der Serialisierung.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz in ihre entsprechende <see cref="T:System.Data.SqlTypes.SqlString" />-Darstellung.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Darstellung für diese Typ.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Kopiert Zeichen aus dem übergebenen Puffer in diese <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz.</summary>
      <param name="offset">Ein <see langword="long" />-Wertoffset in den Wert, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</param>
      <param name="buffer">Der Zeichenarraypuffer, in den hineinkopiert werden soll.</param>
      <param name="offsetInBuffer">Ein <see cref="T:System.Int32" />-Ganzzahloffset in den Puffer, in den das Kopieren gestartet werden soll.</param>
      <param name="count">Eine <see cref="T:System.Int32" />-Ganzzahl, die die Anzahl der zu kopierenden Zeichen darstellt.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Gibt einen Verweis auf den internen Puffer zurück.</summary>
      <returns>Ein Verweis auf den internen Puffer. Für <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanzen, die auf nicht verwalteten Zeigern erstellt wurden, wird eine verwaltete Kopie des internen Puffers zurückgegeben.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Data.SqlTypes.SqlChars" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Ruft die <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz am angegebenen Index ab oder legt diese fest.</summary>
      <param name="offset">Ein <see cref="T:System.Int64" />-Wert.</param>
      <returns>Ein <see cref="T:System.Char" />-Wert.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Ruft die Länge des Werts ab, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Länge des Werts in Zeichen angibt, der in der <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz enthalten ist.  
  
Gibt -1 zurück, wenn kein Puffer der Instanz zur Verfügung steht, oder wenn der Wert NULL ist.  
  
Gibt eine <see cref="P:System.IO.Stream.Length" /> für eine mit dem Stream umschlossene Instanz zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Ruft die maximale Länge des Werts in 2-Byte-Zeichen ab, die der interne Puffer speichern kann.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der in 2-Byte-Zeichen die maximale Länge des Werts des internen Puffers darstellt.  
  
Gibt -1 für ein mit dem Stream umschlossenes <see cref="T:System.Data.SqlTypes.SqlChars" /> zurück.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Gibt eine NULL-Instanz dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> zurück.</summary>
      <returns>Eine-Instanz, deren- <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> Eigenschaft zurückgibt <see langword="true" /> . Weitere Informationen finden Sie unter Behandeln von NULL-Werten.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Gibt Informationen über den Speicherzustand dieser <see cref="T:System.Data.SqlTypes.SqlChars" />-Instanz zurück.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Gibt eine verwaltete Kopie des Werts, der in diesem <see cref="T:System.Data.SqlTypes.SqlChars" /> enthalten ist, zurück.</summary>
      <returns>Der Wert dieses <see cref="T:System.Data.SqlTypes.SqlChars" /> als Zeichenarray.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Gibt die Werte für Vergleichsoptionen einer <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Führt eine binäre Sortierung aus.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Groß- und Kleinschreibung nicht beachtet werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen der Kana-Typ ignoriert werden soll. Der Kana-Zeichentyp bezieht sich auf die japanischen Hiragana- und Katakana-Schriftzeichen, die im Japanischen phonetische Laute darstellen. Hiragana wird für japanische Ausdrücke und Wörter verwendet, während Katakana für Lehnwörter aus anderen Sprachen, z. B. "Computer" oder "Internet", verwendet wird. Ein phonetischer Laut kann sowohl in Hiragana als auch in Katakana dargestellt werden. Wenn dieser Wert ausgewählt ist, wird das Hiragana-Zeichen für einen Laut als gleichwertig mit dem Katakana-Zeichen für denselben Laut betrachtet.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen Kombinationszeichen ohne horizontalen Vorschub, z. B. diakritische Zeichen, ignoriert werden. Der Unicode-Standard definiert Kombinationszeichen als solche, die mit Basiszeichen kombiniert werden, um ein neues Zeichen zu bilden. Kombinationszeichen ohne horizontalen Vorschub nehmen beim Rendering keinen eigenständigen Platz ein. Weitere Informationen über Kombinationszeichen ohne horizontalen Vorschub finden Sie im Unicode-Standard unter https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Zeichenbreite ignoriert werden soll. Japanische Katakana-Zeichen können z. B. in voller oder halber Breite geschrieben werden. Wenn dieser Wert ausgewählt ist, werden die in voller Breite geschriebenen Katakana-Zeichen als denselben in halber Breite geschriebenen Zeichen gleichwertig betrachtet.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Gibt die Standardeinstellungen der Optionen für <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleiche an.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Stellt die Daten für Datum und Uhrzeit mit einem Wert im Bereich zwischen dem 1. Januar 1753 und dem 31. Dezember 9999 mit einer Genauigkeit von 3,33 Millisekunden dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden sollen. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> besitzt eine andere zugrunde liegende Datenstruktur als der entsprechende .NET Framework-Typ <see cref="T:System.DateTime" />, der jede Zeit zwischen dem 01.01.0001 12:00:00 Uhr und dem 31.12.9999 23:59:59 Uhr mit einer Genauigkeit von 100 Nanosekunden darstellen kann. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> speichert den relativen Unterschied zum 01.01.1900 um 00.00.00 Uhr. Deshalb gibt eine Konvertierung von "00.00.00 Uhr am 01.01.1900" in eine ganze Zahl den Wert 0 (null) zurück.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Stellt den größten gültigen Datumswert für eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur dar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Stellt den kleinsten gültigen Datumswert für eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur dar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Eine Konstante, deren Wert die einer Stunde entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Eine Konstante, deren Wert die einer Minute entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Eine Konstante, deren Wert die einer Sekunde entsprechende Anzahl von Ticks ist.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung des angegebenen <see cref="T:System.DateTime" />-Werts.</summary>
      <param name="value">Eine <see langword="DateTime" />-Struktur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="dayTicks">Ein Ganzzahlwert, der das Datum als Ticks darstellt.</param>
      <param name="timeTicks">Ein Ganzzahlwert, der die Uhrzeit als Ticks darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat und den Tag zu initialisieren.</summary>
      <param name="year">Eine ganze Zahl, die das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day">Ein Ganzzahlwert, der die Tagesnummer der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute und die Sekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day">Ein Ganzzahlwert, der den Tag des Monats der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute, die Sekunde und die Millisekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day">Ein Ganzzahlwert, der den Tag des Monats der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="millisecond">Ein Double-Wert, der die Millisekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur unter Verwendung der angegebenen Parameter, um das Jahr, den Monat, den Tag, die Stunde, die Minute, die Sekunde und die Mikrosekunde der neuen Struktur zu initialisieren.</summary>
      <param name="year">Ein Ganzzahlwert, der das Jahr der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="month">Ein Ganzzahlwert, der den Monat der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="day">Ein Ganzzahlwert, der den Tag der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="hour">Ein Ganzzahlwert, der die Stunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="minute">Ein Ganzzahlwert, der die Minute der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="second">Ein Ganzzahlwert, der die Sekunde der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
      <param name="bilisecond">Ein Ganzzahlwert, der die Mikrosekunde (Tausendstel einer Millisekunde) der neuen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Fügt dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" /> eine <see langword="TimeSpan" /> hinzu.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</param>
      <param name="t">Ein <see langword="Timespan" />-Wert.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur mit der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Zero</term><description> Diese Instanz entspricht <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
- oder - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Ruft den Hashcode für diese Instanz ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Fügt der angegebenen <see cref="T:System.TimeSpan" />-Struktur die durch den angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameter angegebene Zeit <paramref name="t" /> hinzu.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="t">Eine <see cref="T:System.TimeSpan" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Wenn ein Argument <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> ist, ist der neue <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur in eine <see cref="T:System.DateTime" />-Struktur.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.DateTime" />-Objekt, dessen <see cref="P:System.DateTime.Date" />-Eigenschaft und <see cref="P:System.DateTime.TimeOfDay" />-Eigenschaften dieselben Werte für Datum und Uhrzeit wie die <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur enthalten.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich dem Datum und der Uhrzeit ist, die durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellt werden. Wenn der <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see langword="Value" /> der neu erstellten <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Konvertiert eine <see cref="T:System.DateTime" />-Struktur in eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</summary>
      <param name="value">Eine <see langword="DateTime" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> gleich der Kombination der <see cref="P:System.DateTime.Date" />-Eigenschaft und der <see cref="P:System.DateTime.TimeOfDay" />-Eigenschaft der angegebenen <see cref="T:System.DateTime" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDateTime" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDateTime" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Subtrahiert die angegebene <see cref="T:System.TimeSpan" />-Struktur <paramref name="t" /> von der angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <param name="t">Eine <see cref="T:System.TimeSpan" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, die die Ergebnisse der Subtraktion darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Konvertiert die angegebene <see cref="T:System.String" />-Darstellung einer Datums- und Zeitangabe in eine entsprechende <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s">Der zu analysierende <see langword="string" />.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur, die gleich dem Datum und der Uhrzeit ist, die durch den angegebenen <see langword="string" /> dargestellt werden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Subtrahiert die angegebene <see langword="Timespan" /> von dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Instanz.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</param>
      <param name="t">Ein <see langword="Timespan" />-Wert.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine <see langword="SqlString" />-Struktur, deren Wert eine Zeichenfolge ist, die Datum und Uhrzeit aus dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns>Ein <see langword="String" />, der die <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Ruft die Anzahl der Ticks ab, die das Datum dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</exception>
      <returns>Die Anzahl von Ticks, die das in der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur enthaltene Datum darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Ruft die Anzahl der Ticks ab, die die Uhrzeit dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</summary>
      <returns>Die Anzahl der Ticks, die die Uhrzeit dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</exception>
      <returns>Der Wert dieser <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Stellt einen numerischen Wert mit fester Genauigkeit und Dezimalstellen zwischen - 10^38 +1 und 10^38 - 1 dar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Eine Konstante, die den größtmöglichen Wert für die <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />-Eigenschaft darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Eine Konstante, die den Höchstwert für die <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />-Eigenschaft darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Eine Konstante, die den Höchstwert für eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Eine Konstante, die den Mindestwert für eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="bPrecision">Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="bScale">Die Anzahl der Dezimalstellen, in die die <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur aufgelöst wird.</param>
      <param name="fPositive">Ein boolescher Wert, der angibt, ob die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur eine positive oder negative Zahl darstellt.</param>
      <param name="data1">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data2, data3 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data2">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data3 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data3">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data2 und data4 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
      <param name="data4">Eine 32-Bit-Ganzzahl ohne Vorzeichen, die mit data1, data2 und data3 kombiniert wird, um die 128-Bit-Ganzzahl ohne Vorzeichen zu erstellen, die den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung der angegebenen Parameter.</summary>
      <param name="bPrecision">Die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="bScale">Die Anzahl der Dezimalstellen, in die die <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur aufgelöst wird.</param>
      <param name="fPositive">Ein boolescher Wert, der angibt, ob die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur eine positive oder negative Zahl darstellt.</param>
      <param name="bits">Die 128-Bit-Ganzzahl ohne Vorzeichen, die den Wert des neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" /> bereitstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen <see cref="T:System.Decimal" />-Werts.</summary>
      <param name="value">Der <see cref="T:System.Decimal" />-Wert, der als <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gespeichert werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Double-Parameters.</summary>
      <param name="dVal">Ein Double, der den Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur darstellt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Ganzzahlwerts.</summary>
      <param name="value">Der angegebene Ganzzahlwert, der als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur unter Verwendung des angegebenen Long Integer-Werts.</summary>
      <param name="value">Der angegebene Long Integer-Wert, der als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Die Abs-Methode ruft den absoluten Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ab.</summary>
      <param name="n">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Zahl ohne Vorzeichen enthält, die den absoluten Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Berechnet die Summe der beiden Operatoren <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Summe enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>Die Dezimalstellen des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden werden an die Anzahl der Ziffern angepasst, die durch den digits-Parameter angegeben sind. Abhängig vom Wert des fRound-Parameters wird der Wert entweder auf die entsprechende Anzahl Ziffern gerundet oder abgeschnitten.</summary>
      <param name="n">Die anzupassende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="digits">Die Anzahl der Ziffern in der angepassten Struktur.</param>
      <param name="fRound">Wenn dieser Parameter <see langword="true" /> ist, wird der neue Wert gerundet. Wenn er <see langword="false" /> ist, wird der Wert abgeschnitten.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die angepasste Zahl enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Gibt die kleinste ganze Zahl zurück, die größer oder gleich der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist.</summary>
      <param name="n">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, für die der Höchstwert berechnet werden soll.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der die kleinste ganze Zahl darstellt, die größer oder gleich der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Objekt und gibt eine Angabe über das Verhältnis der Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Passt den Wert des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden an die angegebene Genauigkeit und die Anzahl von Dezimalstellen an.</summary>
      <param name="n">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert angepasst werden soll.</param>
      <param name="precision">Die Genauigkeit für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="scale">Die Anzahl der Dezimalstellen für die neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert an die Genauigkeit und die Anzahl von Dezimalstellen angepasst wurde, die in den Parametern angegeben sind.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Der Divisionsoperator berechnet die Ergebnisse der Division des ersten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist der Wert von <see langword="SqlDecimal" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Vergleicht den angegebenen <see cref="T:System.Object" />-Parameter mit der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Instanz.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> und gleich diesem ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Rundet eine angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Zahl auf die nächstkleinere ganze Zahl ab.</summary>
      <param name="n">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, für die der niedrigste Wert berechnet werden soll.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, die den Ganzzahlteil dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Berechnet die Summe der beiden Operatoren <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Summe enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Der Divisionsoperator berechnet die Ergebnisse der Division des ersten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Decimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see langword="Decimal" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert den <see cref="T:System.Double" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Double" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert gleich dem Wert des <see cref="T:System.Double" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur in SqlDecimal.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Operanden in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert den <see cref="T:System.Decimal" />-Wert in <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Decimal" />-Wert.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem Wert des <see langword="Decimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Int64" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Int64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft gleich dem Wert des <see cref="T:System.Int64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Strukturen durch, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Berechnet die Ergebnisse der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Werteigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>Der unäre Operator Minus negiert den <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter.</summary>
      <param name="x">Die zu negierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Wert die Ergebnisse der Negation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in ihre <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Entsprechung.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Erhöht den Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur auf die angegebene Potenz.</summary>
      <param name="n">Die zu potenzierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="exp">Ein Double-Wert, der die Potenz angibt, um die die Zahl erhöht werden soll.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur mit den Ergebnissen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Ruft die Zahl, die dem Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur am nächsten liegt, mit der angegebenen Genauigkeit ab.</summary>
      <param name="n">Die zu rundende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="position">Die Anzahl der signifikanten Ziffern für Bruchzahlen (Genauigkeit) im Rückgabewert.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur mit den Ergebnissen der Rundung.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Ruft einen Wert ab, der das Vorzeichen der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Eigenschaft einer <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Struktur angibt.</summary>
      <param name="n">Die <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Vorzeichen ermittelt werden soll.</param>
      <returns>Eine Zahl, die das Vorzeichen der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Berechnet die Ergebnisse der Subtraktion des zweiten <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren Werteigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Gibt ein Double zurück, das dem Inhalt der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft dieser Instanz entspricht.</summary>
      <returns>Die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft als Dezimalzahl.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur gleich <see langword="true" /> ist, ist der <see langword="Value" /> der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der <see langword="Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" /> gleich 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit demselben Wert wie diese Instanz von <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert eine Zeichenfolgendarstellung des in dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthaltenen Werts ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur zu <see cref="T:System.String" />.</summary>
      <returns>Ein neues <see cref="T:System.String" />-Objekt mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Eigenschaft der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Schneidet den Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur an der gewünschten Position ab.</summary>
      <param name="n">Die zu verkürzende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <param name="position">Die Dezimalstelle, auf die die Zahl abgeschnitten wird.</param>
      <returns>Geben Sie für den <paramref name="position" />-Parameter einen negativen Wert an, um den Wert an der entsprechenden Position links vom Dezimaltrennzeichen abzuschneiden.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Ruft die binäre Darstellung des Werts dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur als ein Bytearray ab.</summary>
      <returns>Ein Bytearray, das die binäre Darstellung des Werts der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Ruft die binäre Darstellung dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur als ein Array von ganzen Zahlen ab.</summary>
      <returns>Ein Array von ganzen Zahlen, das die binäre Darstellung dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur enthält.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn diese <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Gibt an, ob der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur größer 0 (null) ist.</summary>
      <returns>
        <see langword="true" />, wenn dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> NULL zugewiesen wurde. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Ruft die maximale Anzahl von Ziffern für die Darstellung der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft ab.</summary>
      <returns>Die maximale Anzahl von Ziffern für die Darstellung des <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Ruft die Anzahl der Dezimalstellen ab, in die der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> aufgelöst wird.</summary>
      <returns>Die Anzahl der Dezimalstellen, in die die <see langword="Value" />-Eigenschaft aufgelöst wird.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Eine Zahl zwischen -79.228.162.514.264.337.593.543.950.335 und 79.228.162.514.162.514.264.337.593.543.950.335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Stellt eine Gleitkommazahl im Bereich zwischen -1,79E +308 bis 1,79E +308 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Eine Konstante, die den Höchstwert für eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Eine Konstante, die den kleinstmöglichen Wert vom Typ <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur unter Verwendung des angegebenen Double-Parameters, um die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Eigenschaft der neuen <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />-Struktur festzulegen.</summary>
      <param name="value">Ein Double, dessen Wert für das neue <see cref="T:System.Data.SqlTypes.SqlDouble" /> verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Additionsoperator berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Der zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> auf Ungleichheit.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Additionsoperator berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Führt einen logischen Vergleich von zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />, abhängig von der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters, 0 (null) oder 1 ist. Wenn <see cref="T:System.Data.SqlTypes.SqlBoolean" /> den Wert <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in Double.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein Double, der dem Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, dessen <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem Wert der durch den <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellten Zahl ist. Wenn <see cref="T:System.Data.SqlTypes.SqlString" /> den Wert <see cref="F:System.Data.SqlTypes.SqlString.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlByte" /> den Wert <see cref="F:System.Data.SqlTypes.SqlByte.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlDecimal" /> den Wert <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt16" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt16.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt32" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlInt64" /> den Wert <see cref="F:System.Data.SqlTypes.SqlInt64.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlMoney" /> den Wert <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist. Wenn <see cref="T:System.Data.SqlTypes.SqlSingle" /> den Wert <see cref="F:System.Data.SqlTypes.SqlSingle.Null" /> hat, ist die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Konvertiert den angegebenen Double-Wert in einen <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Der zu konvertierende Double-Wert.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDouble" /> mit demselben Wert wie der angegebene Double-Parameter.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" /> auf Ungleichheit.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlDouble" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlDouble" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Die Ergebnisse der Subtraktionsoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Gibt den negierten Wert der angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zurück.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlDouble" /> mit dem durch den <see langword="String" /> dargestellten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlDouble" />-Operanden vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Die Ergebnisse der Subtraktionsoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>Ein XML-Schema, das von .NET Framework verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Eine <see langword="SqlBoolean" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn der <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur nicht 0 (null) ist. <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, wenn <see cref="T:System.Data.SqlTypes.SqlDouble" /> 0 (null) ist und <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, wenn die <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see langword="SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Eine neue <see langword="SqlDecimal" />-Struktur, deren konvertierter Wert gleich dem gerundeten Wert dieses <see langword="SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see langword="Value" /> gleich dem ganzzahligen Teil des Werts der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine neue <see langword="SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem Wert des <see cref="T:System.Data.SqlTypes.SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine neue <see langword="SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Ein <see langword="SqlString" />, der den <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in eine Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge, die den <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> dieses <see cref="T:System.Data.SqlTypes.SqlDouble" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Gibt einen Boolean-Wert zurück, mit dem angegeben wird, ob diese <see cref="T:System.Data.SqlTypes.SqlDouble" />-Instanz NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Der Wert der <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Stellt eine GUID dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen Bytearrayparameters.</summary>
      <param name="value">Ein Bytearray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen <see cref="T:System.Guid" />-Parameters.</summary>
      <param name="g">Eine <see cref="T:System.Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung der angegebenen Werte.</summary>
      <param name="a">Die ersten vier Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Die nächsten zwei Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Die nächsten zwei Bytes der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">Das nächste Byte der <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur unter Verwendung des angegebenen <see cref="T:System.String" />-Parameters.</summary>
      <param name="s">Ein <see cref="T:System.String" />-Objekt.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück. Vergleicht mehr als die letzten 6 Bytes, behandelt die letzten 6 Bytes beim Vergleich aber als die höchstwertigen Bytes.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist mit dem Objekt identisch.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur mit dem angegebenen Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück. Vergleicht mehr als die letzten 6 Bytes, behandelt die letzten 6 Bytes beim Vergleich aber als die höchstwertigen Bytes.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist mit dem Objekt identisch.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlGuid" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlGuid" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Gibt den Hashcode für diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Ein <see langword="SqlBinary" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> des <see cref="T:System.Data.SqlTypes.SqlBinary" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" />-Parameter in <see cref="T:System.Guid" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Guid" />, die gleich dem <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> der <see cref="T:System.Data.SqlTypes.SqlGuid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Konvertiert den angegebenen <see cref="T:System.Guid" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Ein <see cref="T:System.Guid" />.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> gleich dem <see cref="T:System.Guid" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlGuid" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlGuid" />, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlGuid" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Konvertiert die angegebene <see cref="T:System.String" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlGuid" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in ein Bytearray.</summary>
      <returns>Ein Bytearray, das den <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Eine <see langword="SqlBinary" />-Struktur, die die Bytes in der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns>Ein <see cref="T:System.String" /> mit der Zeichenfolgenentsprechung der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" /> wenn <see langword="null" /> Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Ruft den Wert der <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Eine <see cref="T:System.Guid" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Stellt eine 16-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur unter Verwendung des angegebenen Short Integer (kurze ganze Zahl)-Parameters.</summary>
      <param name="value">Ein Short Integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen AND enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen OR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt, oder das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt16" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Vergleicht das angegebene Objekt mit der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see cref="T:System.String" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />-Wert.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />-Wert.</param>
      <returns>Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Der Operator ~ führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft das Komplement der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen AND enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen OR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlInt16" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse des bitweisen XOR enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in einen Short Integer.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein Short Integer, dessen Wert der Wert des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert das angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Objektparameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste größer als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Konvertiert den angegebenen Short Integer in <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Ein Short Integer-Wert.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit demselben Wert wie der angegebene Short Integer.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei Instanzen von <see cref="T:System.Data.SqlTypes.SqlInt16" />, um zu bestimmen, ob die erste kleiner als die zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Vergleicht zwei <see cref="T:System.Data.SqlTypes.SqlInt16" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>Der Operator ~ führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlByte" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft das Komplement der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>Der unäre Operator Minus negiert den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 16-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Eine 16-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>Ein XML-Schema, das von .NET Framework verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist. Wenn der Wert von <see cref="T:System.Data.SqlTypes.SqlInt16" /> kleiner als 0 (null) oder größer als 255 ist, tritt eine <see cref="T:System.OverflowException" /> auf.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see langword="Value" /> gleich dem Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur in <see cref="T:System.String" />.</summary>
      <returns>Ein <see cref="T:System.String" />-Objekt, das den <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlInt16" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur mit den Ergebnissen der XOR-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />. Weitere Informationen finden Sie unter Behandeln von NULL-Werten.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Ruft den Wert dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Ein Short Integer, der den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur darstellt.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Stellt eine 32-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Eine Konstante, die den größtmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt32" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Eine Konstante, die den kleinstmöglichen Wert eines <see cref="T:System.Data.SqlTypes.SqlInt32" /> darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur unter Verwendung des angegebenen Ganzzahlwerts.</summary>
      <param name="value">Die zu konvertierende ganze Zahl.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Summe der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das bitweise OR der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt32" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt32" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />-Wert.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />-Wert.</param>
      <returns>Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Führt eine bitweise Einerkomplementoperation für die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der Einerkomplementoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Summe der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das bitweise OR der angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlInt32" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in eine ganze Zahl.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Der konvertierte Ganzzahlwert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see langword="SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert das angegebene <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Eigenschaft in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" /> in ein <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Konvertiert die angegebene ganze Zahl in <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Ein Ganzzahlwert.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren Werteigenschaft dem ganzzahligen Parameter entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Vergleicht die beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt32" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> das Produkt der beiden Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Führt eine bitweise Einerkomplementoperation für die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der Einerkomplementoperation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Negiert den <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft die Ergebnisse der Subtraktion enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur ist. Wenn der Wert von <see langword="SqlInt32" /> kleiner als 0 (null) oder größer als 255 ist, tritt eine <see cref="T:System.OverflowException" /> auf.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Konvertiert eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in einen <see cref="T:System.String" />.</summary>
      <returns>Eine <see cref="T:System.String" />-Struktur, die gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt32" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Strukturen aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur NULL ist.</summary>
      <returns>Diese Eigenschaft ist <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Eigenschaft enthält <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
      <returns>Eine ganze Zahl, die den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur darstellt.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Stellt eine 64-Bit-Ganzzahl mit Vorzeichen dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Eine Konstante, die den größtmöglichen Wert einer <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Eine Konstante, die den kleinstmöglichen Wert einer <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Stellt einen Wert von 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur unter Verwendung des angegebenen Long Integer.</summary>
      <param name="value">Ein Long Integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich der Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft die Ergebnisse der Divisionsoperation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlInt64" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> und gleich diesem ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt eine Division von zwei <see cref="T:System.Data.SqlTypes.SqlInt64" />-Werten aus und gibt den Rest zurück.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />-Wert.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlInt64" />-Wert.</param>
      <returns>Der Rest, der übrig bleibt, nachdem die Division von <paramref name="x" /> und <paramref name="y" /> ausgeführt wurde.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden SqlInt64-Parameter durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich der Summe der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das bitweise AND seiner <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen AND-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das bitweise OR seiner beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen OR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft die Ergebnisse der Divisionsoperation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem ganzzahligen Teil des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Konvertiert den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in Long.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein neuer Long-Wert, der gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> von <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich dem ganzzahligen Bereich des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den ganzzahligen Teil des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, dessen <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlByte.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Konvertiert den long-Parameter in <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Ein Long Integer-Wert.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Wert des long-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden SqlInt64-Parameter durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet den Rest nach der Division des ersten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft den Rest enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Führt eine bitweise Einerkomplementoperation für den <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem Einerkomplement des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich den Ergebnissen der Subtraktionsoperation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>Der unäre Operator Minus negiert den <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Operanden.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> gleich dem negierten <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in die entsprechende 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <param name="s">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns>Eine 64-Bit-Ganzzahl mit Vorzeichen, die dem Wert im angegebenen <see cref="T:System.String" /> entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />-Eigenschaft gleich den Ergebnissen der Subtraktionsoperation ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlMoney" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlInt64" /> in <see cref="T:System.String" />.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlInt64" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Führt eine bitweise exklusive OR-Operation für die angegebenen Parameter aus.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur mit den Ergebnissen der bitweisen XOR-Operation.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Ruft einen Boolean-Wert ab, der angibt, ob diese <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Ein Long Integer, der den Wert dieser <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur darstellt.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Stellt einen Währungswert von –2 63 (oder –922.337.203.685.477,5808) bis 263 –1 (oder +922.337.203.685.477,5807) mit einer Genauigkeit eines Zehntausendstels einer Währungseinheit dar, der in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Stellt den Höchstwert dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Stellt den kleinsten Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Stellt den Wert 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="value">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Double-Wert.</summary>
      <param name="value">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Ganzzahlwert.</summary>
      <param name="value">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Klasse mit dem angegebenen Long Integer-Wert.</summary>
      <param name="value">Der zu initialisierende Währungswert.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Element die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlMoney" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist und damit übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Ruft den Hashcode für diese Instanz ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />, der die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Berechnet die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Element die Summe der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Divisionsoperator dividiert den ersten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch den zweiten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Division enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in <see cref="T:System.Decimal" />.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Decimal" />-Struktur, deren Wert gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser Operator konvertiert den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich der <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Konvertiert den <see cref="T:System.Decimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Decimal" />-Wert.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> gleich dem Wert des <see cref="T:System.Decimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Int64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Int64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft gleich dem Wert des <see cref="T:System.Int64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Multiplikationsoperator berechnet das Produkt der beiden <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> das Produkt der Multiplikation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>Der unäre Operator Minus negiert den <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter.</summary>
      <param name="x">Die zu negierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> die Ergebnisse der Negation enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Konvertiert die <see cref="T:System.String" />-Darstellung einer Zahl in ihre <see cref="T:System.Data.SqlTypes.SqlMoney" />-Entsprechung.</summary>
      <param name="s">Der zu analysierende <see langword="String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Der Subtraktionsoperator subtrahiert den zweiten <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter vom ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Konvertiert den Wert dieser Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> in eine <see cref="T:System.Decimal" />-Struktur.</summary>
      <returns>Eine <see cref="T:System.Decimal" />-Struktur, deren Wert gleich der <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />-Eigenschaft dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Double" />.</summary>
      <returns>Ein Double mit einem Wert, der gleich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Int32" />.</summary>
      <returns>Eine 32-Bit-Ganzzahl, deren Wert gleich dem ganzzahligen Bereich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Konvertiert den Wert dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in einen <see cref="T:System.Int64" />.</summary>
      <returns>Eine 64-Bit-Ganzzahl, deren Wert gleich dem ganzzahligen Bereich dieser <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur 0 (null) ist, ist der Wert der <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlByte" />, das gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur, deren Wert eine Zeichenfolge ist, die den Wert dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Konvertiert diese Instanz von <see cref="T:System.Data.SqlTypes.SqlMoney" /> in eine Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge, deren Wert die Zeichenfolgendarstellung des Werts dieses <see cref="T:System.Data.SqlTypes.SqlMoney" /> ist.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Gibt einen Boolean-Wert zurück, mit dem angegeben wird, ob diese <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Ruft den Währungswert einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Die Eigenschaft ist auf NULL festgelegt.</exception>
      <returns>Der Währungswert einer Instanz der <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>Die <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als Klasse, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />-Klasse.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="e">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die <see langword="Value" />-Eigenschaft einer <see cref="N:System.Data.SqlTypes" />-Struktur auf NULL festgelegt wird.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer vom System bereitgestellten Meldung, in der der Fehler beschrieben wird.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer angegebenen Meldung, in der der Fehler beschrieben wird.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlNullValueException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="e">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <c>innerException</c>-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Stellt eine Gleitkommazahl im Bereich zwischen -3,40E +38 bis 3,40E +38 dar, die in einer Datenbank gespeichert oder aus dieser abgerufen werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Stellt den Höchstwert dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Stellt den kleinsten Wert dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Stellt den Wert 0 (null) dar, der der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft einer Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Klasse zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur unter Verwendung des angegebenen Double-Parameters.</summary>
      <param name="value">Ein Double-Wert, der als <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="value">Eine Gleitkommazahl, die als <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der neuen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur verwendet wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit der Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Instanz mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Dividiert die erste <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur durch die zweite.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see langword="SqlInt64" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlSingle" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> und gleich diesem ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Ruft den Hashcode für diese Instanz ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen durch, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Berechnet das Produkt der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Ergebnis der Multiplikation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Berechnet die Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit der Summe der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Dividiert die erste <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur durch die zweite.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden SqlSingle-Parameter durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Dieser implizite Operator konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlBoolean" /> in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur in Gleitkommanotierung.</summary>
      <param name="x">Der in eine Gleitkommanotierung zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Wert.</param>
      <returns>Eine Gleitkommanotierung mit dem Wert der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Das zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem durch den <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter dargestellten Wert ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich von zwei <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen durch, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Dieser implizite Operator konvertiert den <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />-Eigenschaft gleich dem <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> des <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt32" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur in ein <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> gleich dem <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Konvertiert den angegebenen Gleitkommawert in <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Der Gleitkommawert, der in <see cref="T:System.Data.SqlTypes.SqlSingle" /> zu konvertieren ist.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Wert der angegebenen Gleitkommanotierung.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter aus, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlSingle" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Berechnet das Produkt der beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Strukturen.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem Ergebnis der Multiplikation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Subtrahiert die zweite <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur von der ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Negiert den <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> der angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit dem negierten Wert.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Konvertiert den angegebenen <see cref="T:System.String" /> in eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</summary>
      <param name="s">Der zu analysierende <see cref="T:System.String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlSingle" />, der dem im angegebenen <see cref="T:System.String" /> enthaltenen Wert entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Subtrahiert die zweite <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur von der ersten.</summary>
      <param name="x">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <param name="y">Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur mit den Ergebnissen der Subtraktion.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur, deren <see langword="Value" /> gleich dem <see langword="Value" /> dieser <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur ist. Wenn der Wert der <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur gleich <see langword="true" /> ist, ist der <see langword="Value" /> der <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur gleich 1. Andernfalls ist der <see langword="Value" /> von <see cref="T:System.Data.SqlTypes.SqlByte" /> gleich 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Ein neuer <see langword="SqlDecimal" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Ein neuer <see langword="SqlDouble" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Ein neuer <see langword="SqlInt16" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlMoney" />, das gleich dem Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur zu <see cref="T:System.String" />.</summary>
      <returns>Ein <see langword="String" />-Objekt, das den Wert dieses <see cref="T:System.Data.SqlTypes.SqlSingle" /> darstellt.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn NULL. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Ruft den Wert dieser <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur ab. Diese Eigenschaft ist schreibgeschützt.</summary>
      <returns>Ein Gleitkommawert im Bereich zwischen -3,40E+38 bis 3,40E+38.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Stellt einen Zeichenstream variabler Länge dar, der in der Datenbank gespeichert oder dort abgerufen wird. <see cref="T:System.Data.SqlTypes.SqlString" /> hat eine andere zugrunde liegende Datenstruktur als der entsprechende <see cref="T:System.String" />-Datentyp in .NET Framework.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Gibt an, dass Sortierungen auf Grundlage des numerischen Werts anstelle des alphabetischen Werts eines Zeichens durchgeführt werden sollen.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Gibt an, dass bei <see cref="T:System.Data.SqlTypes.SqlString" />-Vergleichen die Groß- und Kleinschreibung nicht berücksichtigt werden soll.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Gibt an, dass beim Zeichenfolgenvergleich Zeichen vom Typ Kana ignoriert werden.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Gibt an, dass bei Zeichenfolgenvergleichen Kombinationszeichen ohne horizontalen Vorschub, z. B. diakritische Zeichen, ignoriert werden.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Gibt an, dass beim Zeichenfolgenvergleich die Zeichenbreite ignoriert wird.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Stellt ein <see cref="T:System.DBNull" /> dar, das dieser Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zugewiesen werden kann.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Gebietsschemabezeichner, Vergleichsoptionen und Daten.</summary>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data">Das zu speichernde Datenarray.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data">Das zu speichernde Datenarray.</param>
      <param name="fUnicode">
        <see langword="true" /> bei Unicode-Codierung. Andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data">Das zu speichernde Datenarray.</param>
      <param name="index">Der Anfangsindex im Array.</param>
      <param name="count">Die Anzahl der ab dem Index zu kopierenden Zeichen.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Klasse.</summary>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="data">Das zu speichernde Datenarray.</param>
      <param name="index">Der Anfangsindex im Array.</param>
      <param name="count">Die Anzahl der ab dem Index zu kopierenden Zeichen.</param>
      <param name="fUnicode">
        <see langword="true" /> bei Unicode-Codierung. Andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge.</summary>
      <param name="data">Die zu speichernde Zeichenfolge.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge und der Werte für den Gebietsschemabezeichner.</summary>
      <param name="data">Die zu speichernde Zeichenfolge.</param>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur unter Verwendung der angegebenen Zeichenfolge, des Gebietsschemabezeichners und der Werte für die Vergleichsoptionen.</summary>
      <param name="data">Die zu speichernde Zeichenfolge.</param>
      <param name="lcid">Gibt das geografische Gebietsschema und die Sprache für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
      <param name="compareOptions">Gibt die Vergleichsoptionen für die neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Werte, um eine neue <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu erstellen.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" />, der den verketteten Wert von <paramref name="x" /> und <paramref name="y" /> darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Erstellt eine Kopie dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts.</summary>
      <returns>Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt, in dem alle Eigenschaftswerte mit dem Original übereinstimmen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Ruft die <see cref="T:System.Globalization.CompareOptions" />-Enumeration ab, die dem angegebenen <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Wert entspricht.</summary>
      <param name="compareOptions">Ein <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Wert, der die Vergleichsoptionen für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur beschreibt.</param>
      <returns>Ein <see langword="CompareOptions" />-Wert, der den <see langword="SqlCompareOptions" /> für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur entspricht.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Vergleicht diese <see cref="T:System.Data.SqlTypes.SqlString" />-Instanz mit dem angegebenen <see cref="T:System.Data.SqlTypes.SqlString" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Vergleicht dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit dem angegebenen <see cref="T:System.Object" /> und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</summary>
      <param name="value">Die zu vergleichende <see cref="T:System.Object" />.</param>
      <returns>Eine Zahl mit Vorzeichen, die das Verhältnis zwischen den Werten dieser Instanz und dem Objekt angibt.  
  
 <list type="table"><listheader><term> Rückgabewert</term><description> Bedingung</description></listheader><item><term> Kleiner als 0 (null)</term><description> Diese Instanz ist kleiner als das Objekt.</description></item><item><term> Zero</term><description> Diese Instanz ist gleich dem Objekt.</description></item><item><term> Größer als 0 (null)</term><description> Diese Instanz ist größer als das Objekt. 
- oder - 
Das Objekt ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem neu verketteten Wert, der den Inhalt der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see langword="true" />, wenn die beiden Werte gleich sind. Andernfalls <see langword="false" />. Wenn eine der Instanzen NULL ist, ist <see langword="SqlString" /> NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts.</summary>
      <param name="value">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> ist und damit übereinstimmt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Ruft den Hashcode für diese Instanz ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Ruft ein Bytearray ab, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im ANSI-Format enthält.</summary>
      <returns>Ein Bytearray, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im ANSI-Format enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Ruft ein Bytearray ab, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im Unicode-Format enthält.</summary>
      <returns>Ein Bytearray, das den Inhalt des <see cref="T:System.Data.SqlTypes.SqlString" /> im Unicode-Format enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Ein <see langword="string" />-Wert, der die XSD-Erweiterung des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Verkettet die beiden angegebenen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem neu verketteten Wert, der den Inhalt der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese gleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlBoolean" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert die angegebene <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur in <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlByte" />-Struktur.</param>
      <returns>Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlByte" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlDateTime" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDecimal" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see langword="SqlDecimal" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see langword="SqlDecimal" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlDouble" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlDouble" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" />, dessen Wert die Zeichenfolgenentsprechung der angegebenen <see cref="T:System.Data.SqlTypes.SqlGuid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt16" />-Struktur.</param>
      <returns>Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt16" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende SqlInt32-Struktur.</param>
      <returns>Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt32" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlInt64" />-Struktur.</param>
      <returns>Ein neues <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlInt64" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlMoney" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlMoney" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den angegebenen <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameter in einen <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Die zu konvertierende <see cref="T:System.Data.SqlTypes.SqlSingle" />-Struktur.</param>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlString" /> mit der Zeichenfolgenentsprechung des <see cref="T:System.Data.SqlTypes.SqlSingle" />-Parameters.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Konvertiert einen <see cref="T:System.Data.SqlTypes.SqlString" /> in einen <see cref="T:System.String" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see langword="String" />, dessen Inhalt mit der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft des <see cref="T:System.Data.SqlTypes.SqlString" />-Parameters übereinstimmt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer als der zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste größer oder gleich dem zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Konvertiert den <see cref="T:System.String" />-Parameter in ein <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Der zu konvertierende <see cref="T:System.String" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlString" /> mit dem Wert des angegebenen <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob diese ungleich sind.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> ist, wenn die beiden Instanzen gleich sind. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner als der zweite ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Führt einen logischen Vergleich der beiden <see cref="T:System.Data.SqlTypes.SqlString" />-Operanden durch, um zu bestimmen, ob der erste kleiner oder gleich dem zweiten ist.</summary>
      <param name="x">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y">Ein <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Ein <see cref="T:System.Data.SqlTypes.SqlBoolean" />, der <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist. Andernfalls <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Wenn eine Instanz von <see cref="T:System.Data.SqlTypes.SqlString" /> NULL ist, ist der <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> von <see cref="T:System.Data.SqlTypes.SqlBoolean" /> gleich <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <returns>
        <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="P:System.Data.SqlTypes.SqlString.Value" /> nicht 0 (null) ist; <see langword="false" />, wenn er 0 (null) ist; andernfalls NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Eine neue <see langword="SqlByte" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> mit der von dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur dargestellten Zahl identisch ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Eine neue <see langword="SqlDateTime" />-Struktur, die den Datumswert enthält, der von diesem <see cref="T:System.Data.SqlTypes.SqlString" /> dargestellt wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDecimal" />, der den Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> enthält.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlDouble" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Eine neue <see cref="T:System.Data.SqlTypes.SqlGuid" />-Struktur, deren <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> die von dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur dargestellte <see langword="Guid" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt16" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt32" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlInt64" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlMoney" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Konvertiert diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur zu <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Ein neuer <see cref="T:System.Data.SqlTypes.SqlSingle" />, der gleich dem numerischen Wert dieses <see cref="T:System.Data.SqlTypes.SqlString" /> ist.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Konvertiert ein <see cref="T:System.Data.SqlTypes.SqlString" />-Objekt in einen <see cref="T:System.String" />.</summary>
      <returns>Ein <see cref="T:System.String" /> mit demselben Wert wie diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Ruft das <see cref="T:System.Globalization.CompareInfo" />-Objekt ab, das definiert, wie für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur Zeichenfolgenvergleiche durchgeführt werden sollen.</summary>
      <returns>Ein <see langword="CompareInfo" />-Objekt, das Zeichenfolgenvergleiche für diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur definiert.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Ruft die <see cref="T:System.Globalization.CultureInfo" />-Struktur ab, die Informationen über die Kultur dieses <see cref="T:System.Data.SqlTypes.SqlString" />-Objekts darstellt.</summary>
      <returns>Eine <see cref="T:System.Globalization.CultureInfo" />-Struktur, die Informationen über die Kultur dieser SqlString-Struktur enthält, einschließlich der Namen der Kultur, des Schreibsystems und des verwendeten Kalenders. Außerdem beschreibt sie den Zugriff auf kulturabhängige Objekte, die Methoden für häufige Vorgänge bereitstellen, z. B. für das Formatieren von Datumsangaben und das Sortieren von Zeichenfolgen.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Gibt an, ob diese <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="P:System.Data.SqlTypes.SqlString.Value" /><see cref="F:System.Data.SqlTypes.SqlString.Null" /> ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Gibt das Gebietsschema und die Sprache für die <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur an.</summary>
      <returns>Der Gebietsschemabezeichner für die in der <see cref="P:System.Data.SqlTypes.SqlString.Value" />-Eigenschaft gespeicherte Zeichenfolge.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Eine Kombination von einem oder mehreren Werten der <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />-Enumeration, die angeben, wie dieser <see cref="T:System.Data.SqlTypes.SqlString" /> mit anderen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen verglichen werden soll.</summary>
      <returns>Ein Wert, der angibt, wie dieser <see cref="T:System.Data.SqlTypes.SqlString" /> mit anderen <see cref="T:System.Data.SqlTypes.SqlString" />-Strukturen verglichen werden soll.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Ruft die Zeichenfolge ab, die in dieser <see cref="T:System.Data.SqlTypes.SqlString" />-Struktur gespeichert ist. Diese Eigenschaft ist schreibgeschützt.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Der Wert der Zeichenfolge ist <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
      <returns>Die gespeicherte Zeichenfolge.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn das Festlegen eines Werts in einer <see cref="N:System.Data.SqlTypes" />-Struktur zum Abschneiden dieses Werts führen würde.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTruncateException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die <see cref="T:System.Exception" />.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="e">Ein Verweis auf eine innere <see cref="T:System.Exception" />.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>Die Basisausnahmeklasse für die <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit serialisierten Daten.</summary>
      <param name="si">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="sc">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SqlTypes.SqlTypeException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
      <param name="e">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der <c>innerException</c>-Parameter nicht <see langword="null" /> ist, wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Stellt XML-Daten dar, die auf einem Server gespeichert oder von diesem abgerufen werden.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz und gibt den XML-Wert der von <see cref="T:System.IO.Stream" /> abgeleiteten Instanz an, die bereitgestellt wird.</summary>
      <param name="value">Eine von <see cref="T:System.IO.Stream" /> abgeleitete Instanz (z. B. <see cref="T:System.IO.FileStream" />), aus der der XML-Inhalt der <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz geladen werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Erstellt eine neue <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz und ordnet diese dem Inhalt des bereitgestellten <see cref="T:System.Xml.XmlReader" /> zu.</summary>
      <param name="value">Eine von <see cref="T:System.Xml.XmlReader" /> abgeleitete Klasseninstanz, die als Wert der neuen <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz verwendet werden soll.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Ruft den Wert des XML-Inhalts von diesem <see cref="T:System.Data.SqlTypes.SqlXml" /> als <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Es wurde versucht, auf diese Eigenschaft auf einer NULL-Instanz von <see cref="T:System.Data.SqlTypes.SqlXml" /> zuzugreifen.</exception>
      <returns>Eine von <see cref="T:System.Xml.XmlReader" /> abgeleitete Instanz, die den XML-Inhalt enthält. Der tatsächliche Typ kann variieren (z. B. könnte der Rückgabewert <see cref="T:System.Xml.XmlTextReader" /> sein), und zwar in Abhängigkeit davon, wie die Informationen intern auf dem Server dargestellt werden.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Gibt die XML-Schemadefinitionssprache (XSD) des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> zurück.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Eine Zeichenfolge, die die XSD des angegebenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angibt.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />, das die XML-Darstellung des Objekts beschreibt, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erzeugt wird und durch die <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">Ein XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Ein XmlWriter</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Gibt an, ob diese Instanz einen <see cref="T:System.Data.SqlTypes.SqlXml" />-Wert gleich NULL darstellt.</summary>
      <returns>
        <see langword="true" />, wenn <see langword="Value" /> NULL ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Stellt eine NULL-Instanz des <see cref="T:System.Data.SqlTypes.SqlXml" />-Typs dar.</summary>
      <returns>Eine NULL-Instanz des <see cref="T:System.Data.SqlTypes.SqlXml" />-Typs.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Ruft die Zeichenfolgenentsprechung des XML-Inhalts dieser <see cref="T:System.Data.SqlTypes.SqlXml" />-Instanz ab.</summary>
      <returns>Die Zeichenfolgenentsprechung des XML-Inhalts.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>Die <see cref="T:System.Data.SqlTypes.StorageState" />-Enumeration ist nicht für die Verwendung als eigenständige Komponente ausgelegt, sondern als eine Enumeration, von der andere Klassen Standardfunktionen ableiten.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Puffergröße.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Stream.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Nicht verwalteter Puffer.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Stellt Daten für die Statusänderung eines .NET Framework-Datenanbieters bereit.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.StateChangeEventArgs" />-Klasse, wenn der ursprüngliche Zustand und der aktuelle Zustand des Objekts angegeben sind.</summary>
      <param name="originalState">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</param>
      <param name="currentState">Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Ruft den neuen Zustand der Verbindung ab. Das Verbindungsobjekt weist beim Auslösen des Ereignisses bereits den neuen Zustand auf.</summary>
      <returns>Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Ruft den ursprünglichen Zustand der Verbindung ab.</summary>
      <returns>Einer der <see cref="T:System.Data.ConnectionState" />-Werte.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Data.Common.DbConnection.StateChange" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.Data.StateChangeEventArgs" />-Element, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Stellt zusätzliche Informationen für das <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Data.StatementCompletedEventArgs" />-Klasse.</summary>
      <param name="recordCount">Gibt die Anzahl von Zeilen an, die von der Anweisung betroffen sind, die das Auslösen des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses verursacht hat.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Gibt die Anzahl von Zeilen an, die von der Anweisung betroffen sind, die das Auslösen des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses verursacht hat.</summary>
      <returns>Die Anzahl der betroffenen Zeilen.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>Der Delegattyp für die Ereignishandler des <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />-Ereignisses.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Die Daten für das Ereignis.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Gibt den Typ der SQL-Abfrage an, der von einer der folgenden Klassen verwendet werden soll: <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> oder <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>Eine SQL-Abfrage, die eine Batchanweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>Eine SQL-Abfrage, die eine DELETE-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>Eine SQL-Abfrage, die eine INSERT-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>Eine SQL-Abfrage, die eine SELECT-Anweisung ist.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>Eine SQL-Abfrage, die eine UPDATE-Anweisung ist.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>Die Ausnahme, die von einer stark typisierten <see cref="T:System.Data.DataSet" />-Klasse ausgelöst wird, wenn der Benutzer auf einen <see langword="DBNull" />-Wert zugreift.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Streamingkontext.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Eine <see cref="T:System.Runtime.Serialization.StreamingContext" />-Struktur.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="message">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.StrongTypingException" />-Klasse mit der angegebenen Zeichenfolge und der angegebenen inneren Ausnahme.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
      <param name="innerException">Ein Verweis auf eine innere Ausnahme.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn die <see cref="P:System.Data.DataColumn.Expression" />-Eigenschaft einer <see cref="T:System.Data.DataColumn" /> einen Syntaxfehler enthält.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Die zur Serialisierung bzw. Deserialisierung eines Objekts benötigten Daten.</param>
      <param name="context">Die Quelle und das Ziel eines bestimmten serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.SyntaxErrorException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>Dieser Typ wird als Basisklasse für die typisierte <see cref="T:System.Data.DataTable" />-Objektgenerierung durch Visual Studio und das .NET Framework-Tool XSD.exe verwendet, und er ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <typeparam name="T">Der Typ der Objekte in der von der Tabelle dargestellten Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Initialisiert eine neue <see cref="T:System.Data.TypedTableBase`1" />. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Dieser Typ ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue <see cref="T:System.Data.TypedTableBase`1" />. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="info">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die Daten zum Erstellen des Objekts enthält.</param>
      <param name="context">Der Streamingkontext für das deserialisierte Objekt.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Konvertiert die Elemente einer <see cref="T:System.Data.TypedTableBase`1" /> in den angegebenen Typ. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <typeparam name="TResult">Der Typ, in den die Elemente konvertiert werden sollen.</typeparam>
      <returns>Eine <see cref="T:System.Data.EnumerableRowCollection" />, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Gibt einen Enumerator für die typisierte <see cref="T:System.Data.DataRow" /> zurück. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator für die typisierte <see cref="T:System.Data.DataRow" /> zurück. Diese Methode unterstützt die Generierung von typisierten <see cref="T:System.Data.DataTable" />-Objekten durch Visual Studio und das .NET Framework-Tool „XSD.exe“. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.Collections.Generic.IEnumerator`1" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Enthält die Erweiterungsmethoden für die <see cref="T:System.Data.TypedTableBase`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Listet die Elemente der Datenzeile von <see cref="T:System.Data.TypedTableBase`1" /> auf und gibt ein <see cref="T:System.Data.EnumerableRowCollection`1" />-Objekt zurück, wobei der generische Parameter <paramref name="T" /> gleich <see cref="T:System.Data.DataRow" /> ist. Dieses Objekt kann in einem LINQ-Ausdruck oder einer Methodenabfrage verwendet werden.</summary>
      <param name="source">Die Quell-<see cref="T:System.Data.TypedTableBase`1" />, die als aufzählbar festgelegt werden soll.</param>
      <typeparam name="TRow">Der Typ, in den die Elemente der Quelle konvertiert werden sollen.</typeparam>
      <returns>Ein <see cref="T:System.Data.EnumerableRowCollection`1" />-Objekt bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary>Gibt das Element an einer angegebenen Zeile in einer Sequenz oder einen Standardwert zurück, wenn die Zeile außerhalb des gültigen Bereichs liegt.</summary>
      <param name="source">Ein aufzählbares Objekt, aus dem ein Element zurückgegeben werden soll.</param>
      <param name="index">Der auf 0 (null) basierende Index des abzurufenden Elements.</param>
      <typeparam name="TRow">Der Typ des Elements der Reihe.</typeparam>
      <returns>Das Element an einer angegebenen Zeile in einer Sequenz.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Sortiert die Zeilen einer <see cref="T:System.Data.TypedTableBase`1" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</param>
      <param name="keySelector">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />, normalerweise <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Der Typ des von <paramref name="keySelector" /> zurückgegebenen Schlüssels.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Projiziert jedes Element von <see cref="T:System.Data.TypedTableBase`1" /> in ein neues Format.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, für die eine Transformationsfunktion aufgerufen werden soll.</param>
      <param name="selector">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />: <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" />
      <returns>Eine <see cref="T:System.Data.EnumerableRowCollection`1" />, deren Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Filtert eine Sequenz von Zeilen auf Grundlage des angegebenen Prädikats.</summary>
      <param name="source">Eine <see cref="T:System.Data.TypedTableBase`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die gefiltert werden sollen.</param>
      <param name="predicate">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</param>
      <typeparam name="TRow">Der Typ der Zeilenelemente in <paramref name="source" />: <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, die Zeilen aus der Eingabesequenz enthält, die die Bedingung erfüllen.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Stellt eine Einschränkung für eine Gruppe von Spalten dar, bei der alle Werte eindeutig sein müssen.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit der angegebenen <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit der einzuschränkenden <see cref="T:System.Data.DataColumn" /> und einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="column">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Array von <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="columns">Das Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="columns">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen und der angegebenen <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="name">Der Name der Einschränkung.</param>
      <param name="column">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, der einzuschränkenden <see cref="T:System.Data.DataColumn" /> sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name">Der Name der Einschränkung.</param>
      <param name="column">Die einzuschränkende <see cref="T:System.Data.DataColumn" />.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen und dem angegebenen Array von <see cref="T:System.Data.DataColumn" />-Objekten.</summary>
      <param name="name">Der Name der Einschränkung.</param>
      <param name="columns">Das Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name">Der Name der Einschränkung.</param>
      <param name="columns">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.UniqueConstraint" />-Klasse mit dem angegebenen Namen, einem Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten sowie einem Wert, der angibt, ob es sich bei der Einschränkung um einen Primärschlüssel handelt.</summary>
      <param name="name">Der Name der Einschränkung.</param>
      <param name="columnNames">Ein Array von einzuschränkenden <see cref="T:System.Data.DataColumn" />-Objekten.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> gibt an, dass die Einschränkung ein Primärschlüssel ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Vergleicht diese Einschränkung mit einer zweiten, um zu bestimmen, ob diese identisch sind.</summary>
      <param name="key2">Das Objekt, mit dem diese <see cref="T:System.Data.UniqueConstraint" /> verglichen wird.</param>
      <returns>
        <see langword="true" />, wenn die Einschränkungen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Ruft den Hashcode dieser Instanz des <see cref="T:System.Data.UniqueConstraint" />-Objekts ab.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Ruft das Array der Spalten ab, die von dieser Einschränkung betroffen sind.</summary>
      <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Ruft einen Wert ab, der angibt, ob die Einschränkung für einen Primärschlüssel gilt.</summary>
      <returns>
        <see langword="true" />, wenn die Einschränkung für einen Primärschlüssel gilt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Ruft die Tabelle ab, zu der diese Einschränkung gehört.</summary>
      <returns>Das <see cref="T:System.Data.DataTable" />, zu dem diese Einschränkung gehört.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Gibt an, wie die Ergebnisse von Abfragebefehlen auf die aktualisierte Zeile angewendet werden.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Sowohl die Ausgabeparameter als auch die erste zurückgegebene Zeile werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Die Daten in der ersten zurückgegebenen Zeile werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Alle zurückgegebenen Parameter oder Zeilen werden ignoriert.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Ausgabeparameter werden der geänderten Zeile im <see cref="T:System.Data.DataSet" /> zugeordnet.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Gibt die Aktion an, die während der Ausführung eines <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> für die aktuelle Zeile und für die restlichen Zeilen ausgeführt werden soll.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>
        <see cref="T:System.Data.Common.DataAdapter" /> soll mit der Verarbeitung von Zeilen fortfahren.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>Der Ereignishandler meldet, dass die Aktualisierung als Fehler behandelt werden soll.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>Die aktuelle Zeile und alle restlichen Zeilen sollen nicht aktualisiert werden.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>Die aktuelle Zeile soll nicht aktualisiert werden.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Stellt die Ausnahme dar, die bei dem Versuch ausgelöst wird, eine Version einer gelöschten <see cref="T:System.Data.DataRow" /> zurückzugeben.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit Serialisierungsinformationen.</summary>
      <param name="info">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</param>
      <param name="context">Beschreibung der Quelle und des Ziels des angegebenen serialisierten Streams.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit der angegebenen Zeichenfolge.</summary>
      <param name="s">Die Zeichenfolge, die beim Auslösen der Ausnahme angezeigt werden soll.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.VersionNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Gibt an, wie XML-Daten und ein relationales Schema in ein <see cref="T:System.Data.DataSet" /> eingelesen werden sollen.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>Der Standardlesemodus.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Liest ein DiffGram, wobei die Änderungen aus dem DiffGram auf das <see cref="T:System.Data.DataSet" />-Objekt angewendet werden. Die Semantik ist identisch mit der einer <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation. Wie bei der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation werden die <see cref="P:System.Data.DataRow.RowState" />-Werte beibehalten. Die Eingabe in <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> mit DiffGrams sollte nur unter Verwendung der Ausgabe von <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> als DiffGram abgerufen werden.
        
Das Ziel <see cref="T:System.Data.DataSet" /> muss das gleiche Schema wie das <see cref="T:System.Data.DataSet" /> haben, auf dem <see cref="Overload:System.Data.DataSet.WriteXml" /> als DiffGram aufgerufen wird. Andernfalls tritt bei dem DiffGram-Zusammenführungsvorgang ein Fehler auf, und eine Ausnahme wird ausgelöst.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Liest XML-Fragmente, z. B. solche, die durch Ausführen von FOR XML-Abfragen generiert werden, für eine Instanz von SQL Server. Wenn <see cref="T:System.Data.XmlReadMode" /> auf <see langword="Fragment" /> festgelegt ist, wird der Standardnamespace als Inlineschema gelesen.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Ignoriert alle Inlineschemata und liest Daten in das vorhandene <see cref="T:System.Data.DataSet" />-Schema ein. Wenn Daten nicht dem vorhandenen Schema entsprechen, werden sie verworfen (auch die Daten aus anderen Namespaces, die für das <see cref="T:System.Data.DataSet" /> definiert wurden). Wenn es sich bei den Daten um ein DiffGram handelt, hat <see langword="IgnoreSchema" /> dieselbe Funktion wie <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Ignoriert alle Inlineschemas, leitet das Schema von den Daten her und lädt die Daten. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema durch Hinzufügen neuer Tabellen oder neuer Spalten zu vorhandenen Tabellen erweitert. Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Ignoriert alle Inlineschemas, leitet ein Schema mit starker Typisierung von den Daten her und lädt die Daten. Wenn der Typ nicht von den Daten abgeleitet werden kann, wird die Daten als Zeichenfolgendaten interpretiert. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema entweder durch Hinzufügen neuer Tabellen oder durch Hinzufügen neuer Spalten zu vorhandenen Tabellen erweitert. Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Liest jedes Inlineschema und lädt die Daten. Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, können diesem evtl. neue Tabellen hinzugefügt werden. Es wird jedoch eine Ausnahme ausgelöst, wenn Tabellen im Inlineschema bereits im <see cref="T:System.Data.DataSet" /> vorhanden sind.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Gibt an, wie XML-Daten und ein relationales Schema aus einer <see cref="T:System.Data.DataSet" />-Klasse geschrieben werden sollen.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Schreibt das gesamte <see cref="T:System.Data.DataSet" /> als DiffGram, einschließlich der ursprünglichen und aktuellen Werte. Rufen Sie <see cref="M:System.Data.DataSet.GetChanges" /> auf, um ein DiffGram zu generieren, das nur geänderte Werte enthält. Rufen Sie anschließend <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> als DiffGram für das zurückgegebene <see cref="T:System.Data.DataSet" />-Objekt auf.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataSet" />-Klasse als XML-Daten ohne ein XSD-Schema. Wenn keine Daten in die <see cref="T:System.Data.DataSet" />-Klasse geladen werden, wird nichts geschrieben.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataSet" />-Klasse als XML-Daten mit der relationalen Struktur als XSD-Inlineschema. Wenn die <see cref="T:System.Data.DataSet" />-Klasse nur über ein Schema ohne Daten verfügt, wird nur das Inlineschema geschrieben. Wenn die <see cref="T:System.Data.DataSet" />-Klasse über kein aktuelles Schema verfügt, wird nichts geschrieben.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Ermöglicht das Speichern, Abrufen und Bearbeiten strukturierter Daten über ein relationales <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDataDocument" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDataDocument" />-Klasse mit der angegebenen <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataset">Das <see langword="DataSet" />, das in das <see langword="XmlDataDocument" /> geladen werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat des aktuellen Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Erstellt ein Element mit der angegebenen <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> und der <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Das Präfix des neuen Elements. Bei String.Empty oder <see langword="null" /> ist kein Präfix vorhanden.</param>
      <param name="localName">Der lokale Name des neuen Elements.</param>
      <param name="namespaceURI">Der Namespace-URI (Uniform Resource Identifier) des neuen Elements. Bei String.Empty oder <see langword="null" /> ist kein namespaceURI vorhanden.</param>
      <returns>Ein neuer <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Erstellt eine <see cref="T:System.Xml.XmlEntityReference" /> mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Entitätsverweises.</param>
      <exception cref="T:System.NotSupportedException">Das Aufrufen dieser Methode.</exception>
      <returns>Eine <see cref="T:System.Xml.XmlEntityReference" /> mit dem angegebenen Namen.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Erstellt ein neues <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt zum Navigieren in diesem Dokument. Der <see langword="XPathNavigator" /> ist auf dem im <paramref name="node" />-Parameter angegebenen Knoten positioniert.</summary>
      <param name="node">Der <see cref="T:System.Xml.XmlNode" />, auf dem Sie den Navigator zunächst positionieren möchten.</param>
      <returns>Ein zum Navigieren im Dokument verwendeter <see langword="XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Ruft das <see cref="T:System.Xml.XmlElement" /> mit der angegebenen ID ab. Diese Methode wird von der <see cref="T:System.Xml.XmlDataDocument" />-Klasse nicht unterstützt. Das Aufrufen dieser Methode löst eine Ausnahme aus.</summary>
      <param name="elemId">Die Attribut-ID, mit der eine Übereinstimmung gefunden werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das Aufrufen dieser Methode.</exception>
      <returns>Das <see cref="T:System.Xml.XmlElement" /> mit der angegebenen ID.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Ruft das <see cref="T:System.Xml.XmlElement" /> ab, das der angegebenen <see cref="T:System.Data.DataRow" /> zugeordnet ist.</summary>
      <param name="r">Das <see langword="DataRow" />, dessen zugeordnete <see langword="XmlElement" /> abgerufen werden soll.</param>
      <returns>Das <see langword="XmlElement" />, das eine Darstellung der angegebenen <see langword="DataRow" /> enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlDocument.Name" /> übereinstimmen.</summary>
      <param name="name">Der qualifizierte Name, mit dem eine Übereinstimmung gefunden werden soll. Er wird mit der <see cref="P:System.Xml.XmlDocument.Name" />-Eigenschaft des übereinstimmenden Knotens verglichen. Der spezielle Wert „*“ entspricht allen Tags.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Ruft das <see cref="T:System.Data.DataRow" /> ab, das der angegebenen <see cref="T:System.Xml.XmlElement" /> zugeordnet ist.</summary>
      <param name="e">Das <see langword="XmlElement" />, dessen zugeordnete <see langword="DataRow" /> abgerufen werden soll.</param>
      <returns>Die <see langword="DataRow" /> enthält eine Darstellung des <see langword="XmlElement" />. <see langword="null" />, wenn dem <see langword="DataRow" /> keine <see langword="XmlElement" /> zugeordnet ist.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen Stream.</summary>
      <param name="inStream">Der Stream, der das zu ladende XML-Dokument enthält.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">Der zum Übertragen von XML-Daten in das Dokument verwendete <see langword="TextReader" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Lädt das <see langword="XmlDataDocument" /> mit der angegebenen URL.</summary>
      <param name="filename">Die URL der Datei, die das zu ladende XML-Dokument enthält.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Lädt das <see langword="XmlDataDocument" /> aus dem angegebenen <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der <see langword="XmlReader" />, der das zu ladende XML-Dokument enthält.</param>
      <exception cref="T:System.NotSupportedException">Die geladenen XML-Daten enthalten Entitätsverweise, und der Reader kann Entitäten nicht auflösen.</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Ruft ein <see cref="T:System.Data.DataSet" /> ab, das eine relationale Darstellung der Daten im <see langword="XmlDataDocument" /> bereitstellt.</summary>
      <returns>Ein <see langword="DataSet" />, das verwendet werden kann, um mithilfe eines relationalen Modells auf die Daten im <see langword="XmlDataDocument" /> zuzugreifen.</returns>
    </member>
  </members>
</doc>