<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" />
      <param name="blob" />
      <param name="length" />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary>Ermöglicht einem Programm das Auflösen von Assemblys und nativen Bibliotheken in Pfaden, die auf den Abhängigkeiten einer bestimmten Assembly basieren.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" />-Klasse mit einem Pfad zur Assembly der Komponente.</summary>
      <param name="componentAssemblyPath">Der Pfad zur Komponente oder zum verwalteten Einstiegspunkt des Plug-Ins.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary>Löst einen Pfad zu einer Assembly mit dem angegebenen Assemblynamen auf, der auf den Abhängigkeiten der Komponente basiert.</summary>
      <param name="assemblyName">Der aufzulösende Assemblyname.</param>
      <returns>Der Pfad zu einer Assembly mit dem angegebenen Namen aus der deps.json-Datei oder <see langword="null" />, wenn die Assembly in der deps.json-Datei nicht vorhanden ist oder sich auf dem Datenträger nicht an dem Speicherort befindet, der von der deps.json-Datei angegeben wird.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary>Löst einen Pfad zu einer nativen Bibliothek mit dem angegebenen Namen auf, der auf den Abhängigkeiten der Komponente basiert.</summary>
      <param name="unmanagedDllName">Der Name der aufzulösenden nativen Bibliothek.</param>
      <returns>Der Pfad zu einer nativen Bibliothek mit dem angegebenen Namen aus der deps.json-Datei der Komponente und der aktuelle Runtimebezeichner oder <see langword="null" />, wenn die Assembly in der deps.json-Datei nicht vorhanden ist oder sich auf dem Datenträger nicht an dem Speicherort befindet, der von der deps.json-Datei angegeben wird.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary>Stellt den Bereich zum Laden von Assemblys einer Runtime dar.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary>Tritt auf, wenn die Auflösung einer Assembly beim Versuch fehlschlägt, sie in diesen Assemblyladekontext zu laden.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary>Tritt auf, wenn bei der nativen Bibliothek ein Fehler auftritt.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary>Tritt auf, wenn der <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> entladen wird.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Klasse mit einem Wert, der angibt, ob Entladen aktiviert ist.</summary>
      <param name="isCollectible">
        <see langword="true" />, um <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> zu aktivieren; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />, da das Aktivieren des Entladens mit Leistungskosten verbunden ist.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Klasse mit einem Namen und einem Wert, der angibt, ob Entladen aktiviert ist.</summary>
      <param name="name">Der Wert für <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> in der neuen Instanz. Ihr Wert kann <see langword="null" /> sein.</param>
      <param name="isCollectible">
        <see langword="true" />, um <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" /> zu aktivieren; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />, da das Aktivieren des Entladens mit Leistungskosten verbunden ist.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary>Legt <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> auf <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> fest.</summary>
      <returns>Ein Objekt zum Wiederherstellen des vorherigen Werts von <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Ist für die Verwendung als ein <see cref="T:System.IDisposable" /> in einem <see langword="using" />-Block vorgesehen.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary>Legt <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> auf den <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> fest, der die Assembly geladen hat.</summary>
      <param name="activating">Die Assembly, die zum Bestimmen der angeforderten <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Instanz verwendet wird.</param>
      <returns>Ein Objekt zum Wiederherstellen des vorherigen Werts von <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />. Ist für die Verwendung als ein <see cref="T:System.IDisposable" /> in einem <see langword="using" />-Block vorgesehen.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary>Ermöglicht dem Objekt den Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary>Diese Eigenschaft ruft für einen Assemblypfad eine <see cref="T:System.Reflection.AssemblyName" />-Klasse ab.</summary>
      <param name="assemblyPath">Der Pfad der Assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die Assembly wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">Die Assembly ist nicht gültig.</exception>
      <returns>Ein Objekt, das den vollständig analysierten Assemblynamen für die Assembly unter <paramref name="assemblyPath" /> enthält</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary>Diese Methode ruft die <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Klasse ab, die die angegebene <see cref="T:System.Reflection.Assembly" />-Klasse enthält.</summary>
      <param name="assembly">Eine Assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> ist <see langword="null" />.</exception>
      <returns>Der Ladekontext der Assembly, der die <paramref name="assembly" /> enthält. Wenn die <paramref name="assembly" /> nicht von der Laufzeit bereitgestellt wird, gibt diese Methode NULL zurück.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary>Bei Überschreibung in einer abgeleiteten Klasse kann eine Assembly aufgelöst und basierend auf dem <see cref="T:System.Reflection.AssemblyName" /> geladen werden.</summary>
      <param name="assemblyName">Das Objekt, das die zu ladende Assembly beschreibt.</param>
      <returns>Die geladene Assembly oder <see langword="null" /></returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary>Löst eine Assembly auf und lädt sie mit ihrem <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Das Objekt, das die zu ladende Assembly beschreibt</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> ist keine gültige Assembly.</exception>
      <exception cref="T:System.IO.FileLoadException">Es wurde eine Assembly oder ein Modul geladen, das nicht mit <paramref name="assemblyName" /> übereinstimmt.</exception>
      <returns>Die geladene Assembly, oder eine Ausnahme wird ausgelöst.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary>Lädt den Inhalt einer Assemblydatei mit dem angegebenen Pfad.</summary>
      <param name="assemblyPath">Der voll gekennzeichnete Pfad der zu ladenden Datei.</param>
      <exception cref="T:System.ArgumentException">Das <paramref name="assemblyPath" />-Argument ist kein absoluter Pfad.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="assemblyPath" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine gefundene Datei konnte nicht geladen werden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der <paramref name="assemblyPath" />-Parameter ist eine leere Zeichenfolge ("") oder nicht vorhanden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> ist keine gültige Assembly.</exception>
      <returns>Die geladene Assembly.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary>Lädt den Inhalt des nativen Images einer verwalteten Assemblydatei im angegebenen Pfad.</summary>
      <param name="nativeImagePath">Der voll gekennzeichnete Pfad der zu ladenden Datei.</param>
      <param name="assemblyPath">Der vollqualifizierte Pfad der IL-Version der Datei, die geladen werden soll, oder <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">Das <paramref name="nativeImagePath" />-Argument ist kein absoluter Pfad.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="assemblyPath" />-Argument ist kein absoluter Pfad.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="nativeImagePath" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileLoadException">Eine gefundene Datei konnte nicht geladen werden.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Der <paramref name="nativeImagePath" />-Parameter ist eine leere Zeichenfolge ("") oder nicht vorhanden.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" /> ist keine gültige Assembly.</exception>
      <returns>Die geladene Assembly.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary>Lädt die Assembly mit einem COFF (Common Object File Format)-Image, das eine verwaltete Assembly enthält.</summary>
      <param name="assembly">Ein Bytearray, das ein COFF-Image mit einer verwalteten Assembly ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> ist keine gültige Assembly.</exception>
      <returns>Die geladene Assembly.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary>Lädt die Assembly mit einem COFF-basierten Image (Common Object File Format), das eine verwaltete Assembly und optional Symbole dafür enthält.</summary>
      <param name="assembly">Ein Bytearray, das ein COFF-Image mit einer verwalteten Assembly ist.</param>
      <param name="assemblySymbols">Ein Bytearray, das die Rohdatenbytes enthält, die die Symbole für die Assembly darstellen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" /> ist keine gültige Assembly.</exception>
      <returns>Die geladene Assembly.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary>Diese Methode erlaubt einer abgeleiteten Klasse, eine nicht verwaltete Bibliothek anhand ihres Namens zu laden.</summary>
      <param name="unmanagedDllName">Name der nicht verwalteten Bibliothek. In der Regel ist dies der Dateiname ohne Pfad oder Erweiterungen.</param>
      <returns>Ein Handle für die geladene Bibliothek oder <see cref="F:System.IntPtr.Zero" />.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary>Diese Methode lädt eine nicht verwaltete Bibliothek aus dem angegebenen Pfad.</summary>
      <param name="unmanagedDllPath">Der Pfad zur nicht verwalteten Bibliothek.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unmanagedDllPath" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <paramref name="unmanagedDllPath" />-Argument ist leer oder kein absoluter Pfad.</exception>
      <exception cref="T:System.DllNotFoundException">Die Bibliothek wurde nicht gefunden.</exception>
      <exception cref="T:System.BadImageFormatException">Die Bibliothek ist nicht gültig.</exception>
      <returns>Das Betriebssystemhandle für die geladene native Bibliothek.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary>Legt den Stammpfad fest, in dem die Optimierungsprofile für diesen Load-Kontext gespeichert werden.</summary>
      <param name="directoryPath">Der vollständige Pfad zum Verzeichnis, in dem die Optimierungsprofile gespeichert werden.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary>Startet die Profiloptimierung für den angegebenen Profilnamen.</summary>
      <param name="profile">Der Name des Optimierungsprofils.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary>Gibt die Zeichenfolgendarstellung dieses Load-Kontexts zurück.</summary>
      <returns>Die Zeichenfolgendarstellung dieses Load-Kontexts.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary>Initiiert eine Entladung dieses <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</summary>
      <exception cref="T:System.InvalidOperationException">Das Entladen ist nicht zulässig.</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary>Gibt eine Sammlung aller <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />-Instanzen zurück.</summary>
      <returns>Eine Auflistung aller- <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> Instanzen.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary>Gibt eine Sammlung der <see cref="T:System.Reflection.Assembly" /> in <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> geladenen Instanzen zurück.</summary>
      <returns>Eine Auflistung der- <see cref="T:System.Reflection.Assembly" /> Instanzen, die in geladen werden <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary>Ruft den <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> ab, der durch den aktuellsten Aufruf von <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> festgelegt wurde.</summary>
      <returns>Der <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> , der durch den letzten-Aufrufwert festgelegt wird <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> . Dieser Wert kann <see langword="null" /> sein. Der Wert wird in einem gespeichert <see cref="T:System.Threading.AsyncLocal`1" /> , sodass der Wert für jeden asynchronen Kontext eindeutig ist.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary>Ruft den standardmäßigen <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> ab. Der Standardkontext enthält die Hauptassembly der Anwendung und ihre statischen Abhängigkeiten.</summary>
      <returns>Der standardmäßige Assembly-Load-Kontext.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary>Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> entladbar ist.</summary>
      <returns>
        <see langword="true" /> , wenn diese entladbar <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> ist, andernfalls <see langword="false" /> . Wenn im Konstruktor kein Wert angegeben wird, ist der Wert <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary>Ruft den Namen des <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> ab.</summary>
      <returns>Der Name von <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />. Ihr Wert kann <see langword="null" /> sein.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary>Stellt einen Rückgabetyp bereit, der exklusiv für <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> verwendet wird. Ist für die Verwendung als ein <see cref="T:System.IDisposable" /> in einem <see langword="using" />-Block vorgesehen.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary>Legt <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> auf den Wert vor dem Aufruf von <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> fest, der diese Instanz zurückgegeben hat.</summary>
    </member>
  </members>
</doc>