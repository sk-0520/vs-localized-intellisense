<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Gibt verschiedene Optionen an, die beim Generieren von .NET-Typen für einen XML-Webdienst verwendet werden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Aktiviert die Datenbindung.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Erstellt Ereignisse für den asynchronen Aufruf von Webmethoden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Erstellt die Begin-Methode und die End-Methode für den asynchronen Aufruf von Webmethoden.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Generiert explizit angeordneten Serialisierungscode, entsprechend der Angabe durch die <see langword="Order" />-Eigenschaft der Attribute <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> und <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Stellt primitive Typen anhand von Eigenschaften dar.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Stellt primitive Typen nach Feldern und primitive Typen nach <see cref="N:System" />-Namespacetypen dar.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Stellt statische Methoden bereit, um Eingabetext in Namen für Codeentitäten zu konvertieren.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifier" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Erzeugt aus einer Eingabezeichenfolge eine Zeichenfolge in Höckerschreibweise.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Eine Version der Parameterzeichenfolge in Höckerschreibweise.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Erzeugt aus einer Eingabezeichenfolge eine Zeichenfolge in Pascal-Schreibweise.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Eine Version der Parameterzeichenfolge in Pascal-Schreibweise.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Erzeugt einen gültigen Codeentitätsnamen aus einer Eingabezeichenfolge.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Der Name einer Codeentität, z. B. ein Methodenparameter, der normalerweise von einem XML-Element- oder -Attributnamen übernommen wird.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Eine Zeichenfolge, die als Codebezeichner verwendet werden kann, z. B. der Name eines Methodenparameters.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Verwaltet eine Gruppe von Namen für entsprechende Codeentitäten oder Typzuordnungen, die von der Serialisierungsinfrastruktur von .NET Framework generiert werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Klasse und bestimmt, ob für die Codebezeichner die Groß- und Kleinschreibung beachtet werden muss.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn für die Bezeichner die Groß- und Kleinschreibung zu beachten ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Fügt dem Bereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz eine benannte Codeentität oder eine Typzuordnung hinzu.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Ein Name, mit dessen Hilfe die Codeentität indiziert wird.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Die Informationen zur Codeentität oder der Typzuordnung.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Verhindert, dass ein angegebener Name innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Ein Name, der innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz nicht verfügbar ist.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Fügt dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz eine benannte Codeentität oder Typzuordnung hinzu und stellt sicher, dass der Name im Gültigkeitsbereich eindeutig ist.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Ein möglicher Name, mit dessen Hilfe die Codeentität indiziert wird.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Die Informationen zur Codeentität oder der Typzuordnung.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Der Bezeichnerparameterwert oder eine geänderte Zeichenfolge, wenn ein Namenskonflikt vorliegt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Entfernt alle Codeentitäten oder Typzuordnungen einschließlich ihrer Namen aus dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Bestimmt, ob ein angegebener Name bereits im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Der Name, für den überprüft werden soll, ob er im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz verwendet wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Name bereits verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Stellt sicher, dass die Eingabe in der richtigen Groß- und Kleinschreibung erfolgt, indem der Name entsprechend dem Wert der <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />-Eigenschaft geändert wird.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">Der Name, der ggf. geändert werden muss.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Eine Zeichenfolge, die dem Eingabebezeichner entspricht bzw. deren erster Buchstabe hinsichtlich der Groß- und Kleinschreibung geändert wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Bestimmt, ob der Eingabename in Konflikt mit einem anderen Namen im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz steht. Wenn ein Konflikt vorliegt, wird eine geänderte Zeichenfolge generiert.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">Der Name, der geändert werden muss, wenn er nicht eindeutig ist.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Der Bezeichnerparameterwert oder eine geänderte Zeichenfolge, wenn ein Namenskonflikt vorliegt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Entfernt die durch den Eingabenamen angegebene Codeentität oder Typzuordnung aus dem Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">Der Name der zu entfernenden Codeentität oder Typzuordnungsinformationen.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Entfernt den Eingabenamen aus den reservierten Namen der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Ein Name, der innerhalb des Gültigkeitsbereichs der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz nicht verfügbar ist.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Gibt ein Array der Codeentitäten oder Typzuordnungen im Gültigkeitsbereich der <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Instanz zurück.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">Der Typ aller Codeentitäten oder Typzuordnungen für die Instanz.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Ein Array der Codeentitäten oder Typzuordnungen, die durch das <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Objekt gespeichert werden.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Ruft einen Wert ab, der angibt, ob die Instanz die Höckerschreibweise verwendet, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" />, um anzugeben, dass die Instanz die Höckerschreibweise verwendet; <see langword="false" />, um anzugeben, dass die Instanz die Pascal-Schreibweise verwendet.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Beschreibt den Kontext, in dem eine Gruppe von Schemas an .NET Framework-Codeentitäten gebunden wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.ImportContext" />-Klasse für die angegebenen Codebezeichner mit der angegebenen Option für die gemeinsame Verwendung von Typen.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">Die Codeentitäten, für die der Kontext gilt.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Ein <see cref="T:System.Boolean" />-Wert, der bestimmt, ob benutzerdefinierte Typen von Schemas gemeinsam verwendet werden.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Ruft einen Wert ab, der bestimmt, ob benutzerdefinierte Typen gemeinsam verwendet werden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn benutzerdefinierte Typen von Schemas gemeinsam verwendet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Ruft eine Reihe von Codeentitäten ab, für die der Kontext gilt.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">Eine Instanz von <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, die die Codeentitäten angibt, für die der Kontext gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Ruft eine Auflistung von Warnungen ab, die beim Import der Codeentitätsbeschreibungen generiert werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">Eine <see cref="T:System.Collections.Specialized.StringCollection" /> mit Warnungen, die beim Import der Codeentitätsbeschreibungen generiert wurden.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Richtet eine <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" />-Eigenschaft zur Verwendung durch die .NET Framework-Infrastruktur ein.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Ruft einen Wert ab, der angibt, ob Leerraum- und Attributwerte normalisiert werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Attributwerte für Leerräume normalisiert werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Ruft einen Wert ab, der angibt, wie Leerräume bei der XML-Analyse behandelt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Ein Member der <see cref="T:System.Xml.WhitespaceHandling" />-Enumeration, das die Behandlung von Leerräumen bei der XML-Analyse beschreibt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Beschreibt einen Schemaimporter.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den Klassenmember als codiertes SOAP-Attribut serialisieren muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />-Klasse unter Verwendung des angegebenen Werts als Name des XML-Attributs.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">Der Name des XML-Attributs.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Ruft den Namen des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Attributs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">Der Name des XML-Attributs. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Ruft den XSD (XML Schema Definition)-Datentyp des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten SOAP-Attributs ab oder legt diesen fest.</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</exception>
      <returns vsli:raw="An XML Schema data type.">Ein XML-Schema Datentyp.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Ruft den XML-Namespace des XML-Attributs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Der XML-Namespace des XML-Attributs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Ermöglicht das Überschreiben von Attributen, die auf Eigenschaften, Felder und Klassen beim Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP durch einen <see cref="T:System.Xml.Serialization.XmlSerializer" /> angewendet werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Fügt der Auflistung von <see cref="T:System.Xml.Serialization.SoapAttributes" />-Objekten, die in <see cref="T:System.Xml.Serialization.SoapAttributes" /> enthalten sind, ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> hinzu. Der <paramref name="type" />-Parameter gibt das Objekt an, das von <see cref="T:System.Xml.Serialization.SoapAttributes" /> überschrieben werden soll. Der <paramref name="member" />-Parameter gibt den Namen des zu überschreibenden Members an.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">Der <see cref="T:System.Type" /> des zu überschreibenden Objekts.</param>
      <param name="member" vsli:raw="The name of the member to override.">Der Name des zu überschreibenden Members.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Fügt einer Auflistung von <see cref="T:System.Xml.Serialization.SoapAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.SoapAttributes" /> hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das von <see cref="T:System.Xml.Serialization.SoapAttributes" /> überschrieben werden soll.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Der <see cref="T:System.Type" /> des Objekts, das überschrieben wird.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der abzurufenden Attribute zugeordnet ist.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab. Durch den <paramref name="member" />-Parameter wird der zu überschreibende Member der Basisklasse angegeben.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">Der <see cref="T:System.Type" /> der Basisklasse, der der Auflistung der zu überschreibenden Attribute zugeordnet ist.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">Der Name des überschriebenen Member, der das zurückzugebende <see cref="T:System.Xml.Serialization.SoapAttributes" /> angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Ein <see cref="T:System.Xml.Serialization.SoapAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Stellt eine Auflistung von Attributobjekten dar, die das Serialisieren und Deserialisieren von SOAP-Methoden durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> steuern.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse unter Verwendung des angegebenen benutzerdefinierten Typs.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Ein beliebiges Objekt, das die <see cref="T:System.Reflection.ICustomAttributeProvider" />-Schnittstelle implementiert, z. B. die <see cref="T:System.Type" />-Klasse.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> ab oder legt dieses fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">Ein <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />, das das Verhalten des <see cref="T:System.Xml.Serialization.XmlSerializer" /> bei der Serialisierung des Members überschreibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Ruft den Standardwert eines XML-Elements oder -Attributs ab oder legt diesen fest.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Ein Objekt, das den Standardwert eines XML-Elements oder -Attributs darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> ab oder legt dieses fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Das zu überschreibende <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine SOAP-Enumeration serialisiert, oder legt dieses fest.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Ein Objekt, das angibt, wie der <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein Enumerationsmember serialisiert.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Eigenschaft als codiertes SOAP XML serialisiert, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Feld oder die Eigenschaft nicht serialisieren soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Ruft ein Objekt ab, das den <see cref="T:System.Xml.Serialization.XmlSerializer" /> anweist, wie ein Objekttyp in codiertes SOAP XML serialisiert werden soll, oder legt dieses fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">Ein <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />, das entweder ein einer Klassendeklaration zugewiesenes <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> überschreibt oder einer Klassendeklaration zugewiesen wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den öffentlichen Memberwert als codiertes SOAP XML-Element serialisieren soll.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapElementAttribute" />-Klasse und gibt den Namen des XML-Elements an.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Der XML-Elementname des serialisierten Members.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Ruft den XSD-Datentyp (XML Schema Definition) des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Einer der XML-Schemadatentypen.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member, dessen <see langword="xsi:null" />-Attribut auf "1" festgelegt ist, serialisieren muss.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:null" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Steuert die Art, in der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />-Klasse mit dem angegebenen Elementnamen.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Elementname.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Ruft den Wert ab, der bei der Serialisierung einer Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde, oder legt diesen fest.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">Der Wert, der bei der Serialisierung der Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einem XML-Dokument generiert bzw. bei der Deserialisierung des Enumerationsmembers erkannt wurde.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Weist <see cref="T:System.Xml.Serialization.XmlSerializer" /> an, den Eigenschaftswert des öffentlichen Felds oder den öffentlichen Lese-/Schreibeigenschaftswert nicht zu serialisieren.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Ermöglicht dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Erkennen eines Typs beim Serialisieren oder Deserialisieren eines Objekts als codiertes SOAP-XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />-Klasse.</summary>
      <param name="type" vsli:raw="The type of the object to include.">Der Typ des aufzunehmenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Ruft den Typ des Objekts ab, der bei der Serialisierung oder Deserialisierung eines Objekts verwendet werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="The type of the object to include.">Der Typ des aufzunehmenden Objekts.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Generiert Zuordnungen zu SOAP-codierten Nachrichten von .NET Framework-Typen oder Informationen zu Webdienstmethoden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt einen standardmäßigen XML-Namespace für importierte Typzuordnungen an.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt Überschreibungen für die XML-Serialisierung an.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Objekt, das die Serialisierung zugeordneter Typen mit SOAP-Codierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Klasse und gibt XML-Serialisierungsüberschreibungen und einen standardmäßigen XML-Namespace an.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Ein <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />-Objekt, das die Serialisierung zugeordneter Typen mit SOAP-Codierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass eine generierte Deserialisierung eine Überprüfung auf den erwarteten qualifizierten Namen des Wrapperelements ausführen soll, andernfalls <see langword="false" />. Der Wert dieses Parameters ist nur relevant, wenn der Wert des <paramref name="hasWrapperElement" />-Parameters <see langword="true" /> ist.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Generiert interne Typzuordnungen für Informationen, die von einer Webdienstmethode erfasst werden.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Ein Array von .NET Framework-Codeentitäten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass Elemente, die WSDL-Nachrichtenteilen entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Meldung aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" />, um eine Webdienstbindung im RPC-Stil anzugeben, <see langword="false" />, um eine Webdienstbindung im Dokumentstil oder einen SOAP-Header anzugeben.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass eine generierte Deserialisierung eine Überprüfung auf den erwarteten qualifizierten Namen des Wrapperelements ausführen soll, andernfalls <see langword="false" />. Der Wert dieses Parameters ist nur relevant, wenn der Wert des <paramref name="hasWrapperElement" />-Parameters <see langword="true" /> ist.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Generiert für einen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Generiert für einen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Platziert Zuordnungen für einen Typ im Kontext der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Instanz zur späteren Verwendung, wenn Importmethoden aufgerufen werden.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">Der .NET Framework-Typ, für den Zuordnungsinformationen gespeichert werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Platziert Zuordnungen für abgeleiteten Typen im Kontext der <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />-Instanz zur späteren Verwendung, wenn Importmethoden aufgerufen werden.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Ein <see cref="T:System.Reflection.ICustomAttributeProvider" />-Reflektionsobjekt, das benutzerdefinierte Attribute enthält, die vom <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />-Attribut abgeleitet sind.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Stellt bestimmte Attribute eines XSD-&lt;<see langword="part" />&gt;-Elements in einem WSDL-Dokument zum Generieren von Klassen aus dem Dokument dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapSchemaMember" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Ruft einen Wert ab, der dem Namensattribut des WSDL-Teilelements entspricht, oder legt diesen fest.</summary>
      <returns vsli:raw="The element name.">Der Elementname.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Ruft einen Wert ab, der dem Typattribut des WSDL-Teilelements entspricht, oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der dem XML-Typ entspricht.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Steuert das Schema, das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz als SOAP-codiertes XML generiert wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />-Klasse und gibt den Namen und XML-Namespace des Typs an.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">Der XML-Namespace des Typs.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Ruft einen Wert ab, der angibt, ob der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in SOAP-codierte XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">Der Namespace des XML-Typs. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">Der Name des XML-Typs. Der Standardwert ist der Klassenname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Stellt Daten für ein in einem codierten SOAP-XML-Stream bei der Deserialisierung gefundenes Objekt bereit, das bekannt ist, auf das aber nicht verwiesen wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />-Klasse.</summary>
      <param name="o" vsli:raw="The unreferenced object.">Das Objekt ohne Verweis.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Eine eindeutige Zeichenfolge zur Identifikation des Objekts ohne Verweis.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Ruft die ID des Objekts ab.</summary>
      <returns vsli:raw="The ID of the object.">Die ID des Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Ruft das deserialisierte Objekt ab, auf das aber nicht verwiesen wird.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">Das deserialisierte Objekt, auf das nicht verwiesen wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Stellt eine Auflistung von <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Fügt der Auflistung <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> hinzu.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Der Index des neu hinzugefügten <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in der Auflistung vorhanden ist.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">Das gesuchte <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Kopiert die gesamte Auflistung in ein kompatibles eindimensionales Array von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten, beginnend ab dem angegebenen Index im Zielarray.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">Das eindimensionale Array von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten, in das die Elemente aus der Auflistung kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Ruft den Index der angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> ab.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">Das <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, dessen Index gesucht wird.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Der Index des angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Fügt <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> am angegebenen Index in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">Der Index, an dem <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> eingefügt wird.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Entfernt den angegebenen <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> aus der Auflistung.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Ruft die <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Der Index des <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Ein <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> am angegebenen Index.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein spezieller Klassenmember als Array von XML-Elementen serialisieren muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />-Klasse und gibt den in der XML-Dokumentinstanz generierten XML-Elementnamen an.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Der Name des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Ruft den für das serialisierte Array angegebenen XML-Elementnamen ab oder legt diesen fest.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">Der XML-Elementname des serialisierten Arrays. Der Standardname ist der Name des Members, dem <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> zugewiesen ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Ruft einen Wert ab, der angibt, ob der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Elementname gekennzeichnet oder nicht gekennzeichnet ist, oder legt diesen fest.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Der Standardwert ist <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member als leeres XML-Tag, bei dem das <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Ruft den Namespace des XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Ruft die explizite Reihenfolge ab, in der die Elemente serialisiert oder deserialisiert werden, oder legt diese fest.</summary>
      <returns vsli:raw="The order of the code generation.">Die Reihenfolge der Codegenerierung.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Stellt ein Attribut dar, das die abgeleiteten Typen angibt, welche der <see cref="T:System.Xml.Serialization.XmlSerializer" /> in ein serialisiertes Array einfügen kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements an.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Der Name des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den Namen des im XML-Dokument generierten XML-Elements sowie den <see cref="T:System.Type" /> an, der in das generierte XML-Dokument eingefügt werden kann.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Der Name des XML-Elements.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Klasse und gibt den <see cref="T:System.Type" /> an, der in das serialisierte Array eingefügt werden kann.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">Der <see cref="T:System.Type" /> des zu serialisierenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Ruft den XML-Datentyp des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Ein XSD-Datentyp (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Ruft einen Wert ab, der angibt, ob der Name des generierten XML-Elements gekennzeichnet ist, oder legt diesen fest.</summary>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">Die <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />-Eigenschaft wird auf <see langword="XmlSchemaForm.Unqualified" /> festgelegt, und es wird ein <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />-Wert angegeben.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Der Standardwert ist <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member als leeres XML-Tag, bei dem das <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />, und es wird keine Instanz generiert. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Ruft den Namespace des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">Der Namespace des generierten XML-Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Ruft die Ebene in einer Hierarchie von XML-Elementen ab, auf die das <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> angewendet wird, oder legt diese fest.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">Der nullbasierte Index einer Reihe von Indizes in einem Array von Arrays.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Ruft den in einem Array zulässigen Typ ab oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">Ein <see cref="T:System.Type" />, der in dem Array zulässig ist.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Stellt eine Auflistung von <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Fügt der Auflistung <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> hinzu.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">Der der Auflistung hinzuzufügende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
      <returns vsli:raw="The index of the added item.">Der Index des hinzugefügten Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Gibt an, ob die Auflistung das angegebene <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> enthält.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">Der zu überprüfende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung die angegebene <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Kopiert ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Array in die Auflistung, beginnend am angegebenen Zielindex.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">Das Array von <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten, die in die Auflistung kopiert werden sollen.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">Der Index, ab dem mit dem Kopieren der Attribute begonnen wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Gibt einen null-basierten Index des ersten Auftretens der angegebenen <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in der Auflistung zurück oder -1, wenn das Attribut in der Auflistung nicht gefunden wird.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">Die <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />, die in der Auflistung gesucht werden soll.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Der erste Index des <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in der Auflistung, oder -1, wenn das Attribut in der Auflistung nicht gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Fügt <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> am angegebenen Index in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">Der Index, an dem das Attribut eingefügt wird.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Entfernt ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> aus der Auflistung, sofern vorhanden.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Ruft das Element am angegebenen Index ab oder legt es fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">Der nullbasierte Index des Auflistungsmembers, der abgerufen oder festgelegt werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">Das <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekt am angegebenen Index.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Ruft ein Objekt ab, das das unbekannte XML-Attribut darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">Ein <see cref="T:System.Xml.XmlAttribute" />, das das unbekannte XML-Attribut darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Ruft eine durch Trennzeichen getrennte Liste von XML-Attributnamen ab, von denen erwartet wird, dass sie in einer XML-Dokumentinstanz vorhanden sind.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Eine durch Trennzeichen getrennte Liste von XML-Attributnamen. Jeder Name besitzt das folgende Format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Ruft die Zeilennummer des unbekannten XML-Attributs ab.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">Die Zeilennummer des unbekannten XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Ruft die Position des unbekannten XML-Attributs in der Zeile ab.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">Die Positionsnummer des unbekannten XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Ruft das Objekt ab, das gerade deserialisiert wird.</summary>
      <returns vsli:raw="The object being deserialized.">Das Objekt, das deserialisiert wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Stellt die Methode dar, die <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Ermöglicht das Überschreiben der Attribute von Eigenschaften, Feldern und Klassen beim Serialisieren oder Deserialisieren eines Objekts mit <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Fügt der Auflistung von <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das überschrieben werden soll. Der <paramref name="member" />-Parameter gibt den Namen des zu überschreibenden Members an.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">Der <see cref="T:System.Type" /> des zu überschreibenden Objekts.</param>
      <param name="member" vsli:raw="The name of the member to override.">Der Name des zu überschreibenden Members.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Fügt der Auflistung von <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekten ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt hinzu. Der <paramref name="type" />-Parameter gibt ein Objekt an, das vom <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt überschrieben werden soll.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Der <see cref="T:System.Type" /> des Objekts, das überschrieben wird.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />-Objekt, das die überschreibenden Attribute darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Ruft das dem angegebenen Basisklassentyp zugeordnete Objekt ab.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der abzurufenden Attribute zugeordnet ist.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Ruft das dem angegebenen (Basisklassen-)Typ zugeordnete Objekt ab. Durch den member-Parameter wird der zu überschreibende Member der Basisklasse angegeben.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">Die <see cref="T:System.Type" />-Basisklasse, die der Auflistung der gewünschten Attribute zugeordnet ist.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">Der Name des überschriebenen Member, der das zurückzugebende <see cref="T:System.Xml.Serialization.XmlAttributes" /> angibt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Ein <see cref="T:System.Xml.Serialization.XmlAttributes" />, das die Auflistung der überschreibenden Attribute darstellt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Stellt eine Auflistung von Attributobjekten dar, die steuern, wie der <see cref="T:System.Xml.Serialization.XmlSerializer" /> Objekte serialisiert und deserialisiert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse und passt die Serialisierung und Deserialisierung durch den <see cref="T:System.Xml.Serialization.XmlSerializer" /> an.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Eine Klasse, die alternative Implementierungen von Attributen zur Steuerung der XML-Serialisierung bereitstellen kann.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Ruft das zu überschreibende <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> ab oder legt dieses fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Das zu überschreibende <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Ruft die Auflistung der zu überschreibenden <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekte ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Das <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />, das die Auflistung der <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Objekte darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine Lese-/Schreibeigenschaft serialisiert, die ein Array zurückgibt, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Ein <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine Lese-/Schreibeigenschaft serialisiert, die ein Array zurückgibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Ruft eine Auflistung von Objekten ab, die die von <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendete Serialisierung von Elementen angeben, die in ein von öffentlichen Feldern oder Lese-/Schreibeigenschaften zurückgegebenes Array eingefügt wurden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Ein <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />-Objekt, das eine Auflistung von <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />-Objekten enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft als XML-Attribut serialisiert, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">Ein <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />, das die Serialisierung eines öffentlichen Felds oder einer Lese-/Schreibeigenschaft als XML-Attribut steuert.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Ruft ein Objekt ab, mit dem Sie eine Reihe von Auswahlmöglichkeiten unterscheiden können, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">Ein <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />, das auf einen Klassenmember angewendet werden kann, der als <see langword="xsi:choice" />-Element serialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Ruft den Standardwert eines XML-Elements oder -Attributs ab oder legt diesen fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">Ein <see cref="T:System.Object" />, das den Standardwert eines XML-Elements oder -Attributs darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Ruft eine Auflistung von Objekten ab, die angeben, wie öffentliche Felder oder Lese-/Schreibeigenschaften von <see cref="T:System.Xml.Serialization.XmlSerializer" /> als XML-Elemente serialisiert werden, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">Ein <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, das eine Auflistung von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Ein <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />, das angibt, auf welche Weise ein Enumerationsmember von <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft serialisiert, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Feld oder die Eigenschaft nicht serialisieren soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Ruft einen Wert ab, der angibt, ob alle Namespacedeklarationen beibehalten werden sollen, wenn ein Objekt überschrieben wird, das einen Member enthält, der ein <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Objekt zurückgibt, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Namespacedeklarationen beibehalten werden sollen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine Klasse als XML-Stammelement serialisiert, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das eine Klasse überschreibt, die als XML-Stammelement attributiert ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Ruft ein Objekt ab, mit dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> angewiesen wird, ein öffentliches Feld oder eine öffentliche Lese-/Schreibeigenschaft als XML-Text zu serialisieren, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">Ein <see cref="T:System.Xml.Serialization.XmlTextAttribute" />, das die Standardserialisierung öffentlicher Eigenschaften oder Felder überschreibt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Ruft ein Objekt ab, das angibt, wie <see cref="T:System.Xml.Serialization.XmlSerializer" /> eine Klasse serialisiert, der das <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> zugewiesen wurde, oder legt dieses fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">Ein <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />, das ein <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> überschreibt, das einer Klassendeklaration zugewiesen wurde.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Gibt an, dass der Member durch Verwendung einer Enumeration genauer erkannt werden kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />-Klasse.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">Der Membername, der die Enumeration zurückgibt, mit der eine Auswahl bestimmt wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Ruft den Namen des Felds ab, das die Enumeration zurückgibt, mit der Typen bestimmt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">Der Name eines Felds, das eine Enumeration zurückgibt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Enthält Felder, die zum Übergeben von Ereignisdelegaten an eine threadsichere <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />-Methode des <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendet werden können.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Ruft ein Objekt ab, das die Methode zum Behandeln des <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignisses darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />, der auf den Ereignishandler zeigt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Stellt eine Auflistung mit <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Objekten dar, die vom <see cref="T:System.Xml.Serialization.XmlSerializer" />-Element verwendet werden, um die Standardmethode für die Serialisierung einer Klasse zu überschreiben.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttributes" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Fügt der Auflistung <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> hinzu.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">Der nullbasierte Index des neu hinzugefügten Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Bestimmt, ob die Auflistung das angegebene Objekt enthält.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">Das zu suchende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Element.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Objekt in der Aufzählung vorhanden ist; sonst <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Kopiert das <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> oder einen Teil davon in ein eindimensionales Array.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">Das <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Array, welches die kopierten Elemente enthält.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Ruft den Index der angegebenen <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> ab.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">Die <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dessen Index abgerufen wird.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Der nullbasierte Index von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Fügt <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> in die Auflistung ein.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">Der null-basierte Index, wo der Member eingefügt wurde.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">Der einzufügende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Entfernt das angegebene Objekt aus der Auflistung.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">Die aus der Auflistung zu entfernende <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> ist kein gültiger Index in <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">Die Eigenschaft wird festgelegt, und <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> ist schreibgeschützt.</exception>
      <returns vsli:raw="The element at the specified index.">Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Ruft das Objekt ab, das das unbekannte XML-Element darstellt.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">Das Objekt ab, das das unbekannte XML-Element darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Ruft eine durch Trennzeichen getrennte Liste von XML-Elementnamen ab, von denen erwartet wird, dass sie in einer XML-Dokumentinstanz vorhanden sind.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Eine durch Trennzeichen getrennte Liste von XML-Elementnamen. Jeder Name besitzt das folgende Format: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Ruft die Zeilennummer ab, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Die Zeilennummer, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist, andernfalls -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Ruft die Stelle in der Zeile ab, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Die Zeilennummer, in der sich das unbekannte Element befindet, wenn der XML-Reader ein <see cref="T:System.Xml.XmlTextReader" /> ist, andernfalls -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Ruft das von <see cref="T:System.Xml.Serialization.XmlSerializer" /> deserialisierte Objekt ab.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Das Objekt, das durch den <see cref="T:System.Xml.Serialization.XmlSerializer" /> deserialisiert wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Ermöglicht dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Erkennen eines Typs beim Serialisieren oder Deserialisieren eines Objekts.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />-Klasse.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">Der <see cref="T:System.Type" /> des aufzunehmenden Objekts.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Ruft den Typ des aufzunehmenden Objekts ab oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">Der <see cref="T:System.Type" /> des aufzunehmenden Objekts.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Unterstützt Zuordnungen zwischen .NET Framework-Typen und XML-Schemadatentypen.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Legt den Schlüssel fest, der zum Ermitteln der Zuordnung verwendet wird.</summary>
      <param name="key" vsli:raw="The lookup key.">Der Suchschlüssel.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Ruft den Namen des zugeordneten Elements ab.</summary>
      <returns vsli:raw="The name of the mapped element.">Der Name des zugeordneten Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Ruft den Namespace des zugeordneten Elements ab.</summary>
      <returns vsli:raw="The namespace of the mapped element.">Der Namespace des zugeordneten Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Ruft den Namen des XSD-Elements der Zuordnung ab.</summary>
      <returns vsli:raw="The XSD element name.">Der XSD-Elementname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Gibt an, ob eine Zuordnung über Lese- oder Schreibzugriff oder über beides verfügt.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Es werden sowohl Lese- als auch Schreibmethoden generiert.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Es werden Lesemethoden generiert.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Es werden Schreibmethoden generiert.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Ordnet eine Codeentität in einer .NET Framework-Webdienstmethode einem Element in einer WSDL-Meldung (Web Services Description Language) zu.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Ruft einen Wert ab, der angibt, ob der .NET Framework-Typ einem XML-Element oder -Attribut eines Typs zugeordnet ist, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ einem XML-Element oder -Attribut zugeordnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Ruft einen Wert ab, der angibt, ob im zugehörigen Feld des .NET Framework-Typs ein Wert angegeben ist.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn im zugehörigen Feld ein Wert angegeben ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Ruft den nicht qualifizierten Namen der XML-Elementdeklaration ab, die für diese Zuordnung gilt.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">Der nicht qualifizierte Name der XML-Elementdeklaration, die für diese Zuordnung gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Ruft den Namen des Webdienstmethoden-Members ab, der durch diese Zuordnung dargestellt wird.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">Der Name des Webdienstmethoden-Members, der durch diese Zuordnung dargestellt wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Ruft den XML-Namespace ab, der für diese Zuordnung gilt.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">Der XML-Namespace, der für diese Zuordnung gilt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Ruft den vollqualifizierten Typnamen des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">Der vollqualifizierte Typname des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Ruft den Typnamen des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">Der Typname des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Ruft den Namespace des .NET Framework-Typs für diese Zuordnung ab.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">Der Namespace des .NET Framework-Typs für diese Zuordnung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Ruft den XML-Elementnamen ab, wie er im Dienstbeschreibungsdokument angezeigt wird.</summary>
      <returns vsli:raw="The XML element name.">Der XML-Elementname.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Stellt Zuordnungen zwischen .NET Framework-Webdienstmethoden und WSDL-Meldungen (Web Services Description Language) her, die für SOAP-Webdienste definiert werden.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Ruft die Anzahl der .NET Framework-Codeentitäten ab, die zu einer Webdienstmethode gehören, der eine SOAP-Nachricht zugeordnet ist.</summary>
      <returns vsli:raw="The number of mappings in the collection.">Die Anzahl der Zuordnungen in der Auflistung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Ruft ein Element ab, das interne Typzuordnungsinformationen für eine .NET Framework-Codeentität enthält, die zu einer Webdienstmethode gehört, die einer SOAP-Nachricht zugeordnet wird.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">Der Index der zurückzugebenden Zuordnung.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">Der angeforderte <see cref="T:System.Xml.Serialization.XmlMemberMapping" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Ruft den Namen des .NET Framework-Typs ab, der dem Datentyp eines XML-Schemaelements zugeordnet wird, das eine SOAP-Nachricht darstellt.</summary>
      <returns vsli:raw="The name of the .NET type.">Der Name des .NET Framework-Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Ruft den Namespace des .NET Framework-Typs ab, der dem Datentyp eines XML-Schemaelements zugeordnet wird, das eine SOAP-Nachricht darstellt.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">Der .NET Framework-Namespace der Zuordnung.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Stellt Daten für das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Ruft die Zeilennummer des unbekannten XML-Knotens ab.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">Die Zeilennummer des unbekannten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Ruft die Position des unbekannten XML-Knotens in der Zeile ab.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">Die Positionsnummer des unbekannten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Ruft den lokalen XML-Namen des gerade deserialisierten XML-Knotens ab.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">Der lokale XML-Name des gerade deserialisierten XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Ruft den Namen des gerade deserialisierten XML-Knotens ab.</summary>
      <returns vsli:raw="The name of the node being deserialized.">Der Name des gerade deserialisierten Knotens.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Ruft den Namespace-URI ab, der dem gerade deserialisierten XML-Knoten zugeordnet ist.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">Der Namespace-URI, der dem gerade deserialisierten XML-Knoten zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Ruft den Typ des gerade deserialisierten XML-Knotens ab.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">Der <see cref="T:System.Xml.XmlNodeType" />, der den gerade deserialisierten XML-Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Ruft das Objekt ab, das gerade deserialisiert wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Ruft den Text des gerade deserialisierten XML-Knotens ab.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">Der Text des gerade deserialisierten XML-Knotens.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Stellt die Methode dar, die das <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis einer <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse behandelt.</summary>
      <param name="sender" vsli:raw="The source of the event.">Die Quelle des Ereignisses.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">Ein <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Generiert Zuordnungen zu XML-Schemaelementdeklarationen, einschließlich XSD-Nachrichtenteilen (XML-Schema Definition) in einem WDSL-Dokument (Web Services Description Language), für .NET Framework-Typen oder Informationen zu Webdienstmethoden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe des angegebenen XML-Standardnamespaces.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe der angegebenen XML-Serialisierungsüberschreibungen.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Ein Objekt, das die Serialisierung von zugeordneten Typen durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />-Klasse mithilfe der angegebenen XML-Serialisierungsüberschreibungen und des XML-Standardnamespaces.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Ein Objekt, das die Serialisierung von zugeordneten Typen durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse überschreibt.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Der XML-Standardnamespace, der für importierte Typzuordnungen verwendet wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Generiert interne Typzuordnungen für Informationen von einer Webdienstmethode.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> mit Zuordnungen zu den Elementteilen einer WSDL-Nachrichtendefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Gibt interne Typzuordnungen mithilfe von Informationen aus einer Webdienstmethode zurück und ermöglicht es Ihnen, einen XML-Elementnamen, einen XML-Namespace und andere Optionen anzugeben.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Gibt interne Typzuordnungen mithilfe von Informationen aus einer Webdienstmethode zurück und ermöglicht es Ihnen, einen XML-Elementnamen, einen XML-Namespace und andere Optionen anzugeben.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der generierte Schematyp mit dem <see langword="&lt;xs:anyAttribute&gt;" />-Element markiert wird, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Generiert interne Typzuordnungen für Informationen von einer Webdienstmethode.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementname.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Ein von der Webdienstmethode erzeugter XML-Elementnamespace.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Ein Array von <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Objekten, die .NET Framework-Codeentitäten enthalten, die zu einer Webdienstmethode gehören.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Elemente, die WSDL-Nachrichtenteilen (Web Services Description Language) entsprechen, in ein zusätzliches Wrapperelement in einer SOAP-Nachricht aufgenommen werden sollen, andernfalls <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Methode ein Remoteprozeduraufruf ist, andernfalls <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der generierte Schematyp mit dem <see langword="&lt;xs:anyAttribute&gt;" />-Element markiert wird, andernfalls <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Einer der <see cref="T:System.Xml.Serialization.XmlMappingAccess" />-Werte. Der Standardwert ist <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die Zuordnungen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Generiert für einen angegebenen .NET Framework-Typ eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs und Namespaces eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs und Attributs eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Attribut, das auf den Typ angewendet wird.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das eine Zuordnung eines .NET Framework-Typs zu einem XML-Schemaelement darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Generiert für einen angegebenen .NET Framework-Typ mithilfe des angegebenen Typs, Attributs und Namespaces eine Zuordnung zu einem XML-Schemaelement.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Der .NET Framework-Typ, für den eine Typzuordnung generiert werden soll.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Attribut, das auf den Typ angewendet wird.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Der XML-Standardnamespace, der verwendet werden soll.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das die interne .NET Framework-Zuordnung eines Typs zu einem XML-Schemaelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Schließt Zuordnungen für einen Typ zur späteren Verwendung ein, wenn Importmethoden aufgerufen werden.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">Der .NET Framework-Typ, für den Zuordnungsinformationen gespeichert werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Schließt Zuordnungen für abgeleitete Typen zur späteren Verwendung ein, wenn Importmethoden aufgerufen werden.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Eine Instanz der <see cref="T:System.Reflection.ICustomAttributeProvider" />-Klasse, die benutzerdefinierte Attribute enthält, die vom <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />-Attribut abgeleitet sind.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Stellt Zuordnungen zwischen Codeentitäten in .NET Framework-Webservicemethoden und dem Inhalt der WSDL-Meldungen (Web Services Description Language) her, die für SOAP-Webdienste definiert werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlReflectionMember" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> den Rückgabewert einer Webdienstmethode darstellt und keinen Ausgabeparameter.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Member einen Webdienstrückgabewert darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Ruft den Namen des Webdienstmethodenmembers für diese Zuordnung ab oder legt diesen Namen fest.</summary>
      <returns vsli:raw="The name of the Web service method.">Der Name der Webdienstmethode.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Ruft den Typ der Codeentität für den Member der Webdienstmethode ab, die von dieser Zuordnung dargestellt wird, oder legt den Typ fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">Der <see cref="T:System.Type" /> der Codeentität für den Member der Webdienstmethode, die durch diese Zuordnung dargestellt wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Ruft einen Wert ab, der angibt, dass der Wert des <c>isNullable</c>-Attributs in der Definition des entsprechenden XML-Elements <see langword="false" /> ist, oder legt einen Wert fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />-Eigenschaft zu überschreiben, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Ruft eine <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse mit der Auflistung SOAP-bezogener Attribute ab, die auf die Membercodeentität angewendet wurden, oder legt sie fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">Eine <see cref="T:System.Xml.Serialization.SoapAttributes" />-Klasse, die die Objekte enthält, die SOAP-Attribute darstellen, die auf den Member angewendet wurden.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Ruft eine <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse mit der Auflistung <see cref="T:System.Xml.Serialization.XmlSerializer" />-bezogener Attribute auf, die auf die Membercodeenität angewendet wurden, oder legt diese Klasse fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">Eine <see cref="T:System.Xml.Serialization.XmlAttributes" />-Klasse, die XML-Attribute darstellt, die auf den Membercode angewendet wurden.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Ermöglicht das Durchlaufen einer Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />-Klasse.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">Das <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt, über das eine Iteration durchgeführt werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Gibt alle vom <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Setzt den Enumerator auf das nächste Element in der Auflistung.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Verschiebung ordnungsgemäß ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Legt den Enumerator auf seine anfängliche Position, d. h. vor dem ersten Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten fest.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Ruft das aktuelle Element in der Auflistung ab.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Das aktuelle <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt in der Auflistung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Ruft das aktuelle Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten ab.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Das aktuelle Element in der Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Füllt <see cref="T:System.Xml.Schema.XmlSchema" />-Objekte mit XML-Schemaelement-Deklarationen auf, die in typzuordnenden Objekten gefunden werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />-Klasse.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten, denen von Typzuordnungen erhaltene Elementdeklarationen hinzugefügt werden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Exportiert ein <c>&lt;beliebiges&gt;</c> Element nach dem <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das durch den angegebenen Namespace identifiziert wird.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">Der Namespace des XML-Schemadokuments, dem ein <c>&lt;beliebiges&gt;</c> Element hinzugefügt wird.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Ein beliebiger Name, der der Deklaration des <c>&lt;beliebigen&gt;</c> Elements zugewiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Fügt einer SOAP-Nachricht oder einem <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt eine Elementdeklaration für ein Objekt oder einen Typ hinzu.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das zu exportierende Zuordnungen enthält.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">Die Zeichenfolge "any" mit einer angefügten ganzen Zahl.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" /> für jeden der Elementteile einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Die internen .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Meldungsdefinition (Web Services Description Language).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" /> für jeden der Elementteile einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu und gibt an, ob einschließende Elemente einbezogen sind.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">Die interne Zuordnung zwischen einem .NET Framework-Typ und einem XML-Schemaelement.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Schemaelemente, die das Schema einschließen, einbezogen werden sollen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt für einen einzelnen Elementteil einer literalen SOAP-Nachrichtendefinition eine Elementdeklaration hinzu.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Interne .NET Framework-Typzuordnungen für die Elementteile einer WSDL-Meldungsdefinition (Web Services Description Language).</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den qualifizierten XML-Namen der exportierten Elementdeklaration darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Fügt dem entsprechenden <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt eine Elementdeklaration für einen .NET Framework-Typ hinzu.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">Die interne Zuordnung zwischen einem .NET Framework-Typ und einem XML-Schemaelement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Generiert interne Zuordnungen zwischen .NET Framework-Typen und XML-Schema-Elementdeklarationen einschließlich literalen XSD-Meldungsteilen in WSDL-Dokumenten.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />-Klasse, wobei eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten übernommen wird, die von literalen SOAP-Nachrichten verwendete XML-Schemas darstellen, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />-Klasse, wobei eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten übernommen wird, die von literalen SOAP-Nachrichten verwendeten XML-Schemas darstellen, sowie Klassen, die für in einem WSDL-Dokument definierte Bindungen generiert werden.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Ein <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Ein <see cref="T:System.Xml.Serialization.CodeIdentifiers" />-Objekt, das eine Auflistung von Klassen angibt, die für in einem WSDL-Dokument definierte Bindungen generiert werden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Generiert interne Typzuordnungsinformationen für einen einzelnes in einem WSDL-Dokument definiertes literales Teilelement (SOAP).</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen eines Elementtyps angibt, für den ein .NET Framework-Typ generiert wird.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">Der Name des Teilelements im WSDL-Dokument.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die .NET Framework-Typzuordnung für ein einzelnes Teilelement einer WSDL-Meldungsdefinition darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Ein Basistyp für den generierten .NET Framework-Typ, der dem Typ eines XSD-Elements entspricht.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />, das die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument oder als Teil eines WSDL-Dokuments definiertes Element.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Ein Basistyp für den generierten .NET Framework-Typ, der dem Typ eines XSD-Elements entspricht.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um anzugeben, dass der einem XSD-Element entsprechende Typ indirekt vom Basistyp erben kann, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">Der Name des Elements, für das eine Zuordnung generiert werden soll.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">Der Namespace des Elements, für das eine Zuordnung generiert werden soll.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Ein Array von <see cref="T:System.Xml.Serialization.SoapSchemaMember" />-Instanzen, mit dem die Member des Elements angegeben werden, für das eine Zuordnung generiert werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das Typzuordnungsinformationen enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Generiert interne Typzuordnungsinformationen für ein einzelnes in einem WSDL-Dokument definiertes literales Teilelement (SOAP).</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen des Meldungsteils angibt.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">Die .NET Framework-Typzuordnung für eine WSDL-Meldungsdefinition, die ein einzelnes Teilelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Ein Array vom Typ <see cref="T:System.Xml.XmlQualifiedName" />, das die Namen der Meldungsteile angibt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">Ein <see cref="T:System.Xml.Serialization.XmlMembersMapping" />, das die .NET Framework-Typzuordnungen für die Teilelemente einer WSDL-Meldungsdefinition darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Generiert interne Typzuordnungsinformationen für die Teilelemente von literal zu verwendenden SOAP-Nachrichten, die in einem WSDL-Dokument definiert sind.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Ein Array vom Typ <see cref="T:System.Xml.XmlQualifiedName" />, das die Namen der Meldungsteile angibt.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Ein Basistyp für alle .NET Framework-Typen, die als Entsprechung von Meldungsteilen generiert werden.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Typen, die Meldungsteilen entsprechen, indirekt vom Basistyp erben können, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Die .NET Framework-Typzuordnungen für die Teilelemente einer WSDL-Meldungsdefinition.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Ein <see cref="T:System.Type" />-Objekt, das einen Basistyp angibt.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der ein XML-Element angibt.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Ein <see cref="T:System.Type" />-Objekt, das einen Basistyp angibt.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob der generierte Typ den <paramref name="baseType" /> indirekt erben kann.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Ein <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekt, das eine Typzuordnung beschreibt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Generiert interne Typzuordnungsinformationen für ein in einem XML-Schemadokument definiertes Element.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen von einem in einem XML-Schemadokument definierten Element angibt.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Die .NET Framework-Typzuordnungsinformationen für ein XML-Schemaelement.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Stellt die Auflistung von XML-Schemas dar.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Fügt ein Objekt am Ende der Auflistung hinzu.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">Das der Auflistung von Objekten hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Der Index, an dem das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzugefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Fügt ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt hinzu, das einen Assemblyverweis auf die Auflistung darstellt.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">Der <see cref="T:System.Uri" /> des Schemaobjekts.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Der Index, an dem das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzugefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Fügt am Ende der Auflistung eine Instanz der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse hinzu.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">Das <see cref="T:System.Xml.Serialization.XmlSchemas" />-Objekt, das am Ende der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Fügt ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt hinzu, das einen Assemblyverweis auf die Auflistung darstellt.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Das hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Verarbeitet die Element- und Attributnamen in den XML-Schemas und validiert optional die XML-Schemas.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">Ein <see cref="T:System.Xml.Schema.ValidationEventHandler" />, der die Rückrufmethode angibt, die Fehler und Warnungen während der XML-Schemavalidierung behandelt, wenn der Strict-Parameter auf <see langword="true" /> festgelegt ist.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, um die XML-Schemas in der Auflistung mithilfe der <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" />-Methode der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Klasse zu validieren, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Gibt einen Wert zurück, der angibt, ob die Auflistung ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt enthält, das zum angegebenen Namespace gehört.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">Der Namespace des gesuchten Elements.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Bestimmt, ob <see cref="T:System.Xml.Serialization.XmlSchemas" /> ein bestimmtes Schema enthält.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">Das zu suchende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Auflistung das angegebene Element enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Kopiert das gesamte <see cref="T:System.Xml.Serialization.XmlSchemas" /> in ein kompatibles eindimensionales <see cref="T:System.Array" />, das am angegebenen Index des Zielarrays beginnt.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus <see cref="T:System.Xml.Serialization.XmlSchemas" /> kopierten Schemas ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">Eine 32-Bit-Ganzzahl, die den Index im Array angibt, ab dem kopiert werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Sucht ein <see cref="T:System.Xml.Schema.XmlSchemaObject" /> mit dem angegebenen Namen und Typ in einem der XML-Schemas.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der einen voll gekennzeichneten Namen mit einem Namespace für die Suche eines <see cref="T:System.Xml.Schema.XmlSchema" />-Objekts in der Auflistung angibt.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">Der <see cref="T:System.Type" /> des gesuchten Objekts. Mögliche Typen sind: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> und <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Eine <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Instanz, z. B. <see cref="T:System.Xml.Schema.XmlSchemaElement" /> oder <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Ruft eine Auflistung von Schemas ab, die zum gleichen Namespace gehören.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">Der Namespace der abzurufenden Schemas.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Eine <see cref="T:System.Collections.IList" />-Implementierung, die die Schemas enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Sucht nach dem angegebenen Schema und gibt den nullbasierten Index des ersten Vorkommens innerhalb dem gesamten <see cref="T:System.Xml.Serialization.XmlSchemas" /> zurück.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">Die zu suchende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">Der nullbasierte Index des ersten Vorkommens des Werts im gesamten <see cref="T:System.Xml.Serialization.XmlSchemas" />, sofern gefunden, andernfalls -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Fügt ein Schema am angegebenen Index in <see cref="T:System.Xml.Serialization.XmlSchemas" /> ein.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">Der nullbasierte Index, an dem <paramref name="schema" /> eingefügt werden soll.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">Das einzufügende <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Eine statische Methode, die bestimmt, ob das angegebene XML-Schema ein benutzerdefiniertes <see langword="IsDataSet" />-Attribut enthält, das auf <see langword="true" /> festgelegt ist, oder ein Äquivalent dazu enthält.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">Das XML-Schema, das auf ein <see langword="IsDataSet" />-Attribut mit dem Wert <see langword="true" /> überprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das angegebene Schema vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Führt beim Löschen des Inhalts der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz zusätzliche benutzerdefinierte Prozesse aus.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Führt zusätzliche benutzerdefinierte Prozesse vor dem Einfügen eines neuen Elements in die <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Der nullbasierte Index, an dem der <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Führt zusätzliche benutzerdefinierte Prozesse beim Entfernen eines Elements aus der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Der nullbasierte Index, an dem sich <paramref name="value" /> befindet.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">Der Wert des Elements, das bei <paramref name="index" /> entfernt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Führt zusätzliche benutzerdefinierte Prozesse vor dem Festlegen eines Werts in der <see cref="T:System.Xml.Serialization.XmlSchemas" />-Instanz aus.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Der nullbasierte Index, an dem sich <paramref name="oldValue" /> befindet.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Der Wert, der durch <paramref name="newValue" /> ersetzt werden soll.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Der neue Wert des Elements an <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Entfernt das erste Vorkommen eines bestimmten Schemas aus <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">Das zu entfernende <see cref="T:System.Xml.Schema.XmlSchema" />-Element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Gibt einen Enumerator zurück, der die Auflistung von XML-Schemas durchläuft.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Ruft einen Wert ab, der angibt, ob die Schemas kompiliert wurden.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Schemas kompiliert wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Ruft das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">Der Index des abzurufenden Elements.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">Das angegebene <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Ruft ein angegebenes <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt ab, das das XML-Schema darstellt, das dem angegebenen Namespace zugeordnet ist.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">Der Namespace des angegebenen Objekts.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Das angegebene <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Ein Delegat, der von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zum Deserialisieren von SOAP-codierten XML-Datentypen verwendet wird, denen Auflistungen oder Enumerationen zugeordnet sind.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">Die Auflistung, in die das Array mit den Auflistungselementen kopiert wird.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Ein Array von Elementen, das in die <c>object collection</c> kopiert werden soll.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Der von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse für die Deserialisierung SOAP-codierter XML-Daten verwendete Delegat.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse, die das zu korrigierende Objekt und ein Array mit Zeichenfolgenbezeichnern für die Elemente enthält.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Eine abstrakte Klasse, die die Basisklasse für <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> und <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> darstellt und Methoden enthält, die beiden Typen gemeinsam sind.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Ein von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse verwendeter Delegat, mit dem Typen aus SOAP-codierten XML-Daten, die keine Stammelemente darstellen, deserialisiert werden können.</summary>
      <returns vsli:raw="The object returned by the callback.">Das vom Rückruf zurückgegebene Objekt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Steuert die Deserialisierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Speichert ein Objekt, das eine Rückrufmethode enthält. Diese wird bei Bedarf zum Füllen von .NET Framework-Auflistungen oder -Enumerationen aufgerufen, die SOAP-codierten Arrays oder SOAP-codierten Elementen zugeordnet sind, auf die mehrfach verwiesen wird.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Ein <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegat und die Eingabedaten der Rückrufmethoden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Speichert ein Objekt, das eine Instanz einer Rückrufmethode enthält, die bei Bedarf zum Füllen eines SOAP-codierten Arrays mit Objekten aufgerufen wird.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Ein <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegat und die Eingabedaten der Rückrufmethoden.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Speichert eine Implementierung des <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />-Delegaten und seiner Eingabedaten für einen späteren Aufruf.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">Der Name des .NET Framework-Typs, der deserialisiert wird.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">Der Namespace des .NET Framework-Typs, der deserialisiert wird.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">Der zu deserialisierende <see cref="T:System.Type" />.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Ein <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />-Delegat.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Speichert ein aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiertes Objekt für späteren Zugriff durch die <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />-Methode.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Der Wert des <see langword="id" />-Attributs eines <see langword="multiRef" />-Elements, das das Element identifiziert.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">Das Objekt, das aus dem XML-Element deserialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Überprüft, ob der Deserialisierer auf das nächste Element gesetzt wurde.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">Der aktuelle <see langword="count" /> in einer while-Schleife.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">Der aktuelle <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">Der <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> wurde nicht auf das nächste Element gesetzt.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Entfernt sämtliche Vorkommen von Leerraumzeichen am Anfang und am Ende der angegebenen Zeichenfolge.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">Die Zeichenfolge, deren Leerraum abgetrennt wird.</param>
      <returns vsli:raw="The trimmed string.">Die zugeschnittene Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt abstrakt sein muss.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">Der Name des abstrakten Typs.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">Der .NET Framework-Namespace des abstrakten Typs.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Füllt ein Objekt aus seiner XML-Darstellung an der aktuellen Position des <see cref="T:System.Xml.XmlReader" />. Dabei besteht die Option, das innere Element zu lesen.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">Der lokale Name des abgeleiteten XML-Schemadatentyps.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">Der Namespace des abgeleiteten XML-Schemadatentyps.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">Der lokale Name des XML-Schema-Basisdatentyps.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">Der Namespace des XML-Schema-Basisdatentyps.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">Der Namespace des abgeleiteten .NET Framework-Typs.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">Der Namespace des .NET Framework-Basistyps.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt nicht instanziiert werden kann, weil der Konstruktor eine Sicherheitsausnahme auslöst.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Der Name des Typs.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass das deserialisierte Objekt nicht instanziiert werden kann, weil kein Konstruktor verfügbar ist.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Der Name des Typs.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Erstellt eine <see cref="T:System.InvalidCastException" />, die angibt, dass eine explizite Konvertierung fehlgeschlagen ist.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Der <see cref="T:System.Type" />, in den ein Objekt nicht konvertiert werden kann. Dieser Typ wird in die Ausnahmemeldung integriert.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Das Objekt, das nicht konvertiert werden kann. Dieses Objekt wird in die Ausnahmemeldung integriert.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidCastException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Erstellt eine <see cref="T:System.InvalidCastException" />, die angibt, dass eine explizite Konvertierung fehlgeschlagen ist.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Der <see cref="T:System.Type" />, in den ein Objekt nicht konvertiert werden kann. Dieser Typ wird in die Ausnahmemeldung integriert.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Das Objekt, das nicht konvertiert werden kann. Dieses Objekt wird in die Ausnahmemeldung integriert.</param>
      <param name="id" vsli:raw="A string identifier.">Ein Zeichenfolgenbezeichner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidCastException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein abgeleiteter Typ, der einem XML-Schemadatentyp zugeordnet ist, nicht gefunden werden kann.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">Der lokale Name des XML-Schemadatentyps, der dem nicht verfügbaren abgeleiteten Typ zugeordnet ist.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">Der Namespace des XML-Schemadatentyps, der dem nicht verfügbaren abgeleiteten Typ zugeordnet ist.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">Der vollständige Name des .NET Framework-Basistyps, für den ein abgeleiteter Typ nicht gefunden werden kann.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein SOAP-codierter Auflistungstyp nicht geändert und nicht mit Werten gefüllt werden kann.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">Der vollqualifizierte Name des .NET Framework-Typs für den es eine Zuordnung gibt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die besagt, dass ein Enumerationswert nicht gültig ist.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">Der ungültige Enumerationswert.</param>
      <param name="enumType" vsli:raw="The enumeration type.">Der Typ der Enumeration.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass die aktuelle Position von <see cref="T:System.Xml.XmlReader" /> einen unbekannten XML-Knoten darstellt.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass ein Typ unbekannt ist.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den Namen des unbekannten Typs darstellt.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eine <see cref="T:System.InvalidOperationException" />-Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Stellt sicher, dass ein angegebenes Array oder eine Kopie groß genug für einen angegebenen Index ist.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">Das <see cref="T:System.Array" />, das geprüft wird.</param>
      <param name="index" vsli:raw="The required index.">Der erforderliche Index.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">Der <see cref="T:System.Type" /> der Elemente des Arrays.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">Das ursprüngliche <see cref="T:System.Array" />, wenn es groß genug ist. Andernfalls ein neues größeres Array, das die Elemente des ursprünglichen Arrays enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Füllt ein SOAP-codiertes Array, dessen Datentyp einem .NET Framework-Verweistyp zugeordnet ist, mit Werten.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Ein Objekt, das das Array enthält, das mit Werten gefüllt wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Ruft die Länge vom SOAP-codierten Arrays ab, auf dem der <see cref="T:System.Xml.XmlReader" /> gerade positioniert ist.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">Der lokale Name für das Array.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">Der Namespace des Arrays.</param>
      <returns vsli:raw="The length of the SOAP array.">Die Länge des SOAP-Arrays.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Bestimmt, ob das XML-Element an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> ein NULL-Attribute mit dem Wert <see langword="true" /> hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <see cref="T:System.Xml.XmlReader" /> gerade auf einem NULL-Attribut mit dem Wert <see langword="true" /> positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Ruft ein Objekt ab, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert wird und das vorher mit <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> gespeichert wurde.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Der Wert des <see langword="id" />-Attributs eines <see langword="multiRef" />-Elements, das das Element identifiziert.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Ein Objekt, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert werden soll.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ruft den Wert des <see langword="xsi:type" />-Attributs für das XML-Element an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Ein qualifizierter XML-Name, der den Datentyp eines XML-Elements bezeichnet.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Initialisiert Rückrufmethoden, die Objekte auffüllen, die SOAP-codierten XML-Daten zugeordnet sind.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Speichert Element- und Attributnamen in einem <see cref="T:System.Xml.NameTable" />-Objekt.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Bestimmt, ob ein XML-Attributname einen XML-Namespace angibt.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">Der Name eines XML-Attributs.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der XML-Attributname einen XML-Namespace angibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Legt den Wert des XML-Attributs fest, wenn dieses den Typ <see langword="arrayType" /> aus dem WSDL-Namespace besitzt (Web Services Description Language).</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">Ein <see cref="T:System.Xml.XmlAttribute" />, das den Typ <see langword="wsdl:array" /> aufweisen kann.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Lässt den <see cref="T:System.Xml.XmlReader" /> den vollqualifizierten Namen des Elements lesen, auf dem er gerade positioniert ist.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">Der vollqualifizierte Name des aktuellen XML-Elements.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Lässt den <see cref="T:System.Xml.XmlReader" /> ein XML-Endtag lesen.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Weist den <see cref="T:System.Xml.XmlReader" /> an, das aktuelle XML-Element zu lesen, wenn es ein NULL-Attribut mit dem Wert true hat.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element einen Attributwert <c>null= "true"</c> hat und gelesen worden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Weist den <see cref="T:System.Xml.XmlReader" /> an, den vollqualifizierten Namen des Elements lesen, auf dem er gerade positioniert ist.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der den vollqualifizierten Namen des aktuellen XML-Elements darstellt, andernfalls <see langword="null" />, wenn ein Attributwert <c>null="true"</c> vorhanden ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Weist den <see cref="T:System.Xml.XmlReader" /> an, ein einfaches nur aus Text bestehendes XML-Element zu lesen, das <see langword="null" /> sein könnte.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Der Zeichenfolgenwert, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Liest den Wert des <see langword="href" />-Attributs (<see langword="ref" />-Attribut in SOAP 1.2), das bei der SOAP-Codierung zum Verweis auf ein XML-Element verwendet wird.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Wert gelesen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserialisiert ein Objekt aus einem SOAP-codierten <see langword="multiRef" />-XML-Element.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">Der Wert des Elements, auf das im Dokument verwiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserialisiert ein Objekt aus einem SOAP-codierten <see langword="multiRef" />-XML-Element.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <returns vsli:raw="The value of the referenced element in the document.">Der Wert des Elements, auf das im Dokument verwiesen wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Deserialisiert Objekte aus den SOAP-codierten <see langword="multiRef" />-Elementen in einer SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Elementname auch der XML-Schemadatentypname ist, andernfalls <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Eine Ausgabezeichenfolge, in die der Wert des <see langword="href" />-Attributs eingelesen wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Der lokale Name des XML-Schemadatentyps des Elements.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Der Namespace des XML-Schemadatentyps des Elements.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserialisiert ein Objekt aus einem XML-Element in einer SOAP-Nachricht, die einen Verweis auf ein <see langword="multiRef" />-Element enthält.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Eine Ausgabezeichenfolge, in die der <see langword="href" />-Attributwert eingelesen wird.</param>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Erstellt ein Objekt aus seiner XML-Darstellung an der aktuellen Position des <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ein <see cref="T:System.Xml.Serialization.IXmlSerializable" />, das der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> entspricht.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, wobei die Member von der Position des <see cref="T:System.Xml.XmlReader" /> entnommen werden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Diese Methode unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung im Code vorgesehen.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Ein IXmlSerializable-Objekt, das der aktuellen Position vom XMLReader entspricht.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Gibt an, ob das serialisierbare Objekt umschlossen wird.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Ein Objekt, das die IXmlSerializable-Schnittstelle implementiert, wobei die Member von der Position des XmlReader entnommen werden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Das Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode wird an den Eingabewert angefügt.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Eine Zeichenfolge, die dem Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode vorangestellt wird.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Das Ergebnis eines Aufruf der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode, der an den Eingabewert angefügt wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Gibt das Ergebnis eines Aufrufs der <see cref="M:System.Xml.XmlReader.ReadString" />-Methode der <see cref="T:System.Xml.XmlReader" />-Klasse zurück, dessen Leerraum gegebenenfalls abgetrennt wurde, und das an den Eingabewert angefügt wurde.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Eine Zeichenfolge, die angefügt wird.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Leerraum vom Ergebnis des Lesevorgangs abgetrennt werden soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">Der Eingabewert mit angefügtem Ergebnis des Lesevorgangs.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Liest ein XML-Element, das NULL-Werte (<see langword="xsi:nil = 'true'" />) zulässt, und gibt einen generischen <see cref="T:System.Nullable`1" />-Wert zurück.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Der <see cref="T:System.Xml.XmlQualifiedName" />, der den einfachen Datentyp an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> darstellt.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">Ein generisches <see cref="T:System.Nullable`1" />, das einen XML-NULL-Wert darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Ruft den Wert des XML-Knotens ab, auf dem der <see cref="T:System.Xml.XmlReader" /> gerade positioniert ist.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Der <see cref="T:System.Xml.XmlQualifiedName" />, der den einfachen Datentyp an der aktuellen Position des <see cref="T:System.Xml.XmlReader" /> darstellt.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">Der Wert des Knotens als .NET Framework-Werttyp, wenn der Wert ein einfacher XML-Schemadatentyp ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Weist den <see cref="T:System.Xml.XmlReader" /> an, an seiner aktuellen Position ein Stammelement eines XML-Dokuments zu lesen.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die Methode nach dem Lesen des Anfangselements des Elements nur den Inhalt lesen soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">Ein <see cref="T:System.Xml.XmlDocument" />, das das gelesene Stammelement enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Weist den <see cref="T:System.Xml.XmlReader" /> an, den XML-Knoten an der aktuellen Position zu lesen.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Inhalt nur nach dem Lesen des Startelements des Elements gelesen werden soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">Ein <see cref="T:System.Xml.XmlNode" />, der den gelesenen XML-Knoten darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Speichert ein Objekt, das aus einem SOAP-codierten <see langword="multiRef" />-Element deserialisiert werden soll.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">Das zu deserialisierende Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Ruft eine dynamisch generierte Assembly nach ihrem Namen ab.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Der vollständige Name der Assembly.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Eine dynamisch generierte <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Stellt sicher, dass ein angegebenes Array oder eine Kopie eine angegebene Länge nicht überschreitet.</summary>
      <param name="a" vsli:raw="The array that is being checked.">Das zu prüfende Array.</param>
      <param name="length" vsli:raw="The maximum length of the array.">Die maximale Länge des Arrays.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">Der <see cref="T:System.Type" /> der Elemente des Arrays.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" />, wenn für das Array <see langword="null" /> zurückgegeben werden kann, wenn für das Eingabearray vorhanden; andernfalls ein neues kleineres Array.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">Das ursprüngliche <see cref="T:System.Array" />, wenn es bereits klein genug ist. Andernfalls ein neues kleineres Array, das die Elemente des ursprünglichen Arrays bis zur Länge <paramref name="length" /> enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Weist den <see cref="T:System.Xml.XmlReader" /> an, den Zeichenfolgenwert an der aktuellen Position zu lesen und ihn als Base64-Bytearray zurückzugeben.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" />, wenn <see langword="null" /> zurückgegeben werden soll, <see langword="false" />, wenn ein Base64-Bytearray zurückgegeben werden soll.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Ein Base64-Bytearray, andernfalls <see langword="null" />, wenn der Wert des <paramref name="isNull" />-Parameters <see langword="true" /> ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Erzeugt aus einer Eingabezeichenfolge ein Base64-Bytearray.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Eine Zeichenfolge, die in ein Base64-Bytearray umgewandelt werden soll.</param>
      <returns vsli:raw="A base-64 byte array.">Ein Base64-Bytearray.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Weist den <see cref="T:System.Xml.XmlReader" /> an, den Zeichenfolgenwert an der aktuellen Position zu lesen und ihn als hexadezimales Bytearray zurückzugeben.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" />, wenn <see langword="null" /> zurückgegeben werden soll, <see langword="false" />, wenn ein hexadezimales Bytearray zurückgegeben werden soll.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Ein hexadezimales Bytearray, andernfalls <see langword="null" />, wenn der Wert des <paramref name="isNull" />-Parameters <see langword="true" /> ist.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Erzeugt ein hexadezimales Bytearray aus der Eingabezeichenfolge.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Eine Zeichenfolge, die in ein hexadezimales Bytearray übersetzt werden soll.</param>
      <returns vsli:raw="A hexadecimal byte array.">Ein hexadezimales Bytearray</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Erstellt ein <see cref="T:System.Char" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Eine Zeichenfolge, die in ein <see cref="T:System.Char" />-Objekt umgewandelt werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Ein <see cref="T:System.Char" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Erstellt ein <see cref="T:System.DateTime" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Eine Zeichenfolge, die in ein Objekt der <see cref="T:System.DateTime" />-Klasse umgewandelt werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Erstellt ein <see cref="T:System.DateTime" />-Objekt aus einer Eingabezeichenfolge.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Eine Zeichenfolge, die in ein <see cref="T:System.DateTime" />-Objekt umgewandelt werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Erzeugt aus einer Zeichenfolge mit voneinander getrennten Bezeichnern, die Konstanten aus der Enumeratorliste darstellen, einen numerischen Enumerationswert.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, von denen jeder eine Konstante der festgelegten Enumeratorliste darstellt.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">Eine <see cref="T:System.Collections.Hashtable" /> mit den Bezeichnern als Schlüssel und den Konstanten als ganzen Zahlen.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">Der Name des Enumerationstyps.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Ein long-Wert mit dem Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Erzeugt ein <see cref="T:System.DateTime" /> aus einer Zeichenfolge, die eine Uhrzeit darstellt.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Eine Zeichenfolge, die in ein <see cref="T:System.DateTime" />-Objekt umgewandelt werden soll.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Ein <see cref="T:System.DateTime" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodiert einen XML-Namen.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Ein zu decodierender XML-Name.</param>
      <returns vsli:raw="A decoded string.">Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodiert einen XML-Namen.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Ein zu decodierender XML-Name.</param>
      <returns vsli:raw="A decoded string.">Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodiert einen XML-Namen.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Ein zu decodierender XML-Name.</param>
      <returns vsli:raw="A decoded string.">Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodiert einen XML-Namen.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Ein zu decodierender XML-Name.</param>
      <returns vsli:raw="A decoded string.">Eine decodierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Erhält einen <see cref="T:System.Xml.XmlQualifiedName" /> von einem Namen, der möglicherweise ein Präfix enthält.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Ein Name, der möglicherweise ein Präfix enthält.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der einen Namespace-qualifizierten XML-Namen darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Ein <see cref="T:System.Xml.XmlAttribute" />, das das betreffende Attribut darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Ein <see cref="T:System.Xml.XmlAttribute" />, das das betreffende Attribut darstellt.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">Das <see cref="T:System.Xml.XmlElement" />, für das ein Ereignis ausgelöst wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />-Eigenschaft zugegriffen werden kann.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">Das <see cref="T:System.Xml.XmlElement" />, für das ein Ereignis ausgelöst wird.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">Das Objekt, das deserialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="o" vsli:raw="The object being deserialized.">Das Objekt, das deserialisiert wird.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Eine durch Kommas getrennte Liste von qualifizierten XML-Namen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Löst ein <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />-Ereignis für die aktuelle Position des <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Eine eindeutige Zeichenfolge zur Identifikation des Objekts ohne Verweis. Auf dieses kann anschließend über die <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />-Eigenschaft zugegriffen werden.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Ein Objekt, das der <see cref="T:System.Xml.Serialization.XmlSerializer" /> zu deserialisieren versucht, und auf das anschließend über die <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />-Eigenschaft zugegriffen werden kann.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Ruft einen Wert ab, der bestimmt, ob XML-Zeichenfolgen in gültige .NET Framework-Typnamen umgewandelt werden, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn XML-Zeichenfolgen in gültige .NET Framework-Typnamen decodiert werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Ruft das XML-Dokumentobjekt ab, in das das XML-Dokument deserialisiert wird.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">Ein <see cref="T:System.Xml.XmlDocument" />, das die deserialisierten <see cref="T:System.Xml.XmlDocument" />-Daten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Ruft einen Wert ab, der für einen SOAP 1.1-Rückgabewert <see langword="true" /> muss, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" />, wenn der Wert ein Rückgabewert ist.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Ruft das <see cref="T:System.Xml.XmlReader" />-Objekt ab, das von <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> verwendet wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Der vom <see cref="T:System.Xml.XmlReader" /> verwendete <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ruft den aktuellen Zähler des <see cref="T:System.Xml.XmlReader" /> ab.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Der aktuelle Zähler eines <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Enthält eine Instanz eines <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten und die Eingaben der Methoden. Außerdem werden die Parameter der Methode bereitgestellt.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />-Klasse mit Parametern für eine Rückrufmethode.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Eine Auflistung, in die die Rückrufmethode das Array mit den Auflistungselementen kopiert.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten instanziiert.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Ein Array, in das die Rückrufmethode eine Auflistung kopiert.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Ruft die Rückrufmethode ab, die den <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegaten instanziiert.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">Der <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />-Delegat, der auf die Rückrufmethode zeigt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Ruft die <paramref name="object collection" /> für die Rückrufmethode ab.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">Die Auflistung, die für das Fixup verwendet wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Ruft das Array ab, in das die Rückrufmethode eine Auflistung kopiert.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">Das Array, in das die Rückrufmethode eine Auflistung kopiert.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Enthält eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten sowie die Eingaben der Methode. Außerdem wird es als Parameter für die Methode verwendet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Das Objekt, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten instanziiert.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Die Größe des Zeichenfolgenarrays, das über die <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />-Eigenschaft abgerufen wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />-Klasse.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Das Objekt, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Eine Methode, die den <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten instanziiert.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Das über die <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />-Eigenschaft abgerufene Zeichenfolgenarray.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Ruft die Rückrufmethode ab, die eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten erstellt.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Die Rückrufmethode, die eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />-Delegaten erstellt.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Ruft ein Array von Schlüsseln für die Objekte ab, die zur <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />-Eigenschaft gehören und deren Werte durch die Rückrufimplementierung ausgefüllt werden, oder legt dieses fest.</summary>
      <returns vsli:raw="The array of keys.">Das Array von Schlüsseln.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Ruft das Objekt ab, das andere Objekte enthält, deren Werte von der Rückrufimplementierung ausgefüllt werden, oder legt dieses fest.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">Die Quelle, die Objekte mit auszufüllenden Werten enthält.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Ein von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse verwendeter Delegat, mit dem Typen aus SOAP-codierten XML-Daten, die keine Stammelemente darstellen, serialisiert werden können.</summary>
      <param name="o" vsli:raw="The object being serialized.">Das serialisierte Objekt.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Stellt eine abstrakte Klasse zur Steuerung der Serialisierung durch die <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Speichert eine Implementierung des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten sowie den Typ, auf den er angewendet wird, für einen späteren Aufruf.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">Der <see cref="T:System.Type" /> von Objekten, die serialisiert werden.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">Der Name des Typs von Objekten, die serialisiert werden.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">Der Namespace des Typs von Objekten, die serialisiert werden.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die einen unerwarteten Namen für ein Element anzeigt, das zu einer <see langword="choice" />-Elementdeklaration eines XML-Schemas gehört.</summary>
      <param name="value" vsli:raw="The name that is not valid.">Der ungültige Name.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">Die <see langword="choice" />-Elementdeklaration, zu der der Name gehört.</param>
      <param name="name" vsli:raw="The expected local name of an element.">Der erwartete lokale Name eines Elements.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">Der erwartete Namespace eines Elements.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> unzulässigerweise auf einen Member angewendet wurde. Es sind nur Member vom Typ <see cref="T:System.Xml.XmlNode" /> oder eines von <see cref="T:System.Xml.XmlNode" /> abgeleiteten Typs zulässig.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">Das Objekt, das den unzulässigen Member darstellt.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die angibt, dass <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> unzulässigerweise auf einen Member angewendet wurde. Es sind nur Member vom Typ <see cref="T:System.Xml.XmlNode" /> oder eines von <see cref="T:System.Xml.XmlNode" /> abgeleiteten Typs zulässig.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">Der <see cref="T:System.Type" /> ist ungültig.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die einen Fehler beim Schreiben eines Arrays anzeigt, wobei eine <see langword="choice" />-Elementdeklaration eines XML-Schemas angewendet wird.</summary>
      <param name="type" vsli:raw="The type being serialized.">Der serialisierte Typ.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Ein Name für die <see langword="choice" />-Elementdeklaration.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Erstellt eine <see cref="T:System.InvalidOperationException" /> für einen ungültigen Enumerationswert.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Ein Objekt, das die ungültige Enumeration darstellt.</param>
      <param name="typeName" vsli:raw="The XML type name.">Der Name des XML-Typs.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein Wert für ein XML-Element keinem Enumerationstyp entspricht.</summary>
      <param name="value" vsli:raw="The value that is not valid.">Der ungültige Wert.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">Der Name des XML-Elements mit einem ungültigen Wert.</param>
      <param name="enumValue" vsli:raw="The valid value.">Der gültige Wert.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein XML-Element, das zu einer <see langword="any" />-Elementdeklaration des XML-Schemas gehören soll, nicht verarbeitet werden kann.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">Das XML-Element, das nicht verarbeitet werden kann.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein zu serialisierender Typ nicht richtig verwendet wird oder dass er an einer unerwarteten Stelle gefunden wurde.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">Das Objekt, dessen Typ nicht serialisiert werden kann.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Erstellt eine <see cref="T:System.InvalidOperationException" />, die anzeigt, dass ein zu serialisierender Typ nicht richtig verwendet wird oder dass er an einer unerwarteten Stelle gefunden wurde.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">Der Typ, der nicht serialisiert werden kann.</param>
      <returns vsli:raw="The newly created exception.">Die neu erstellte Ausnahme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Verarbeitet ein Base64-Bytearray.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Ein Base64-<see cref="T:System.Byte" />-Array.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">Das gleiche Bytearray, das als Argument übergeben wurde.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Erzeugt aus der Eingabe eines hexadezimalen Bytearrays eine Zeichenfolge.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Ein hexadezimales Bytearray, das in eine Zeichenfolge konvertiert werden soll.</param>
      <returns vsli:raw="The byte array value converted to a string.">Der in eine Zeichenfolge konvertiert Bytearraywert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Erzeugt aus einem eingegebenen <see cref="T:System.Char" /> eine Zeichenfolge.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">Eine <see cref="T:System.Char" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">Der in eine Zeichenfolge konvertierte <see cref="T:System.Char" />-Wert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Erzeugt aus einem <see cref="T:System.DateTime" />-Objekt eine Zeichenfolge.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Eine <see cref="T:System.DateTime" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Eine Zeichenfolgendarstellung von <see cref="T:System.DateTime" />, die nur das Datum und keine Uhrzeit enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Erzeugt aus einem eingegebenen <see cref="T:System.DateTime" /> eine Zeichenfolge.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Eine <see cref="T:System.DateTime" />, die in eine Zeichenfolge konvertiert werden soll.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Eine Zeichenfolgendarstellung von <see cref="T:System.DateTime" />, die das Datum und die Uhrzeit anzeigt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Erzeugt eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, die die festgelegten Enumerationsmember darstellen.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Der Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Die Namenswerte der Enumeration.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Die konstanten Werte der Enumeration.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, von denen jeder ein Member der festgelegten Enumeratorliste darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Übernimmt einen numerischen Enumerationswert und die Namen und Konstanten aus der Enumeratorliste der Enumeration und gibt eine Zeichenfolge mit voneinander getrennten Bezeichnern zurück, die die festgelegten Member der Enumeration darstellen.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Der Enumerationswert als Folge von bitweisen <see langword="OR" />-Operationen.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Die Werte der Enumeration.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">Die Konstanten der Enumeration.</param>
      <param name="typeName" vsli:raw="The name of the type.">Der Name des Typs.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Eine Zeichenfolge, die aus voneinander getrennten Bezeichnern besteht, wobei jedes Element einen der durch die bitweise Operation festgelegten Werte darstellt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Erzeugt aus einem <see cref="T:System.DateTime" />-Objekt eine Zeichenfolge.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">Ein <see cref="T:System.DateTime" />-Objekt, das in eine Zeichenfolge konvertiert wird.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Eine Zeichenfolgendarstellung des <see cref="T:System.DateTime" />-Objekts, die die Uhrzeit, aber nicht das Datum enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Codiert einen gültigen XML-Namen durch Ersetzen von ungültigen Zeichen durch Escapesequenzen.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Eine Zeichenfolge, die als XML-Name verwendet werden soll.</param>
      <returns vsli:raw="An encoded string.">Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Codiert einen gültigen lokalen XML-Namen durch Ersetzen von ungültigen Zeichen durch Escapesequenzen.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Eine Zeichenfolge, die als lokaler (nicht qualifizierter) XML-Name verwendet werden soll.</param>
      <returns vsli:raw="An encoded string.">Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Codiert einen XML-Namen.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Ein XML-Name, der codiert werden soll.</param>
      <returns vsli:raw="An encoded string.">Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Codiert eine Folge von durch Leerzeichen getrennten XML-Namen als einen einzelnen XML-Namen.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Eine zu codierende Folge von durch Leerzeichen getrennten XML-Namen.</param>
      <returns vsli:raw="An encoded string.">Eine codierte Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Gibt einen qualifizierten XML-Namen zurück, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der die zu schreibenden XML-Daten darstellt.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Ein qualifizierter XML-Name, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Erstellt eine Zeichenfolge, die als qualifizierter XML-Name geschrieben werden kann und bei der ungültige Zeichen durch Escapesequenzen ersetzt werden.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Ein <see cref="T:System.Xml.XmlQualifiedName" />, der die zu schreibenden XML-Daten darstellt.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn Leerraum in der Zeichenfolge ignoriert werden soll, andernfalls <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Ein qualifizierter XML-Name, bei dem ungültige Zeichen durch Escapesequenzen ersetzt wurden.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Initialisiert eine Instanz des <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />-Delegaten zum Serialisieren von SOAP-codierten XML-Daten.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Ruft eine dynamisch generierte Assembly nach ihrem Namen ab.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Der vollständige Name der Assembly.</param>
      <returns vsli:raw="A dynamically generated assembly.">Eine dynamisch generierte Assembly.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Initialisiert Objektverweise nur beim Serialisieren einer SOAP-codierten SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein XML-Attribut zu schreiben, für dessen Name kein Namespace angegeben ist.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Der lokale Name des XML-Attributs.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Der Wert des XML-Attributs als Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Weist den <see cref="T:System.Xml.XmlWriter" /> an, ein XML-Attribut zu schreiben, für dessen Namen kein Namespace angegeben ist.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Der lokale Name des XML-Attributs.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein XML-Attribut zu schreiben.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Der lokale Name des XML-Attributs.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Der Namespace des XML-Attributs.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Der Wert des XML-Attributs als Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Schreibt ein XML-Attribut.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Der lokale Name des XML-Attributs.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Der Namespace des XML-Attributs.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Schreibt ein XML-Attribut, wobei das Namespacepräfix manuell angegeben wird.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">Das zu schreibende Namespacepräfix.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Der lokale Name des XML-Attributs.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">Der durch das Präfix dargestellte Namespace.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Der Wert des XML-Attributs als Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Schreibt ein XML-Knotenobjekt innerhalb des Texts eines benannten XML-Elements.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Der zu schreibende XML-Knoten, möglicherweise ein untergeordnetes XML-Element.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Der lokale Name des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Der Namespace des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Knoten, falls er ein XML-Element ist, einer Deklaration eines <see langword="any" />-Elements eines XML-Schemas entspricht, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Weist ein <see cref="T:System.Xml.XmlWriter" />-Objekt an, ein <see cref="T:System.Xml.XmlNode" />-Objekt innerhalb des Texts eines benannten XML-Elements zu schreiben.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Der zu schreibende XML-Knoten, möglicherweise ein untergeordnetes XML-Element.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Der lokale Name des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Der Namespace des zu schreibenden übergeordneten XML-Elements.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Knoten, falls er ein XML-Element ist, einer Deklaration eines <see langword="any" />-Elements eines XML-Schemas entspricht, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Schreibt ein XML-Element mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Der Name, der im Elementtext geschrieben werden soll (mit dem Präfix, falls er namespace-qualifiziert ist).</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">Der lokale Name des XML-Elements, das ohne Namespacequalifikation geschrieben werden soll.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Der Namespace des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Schreibt ein XML-Element mit einem angegebenen Wert im Text.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Der lokale Name des XML-Elements.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Der Textwert des XML-Elements.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Schreibt ein XML-Element, dessen Text leer ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Schreibt ein XML-Element, dessen Text leer ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Schreibt ein <see langword="&lt;closing&gt;" />-Elementtag.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Schreibt ein <see langword="&lt;closing&gt;" />-Elementtag.</summary>
      <param name="o" vsli:raw="The object being serialized.">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Schreibt ein <see langword="id" />-Attribut, das in einem SOAP-codierten <see langword="multiRef" />-Element vorkommt.</summary>
      <param name="o" vsli:raw="The object being serialized.">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Schreibt Attribute für Namespacedeklarationen.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Die zu deklarierenden XML-Namespaces.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, dessen Text einen gültigen qualifizierten XML-Namen enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Der qualifizierte XML-Name, der im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, dessen Text einen gültigen qualifizierten XML-Namen enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Der qualifizierte XML-Name, der im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein Bytearray als Text eines XML-Elements. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Das Bytearray, das im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Der Name des Datentyps für das XML-Schema, der in das <see langword="xsi:type" />-Attribut geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein Bytearray als Text eines XML-Elements. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Das Bytearray, das im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Schreibt ein XML-Element, das eine Zeichenfolge als Text enthält. <see cref="T:System.Xml.XmlWriter" /> fügt ein <see langword="xsi:nil='true'" />-Attribut ein, wenn der Wert der Zeichenfolge <see langword="null" /> ist.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Die Zeichenfolge, die im Text des XML-Elements geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Schreibt ein XML-Element mit einem <see langword="xsi:nil='true'" />-Attribut.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="&lt;multiRef&gt;" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element nicht auf ein anderes Element mit Daten verweisen soll, sondern das Objekt direkt in das XML-Element serialisiert werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-XML-Element für ein bestimmtes Objekt enthalten kann.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Das Objekt, das entweder in das aktuelle XML-Element oder in ein <see langword="multiRef" />-Element serialisiert wird, auf das das aktuelle Element verweist.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Der in der Typzuordnung des Objekts gespeicherte Typ (im Gegensatz zum Objekttyp, der direkt durch die <see langword="typeof" />-Operation ermittelt wird).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das Element nicht auf ein anderes Element mit Daten verweisen soll, sondern das Objekt direkt in das XML-Element serialisiert werden soll, andernfalls <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Serialisiert Objekte in SOAP-codierte <see langword="multiRef" />-XML-Elemente in einer SOAP-Nachricht.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-Element für ein bestimmtes Objekt enthält.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Der lokale Name des zu schreibenden verweisenden Elements.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Der Namespace des zu schreibenden verweisenden Elements.</param>
      <param name="o" vsli:raw="The object being serialized.">Das serialisierte Objekt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Schreibt ein XML-Element für eine SOAP-Nachricht, das einen Verweis auf ein <see langword="multiRef" />-Element für ein bestimmtes Objekt enthält.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Der lokale Name des zu schreibenden verweisenden Elements.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Der Namespace des zu schreibenden verweisenden Elements.</param>
      <param name="o" vsli:raw="The object being serialized.">Das serialisierte Objekt.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das zu serialisierende Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Schreibt ein RPC-Ergebniselement gemäß SOAP 1.2 mit einem angegebenen qualifizierten Namen im Text.</summary>
      <param name="name" vsli:raw="The local name of the result body.">Der lokale Name des Ergebnistexts.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">Der Namespace des Ergebnistexts.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Schreibt ein Objekt, das benutzerdefinierte XML-Formatierung als XML-Element verwendet.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, die benutzerdefinierte XML-Formatierung verwendet.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Klassenobjekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Weist <see cref="T:System.Xml.XmlNode" /> an, ein Objekt zu schreiben, das benutzerdefinierte XML-Formatierung als XML-Element verwendet.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Ein Objekt, das die <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Schnittstelle implementiert, die benutzerdefinierte XML-Formatierung verwendet.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, falls ein <see langword="xsi:nil='true'" />-Attribut geschrieben werden soll, wenn das <see cref="T:System.Xml.Serialization.IXmlSerializable" />-Objekt <see langword="null" /> ist, andernfalls <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" />, wenn das öffnende Elementtag beim Schreiben übergangen werden soll, <see langword="false" />, wenn das öffnende Elementtag geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Schreibt die XML-Deklaration, wenn der Writer am Anfang eines XML-Dokuments positioniert ist.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Das Objekt, das als XML-Element serialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Das Objekt, das als XML-Element serialisiert wird.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Schreibt ein öffnendes Elementtag einschließlich aller Attribute.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Der lokale Name des zu schreibenden XML-Elements.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Der Namespace des zu schreibenden XML-Elements.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Das Objekt, das als XML-Element serialisiert wird.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Elementname mit einem Präfix geschrieben werden soll, falls ein solches für den angegebenen Namespace nicht verfügbar ist, andernfalls <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Klasse, die Paare aus Präfix und Namespace enthält, die im generierten XML-Code verwendet werden sollen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Schreibt ein XML-Element, dessen Textkörper ein Wert eines einfachen XML-Schemadatentyps ist.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">Der lokale Name des zu schreibenden Elements.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">Der Namespace des zu schreibenden Elements.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">Das in den Elementtext zu serialisierende Objekt.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn das XML-Element den Typ des Textwerts explizit mit dem <see langword="xsi:type" />-Attribut angibt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Schreibt ein Base64-Bytearray.</summary>
      <param name="value" vsli:raw="The byte array to write.">Das zu schreibende Bytearray.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Schreibt einen angegebenen Zeichenfolgenwert.</summary>
      <param name="value" vsli:raw="The value of the string to write.">Der Wert der zu schreibenden Zeichenfolge.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Schreibt den angegebenen <see cref="T:System.Xml.XmlNode" /> als XML-Attribut.</summary>
      <param name="node" vsli:raw="The XML node to write.">Der zu schreibende XML-Knoten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Schreibt den angegebenen <see cref="T:System.Xml.XmlNode" /> als XML-Attribut.</summary>
      <param name="node" vsli:raw="The XML node to write.">Der zu schreibende XML-Knoten.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Ein <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Objekt (bzw. <see langword="null" />), mit dem ein qualifizierter Namenswert für ein <see langword="arrayType" />-Attribut aus dem WSDL-Namespace („http://schemas.xmlsoap.org/wsdl/“) generiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Schreibt ein <see langword="xsi:type" />-Attribut für ein XML-Element, das in ein Dokument serialisiert wird.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">Der lokale Name eines XML-Schemadatentyps.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">Der Namespace eines XML-Schemadatentyps.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Ruft einen Wert ab, der angibt, ob die <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />-Methode zum Schreiben von gültigen XML-Daten verwendet wird, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn die <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" />-Methode einen codierten Namen zurückgibt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Ruft eine Liste von qualifizierten XML-Namensobjekten ab, die die zum Erstellen von qualifizierten Namen in XML-Dokumenten erforderlichen Namespaces und Präfixe enthalten, oder legt diese fest.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">Eine <see cref="T:System.Collections.ArrayList" />, die die Namespaces und Präfixpaare enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Übernimmt oder bestimmt den <see cref="T:System.Xml.XmlWriter" />, der von <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> verwendet wird.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">Der von der Klasseninstanz verwendete <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Serialisiert und deserialisiert Objekte in und aus XML-Dokumenten. Mit <see cref="T:System.Xml.Serialization.XmlSerializer" /> können Sie steuern, wie Objekte in XML codiert werden.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Attribut von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf ein XML-Element von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Tritt ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> während der Deserialisierung auf einen XML-Knoten von unbekanntem Typ stößt.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Tritt während der Deserialisierung eines SOAP-codierten XML-Streams ein, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> auf einen bekannten Typ stößt, der nicht verwendet wird oder auf den nicht verwiesen wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Gibt den Standardnamespace für alle XML-Elemente an.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Der für alle XML-Elemente zu verwendende Standardnamespace.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in ein Objekt eines angegebenen Typs deserialisieren kann. Wenn eine Eigenschaft oder ein Feld ein Array zurückgibt, werden durch den <paramref name="extraTypes" />-Parameter die Objekte angegeben, die in das Array eingefügt werden können.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und XML-Dokumente in Objekte des angegebenen Typs deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">Der Typ des zu serialisierenden Objekts.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte vom Typ <see cref="T:System.Object" /> in Instanzen eines XML-Dokuments serialisieren und Instanzen eines XML-Dokuments in Objekte vom Typ <see cref="T:System.Object" /> deserialisieren kann. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">Ein <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, das das Verhalten der im <paramref name="type" />-Parameter festgelegten Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <param name="location" vsli:raw="The location of the types.">Der Speicherort der Typen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse, die Objekte des angegebenen Typs in XML-Dokumente serialisieren und ein XML-Dokument in ein Objekt des angegebenen Typs deserialisieren kann. Außerdem wird die als XML-Stammelement zu verwendende Klasse angegeben.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der Objekttyp, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Initialisiert eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse mithilfe eines Objekts, das einen Typ einem anderen zuweist.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Ruft einen Wert ab, der angibt, ob dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein angegebenes XML-Dokument deserialisieren kann.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">Ein <see cref="T:System.Xml.XmlReader" />, der auf das zu deserialisierende Dokument zeigt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Objekt deserialisieren kann, auf das <see cref="T:System.Xml.XmlReader" /> zeigt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Gibt ein Objekt zurück, das zum Lesen des zu serialisierenden XML-Dokuments verwendet wird.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">Ein zum Lesen des XML-Dokuments verwendeter <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">Gibt beim Überschreiben in einer abgeleiteten Klasse einen Writer zurück, der zum Serialisieren des Objekts verwendet wird.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Eine Instanz, die die <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />-Klasse implementiert.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Deserialisiert das im angegebenen <see cref="T:System.IO.Stream" /> enthaltene XML-Dokument.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">Der <see cref="T:System.IO.Stream" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Deserialisiert das im angegebenen <see cref="T:System.IO.TextReader" /> enthaltene XML-Dokument.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">Der <see cref="T:System.IO.TextReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Deserialisiert das im angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> enthaltene XML-Dokument.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">Der <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Deserialisiert das im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltene XML-Dokument anhand des angegebenen Codierungsstils.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden XML-Dokument.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Der Codierungsstil des serialisierten XML-Codes.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Deserialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
      <returns vsli:raw="The deserialized object.">Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserialisiert das Objekt mit den im angegebenen <see cref="T:System.Xml.XmlReader" /> enthaltenen Daten.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Eine Instanz der <see cref="T:System.Xml.XmlReader" />-Klasse zum Lesen des Dokuments.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">Die verwendete Codierung.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
      <returns vsli:raw="The object being deserialized.">Das Objekt, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Deserialisiert ein im <see cref="T:System.Xml.XmlReader" /> enthaltenes XML-Dokument und ermöglicht das Überschreiben der Ereignisse, die während der Deserialisierung eintreten.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">Der <see cref="T:System.Xml.XmlReader" /> mit dem zu deserialisierenden Dokument.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />-Klasse.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">Das <see cref="T:System.Object" />, das deserialisiert wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" />-Objekten erstellt wurde.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Ein Array von <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Gibt eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse aus den angegebenen Zuordnungen zurück.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Ein Array von <see cref="T:System.Xml.Serialization.XmlMapping" />-Objekten.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">Der <see cref="T:System.Type" /> des deserialisierten Objekts.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Gibt ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten zurück, das aus einem Array von Typen erstellt wurde.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Ein Array von <see cref="T:System.Type" />-Objekten.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Ein Array von <see cref="T:System.Xml.Serialization.XmlSerializer" />-Objekten.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Gibt den Namen der Assembly zurück, die eine oder mehrere Versionen des <see cref="T:System.Xml.Serialization.XmlSerializer" /> enthält, die für das Serialisieren oder Deserialisieren des angegebenen Typs erstellt wurden.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">Der <see cref="T:System.Type" />, der deserialisiert wird.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">Der Name der Assembly, die einen <see cref="T:System.Xml.Serialization.XmlSerializer" /> für den Typ enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Gibt den Namen der Assembly zurück, die das Serialisierungsprogramm für den angegebenen Typ im angegebenen Namespace enthält.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">Das gesuchte <see cref="T:System.Type" />.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">Der Namespace des Typs.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">Der Name der Assembly, die für spezielle Zwecke erstellte Serialisierungsprogramme enthält.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.Stream" /> in eine Datei.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.Stream" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.Stream" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">Das <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, das die Namespaces für das generierte XML-Dokument enthält.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> in eine Datei.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Wenn die Methode nicht in einer abgeleiteten Klasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument über den angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces verwiesen wird.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">Das <see cref="T:System.Object" />, das serialisiert werden soll.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Serialisiert das angegebene Objekt und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" /> in eine Datei, wobei auf die angegebenen Namespaces und den Codierungsstil verwiesen wird.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, auf die das Objekt verweist.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Der Codierungsstil des serialisierten XML-Codes.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Bei der Serialisierung ist ein Fehler aufgetreten. Die ursprüngliche Ausnahme ist mithilfe der <see cref="P:System.Exception.InnerException" />-Eigenschaft verfügbar.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Serialisiert das angegebene <see cref="T:System.Object" /> und schreibt das XML-Dokument unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />, des angegebenen XML-Namespaces und der angegebenen Codierung in eine Datei.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Der zum Schreiben des XML-Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="o" vsli:raw="The object to serialize.">Das zu serialisierende Objekt.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Eine Instanz von <see langword="XmlSerializerNamespaces" />, die die zu verwendenden Namespaces und Präfixe enthält.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">Die im Dokument verwendete Codierung.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Bei SOAP-codierten Meldungen die Basis für das Generieren von ID-Attributen.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Wird auf einen Clientproxy für Webdienste angewendet. Ermöglicht das Angeben einer Assembly mit benutzerdefinierten Serialisierungsprogrammen.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse mit dem angegebenen Assemblynamen.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Der einfache nicht verschlüsselte Name der Assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />-Klasse mit dem angegebenen Namen und Speicherort der Assembly.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Der einfache nicht verschlüsselte Name der Assembly.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Eine Zeichenfolge, die den Speicherort der Assembly als URL darstellt.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Ruft den Namen der Assembly ab, die Serialisierungsprogramme für eine bestimmte Gruppe von Typen enthält, oder legt diesen fest.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">Der einfache nicht verschlüsselte Name der Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Ruft den Speichort der Assembly ab, die die Serialisierungsprogramme enthält.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Ein Speicherort, z. B. ein Pfad oder ein URI, der auf die Assembly zeigt.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Erstellt typisierte Versionen von <see cref="T:System.Xml.Serialization.XmlSerializer" /> für eine effizientere Serialisierung.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die zum Serialisieren des angegebenen Typs verwendet wird.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Eine zum Serialisieren des angegebenen Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Gibt eine zum Serialisieren des angegebenen Typs und des angegebenen Namespaces verwendete Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Der für alle XML-Elemente zu verwendende Standardnamespace.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Eine zum Serialisieren des angegebenen Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die zum Serialisieren des angegebenen Typs verwendet wird. Wenn eine Eigenschaft oder ein Feld ein Array zurückgibt, werden durch den <paramref name="extraTypes" />-Parameter die Objekte angegeben, die in das Array eingefügt werden können.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumente serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> mit Feldern, die das Standardserialisierungsverhalten überschreiben.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumentinstanzen serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> mit Feldern, die das Standardserialisierungsverhalten überschreiben.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumentinstanzen serialisieren kann, und umgekehrt. Jedes zu serialisierende Objekt kann selbst Instanzen von Klassen enthalten, die von dieser Überladung durch andere Klassen überschrieben werden können. Diese Überladung gibt außerdem den Standardnamespace für alle XML-Elemente sowie die als XML-Stammelement zu verwendende Klasse an.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Der <see cref="T:System.Type" /> des Objekts, den dieser <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisieren kann.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">Eine Instanz von <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />, die das Verhalten der im Parameter angegebenen Klasse erweitert oder überschreibt.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Ein <see cref="T:System.Type" />-Array mit zusätzlich zu serialisierenden Objekttypen.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das die Eigenschaften des XML-Stammelements definiert.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Der Standardnamespace aller XML-Elemente im XML-Dokument.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">Der Pfad, der den Speicherort der Typen angibt.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Gibt eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück, die Objekte vom angegebenen Typ in XML-Dokumente serialisieren kann, und umgekehrt. Gibt das Objekt an, das das XML-Stammelement darstellt.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">Das <see cref="T:System.Type" />, das serialisiert werden soll.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Ein <see cref="T:System.Xml.Serialization.XmlRootAttribute" />, das das XML-Stammelement darstellt.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Eine Ableitung von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Gibt mithilfe eines Objekts, das einen Typ einem anderen zuordnet, eine Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse zurück.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> zum Zuordnen eines Typs zu einem anderen.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Eine zum Serialisieren des zugeordneten Typs bestimmte Ableitung der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Definiert Reader, Writer und Methoden für zuvor generierte Serialisierungsprogramme.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Ruft einen Wert ab, der bestimmt, ob ein Typ serialisiert werden kann.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Der zu serialisierende Typ.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ serialisiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Gibt ein Serialisierungsprogramm für den angegebenen Typ zurück.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Der zu serialisierende Typ.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Eine Instanz eines von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Klasse abgeleiteten Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Ruft das XML-Reader-Objekt ab, das vom Serialisierungsprogramm verwendet wird.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">Ein <see cref="T:System.Xml.Serialization.XmlSerializationReader" />, mit dem ein XML-Dokument oder -Datenstream gelesen wird.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Ruft die Auflistung der Methoden ab, die zum Lesen eines Datenstreams verwendet werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Eine <see cref="T:System.Collections.Hashtable" />, die die Methoden enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Ruft die Auflistung der typisierten Serialisierungsprogramme ab, die in der Assembly gefunden wurden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">Eine <see cref="T:System.Collections.Hashtable" />, die die typisierten Serialisierungsprogramme enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Ruft die Auflistung der Methoden ab, die zum Schreiben in einen Datenstream verwendet werden.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Eine <see cref="T:System.Collections.Hashtable" />, die die Methoden enthält.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Ruft das XML-Writer-Objekt für das Serialisierungsprogramm ab.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">Ein <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, der zum Schreiben eines XML-Datenstreams oder -Dokuments verwendet wird.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Wenn dieses Attribut auf eine Assembly angewendet wird, bedeutet dies, dass der Code von der Serialisierungsinfrastruktur generiert wurde und zum Zweck der Leistungssteigerung wiederverwendet werden kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />-Klasse für den angegebenen Typ.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">Der Typ, der serialisiert wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Ruft den CLR-Namespace (Common Language Runtime) der Assembly ab oder legt diesen fest.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">Ein <see cref="T:System.String" /> mit dem CLR (Common Language Runtime)-Namespace der Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Ruft die Identität der übergeordneten Assembly ab oder legt diese fest.</summary>
      <returns vsli:raw="The version of the parent assembly.">Die Version der übergeordneten Assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Ruft den Typ ab, für den das Serialisierungsprogramm bestimmt ist, oder legt diesen fest.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">Das zu serialisierende <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Ruft die Versionsnummer der Assembly ab oder legt diese fest.</summary>
      <returns vsli:raw="The version of the assembly.">Die Version der Assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Steuert das XML-Schema, das generiert wird, wenn das Attributziel vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> serialisiert wird.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />-Klasse und gibt den Namen des XML-Typs an.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Der Name des XML-Typs, der vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren einer Klasseninstanz generiert bzw. beim Deserialisieren der Klasseninstanz erkannt wird.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Ruft einen Wert ab, der bestimmt, ob der resultierende Schematyp ein anonymer XSD-Typ ist, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der resultierende Schematyp ein anonymer XSD-Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Ruft einen Wert ab, der angibt, ob der Typ in XML-Schemadokumente aufgenommen werden soll, oder legt diesen fest.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Typ in XML-Schemadokumente aufgenommen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Ruft den Namespace des XML-Typs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The namespace of the XML type.">Der Namespace des XML-Typs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Ruft den Namen des XML-Typs ab oder legt diesen fest.</summary>
      <returns vsli:raw="The name of the XML type.">Der Name des XML-Typs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">Enthält eine Zuordnung eines Typs zu einem anderen.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">Der vollqualifizierte Typname, einschließlich des bzw. der Namespaces und des Typs.</summary>
      <returns vsli:raw="The fully qualified type name.">Der vollqualifizierte Typname.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Ruft den Typnamen des zugeordneten Objekts ab.</summary>
      <returns vsli:raw="The type name of the mapped object.">Der Typname des zugeordneten Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Ruft den XML-Elementnamen des zugeordneten Objekts ab.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">Der XML-Elementname des zugeordneten Objekts. Der Standardwert ist der Klassenname des Objekts.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Ruft den XML-Namespace des zugeordneten Objekts ab.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">Der XML-Namespace des zugeordneten Objekts. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
  </members>
</doc>