<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Csp</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.AesCryptoServiceProvider">
      <summary>Führt mithilfe der CAPI-Implementierung (Cryptographic Application Programming Interfaces) des AES-Algorithmus (Advanced Encryption Standard) symmetrische Verschlüsselungen und Entschlüsselungen durch.</summary>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider" />-Klasse.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Es gibt keine unterstützte Schlüsselgröße für die aktuelle Plattform.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor">
      <summary>Erstellt ein symmetrisches AES-Entschlüsselungsobjekt mit dem aktuellen Schlüssel und Initialisierungsvektor (IV).</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der aktuelle Schlüssel ist ungültig oder fehlt.</exception>
      <returns>Ein symmetrisches AES-Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches AES-Entschlüsselungsobjekt mit dem angegebenen Schlüssel und Initialisierungsvektor (IV).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> oder <paramref name="iv" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> ist ungültig.</exception>
      <returns>Ein symmetrisches AES-Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor">
      <summary>Erstellt ein symmetrisches AES-Verschlüsselungsobjekt mit dem aktuellen Schlüssel und Initialisierungsvektor (IV).</summary>
      <returns>Ein symmetrisches AES-Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches Verschlüsselungsobjekt mit dem angegebenen Schlüssel und Initialisierungsvektor (IV).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="iv" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> ist ungültig.</exception>
      <returns>Ein symmetrisches AES-Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV">
      <summary>Generiert einen zufälligen Initialisierungsvektor (IV) für den Algorithmus.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Initialisierungsvektor konnte (IV) nicht generiert werden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey">
      <summary>Generiert einen zufälligen Schlüssel für den Algorithmus.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Schlüssel konnte nicht generiert werden.</exception>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.BlockSize">
      <summary>Ruft die Blockgröße des kryptografischen Vorgangs in Bits ab oder legt diese fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Die Blockgröße ist ungültig.</exception>
      <returns>Die Blockgröße in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.FeedbackSize">
      <summary>Ruft die Feedbackgröße des kryptografischen Vorgangs für den CFB-Modus (Cipher Feedback, Verschlüsselungsverfahren-Feedback) und den OFB-Modus (Output Feedback, Ausgabefeedback) in Bits ab oder legt diese fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Die Feedbackgröße ist größer als die Blockgröße.</exception>
      <returns>Die Feedbackgröße in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.IV">
      <summary>Ruft den Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) für den symmetrischen Algorithmus ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException">Es wurde versucht, den Initialisierungsvektor auf <see langword="null" /> festzulegen.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Es wurde versucht, den Initialisierungsvektor auf eine ungültige Größe festzulegen.</exception>
      <returns>Der Initialisierungsvektor.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Key">
      <summary>Ruft den symmetrischen Schlüssel ab, der zur Verschlüsselung und Entschlüsselung verwendet wird, oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der Wert für den Schlüssel ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Die Schlüsselgröße ist ungültig.</exception>
      <returns>Der symmetrische Schlüssel, der zur Verschlüsselung und Entschlüsselung verwendet wird.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.KeySize">
      <summary>Ruft die Größe, in Bits, des geheimen Schlüssels ab oder legt diese fest.</summary>
      <returns>Die Größe des Schlüssels in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalBlockSizes">
      <summary>Ruft die vom symmetrischen Algorithmus unterstützten Blockgrößen in Bits ab.</summary>
      <returns>Ein Array, das die vom Algorithmus unterstützten Blockgrößen enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.LegalKeySizes">
      <summary>Ruft die vom symmetrischen Algorithmus unterstützten Schlüsselgrößen in Bits ab.</summary>
      <returns>Ein Array, das die vom Algorithmus unterstützten Schlüsselgrößen enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Mode">
      <summary>Ruft den Modus für die Ausführung des symmetrischen Algorithmus ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Verschlüsselungsmodus ist keiner der <see cref="T:System.Security.Cryptography.CipherMode" />-Werte.</exception>
      <returns>Der Modus für die Ausführung des symmetrischen Algorithmus. Der Standardwert ist <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.AesCryptoServiceProvider.Padding">
      <summary>Ruft den im symmetrischen Algorithmus verwendeten Füllzeichenmodus ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Füllzeichenmodus ist keiner der <see cref="T:System.Security.Cryptography.PaddingMode" />-Werte.</exception>
      <returns>Der im symmetrischen Algorithmus verwendete Füllzeichenmodus. Der Standardwert ist <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CspKeyContainerInfo">
      <summary>Stellt zusätzliche Informationen zu einem kryptografischen Schlüsselpaar bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert mit den angegebenen Parametern eine neue Instanz der <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Klasse.</summary>
      <param name="parameters">Ein <see cref="T:System.Security.Cryptography.CspParameters" />-Objekt, das zusätzliche Informationen zum Schlüssel bereitstellt.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible">
      <summary>Ruft einen Wert ab, der angibt, ob auf einen Schlüssel in einem Schlüsselcontainer zugegriffen werden kann.</summary>
      <exception cref="T:System.NotSupportedException">Der Schlüsseltyp wird nicht unterstützt.</exception>
      <returns>
        <see langword="true" />, wenn auf den Schlüssel zugegriffen werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable">
      <summary>Ruft einen Wert ab, der angibt, ob ein Schlüssel aus einem Schlüsselcontainer exportiert werden kann.</summary>
      <exception cref="T:System.NotSupportedException">Der Schlüsseltyp wird nicht unterstützt.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter wurde nicht gefunden.  
  
 - oder -  
  
 Der Schlüsselcontainer wurde nicht gefunden.</exception>
      <returns>
        <see langword="true" />, wenn der Schlüssel exportiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice">
      <summary>Ruft einen Wert ab, der angibt, ob ein Schlüssel ein Hardwareschlüssel ist.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter wurde nicht gefunden.</exception>
      <returns>
        <see langword="true" />, wenn der Schlüssel ein Hardwareschlüssel ist; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName">
      <summary>Ruft einen Schlüsselcontainernamen ab.</summary>
      <returns>Der Schlüsselcontainername.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber">
      <summary>Ruft einen Wert ab, der beschreibt, ob ein asymmetrischer Schlüssel als Signaturschlüssel oder als Austauschschlüssel erstellt wurde.</summary>
      <returns>Einer der <see cref="T:System.Security.Cryptography.KeyNumber" />-Werte, der beschreibt, ob ein asymmetrischer Schlüssel als Signaturschlüssel oder als Austauschschlüssel erstellt wurde.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore">
      <summary>Ruft einen Wert ab, der angibt, ob eine Taste aus einem Computertastensatz stammt.</summary>
      <returns>
        <see langword="true" />, wenn die Taste aus dem Computertastensatz stammt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Protected">
      <summary>Ruft einen Wert ab, der angibt, ob ein Schlüsselpaar geschützt ist.</summary>
      <exception cref="T:System.NotSupportedException">Der Schlüsseltyp wird nicht unterstützt.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter wurde nicht gefunden.  
  
 - oder -  
  
 Der Schlüsselcontainer wurde nicht gefunden.</exception>
      <returns>
        <see langword="true" />, wenn das Schlüsselpaar geschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName">
      <summary>Ruft den Anbieternamen eines Schlüssels ab.</summary>
      <returns>Der Anbietername.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType">
      <summary>Ruft den Anbietertyp eines Schlüssels ab.</summary>
      <returns>Der Anbietertyp. Der Standardwert ist 1.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated">
      <summary>Ruft einen Wert ab, der angibt, ob ein Schlüsselcontainer zufällig durch eine verwaltete Kryptografieklasse generiert wurde.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüsselcontainer zufällig generiert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.Removable">
      <summary>Ruft einen Wert ab, der angibt, ob ein Schlüssel aus einem Schlüsselcontainer entfernt werden kann.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (CSP) wurde nicht gefunden.</exception>
      <returns>
        <see langword="true" />, wenn der Schlüssel entfernt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName">
      <summary>Ruft einen eindeutigen Schlüsselcontainernamen ab.</summary>
      <exception cref="T:System.NotSupportedException">Der Schlüsseltyp wird nicht unterstützt.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter wurde nicht gefunden.  
  
 - oder -  
  
 Der Schlüsselcontainer wurde nicht gefunden.</exception>
      <returns>Der eindeutige Schlüsselcontainername.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CspParameters">
      <summary>Enthält Parameter, die an den Kryptografiedienstanbieter (CSP) übergeben werden, der kryptografische Berechnungen durchführt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyContainerName">
      <summary>Stellt den Schlüsselcontainernamen für <see cref="T:System.Security.Cryptography.CspParameters" /> dar.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.KeyNumber">
      <summary>Gibt an, ob ein asymmetrischer Schlüssel als Signaturschlüssel oder als Austauschschlüssel erstellt wurde.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderName">
      <summary>Stellt den Anbieternamen für <see cref="T:System.Security.Cryptography.CspParameters" /> dar.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspParameters.ProviderType">
      <summary>Stellt den Anbietertypcode für <see cref="T:System.Security.Cryptography.CspParameters" /> dar.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CspParameters" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CspParameters" />-Klasse mit dem angegebenen Anbietertypcode.</summary>
      <param name="dwTypeIn">Der Anbietertypcode, der den Typ des zu erstellenden Anbieters angibt.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CspParameters" />-Klasse mit dem angegebenen Code und Namen des Anbietertyps.</summary>
      <param name="dwTypeIn">Der Anbietertypcode, der den Typ des zu erstellenden Anbieters angibt.</param>
      <param name="strProviderNameIn">Ein Anbietername.</param>
    </member>
    <member name="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.CspParameters" />-Klasse mit dem angegebenen Code und Namen des Anbietertyps und dem angegebenen Containertyp.</summary>
      <param name="dwTypeIn">Der Anbietertypcode, der den Typ des zu erstellenden Anbieters angibt.</param>
      <param name="strProviderNameIn">Ein Anbietername.</param>
      <param name="strContainerNameIn">Ein Containername.</param>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.Flags">
      <summary>Stellt die Flags für <see cref="T:System.Security.Cryptography.CspParameters" /> dar, die das Verhalten des Kryptografiedienstanbieters (Cryptographic Service Provider, CSP) ändern.</summary>
      <exception cref="T:System.ArgumentException">Der Wert ist kein gültiger Enumerationswert.</exception>
      <returns>Ein Enumerationswert oder eine bitweise Kombination von Enumerationswerten.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.KeyPassword">
      <summary>Ruft ein einem Smartcardschlüssel zugeordnetes Kennwort ab oder legt dieses fest.</summary>
      <returns>Ein einem Smartcardschlüssel zugeordnetes Kennwort.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CspParameters.ParentWindowHandle">
      <summary>Ruft ein Handle für das nicht verwaltete übergeordnete Fenster eines Smartcard-Kennwortdialogfelds ab oder legt dieses fest.</summary>
      <returns>Ein Handle für das übergeordnete Fenster eines Smartcard-Kennwortdialogfelds.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CspProviderFlags">
      <summary>Gibt Flags an, die das Verhalten der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) ändern.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.CreateEphemeralKey">
      <summary>Erstellen Sie einen temporären Schlüssel, der freigegeben wird, wenn das zugeordnete RSA-Objekt (Rivest-Shamir-Adleman) geschlossen wird. Verwenden Sie dieses Flag nicht, wenn Sie möchten, dass der Schlüssel vom RSA-Objekt unabhängig ist.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoFlags">
      <summary>Geben Sie keine Einstellung an.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.NoPrompt">
      <summary>Verhindern Sie, dass der Kryptografiedienstanbieter irgendeine Benutzeroberfläche (UI) für diesen Kontext anzeigt.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseArchivableKey">
      <summary>Lassen Sie zu, dass ein Schlüssel zur Archivierung oder Wiederherstellung exportiert wird.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseDefaultKeyContainer">
      <summary>Verwenden Sie Schlüsselinformationen aus dem Standardschlüsselcontainer.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseExistingKey">
      <summary>Verwenden Sie Schlüsselinformationen aus dem aktuellen Schlüssel.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore">
      <summary>Verwenden Sie Schlüsselinformationen aus dem Schlüsselspeicher des Computers.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseNonExportableKey">
      <summary>Verwenden Sie Schlüsselinformationen, die nicht exportiert werden können.</summary>
    </member>
    <member name="F:System.Security.Cryptography.CspProviderFlags.UseUserProtectedKey">
      <summary>Benachrichtigen Sie den Benutzer über ein Dialogfeld oder eine andere Methode, wenn bestimmte Aktionen versuchen, einen Schlüssel zu verwenden.  Dieses Flag ist nicht mit dem <see cref="F:System.Security.Cryptography.CspProviderFlags.NoPrompt" />-Flag kompatibel.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DESCryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt für den Zugriff auf die <see cref="T:System.Security.Cryptography.DES" />-Algorithmusversion (Data Encryption Standard) des Kryptografiedienstanbieters (Cryptographic Service Provider, CSP). Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" />-Klasse.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <see cref="T:System.Security.Cryptography.DES" />-Kryptografiedienstanbieter (Data Encryption Standard) ist nicht verfügbar.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor">
      <summary>Erstellt ein symmetrisches Entschlüsselungsobjekt mit der aktuellen <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />-Eigenschaft und dem Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <returns>Ein symmetrisches Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.DES" />-Entschlüsselungsobjekt (Data Encryption Standard) mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
- oder - 
Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.CFB" />, und der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />-Eigenschaft ist nicht 8.  
  
- oder - 
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder - 
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.DES" />-Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor">
      <summary>Erstellt ein symmetrisches Verschlüsselungsobjekt mit der aktuellen <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />-Eigenschaft und dem aktuellen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <returns>Ein symmetrisches Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.DES" />-Verschlüsselungsobjekt (Data Encryption Standard) mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
- oder - 
Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.CFB" />, und der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />-Eigenschaft ist nicht 8.  
  
- oder - 
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder - 
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.DES" />-Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV">
      <summary>Generiert einen zufälligen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) für den Algorithmus.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey">
      <summary>Generiert einen Zufallsschlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) für den Algorithmus.</summary>
    </member>
    <member name="T:System.Security.Cryptography.DSACryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Implementierung (Cryptographic Service Provider) des <see cref="T:System.Security.Cryptography.DSA" />-Algorithmus zuzugreifen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Klasse mit der angegebenen Schlüsselgröße.</summary>
      <param name="dwKeySize">Die Größe des Schlüssels für den asymmetrischen Algorithmus in Bits.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Klasse mit der angegebenen Schlüsselgröße und den angegebenen Parametern für den Kryptografiedienstanbieter (Cryptographic Service Provider, CSP).</summary>
      <param name="dwKeySize">Die Größe des Schlüssels für den kryptografischen Algorithmus in Bits.</param>
      <param name="parameters">Die Parameter für den CSP.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der CSP kann nicht abgerufen werden.  
  
 - oder -  
  
 Der Schlüssel kann nicht erstellt werden.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dwKeySize" /> liegt außerhalb des Bereichs.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Klasse mit den angegebenen Parametern für den Kryptografiedienstanbieter (Cryptographic Service Provider, CSP).</summary>
      <param name="parameters">Die Parameter für den CSP.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
      <summary>Erstellt die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</summary>
      <param name="rgbHash">Die zu signierenden Daten.</param>
      <returns>Die digitale Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>Exportiert ein BLOB, das die einem <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Objekt zugeordneten Schlüsselinformationen enthält.</summary>
      <param name="includePrivateParameters">
        <see langword="true" />, wenn der private Schlüssel enthalten sein soll, anderenfalls <see langword="false" />.</param>
      <returns>Ein Bytearray, das die einem <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Objekt zugeordneten Schlüsselinformationen enthält.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>Exportiert die <see cref="T:System.Security.Cryptography.DSAParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Schlüssel kann nicht exportiert werden.</exception>
      <returns>Die Parameter für <see cref="T:System.Security.Cryptography.DSA" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>Importiert ein BLOB, das DSA-Schlüsselinformationen darstellt.</summary>
      <param name="keyBlob">Ein Bytearray, das ein DSA-BLOB für Schlüssel darstellt.</param>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
      <summary>Importiert die angegebenen <see cref="T:System.Security.Cryptography.DSAParameters" />.</summary>
      <param name="parameters">Die Parameter für <see cref="T:System.Security.Cryptography.DSA" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
- oder - 
Der <paramref name="parameters" />-Parameter weist fehlende Felder auf.</exception>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
      <summary>Berechnet und signiert den Hashwert des angegebenen Bytearrays.</summary>
      <param name="buffer">Die Eingabedaten, für die der Hashwert berechnet werden soll.</param>
      <returns>Die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
      <summary>Signiert ein Bytearray vom angegebenen Anfangspunkt bis zum angegebenen Endpunkt.</summary>
      <param name="buffer">Die zu signierenden Eingabedaten.</param>
      <param name="offset">Der Offset im Array, ab dem Daten verwendet werden sollen.</param>
      <param name="count">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</param>
      <returns>Die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
      <summary>Berechnet und signiert den Hashwert des angegebenen Eingabestreams.</summary>
      <param name="inputStream">Die Eingabedaten, für die der Hashwert berechnet werden soll.</param>
      <returns>Die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>Berechnet die Signatur für den angegebenen Hashwert durch Verschlüsselung mit dem privaten Schlüssel.</summary>
      <param name="rgbHash">Der Hashwert der zu signierenden Daten.</param>
      <param name="str">Der Name des Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbHash" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
 - oder -  
  
 Es ist kein privater Schlüssel vorhanden.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für den angegebenen Hashwert.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
      <summary>Überprüft die angegebenen Signaturdaten durch Vergleich mit der Signatur, die für die angegebenen Daten berechnet wurde.</summary>
      <param name="rgbData">Die Daten, die signiert wurden.</param>
      <param name="rgbSignature">Die zu überprüfenden Signaturdaten.</param>
      <returns>
        <see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>Überprüft die angegebenen Signaturdaten durch Vergleich mit der Signatur, die für den angegebenen Hashwert berechnet wurde.</summary>
      <param name="rgbHash">Der Hashwert der zu signierenden Daten.</param>
      <param name="str">Der Name des Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <param name="rgbSignature">Die zu überprüfenden Signaturdaten.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbHash" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="rgbSignature" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
 - oder -  
  
 Die Signatur kann nicht überprüft werden.</exception>
      <returns>
        <see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
      <summary>Überprüft die <see cref="T:System.Security.Cryptography.DSA" />-Signatur für die angegebenen Daten.</summary>
      <param name="rgbHash">Die mit <paramref name="rgbSignature" /> signierten Daten.</param>
      <param name="rgbSignature">Die für <paramref name="rgbData" /> zu überprüfende Signatur.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="rgbSignature" /> der Signatur entspricht, die mit dem angegebenen Hashalgorithmus und Schlüssel für <paramref name="rgbHash" /> berechnet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>Ruft ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt ab, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</summary>
      <returns>Ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>Ruft den Namen des Algorithmus für den Schlüsselaustausch ab.</summary>
      <returns>Der Name des Algorithmus für den Schlüsselaustausch.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
      <summary>Ruft die Größe des vom asymmetrischen Algorithmus verwendeten Schlüssels in Bits ab.</summary>
      <returns>Die Größe des vom asymmetrischen Algorithmus verwendeten Schlüssels.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes">
      <summary>Ruft die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen ab.</summary>
      <returns>Nur Schlüsselgrößen, die mit einem Eintrag in diesem Array übereinstimmen, werden vom asymmetrischen Algorithmus unterstützt.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
      <summary>Ruft einen Wert ab, der angibt, ob der Schlüssel im Kryptografiedienstanbieter (CSP) beibehalten werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüssel im CSP beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Objekt nur einen öffentlichen Schlüssel enthält.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />-Objekt nur einen öffentlichen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm">
      <summary>Ruft den Namen des Signaturalgorithmus ab.</summary>
      <returns>Der Name des Signaturalgorithmus.</returns>
    </member>
    <member name="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
      <summary>Ruft einen Wert ab, der angibt, ob der Schlüssel statt im Benutzerprofilspeicher im Schlüsselspeicher des Computers beibehalten werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüssel im Schlüsselspeicher des Computers beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.ICspAsymmetricAlgorithm">
      <summary>Definiert Methoden, die einer <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Klasse das Aufzählen von Schlüsselcontainerinformationen und das Importieren und Exportieren von Microsoft CAPI-kompatiblen (Cryptographic API) Schlüssel-Blobs ermöglichen.</summary>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
      <summary>Exportiert ein BLOB, das die Schlüsselinformationen enthält, die einem <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekt zugeordnet sind.</summary>
      <param name="includePrivateParameters">
        <see langword="true" />, wenn der private Schlüssel enthalten sein soll, anderenfalls <see langword="false" />.</param>
      <returns>Ein Bytearray, das die Schlüsselinformationen enthält, die einem <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />-Objekt zugeordnet sind.</returns>
    </member>
    <member name="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
      <summary>Importiert ein BLOB, das Informationen zu asymmetrischen Schlüsseln darstellt.</summary>
      <param name="rawData">Ein Bytearray, das ein BLOB für asymmetrische Schlüssel darstellt.</param>
    </member>
    <member name="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
      <summary>Ruft ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt ab, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</summary>
      <returns>Ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</returns>
    </member>
    <member name="T:System.Security.Cryptography.KeyNumber">
      <summary>Gibt an, ob ein asymmetrischer Signaturschlüssel oder ein asymmetrischer Austauschschlüssel erstellt werden soll.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Exchange">
      <summary>Ein Austauschschlüsselpaar für die Verschlüsselung von Sitzungsschlüsseln zum sicheren Speichern und Austauschen mit anderen Benutzern. Dieser Wert entspricht dem Wert AT_KEYEXCHANGE, der in der nicht verwalteten Microsoft Cryptographic API (CAPI) verwendet wird.</summary>
    </member>
    <member name="F:System.Security.Cryptography.KeyNumber.Signature">
      <summary>Ein Signaturschlüsselpaar für die Authentifizierung digital signierter Nachrichten oder Dateien. Dieser Wert entspricht dem Wert AT_SIGNATURE, der in der nicht verwalteten Microsoft Cryptographic API (CAPI) verwendet wird.</summary>
    </member>
    <member name="T:System.Security.Cryptography.MD5CryptoServiceProvider">
      <summary>Berechnet den <see cref="T:System.Security.Cryptography.MD5" />-Hashwert für die Eingabedaten unter Verwendung der vom Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) zur Verfügung gestellten Implementierung. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />-Klasse.</summary>
      <exception cref="T:System.InvalidOperationException">Es wird keine FIPS-kompatible Algorithmusrichtlinie verwendet.</exception>
    </member>
    <member name="M:System.Security.Cryptography.MD5CryptoServiceProvider.Initialize">
      <summary>Initialisiert eine Instanz von <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.PasswordDeriveBytes">
      <summary>Leitet mithilfe einer Erweiterung des PBKDF1-Algorithmus einen Schlüssel von einem Kennwort ab.</summary>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse und gibt das Kennwort und den Salt-Wert des Schlüssels an, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="password">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="salt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels und den CSP (Cryptographic Service Provider) an, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="password">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="salt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="cspParams">Die CSP-Parameter für den Vorgang.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels, den Hashnamen und die Anzahl der Iterationen an, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="password">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="salt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="hashName">Der Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="iterations">Die Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden soll.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.Byte[],System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse und gibt das Kennwort, den Salt-Wert des Schlüssels, den Hashnamen, die Iterationen und die CSP-Parameter an, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="password">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="salt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="hashName">Der Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="iterations">Die Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="cspParams">Die CSP-Parameter für den Vorgang.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse mit dem Kennwort und dem Salt-Wert, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="strPassword">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="rgbSalt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels und den CSP-Parametern (Cryptographic Service Provider), die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="strPassword">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="rgbSalt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="cspParams">Die CSP-Parameter für die Operation.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels, dem Hashnamen und der Anzahl der Iterationen, die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="strPassword">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="rgbSalt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="strHashName">Der Name des Hashalgorithmus für die Operation.</param>
      <param name="iterations">Die Anzahl der Iterationen für die Operation.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.#ctor(System.String,System.Byte[],System.String,System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse mit dem Kennwort, dem Salt-Wert des Schlüssels, dem Hashnamen, der Anzahl der Iterationen und den CSP-Parametern (Cryptographic Service Provider), die zum Ableiten des Schlüssels verwendet werden sollen.</summary>
      <param name="strPassword">Das Kennwort, für das der Schlüssel abgeleitet werden soll.</param>
      <param name="rgbSalt">Der Salt-Wert, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="strHashName">Der Name des Hashalgorithmus für die Operation.</param>
      <param name="iterations">Die Anzahl der Iterationen für die Operation.</param>
      <param name="cspParams">Die CSP-Parameter für die Operation.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
      <summary>Leitet einen kryptografischen Schlüssel vom <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Objekt ab.</summary>
      <param name="algname">Der Name des Algorithmus, für den der Schlüssel abgeleitet werden soll.</param>
      <param name="alghashname">Der Name des Hashalgorithmus, der zum Ableiten des Schlüssels verwendet werden soll.</param>
      <param name="keySize">Die Größe des abzuleitenden Schlüssels in Bits.</param>
      <param name="rgbIV">Der zum Ableiten des Schlüssels zu verwendende Initialisierungsvektor.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der <paramref name="keySize" />-Parameter ist ungültig.  
  
- oder - 
Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
- oder - 
Der <paramref name="algname" />-Parameter ist kein gültiger Algorithmusname.  
  
- oder - 
Der <paramref name="alghashname" />-Parameter ist kein gültiger Name eines Hashalgorithmus.</exception>
      <returns>Der abgeleitete Schlüssel.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Dispose(System.Boolean)">
      <summary>Gibt die von der <see cref="T:System.Security.Cryptography.PasswordDeriveBytes" />-Klasse verwendeten nicht verwalteten Ressourcen frei und gibt (optional) auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.GetBytes(System.Int32)">
      <summary>Gibt pseudozufällige Schlüsselbytes zurück.</summary>
      <param name="cb">Die Anzahl der zu generierenden pseudozufälligen Schlüsselbytes.</param>
      <returns>Ein mit pseudozufälligen Schlüsselbytes gefülltes Bytearray.</returns>
    </member>
    <member name="M:System.Security.Cryptography.PasswordDeriveBytes.Reset">
      <summary>Setzt den Zustand der Operation zurück.</summary>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.HashName">
      <summary>Ruft den Namen des Hashalgorithmus für die Operation ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Name des Hashwerts ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</exception>
      <returns>Der Name des Hashalgorithmus für die Operation.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.IterationCount">
      <summary>Ruft die Anzahl der Iterationen für die Operation ab oder legt diese fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Die Anzahl der Iterationen ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft kann nicht festgelegt werden, da ihr Wert außerhalb des gültigen Bereichs liegt. Für diese Eigenschaft ist eine nicht negative Zahl erforderlich.</exception>
      <returns>Die Anzahl der Iterationen für die Operation.</returns>
    </member>
    <member name="P:System.Security.Cryptography.PasswordDeriveBytes.Salt">
      <summary>Ruft den Salt-Wert des Schlüssels für die Operation ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Salt-Wert des Schlüssels ist unveränderlich. Es wurde versucht, diesen Wert zu ändern.</exception>
      <returns>Der Wert der Schlüsselsalt für die Operation.</returns>
    </member>
    <member name="T:System.Security.Cryptography.RC2CryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Implementierung (Cryptographic Service Provider) des <see cref="T:System.Security.Cryptography.RC2" />-Algorithmus zuzugreifen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" />-Klasse.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Ein inkompatibler FIPS-Algorithmus wurde gefunden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.RC2" />-Entschlüsselungsobjekt mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Ein <see cref="F:System.Security.Cryptography.CipherMode.OFB" />-Verschlüsselungsmodus wurde verwendet.  
  
- oder - 
Ein <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> Verschlüsselungsmodus mit einer Feedbackgröße ungleich 8 Bits wurde verwendet.  
  
- oder - 
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder - 
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.RC2" />-Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.RC2" />-Verschlüsselungsobjekt mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Ein <see cref="F:System.Security.Cryptography.CipherMode.OFB" />-Verschlüsselungsmodus wurde verwendet.  
  
- oder - 
Ein <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> Verschlüsselungsmodus mit einer Feedbackgröße ungleich 8 Bits wurde verwendet.  
  
- oder - 
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder - 
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.RC2" />-Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
      <summary>Generiert einen zufälligen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) für den Algorithmus.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
      <summary>Generiert einen Zufallsschlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) für den Algorithmus.</summary>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
      <summary>Ruft die effektive Größe des geheimen Schlüssels für den <see cref="T:System.Security.Cryptography.RC2" />-Algorithmus in Bits ab oder legt diese fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">Die <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />-Eigenschaft wurde auf einen anderen Wert als die <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />-Eigenschaft festgelegt.</exception>
      <returns>Die effektive Schlüsselgröße für den <see cref="T:System.Security.Cryptography.RC2" />-Algorithmus (in Bits).</returns>
    </member>
    <member name="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
      <summary>Ruft einen Wert ab, der bestimmt, ob ein Schlüssel mit einem Salt mit der Länge 11 Bytes und dem Wert 0 (null) erstellt werden soll, bzw. legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüssel mit einem Salt mit der Länge 11 Bytes und dem Wert 0 (null) erstellt werden soll; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.RNGCryptoServiceProvider">
      <summary>Implementiert einen kryptografischen Zufallszahlen-Generator (Random Number Generator, RNG) unter Verwendung der Implementierung, die der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) bereitstellt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />-Klasse.</summary>
      <param name="rgb">Ein Bytearray. Dieser Wert wird ignoriert.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />-Klasse mit den angegebenen Parametern.</summary>
      <param name="cspParams">Die an den Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) zu übergebenden Parameter.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" />-Klasse.</summary>
      <param name="str">Die Eingabezeichenfolge. Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und einem kulturspezifischen Format in die entsprechende 32-Bit-Ganzzahl mit Vorzeichen.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
      <summary>Füllt ein Bytearray mit einer kryptografisch starken Folge von zufälligen Werten aus.</summary>
      <param name="data">Das Array, das mit einer kryptografisch starken Folge von zufälligen Werten gefüllt werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Füllt das angegebene Bytearray mit einer kryptografisch starken Zufallssequenz von Werten, beginnend an einem angegebenen Index für eine angegebene Anzahl von Bytes.</summary>
      <param name="data">Das mit kryptographisch starken, zufälligen Bytes auszufüllende Array.</param>
      <param name="offset">Der Index des Arrays, an dem der Füllvorgang beginnen soll.</param>
      <param name="count">Die Anzahl der zu füllenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> plus <paramref name="count" /> überschreitet den Wert von <paramref name="data" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Span{System.Byte})">
      <summary>Füllt einen Bereich mit kryptographisch starken, zufälligen Bytes.</summary>
      <param name="data">Der mit kryptographisch starken, zufälligen Bytes auszufüllende Bereich.</param>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
      <summary>Füllt ein Bytearray mit einer kryptografisch starken Folge von zufälligen Werten aus, die ungleich 0 (null) sind.</summary>
      <param name="data">Das Array, das mit einer kryptografisch starken Folge von zufälligen Werten gefüllt werden soll, die ungleich 0 (null) sind.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Span{System.Byte})">
      <summary>Füllt einen Bytebereich mit einer kryptografisch starken, zufälligen Folge von Werten ungleich NULL aus.</summary>
      <param name="data">Der mit kryptographisch starken, zufälligen Bytes ungleich NULL auszufüllende Bereich.</param>
    </member>
    <member name="T:System.Security.Cryptography.RSACryptoServiceProvider">
      <summary>Führt eine asymmetrische Ver- und Entschlüsselung mithilfe der Implementierung des <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus aus, der vom Kryptografiedienstanbieter (CSP) bereitgestellt wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Klasse mit einem zufällig generierten Schlüsselpaar.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Klasse mit einem zufällig erzeugten Schlüsselpaar der angegebenen Schlüsselgröße.</summary>
      <param name="dwKeySize">Die Länge des zu verwendenden Schlüssels in Bits.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Klasse mit der angegebenen Schlüsselgröße und den angegebenen Parametern.</summary>
      <param name="dwKeySize">Die Länge des zu verwendenden Schlüssels in Bits.</param>
      <param name="parameters">Die an den Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) zu übergebenden Parameter.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der CSP kann nicht abgerufen werden.  
  
 - oder -  
  
 Der Schlüssel kann nicht erstellt werden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Klasse mit den angegebenen Parametern.</summary>
      <param name="parameters">Die an den Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) zu übergebenden Parameter.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der CSP kann nicht abgerufen werden.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)">
      <summary>Verschlüsselt Daten mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus.</summary>
      <param name="rgb">Die zu entschlüsselnden Daten.</param>
      <param name="fOAEP">
        <see langword="true" />, um direkte <see cref="T:System.Security.Cryptography.RSA" />-Entschlüsselung mit OAEP-Padding (Auffüllung) auszuführen, andernfalls <see langword="false" />, um Padding gemäß PKCS#1 v1.5 zu verwenden.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
- oder - 
Der <paramref name="fOAEP" />-Parameter ist <see langword="true" />, und die Länge des <paramref name="rgb" />-Parameters ist größer als <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.  
  
- oder - 
Der Schlüssel stimmt nicht mit den verschlüsselten Daten überein. Allerdings ist der Wortlaut der Ausnahme möglicherweise nicht präzise. Die Meldung kann beispielsweise <c>Zum Verarbeiten des Befehls ist nicht genügend Speicherplatz verfügbar</c> lauten.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" /> ist <see langword="null" />.</exception>
      <returns>Die entschlüsselten Daten, d. h. der ursprüngliche Klartext vor der Verschlüsselung.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Entschlüsselt zuvor mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus verschlüsselte Daten unter Verwendung des angegebene Paddingmodus.</summary>
      <param name="data">Die zu entschlüsselnden Daten.</param>
      <param name="padding">Der Paddingmodus.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="padding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Paddingmodus wird nicht unterstützt.</exception>
      <returns>Die entschlüsselten Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])">
      <summary>Diese Methode wird in der aktuellen Version nicht unterstützt.</summary>
      <param name="rgb">Die zu entschlüsselnden Daten.</param>
      <exception cref="T:System.NotSupportedException">Diese Methode wird in der aktuellen Version nicht unterstützt.</exception>
      <returns>Die entschlüsselten Daten, d. h. der ursprüngliche Klartext vor der Verschlüsselung.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)">
      <summary>Verschlüsselt Daten mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus.</summary>
      <param name="rgb">Die zu verschlüsselnden Daten.</param>
      <param name="fOAEP">
        <see langword="true" />, um direkte <see cref="T:System.Security.Cryptography.RSA" />-Verschlüsselung mit OAEP auszuführen (nur auf einem Computer unter Windows XP oder höher verfügbar), andernfalls <see langword="false" />, wenn Auffüllung (Padding) gemäß PKCS#1 v1.5 verwendet wird.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
- oder - 
Der <paramref name="rgb" />-Parameter ist länger als zulässig.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgb" /> ist <see langword="null" />.</exception>
      <returns>Die verschlüsselten Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Verschlüsselt Daten mit dem <see cref="T:System.Security.Cryptography.RSA" />-Algorithmus unter Verwendung der angegebenen Auffüllung.</summary>
      <param name="data">Die zu verschlüsselnden Daten.</param>
      <param name="padding">Der Paddingmodus.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="padding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Paddingmodus wird nicht unterstützt.</exception>
      <returns>Die verschlüsselten Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])">
      <summary>Diese Methode wird in der aktuellen Version nicht unterstützt.</summary>
      <param name="rgb">Die zu verschlüsselnden Daten.</param>
      <exception cref="T:System.NotSupportedException">Diese Methode wird in der aktuellen Version nicht unterstützt.</exception>
      <returns>Die verschlüsselten Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
      <summary>Exportiert ein BLOB, das die Schlüsselinformationen enthält, die einem <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Objekt zugeordnet sind.</summary>
      <param name="includePrivateParameters">
        <see langword="true" />, wenn der private Schlüssel enthalten sein soll, anderenfalls <see langword="false" />.</param>
      <returns>Ein Bytearray, das die Schlüsselinformationen enthält, die einem <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Objekt zugeordnet sind.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)">
      <summary>Exportiert die <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
      <param name="includePrivateParameters">
        <see langword="true" />, wenn private Parameter angegeben werden sollen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Schlüssel kann nicht exportiert werden.</exception>
      <returns>Die Parameter für <see cref="T:System.Security.Cryptography.RSA" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
      <summary>Importiert ein BLOB, das RSA-Schlüsselinformationen darstellt.</summary>
      <param name="keyBlob">Ein Bytearray, das ein RSA-Schlüssel-BLOB darstellt.</param>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)">
      <summary>Importiert die angegebenen <see cref="T:System.Security.Cryptography.RSAParameters" />.</summary>
      <param name="parameters">Die Parameter für <see cref="T:System.Security.Cryptography.RSA" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
- oder - 
Der <paramref name="parameters" />-Parameter weist fehlende Felder auf.</exception>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)">
      <summary>Berechnet den Hashwert einer Teilmenge des angegebenen Bytearrays mithilfe des angegebenen Hashalgorithmus und signiert den sich ergebenden Hashwert.</summary>
      <param name="buffer">Die Eingabedaten, die gehasht und signiert werden sollen.</param>
      <param name="offset">Der Offset im Array, ab dem Daten verwendet werden sollen.</param>
      <param name="count">Die Anzahl der Bytes im Array, die als Daten verwendet werden sollen.</param>
      <param name="halg">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="halg" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="halg" />-Parameter ist kein gültiger Typ.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.RSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)">
      <summary>Berechnet den Hashwert des angegebenen Bytearrays mithilfe des angegebenen Hashalgorithmus und signiert den resultierenden Hashwert.</summary>
      <param name="buffer">Die Eingabedaten, die gehasht und signiert werden sollen.</param>
      <param name="halg">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="halg" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="halg" />-Parameter ist kein gültiger Typ.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.RSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)">
      <summary>Berechnet den Hashwert des angegebenen Eingabedatenstroms mithilfe des angegebenen Hashalgorithmus und signiert den resultierenden Hashwert.</summary>
      <param name="inputStream">Der Eingabedatenstrom, der gehasht und signiert werden soll.</param>
      <param name="halg">Der zum Erstellen des Hashwerts zu verwendende Hashalgorithmus.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="halg" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="halg" />-Parameter ist kein gültiger Typ.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.RSA" />-Signatur für die angegebenen Daten.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Berechnet die Signatur für den angegebenen Hashwert unter Verwendung des angegebenen Paddings.</summary>
      <param name="hash">Der Hashwert der zu signierenden Daten.</param>
      <param name="hashAlgorithm">Der Name des Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <param name="padding">Der Paddingmodus.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="padding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> entspricht nicht <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.RSA" />-Signatur für den angegebenen Hashwert.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
      <summary>Berechnet die Signatur für den angegebenen Hashwert.</summary>
      <param name="rgbHash">Der Hashwert der zu signierenden Daten.</param>
      <param name="str">Die ID des Hashalgorithmus (OID), die zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbHash" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
 - oder -  
  
 Es ist kein privater Schlüssel vorhanden.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.RSA" />-Signatur für den angegebenen Hashwert.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])">
      <summary>Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert in der Signatur unter Verwendung des bereitgestellten öffentlichen Schlüssels und durch Vergleichen mit dem Hashwert der bereitgestellten Daten.</summary>
      <param name="buffer">Die Daten, die signiert wurden.</param>
      <param name="halg">Der Name des Hashalgorithmus, der zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <param name="signature">Die zu überprüfenden Signaturdaten.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="halg" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="halg" />-Parameter ist kein gültiger Typ.</exception>
      <returns>
        <see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
      <summary>Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert in der Signatur unter Verwendung des angegebenen Hashalgorithmus und Paddingmodus ermittelt und mit dem angegebenen Hashwert verglichen wird.</summary>
      <param name="hash">Der Hashwert der signierten Daten.</param>
      <param name="signature">Die zu überprüfenden Signaturdaten.</param>
      <param name="hashAlgorithm">Der Name des Hashalgorithmus, der zum Erstellen des Hashwerts verwendet wird.</param>
      <param name="padding">Der Paddingmodus.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hash" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="padding" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="padding" /> entspricht nicht <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</exception>
      <returns>
        <see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
      <summary>Überprüft, ob eine digitale Signatur gültig ist, indem der Hashwert in der Signatur unter Verwendung des bereitgestellten öffentlichen Schlüssels ermittelt und mit dem bereitgestellten Hashwert verglichen wird.</summary>
      <param name="rgbHash">Der Hashwert der signierten Daten.</param>
      <param name="str">Die ID des Hashalgorithmus (OID), die zum Erstellen des Hashwerts der Daten verwendet wird.</param>
      <param name="rgbSignature">Die zu überprüfenden Signaturdaten.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="rgbHash" />-Parameter ist <see langword="null" />.  
  
- oder - 
Der <paramref name="rgbSignature" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) kann nicht abgerufen werden.  
  
 - oder -  
  
 Die Signatur kann nicht überprüft werden.</exception>
      <returns>
        <see langword="true" />, wenn die Signatur gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo">
      <summary>Ruft ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt ab, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</summary>
      <returns>Ein <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" />-Objekt, das zusätzliche beschreibende Informationen zu einem kryptografischen Schlüsselpaar enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm">
      <summary>Ruft den Namen des in dieser Implementierung von <see cref="T:System.Security.Cryptography.RSA" /> verfügbaren Algorithmus für den Schlüsselaustausch ab.</summary>
      <returns>Der Name des Algorithmus für den Schlüsselaustausch, sofern es diesen gibt, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize">
      <summary>Ruft die Größe des aktuellen Schlüssels ab.</summary>
      <returns>Die Größe des Schlüssels in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes">
      <summary>Ruft die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen ab.</summary>
      <returns>Ein Array, das die vom asymmetrischen Algorithmus unterstützten Schlüsselgrößen enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp">
      <summary>Ruft einen Wert ab, der angibt, ob der Schlüssel im Kryptografiedienstanbieter (CSP) beibehalten werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüssel im CSP beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Objekt nur einen öffentlichen Schlüssel enthält.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />-Objekt nur einen öffentlichen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm">
      <summary>Ruft den Namen des in dieser Implementierung von <see cref="T:System.Security.Cryptography.RSA" />verfügbaren Signaturalgorithmus ab.</summary>
      <returns>Der Name des Signaturalgorithmus.</returns>
    </member>
    <member name="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore">
      <summary>Ruft einen Wert ab, der angibt, ob der Schlüssel statt im Benutzerprofilspeicher im Schlüsselspeicher des Computers beibehalten werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn der Schlüssel im Schlüsselspeicher des Computers beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.SHA1CryptoServiceProvider">
      <summary>Berechnet den <see cref="T:System.Security.Cryptography.SHA1" />-Hashwert für die Eingabedaten unter Verwendung der vom Kryptografiedienstanbieter (Cryptographic Service Provider, CSP) zur Verfügung gestellten Implementierung. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize">
      <summary>Initialisiert eine Instanz von <see cref="T:System.Security.Cryptography.SHA1CryptoServiceProvider" />.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA256CryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Implementierung (Cryptographic Service Provider) des <see cref="T:System.Security.Cryptography.SHA256" />-Algorithmus zuzugreifen.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.SHA256CryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA256CryptoServiceProvider.Initialize">
      <summary>Initialisiert oder reinitialisiert eine Instanz eines Hashalgorithmus.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA384CryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Implementierung (Cryptographic Service Provider) des <see cref="T:System.Security.Cryptography.SHA384" />-Algorithmus zuzugreifen.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.SHA384CryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA384CryptoServiceProvider.Initialize">
      <summary>Initialisiert oder reinitialisiert eine Instanz eines Hashalgorithmus.</summary>
    </member>
    <member name="T:System.Security.Cryptography.SHA512CryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Implementierung (Cryptographic Service Provider) des <see cref="T:System.Security.Cryptography.SHA512" />-Algorithmus zuzugreifen.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.SHA512CryptoServiceProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.SHA512CryptoServiceProvider.Initialize">
      <summary>Initialisiert oder reinitialisiert eine Instanz eines Hashalgorithmus.</summary>
    </member>
    <member name="T:System.Security.Cryptography.TripleDESCryptoServiceProvider">
      <summary>Definiert ein Wrapperobjekt, um auf die Kryptografiedienstanbieter-Version (Cryptographic Service Provider, CSP) des <see cref="T:System.Security.Cryptography.TripleDES" />-Algorithmus zuzugreifen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Cryptography.TripleDESCryptoServiceProvider" />-Klasse.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Kryptografiedienstanbieter für <see cref="T:System.Security.Cryptography.TripleDES" /> ist nicht verfügbar.</exception>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor">
      <summary>Erstellt ein symmetrisches Entschlüsselungsobjekt mit der aktuellen <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />-Eigenschaft und dem Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <returns>Ein symmetrisches Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.TripleDES" />-Entschlüsselungsobjekt mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
- oder -  
Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.CFB" />, und der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />-Eigenschaft ist nicht 8.  
  
- oder -  
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder -  
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.TripleDES" />-Entschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor">
      <summary>Erstellt ein symmetrisches Verschlüsselungsobjekt mit der aktuellen <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />-Eigenschaft und dem aktuellen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <returns>Ein symmetrisches Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
      <summary>Erstellt ein symmetrisches <see cref="T:System.Security.Cryptography.TripleDES" />-Verschlüsselungsobjekt mit dem angegebenen Schlüssel (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) und dem angegebenen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
      <param name="rgbKey">Der geheime Schlüssel, der für den symmetrischen Algorithmus verwendet werden soll.</param>
      <param name="rgbIV">Der Initialisierungsvektor, der für den symmetrischen Algorithmus verwendet werden soll.  
  
 <para>Hinweis: Der Initialisierungsvektor muss 8 Bytes lang sein. Wenn es mehr als 8 Bytes ist, wird es abgeschnitten und eine Ausnahme wird nicht ausgelöst. Bevor Sie <see cref="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" /> aufrufen, überprüfen Sie die Länge des Initialisierungsvektors und lösen eine Ausnahme aus, wenn sie zu lang ist.</para></param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
- oder -  
Der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />-Eigenschaft ist <see cref="F:System.Security.Cryptography.CipherMode.CFB" />, und der Wert der <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />-Eigenschaft ist nicht 8.  
  
- oder -  
Eine ungültige Schlüsselgröße wurde verwendet.  
  
- oder -  
Die Algorithmusschlüsselgröße war nicht verfügbar.</exception>
      <returns>Ein symmetrisches <see cref="T:System.Security.Cryptography.TripleDES" />-Verschlüsselungsobjekt.</returns>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV">
      <summary>Generiert einen zufälligen Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) für den Algorithmus.</summary>
    </member>
    <member name="M:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey">
      <summary>Generiert einen zufälligen <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> für den Algorithmus.</summary>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.BlockSize">
      <summary>Ruft die Blockgröße des kryptografischen Vorgangs in Bits ab oder legt diese fest.</summary>
      <returns>Die Blockgröße in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.FeedbackSize">
      <summary>Ruft die Feedbackgröße des kryptografischen Vorgangs für den CFB-Modus (Cipher Feedback, Verschlüsselungsverfahren-Feedback) und den OFB-Modus (Output Feedback, Ausgabefeedback) in Bits ab oder legt diese fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Die Feedbackgröße ist größer als die Blockgröße.</exception>
      <returns>Die Feedbackgröße in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.IV">
      <summary>Ruft den Initialisierungsvektor (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) für den symmetrischen Algorithmus ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException">Es wurde versucht, den Initialisierungsvektor auf <see langword="null" /> festzulegen.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Es wurde versucht, den Initialisierungsvektor auf eine ungültige Größe festzulegen.</exception>
      <returns>Der Initialisierungsvektor.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Key">
      <summary>Ruft den geheimen Schlüssel für den <see cref="T:System.Security.Cryptography.TripleDES" />-Algorithmus ab oder legt diesen fest.</summary>
      <returns>Der geheime Schlüssel für den <see cref="T:System.Security.Cryptography.TripleDES" />-Algorithmus.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.KeySize">
      <summary>Ruft die Größe, in Bits, des geheimen Schlüssels ab oder legt diese fest.</summary>
      <returns>Die Größe des Schlüssels in Bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalBlockSizes">
      <summary>Ruft die vom symmetrischen Algorithmus unterstützten Blockgrößen in Bits ab.</summary>
      <returns>Ein Array, das die vom Algorithmus unterstützten Blockgrößen enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.LegalKeySizes">
      <summary>Ruft die vom symmetrischen Algorithmus unterstützten Schlüsselgrößen in Bits ab.</summary>
      <returns>Ein Array, das die vom Algorithmus unterstützten Schlüsselgrößen enthält.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Mode">
      <summary>Ruft den Modus für die Ausführung des symmetrischen Algorithmus ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Verschlüsselungsmodus ist keiner der <see cref="T:System.Security.Cryptography.CipherMode" />-Werte.</exception>
      <returns>Der Modus für die Ausführung des symmetrischen Algorithmus. Der Standardwert ist <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.TripleDESCryptoServiceProvider.Padding">
      <summary>Ruft den im symmetrischen Algorithmus verwendeten Füllzeichenmodus ab oder legt diesen fest.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Der Füllzeichenmodus ist keiner der <see cref="T:System.Security.Cryptography.PaddingMode" />-Werte.</exception>
      <returns>Der im symmetrischen Algorithmus verwendete Füllzeichenmodus. Der Standardwert ist <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</returns>
    </member>
  </members>
</doc>