<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">Dieser Typ stellt ein ASN.1-Tag dar, wie in der ITU-T-Empfehlung X.680 beschrieben.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">Stellt das universelle Klassentag für einen booleschen Wert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">Stellt das universelle Klassentag für einen Bitzeichenfolgenwert bei einer konstruierten Codierung dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">Stellt das universelle Klassentag für einen Oktettzeichenfolgenwert bei einer konstruierten Codierung dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">Stellt das universelle Klassentag für einen Enumerationswert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">Stellt das universelle Klassentag für einen GeneralizedTime-Wert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">Stellt das universelle Klassentag für einen Ganzzahlwert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">Stellt das universelle Klassentag für einen <see langword="null" />-Wert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">Stellt das universelle Klassentag für einen Objektbezeichnerwert dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">Stellt das universelle Klassentag für einen Bitzeichenfolgenwert bei einer primitiven Codierung dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">Stellt das universelle Klassentag für einen Oktettzeichenfolgenwert bei einer primitiven Codierung dar.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">Stellt das universelle Klassentag für einen Sequenzwert dar (immer eine konstruierte Codierung).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">Stellt das universelle Klassentag für einen SetOf-Wert dar (immer eine konstruierte Codierung).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">Stellt das universelle Klassentag für einen UtcTime-Wert dar.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">Erstellt ein <see cref="T:System.Formats.Asn1.Asn1Tag" />-Element für einen angegebenen Wert innerhalb einer angegebenen Tagklasse.</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">Die Tagklasse für dieses Tag.</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">Der numerische Wert für dieses Tag.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> bei einem konstruierten Tag, <see langword="false" /> bei einem primitiven Tag.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> ist kein bekannter Wert.
Oder <paramref name="tagValue" /> ist ein negativer Wert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">Erstellt ein <see cref="T:System.Formats.Asn1.Asn1Tag" />-Element für ein Tag aus der UNIVERSAL-Klasse.</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">Einer der Enumerationswerte, der den semantischen Typ für dieses Tag angibt.</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">
        <see langword="true" /> bei einem konstruierten Tag, <see langword="false" /> bei einem primitiven Tag.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> ist kein bekannter Wert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Erzeugt ein Tag mit denselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werten, <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ist jedoch <see langword="true" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Ein Tag mit denselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werten, <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ist jedoch <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Erzeugt ein Tag mit denselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werten, <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ist jedoch <see langword="false" />.</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">Ein Tag mit denselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werten, <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> ist jedoch <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">Gibt die Anzahl von Bytes an, die für die BER-Codierung dieses Tags erforderlich sind.</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">Die Anzahl von Bytes, die für die BER-Codierung dieses Tags erforderlich sind.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Liest ein BER-codiertes Tag, das bei <paramref name="source" /> beginnt.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Die schreibgeschützte Bytesequenz, die mit einem BER-codierten Tag beginnt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">Wenn diese Methode zurückgegeben wird, ist die Anzahl von Bytes für das codierte Tag enthalten. Dieser Parameter wird nicht initialisiert behandelt.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">Die bereitgestellten Daten lassen sich nicht in ein Tag decodieren.</exception>
      <returns vsli:raw="The decoded tag.">Das decodierte Tag.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Schreibt die BER-codierte Version dieses Tags in <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Der Start für das Schreiben des codierten Tags.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Die Anzahl der Bytes, die in <paramref name="destination" /> geschrieben wurden.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">Testet, ob <paramref name="other" /> dieselbe Codierung wie dieses Tag aufweist.</summary>
      <param name="other" vsli:raw="Tag to test for equality.">Das Tag, das auf Gleichheit geprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <paramref name="other" /> dieselben Werte für <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> und <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> aufweist; anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">Testet, ob <paramref name="obj" /> ein <see cref="T:System.Formats.Asn1.Asn1Tag" /> mit derselben Codierung wie dieses Tag ist.</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">
        <see langword="false" />, wenn <paramref name="obj" /> kein <see cref="T:System.Formats.Asn1.Asn1Tag" /> ist, anderenfalls <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">Testet, ob <paramref name="other" /> dieselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werte aufweist wie dieses Tag. Es erfolgt kein Abgleich für <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">Das Tag, dessen Konzept auf Gleichheit geprüft werden soll.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <paramref name="other" /> dieselben <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />- und <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />-Werte wie dieses Tag aufweist, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">Testet, ob zwei <see cref="T:System.Formats.Asn1.Asn1Tag" />-Werte dieselbe BER-Codierung aufweisen.</summary>
      <param name="left" vsli:raw="The first value to compare.">Der erste zu vergleichende Wert.</param>
      <param name="right" vsli:raw="The second value to compare.">Der zweite zu vergleichende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> dieselbe BER-Codierung aufweisen, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">Testet, ob zwei <see cref="T:System.Formats.Asn1.Asn1Tag" />-Werte eine unterschiedliche BER-Codierung aufweisen.</summary>
      <param name="left" vsli:raw="The first value to compare.">Der erste zu vergleichende Wert.</param>
      <param name="right" vsli:raw="The second value to compare.">Der zweite zu vergleichende Wert.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> eine unterschiedliche BER-Codierung aufweisen, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">Stellt eine Textdarstellung dieses Tags für das Debuggen bereit.</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">Eine Textdarstellung dieses Tags, die für das Debuggen geeignet ist.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">Versucht, ein BER-codiertes Tag zu lesen, das bei <paramref name="source" /> beginnt.</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">Die schreibgeschützte Bytesequenz, die mit einem BER-codierten Tag beginnt.</param>
      <param name="tag" vsli:raw="The decoded tag.">Das decodierte Tag.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">Wenn diese Methode zurückgegeben wird, ist die Anzahl von Bytes enthalten, die zum codierten Tag beigetragen haben. Bei einem Fehler wird der Wert 0 zurückgegeben. Dieser Parameter wird nicht initialisiert behandelt.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn ein Tag ordnungsgemäß decodiert wurde, anderenfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">Versucht, die BER-codierte Version dieses Tags in <paramref name="destination" /> zu schreiben.</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">Der Start für das Schreiben des codierten Tags.</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">Empfängt bei erfolgreichem Vorgang den Wert von <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />, bei einem Fehler den Wert 0.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">
        <see langword="false" /> bei <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(), anderenfalls <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">Gibt an, ob das Tag eine konstruierte Codierung (<see langword="true" />) darstellt oder eine primitive Codierung (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">Die Tagklasse, zu der dieses Tag gehört.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">Der numerische Wert für dieses Tag.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">Die Ausnahme, die ausgelöst wird, wenn ein codierter ASN.1-Wert nicht erfolgreich decodiert werden kann.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">Initialisiert eine neue Instanz der <see cref="T:System.Formats.Asn1.AsnContentException" />-Klasse unter Verwendung der Standardmeldung.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">Initialisiert eine neue Instanz der <see cref="T:System.Formats.Asn1.AsnContentException" />-Klasse mit serialisierten Daten.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">Initialisiert eine neue Instanz der <see cref="T:System.Formats.Asn1.AsnContentException" />-Klasse unter Verwendung der bereitgestellten Meldung.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">Initialisiert eine neue Instanz der <see cref="T:System.Formats.Asn1.AsnContentException" />-Klasse mit einer angegebenen Meldung und der Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">Stellt zustandslose Methoden zum Decodieren von BER-, CER- oder DER-codierten ASN.1-Daten bereit.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Liest einen Bitzeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und gibt den Inhalt in einem neuen Array zurück.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Bei Erfolg wird die Anzahl der Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">Ein Array, das den Inhalt des Bitzeichenfolgenwerts enthält.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen booleschen Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">Liest den nächsten Wert als Zeichenfolge mit dem angegebenen Tag und Codierungstyp und gibt die decodierte Zeichenfolge zurück.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Einer der Enumerationswerte, der den zu verarbeitenden Werttyp darstellt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> ist nicht definiert.
Oder <paramref name="encodingType" /> ist kein bekannter Zeichenfolgentyp.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder die Zeichenfolge konnte nicht erfolgreich decodiert werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist nicht identisch mit <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Sucht den Inhaltsbereich für den codierten Wert am Anfang des <paramref name="source" />-Puffers unter Verwendung der angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist der Offset der Inhaltsnutzlast relativ zum Anfang von <paramref name="source" />.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Anzahl der Bytes in der Inhaltsnutzlast (die 0 sein kann).
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> stellt keinen Wert dar, der gemäß den angegebenen Codierungsregeln codiert ist.</exception>
      <returns vsli:raw="The tag identifying the content.">Das Tag, das den Inhalt identifiziert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Liest einen Enumerationswert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und gibt den Inhalt als Segment des Puffers zurück.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">Das Segment des Puffers, das die Bytes des Enumerationswerts enthält, im big-endian-Format mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Liest einen Enumerationswert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und konvertiert diesen in die von <paramref name="enumType" /> angegebene nicht-[<see cref="T:System.FlagsAttribute" />]-Enumeration.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Typobjekt, das den Zieltyp darstellt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <paramref name="enumType" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> ist kein Enumerationstyp.
Oder <paramref name="enumType" /> wurde mit <see cref="T:System.FlagsAttribute" /> deklariert.
Oder <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Der in einen <paramref name="enumType" /> konvertierte Enumerationswert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Liest einen Enumerationswert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und konvertiert diesen in die von <typeparamref name="TEnum" /> angegebene nicht-[<see cref="T:System.FlagsAttribute" />]-Enumeration.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Ziel-Aufzählungs Typen</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <typeparamref name="TEnum" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> ist kein Enumerationstyp.
Oder <typeparamref name="TEnum" /> wurde mit <see cref="T:System.FlagsAttribute" /> deklariert.
Oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Der in ein <typeparamref name="TEnum" />-Element konvertierte Enumerationswert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen GeneralizedTime-Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The decoded numeric value.">Der decodierte numerische Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">Liest einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und gibt den Inhalt als Segment des Puffers zurück.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">Das Segment des Puffers, das die Bytes des Integerwerts in einem big-endian-Format mit Vorzeichen enthält.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest eine NamedBitList aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The bits from the encoded value.">Die Bits aus dem codierten Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Liest eine NamedBitList aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und konvertiert diesen in die durch <paramref name="flagsEnumType" /> angegebene [<see cref="T:System.FlagsAttribute" />]-Enumeration.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Typobjekt, das den Zieltyp darstellt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <paramref name="flagsEnumType" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> ist kein Enumerationstyp.
Oder <paramref name="flagsEnumType" /> wurde nicht mit <see cref="T:System.FlagsAttribute" /> deklariert oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> ist gleich <see langword="null" />.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Der in einen <paramref name="flagsEnumType" /> konvertierte NamedBitList-Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Liest eine NamedBitList aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und konvertiert diesen in die durch <typeparamref name="TFlagsEnum" /> angegebene [<see cref="T:System.FlagsAttribute" />]-Enumeration.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Ziel-Aufzählungs Typen</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <typeparamref name="TFlagsEnum" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> ist kein Enumerationstyp.
Oder <typeparamref name="TFlagsEnum" /> wurde nicht mit <see cref="T:System.FlagsAttribute" /> deklariert oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Der in ein <typeparamref name="TFlagsEnum" />-Element konvertierte NamedBitList-Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen <see langword="null" />-Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen Objektbezeichnerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">Der decodierte Objektbezeichner in punktierter Dezimalschreibweise.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">Liest einen Oktett-Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und gibt den Inhalt in einem neuen Array zurück.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">Ein Array, das den Inhalt des Oktett-Zeichenfolgenwerts enthält.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen Sequence- oder Sequence-Of-Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist der Offset der Inhaltsnutzlast relativ zum Anfang von <paramref name="source" />.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Anzahl der Bytes in der Inhaltsnutzlast (die 0 sein kann).
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen Set-Of-Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist der Offset der Inhaltsnutzlast relativ zum Anfang von <paramref name="source" />.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Anzahl der Bytes in der Inhaltsnutzlast (die 0 sein kann).
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" />, um die Daten immer in der Reihenfolge zu akzeptieren, in der sie vorliegen, <see langword="false" />, um zu bestätigen, dass die Daten ordnungsgemäß sortiert sind, wenn die Codierungsregeln besagen, dass Sortierung erforderlich war (CER und DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">Liest einen UtcTime-Wert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">Das größte Jahr, das mit diesem Wert dargestellt werden soll.
Der Standardwert (2049) stellt den Bereich 1950 bis 2049 für X.509-Zertifikate dar.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">
        <paramref name="ruleSet" /> ist nicht definiert.
Oder <paramref name="twoDigitYearMax" /> liegt nicht im Bereich [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">Versucht, einen Bit-Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln in <paramref name="destination" /> zu kopieren.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Bei Erfolg wird die Anzahl der Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der in <paramref name="destination" /> geschriebenen Bytes.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="destination" /> überschneidet sich mit <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um den Wert der Bitzeichenfolge zu empfangen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">Liest einen Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln und kopiert die decodierte Zeichenfolge in einen bereitgestellten Zielpuffer.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">Einer der Enumerationswerte, der den zu verarbeitenden Werttyp darstellt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Anzahl der in <paramref name="destination" /> geschriebenen Zeichen.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="ruleSet" /> ist nicht definiert.
Oder <paramref name="encodingType" /> ist kein bekannter Zeichenfolgentyp.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder die Zeichenfolge konnte nicht erfolgreich decodiert werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist nicht identisch mit <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn <paramref name="destination" /> eine ausreichende Länge zum Empfangen des Werts hatte, andernfalls, <see langword="false" /> und der Reader wird nicht vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">Versucht, einen Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln zu lesen, wobei die nicht verarbeiteten Bytes in den bereitgestellten Zielpuffer kopiert werden.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Bei Erfolg wird die Anzahl der in <paramref name="destination" /> geschriebenen Bytes empfangen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist kein Zeichenfolgen-Tagtyp.
Oder <paramref name="destination" /> überschneidet sich mit <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um den Wert der nicht verarbeiteten Zeichenfolge zu empfangen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">Versucht, den Inhaltsbereich für den codierten Wert am Anfang des <paramref name="source" />-Puffers mithilfe der angegebenen Codierungsregeln zu ermitteln.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist das Tag, das den Inhalt identifiziert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist der Offset der Inhaltsnutzlast relativ zum Anfang von <paramref name="source" />.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Anzahl der Bytes in der Inhaltsnutzlast (die 0 sein kann).
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="source" /> eine gültige strukturelle Codierung für die angegebenen Codierungsregeln darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">Versucht, einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln als 32-Bit-Wert mit Vorzeichen zu lesen.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg den interpretierten numerischen Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Integerwert zwischen <see cref="F:System.Int32.MinValue" /> und <see cref="F:System.Int32.MaxValue" /> (einschließlich) liegt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">Versucht, einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln als 64-Bit-Wert mit Vorzeichen zu lesen.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg den interpretierten numerischen Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Integerwert zwischen <see cref="F:System.Int64.MinValue" /> und <see cref="F:System.Int64.MaxValue" /> (einschließlich) liegt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">Versucht, einen Oktett-Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln zu lesen, wobei der Wert in den bereitgestellten Zielpuffer kopiert wird.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der in <paramref name="destination" /> geschriebenen Bytes.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="destination" /> überschneidet sich mit <paramref name="source" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn <paramref name="destination" /> groß genug ist, um den Wert der Oktettzeichenfolge zu empfangen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Versucht, einen Bit-Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln abzurufen, wenn der Wert in einer einzelnen (primitiven) Codierung enthalten ist.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">Bei Erfolg wird die Anzahl der Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg ein Segment des Eingabepuffers, das dem Wert der Bitzeichenfolge entspricht.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Bit-Zeichenfolgenwert eine primitive Codierung aufweist und alle als nicht verwendet gemeldeten Bits auf 0 festgelegt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Versucht, einen nicht verarbeiteten Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln abzurufen, wenn der Wert in einer einzelnen (primitiven) Codierung enthalten ist.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg ein Segment des Eingabepuffers, das dem Wert der Bitzeichenfolge entspricht.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist kein Zeichenfolgen-Tagtyp.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Zeichenfolgenwert eine primitive Codierung aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">Versucht, einen Oktett-Zeichenfolgenwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln abzurufen, wenn der Wert in einer einzelnen (primitiven) Codierung enthalten ist.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg ein Segment des Eingabepuffers, das dem Wert der Oktettzeichenfolge entspricht.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Oktett-Zeichenfolgenwert eine primitive Codierung aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">Versucht, einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln als 32-Bit-Wert ohne Vorzeichen zu lesen.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg den interpretierten numerischen Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Integerwert zwischen <see cref="F:System.UInt32.MinValue" /> und <see cref="F:System.UInt32.MaxValue" /> (einschließlich) liegt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">Versucht, einen Integerwert aus <paramref name="source" /> mit einem angegebenen Tag gemäß den angegebenen Codierungsregeln als 64-Bit-Wert ohne Vorzeichen zu lesen.</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">Der Puffer, der codierte Daten enthält.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">Die Codierungseinschränkungen, die beim Interpretieren der Daten verwendet werden sollen.</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">Empfängt bei Erfolg den interpretierten numerischen Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">Die Rückgabe dieser Methode ist die Gesamtzahl der Bytes für den codierten Wert.
Dieser Parameter wird nicht initialisiert behandelt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universell 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert weist nicht das richtige Tag auf.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, wenn der Integerwert zwischen <see cref="F:System.UInt64.MinValue" /> und <see cref="F:System.UInt64.MaxValue" /> (einschließlich) liegt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">Der Codierungsregelsatz für einen <see cref="T:System.Formats.Asn1.AsnReader" /> oder <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 Basic Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 Canonical Encoding Rules</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X. 690 Distinguished Encoding Rules</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">Ein zustandsbehafteter Vorwärtsreader für BER-, CER- oder DER-codierte ASN.1-Daten.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">Erstellen Sie ein <see cref="T:System.Formats.Asn1.AsnReader" />-Element für <paramref name="data" /> mit einem angegebenen Regelsatz.</summary>
      <param name="data" vsli:raw="The data to read.">Die zu lesenden Daten.</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">Die Codierungseinschränkungen für den Reader.</param>
      <param name="options" vsli:raw="Additional options for the reader.">Zusätzliche Optionen für den Reader.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">Ruft eine <see cref="T:System.ReadOnlyMemory`1" />-Ansicht der Inhaltsoktette (Bytes) des nächsten codierten Werts ab, ohne dass der Reader fortfährt.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">Der Reader wird an einem Punkt positioniert, an dem das Tag oder die Länge gemäß den aktuellen Codierungsregeln ungültig ist.</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">Die Bytes der Inhaltsoktette des nächsten codierten Werts.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">Ruft eine <see cref="T:System.ReadOnlyMemory`1" />-Ansicht des nächsten codierten Werts ab, ohne dass der Reader fortfährt. Bei Codierungen mit unbegrenzter Länge umfasst dies den Marker für das Ende des Inhalts.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">Der Reader wird an einem Punkt positioniert, an dem das Tag oder die Länge gemäß den aktuellen Codierungsregeln ungültig ist.</exception>
      <returns vsli:raw="The bytes of the next encoded value.">Die Bytes des nächsten codierten Werts.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">Liest das codierte Tag an der nächsten Datenposition, ohne dass der Reader vorwärtsbewegt wird.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">An der aktuellen Position des Readers konnte ein Tag nicht decodiert werden.</exception>
      <returns vsli:raw="The decoded tag value.">Der decodierte Tagwert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">Liest den nächsten Wert als BIT STRING mit einem angegebenen Tag und gibt den Wert in einem Bytearray zurück.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Bei erfolgreichem Vorgang wird die Anzahl von Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Eine Kopie des Werts in einem neu zugeordneten Array mit präziser Größe.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">Liest den nächsten Wert als booleschen Wert mit einem angegebenen Tag.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">Liest den nächsten Wert als Zeichenfolge mit dem angegebenen Tag und Codierungstyp und gibt den decodierten Wert als Zeichenfolge zurück.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Einer der Enumerationswerte, der den zu verarbeitenden Werttyp darstellt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> ist kein bekannter Zeichenfolgentyp.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder die Zeichenfolge konnte nicht erfolgreich decodiert werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist nicht identisch mit <paramref name="encodingType" />.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">Ruft eine <see cref="T:System.ReadOnlyMemory`1" />-Ansicht des nächsten codierten Werts ab, und der Reader wird bis zu einer Position nach diesem Wert vorwärtsbewegt. Bei einer Codierung mit unbegrenzter Länge umfasst dies den Marker für das Ende des Inhalts.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">Eine <see cref="T:System.ReadOnlyMemory`1" />-Ansicht des nächsten codierten Werts.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Liest den nächsten Wert als Enumerationswert mit einem angegebenen Tag und gibt die Inhalte als <see cref="T:System.ReadOnlyMemory`1" /> für die ursprünglichen Daten zurück.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">Die Bytes des Enumerationswerts, im big-endian-Format mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">Liest den nächsten Wert als Enumerationswert mit einem angegebenen Tag und konvertiert ihn in den Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert, der von <paramref name="enumType" /> angegeben ist.</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">Typobjekt, das den Zieltyp darstellt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <paramref name="enumType" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> ist kein Enumerationstyp.
Oder <paramref name="enumType" /> wurde mit <see cref="T:System.FlagsAttribute" /> deklariert.
Oder <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> ist <see langword="null" />.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">Der in ein <paramref name="enumType" />-Element konvertierte Enumerationswert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Liest den nächsten Wert als Enumerationswert mit einem angegebenen Tag und konvertiert ihn in den Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert, der von <typeparamref name="TEnum" /> angegeben ist.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">Ziel-Aufzählungs Typen</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <typeparamref name="TEnum" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> ist kein Enumerationstyp.
Oder <typeparamref name="TEnum" /> wurde mit <see cref="T:System.FlagsAttribute" /> deklariert.
Oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">Der in ein <typeparamref name="TEnum" />-Element konvertierte Enumerationswert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">Liest den nächsten Wert als GeneralizedTime-Wert mit einem angegebenen Tag.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">Liest den nächsten Wert als Ganzzahl mit einem angegebenen Tag.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Liest den nächsten Wert als Ganzzahl mit einem angegebenen Tag und gibt die Inhalte als <see cref="T:System.ReadOnlyMemory`1" /> für die ursprünglichen Daten zurück.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">Die Bytes des Ganzzahlwerts, im big-endian-Format mit Vorzeichen.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">Liest den nächsten Wert als NamedBitList mit einem angegebenen Tag.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The bits from the encoded value.">Die Bits aus dem codierten Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Liest den nächsten Wert als NamedBitList mit einem angegebenen Tag und konvertiert ihn in den [<see cref="T:System.FlagsAttribute" />]-Enumerationswert, der von <paramref name="flagsEnumType" /> angegeben ist.</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">Typobjekt, das den Zieltyp darstellt.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <paramref name="flagsEnumType" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> ist kein Enumerationstyp.
Oder <paramref name="flagsEnumType" /> wurde nicht mit <see cref="T:System.FlagsAttribute" /> deklariert oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> ist gleich <see langword="null" />.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">Der in ein <paramref name="flagsEnumType" />-Element konvertierte NamedBitList-Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Liest den nächsten Wert als NamedBitList mit einem angegebenen Tag und konvertiert ihn in den [<see cref="T:System.FlagsAttribute" />]-Enumerationswert, der von <typeparamref name="TFlagsEnum" /> angegeben ist.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">Ziel-Aufzählungs Typen</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der codierte Wert ist zu groß für einen <typeparamref name="TFlagsEnum" />-Wert.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> ist kein Enumerationstyp.
Oder <typeparamref name="TFlagsEnum" /> wurde nicht mit <see cref="T:System.FlagsAttribute" /> deklariert oder <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">Der in ein <typeparamref name="TFlagsEnum" />-Element konvertierte NamedBitList-Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">Liest den nächsten Wert als NULL mit einem angegebenen Tag.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">Liest den nächsten Wert als OBJECT IDENTIFIER mit einem angegebenen Tag und gibt den Wert in einer Zeichenfolge im Dezimalpunktformat zurück.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">Der Objekt-ID-Wert in einer Zeichenfolge im Dezimalpunktformat.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">Liest den nächsten Wert als OCTET STRING mit dem UNIVERSAL 4-Tag und gibt den Wert in einem Bytearray zurück.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">Eine Kopie des Werts in einem neu zugeordneten Array mit präziser Größe.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Liest den nächsten Wert als SEQUENCE oder SEQUENCE-OF mit dem angegebenen Tag und gibt das Ergebnis als neuen Reader zurück, der beim ersten Wert in der Sequenz positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" />  ==  <see langword="false" /> ).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Ein neuer Reader, der beim ersten Wert in der Sequenz positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Liest den nächsten Wert als SET-OF mit dem angegebenen Tag und gibt das Ergebnis als neuen Reader zurück, der beim ersten Wert im SET-OF-Element positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">
        <see langword="true" />, um die Daten immer in der Reihenfolge zu akzeptieren, in der sie vorliegen, <see langword="false" />, um zu bestätigen, dass die Daten ordnungsgemäß sortiert sind, wenn die Codierungsregeln besagen, dass eine Sortierung erforderlich war (CER und DER).</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Ein neuer Reader, der beim ersten Wert im SET-OF-Element positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">Liest den nächsten Wert als SET-OF mit dem angegebenen Tag und gibt das Ergebnis als neuen Reader zurück, der beim ersten Wert im SET-OF-Element positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />). Dabei wird der <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" />-Wert des Konstruktors verwendet (Standardwert <see langword="false" />).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">Ein neuer Reader, der beim ersten Wert im SET-OF-Element positioniert ist (oder mit <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">Liest den nächsten Wert als UTCTime mit einem angegebenen Tag.</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">Das größte Jahr, das mit diesem Wert dargestellt werden soll.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">Liest den nächsten Wert als UTCTime mit einem angegebenen Tag unter Verwendung des <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" />-Werts aus den Optionen, die an den Konstruktor übergeben werden (Standardwert 2049).</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="The decoded value.">Der decodierte Wert.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Löst einen standardisierten <see cref="T:System.Formats.Asn1.AsnContentException" /> aus, wenn der Reader über verbleibende Daten verfügt. Wenn <see cref="P:System.Formats.Asn1.AsnReader.HasData" /><see langword="false" /> zurückgibt, wird keine Funktion ausgeführt.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">Liest den nächsten Wert als BIT STRING mit einem angegebenen Tag und kopiert den Wert in einen angegebenen Zielpuffer.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Bei erfolgreichem Vorgang wird die Anzahl von Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Empfängt bei Erfolg die Anzahl von Bytes, die in <paramref name="destination" /> geschrieben werden.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn <paramref name="destination" /> eine ausreichende Länge zum Empfangen des Werts hatte, andernfalls <see langword="false" />, und der Reader wird nicht vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">Liest den nächsten Wert als Zeichenfolge mit dem angegebenen Tag und Codierungstyp und kopiert den decodierten Wert in einen angegebenen Zielpuffer.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">Einer der Enumerationswerte, der den zu verarbeitenden Werttyp darstellt.</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">Empfängt bei Erfolg die Anzahl von Zeichen, die in <paramref name="destination" /> geschrieben wurden.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> ist kein bekannter Zeichenfolgentyp.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.
Oder die Zeichenfolge konnte nicht erfolgreich decodiert werden.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist nicht identisch mit <paramref name="encodingType" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn <paramref name="destination" /> eine ausreichende Länge zum Empfangen des Werts hatte, andernfalls <see langword="false" />, und der Reader wird nicht vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">Liest den nächsten Wert als Zeichenfolge mit dem angegebenen Tag und kopiert die nicht verarbeiteten Bytes in einen angegebenen Zielpuffer.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Empfängt bei Erfolg die Anzahl von Bytes, die in <paramref name="destination" /> geschrieben werden.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist kein Zeichenfolgen-Tagtyp.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn <paramref name="destination" /> eine ausreichende Länge zum Empfangen des Werts hatte, andernfalls <see langword="false" />, und der Reader wird nicht vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">Versucht, den nächsten Wert als Ganzzahl mit einem angegebenen Tag zu lesen (32-Bit-Wert mit Vorzeichen).</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Empfängt bei erfolgreichem Vorgang den decodierten Wert.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert nicht zwischen <see cref="F:System.Int32.MinValue" /> und <see cref="F:System.Int32.MaxValue" /> liegt. Anderenfalls wird <see langword="true" /> zurückgegeben, und der Reader wird vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">Versucht, den nächsten Wert als Ganzzahl mit einem angegebenen Tag zu lesen (64-Bit-Wert mit Vorzeichen).</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Empfängt bei erfolgreichem Vorgang den decodierten Wert.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert nicht zwischen <see cref="F:System.Int64.MinValue" /> und <see cref="F:System.Int64.MaxValue" /> liegt. Anderenfalls wird <see langword="true" /> zurückgegeben, und der Reader wird vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">Liest den nächsten Wert als OCTET STRING mit einem angegebenen Tag und kopiert den Wert in einen angegebenen Zielpuffer.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Empfängt bei Erfolg die Anzahl von Bytes, die in <paramref name="destination" /> geschrieben werden.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn <paramref name="destination" /> eine ausreichende Länge zum Empfangen des Werts hatte, andernfalls <see langword="false" />, und der Reader wird nicht vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Liest den nächsten Wert als BIT STRING mit einem angegebenen Tag und gibt die Inhalte als <see cref="T:System.ReadOnlyMemory`1" /> für die ursprünglichen Daten zurück.</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">Bei erfolgreichem Vorgang wird die Anzahl von Bits im letzten Byte empfangen, die vom Writer als „nicht verwendet“ gemeldet wurden.</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">Bei erfolgreichem Vorgang wird ein <see cref="T:System.ReadOnlyMemory`1" />-Element für die ursprünglichen Daten empfangen, das dem Wert von BIT STRING entspricht.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn der BIT STRING-Wert eine primitive Codierung aufwies. <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert eine konstruierte Codierung aufwies.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Liest den nächsten Wert als Zeichen mit einem angegebenen Tag und gibt die Inhalte als nicht verarbeitetes <see cref="T:System.ReadOnlyMemory`1" />-Element für die ursprünglichen Daten zurück.</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">Bei erfolgreichem Vorgang wird ein <see cref="T:System.ReadOnlyMemory`1" />-Element für die ursprünglichen Daten empfangen, das dem Wert der Zeichenfolge entspricht.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist kein Zeichenfolgen-Tagtyp.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn der Zeichenfolgenwert eine primitive Codierung aufwies. <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert eine konstruierte Codierung aufwies.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">Versucht, den nächsten Wert als OCTET STRING mit einem angegebenen Tag zu lesen, und gibt die Inhalte als <see cref="T:System.ReadOnlyMemory`1" />-Element für die ursprünglichen Daten zurück.</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">Bei erfolgreichem Vorgang wird ein <see cref="T:System.ReadOnlyMemory`1" />-Element für die ursprünglichen Daten empfangen, das dem Wert von OCTET STRING entspricht.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">Das Tag, das vor dem Lesen überprüft werden soll.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">
        <see langword="true" /> und bewegt den Reader vorwärts, wenn der OCTET STRING-Wert eine primitive Codierung aufwies. <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert eine konstruierte Codierung aufwies.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">Versucht, den nächsten Wert als Ganzzahl mit einem angegebenen Tag zu lesen (als 32-Bit-Wert ohne Vorzeichen).</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Empfängt bei erfolgreichem Vorgang den decodierten Wert.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert nicht zwischen <see cref="F:System.UInt32.MinValue" /> und <see cref="F:System.UInt32.MaxValue" /> liegt. Anderenfalls wird <see langword="true" /> zurückgegeben, und der Reader wird vorwärtsbewegt.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">Versucht, den nächsten Wert als Ganzzahl mit einem angegebenen Tag zu lesen (als 64-Bit-Wert ohne Vorzeichen).</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">Empfängt bei erfolgreichem Vorgang den decodierten Wert.</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das Tag, das vor dem Lesen überprüft werden soll, oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">Der nächste Wert verfügt nicht über das korrekte Tag.
Oder die Längencodierung ist gemäß den aktuellen Codierungsregeln ungültig.
Oder der Inhalt ist gemäß den aktuellen Codierungsregeln ungültig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">
        <see langword="false" /> und bewegt den Reader nicht vorwärts, wenn der Wert nicht zwischen <see cref="F:System.UInt64.MinValue" /> und <see cref="F:System.UInt64.MaxValue" /> liegt. Anderenfalls wird <see langword="true" /> zurückgegeben, und der Reader wird vorwärtsbewegt.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">Ruft eine Angabe dazu ab, ob der Reader über verbleibende Daten zur Verarbeitung verfügt.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn weitere Daten für den Reader zur Verarbeitung verfügbar sind. andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">Ruft die Codierungsregeln ab, die von diesem Reader verwendet werden.</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">Die von diesem Reader verwendeten Codierungsregeln.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">Gibt Optionen an, die das Verhalten eines <see cref="T:System.Formats.Asn1.AsnReader" /> ändern.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Reader die Sortierreihenfolge für einen Set- oder Set-Of-Wert umgehen soll.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> , wenn der Reader nicht überprüfen soll, ob ein Satz oder ein Satz von Werten ordnungsgemäß für die aktuellen Codierungsregeln sortiert ist. andernfalls <see langword="false" /> .
Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">Ruft das größte Jahr ab, das durch einen UtcTime-Wert dargestellt werden soll, oder legt dieses fest.</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">Das größte Jahr, das mit einem utcTime-Wert dargestellt werden soll. Der Standardwert ist 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">Ein Writer für BER-, CER- und DER-codierte ASN.1-Daten.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">Erstellt einen neuen <see cref="T:System.Formats.Asn1.AsnWriter" /> mit einem angegebenen Satz von Codierungsregeln.</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">Die Codierungseinschränkungen für den Writer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">
        <paramref name="ruleSet" /> ist nicht definiert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">Kopiert den Wert dieses Writers in einen anderen.</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">Der Writer, der den Wert empfangen soll.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.
Oder dieser Writer ist leer.
Oder dieser Writer stellt mehrere Werte der obersten Ebene dar.
Oder der Wert dieses Writers wird in einer Weise codiert, die nicht mit dem Regelsatz für den Zielwriter kompatibel ist.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">Gibt ein neues Array zurück, das den codierten Wert enthält.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">Ein Array mit genauer Größe, das den codierten Wert enthält.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Schreibt die codierte Darstellung der Daten in <paramref name="destination" />.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Die Anzahl der Bytes, die in <paramref name="destination" /> geschrieben wurden.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Ermittelt, ob <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> eine mit <paramref name="other" /> identische Ausgabe generieren würde.</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">Die Instanz, mit der codierte Werte verglichen werden.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn die ausstehenden codierten Daten mit identisch <paramref name="other" /> sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">Ermittelt, ob <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> eine mit <paramref name="other" /> identische Ausgabe generieren würde.</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">Der codierte Wert, mit dem verglichen werden soll.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" />, wenn die ausstehenden codierten Daten mit identisch <paramref name="other" /> sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Ruft die Anzahl der Bytes ab, die von <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> geschrieben würden.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde ohne die entsprechende Pop-Methode aufgerufen.</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">Die Anzahl der Bytes, die von <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> geschrieben würden.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">Gibt an, dass die geöffnete Oktettzeichenfolge mit dem Tag UNIVERSAL 4 geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">Der Writer befindet sich derzeit nicht innerhalb einer Oktettzeichenfolge mit dem angegebenen Tag.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">Gibt an, dass die geöffnete Sequenz mit dem angegebenen Tag geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">Der Writer befindet sich derzeit nicht in einer Sequenz mit dem angegebenen Tag.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">Gibt an, dass das geöffnete Set-Of-Element mit dem angegebenen Tag geschlossen und der Writer an den übergeordneten Kontext zurückgegeben wird.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">Der Writer befindet sich derzeit nicht innerhalb eines Set-Of-Elements mit dem angegebenen Tag.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">Beginnt mit dem Schreiben eines Oktett-Zeichenfolgenwerts mit einem angegebenen Tag.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">Beginnt mit dem Schreiben einer Sequenz mit einem angegebenen Tag.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 16).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">Beginnt mit dem Schreiben eines Set-Of-Elements mit einem angegebenen Tag.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 17).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein verwerfbarer Wert, der <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automatisch aufruft.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">Setzt den Writer so zurück, dass keine Daten vorhanden sind, ohne Ressourcen freizugeben.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">Versucht, die codierte Darstellung der Daten in <paramref name="destination" /> zu schreiben.</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">Der Puffer, in den geschrieben werden soll.</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Empfängt bei Erfolg die Anzahl der in <paramref name="destination" /> geschriebenen Bytes.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">Ein <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> wurde nicht über <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> oder <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> geschlossen.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">
        <see langword="true" />, wenn die Codierung erfolgreich war, <see langword="false" />, wenn <paramref name="destination" /> zu klein ist.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">Schreibt einen Bit-Zeichenfolgenwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">Die Anzahl der nachstehenden Bits, die nicht semantisch sind.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> hat die Länge 0 und <paramref name="unusedBitCount" /> ist nicht 0 oder <paramref name="value" /> ist nicht leer, und alle von <paramref name="unusedBitCount" /> identifizierten Bits sind festgelegt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> liegt nicht im Bereich [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">Schreibt einen booleschen Wert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 1).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Schreibt die angegebene Zeichenfolge unter Verwendung des angegebenen Codierungstyps mit dem angegebenen Tag, das dem Codierungstyp entspricht.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Einer der Enumerationswerte, der die zu verwendende Codierung darstellt.</param>
      <param name="str" vsli:raw="The string to write.">Die zu schreibende Zeichenfolge.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das zu schreibende Tag oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> ist kein eingeschränkter Zeichenfolgen-Codierungstyp.
Oder <paramref name="encodingType" /> ist ein eingeschränkter Zeichenfolgen-Codierungstyp, der von dieser Methode derzeit nicht unterstützt wird.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">Schreibt die angegebene Zeichenfolge unter Verwendung des angegebenen Codierungstyps mit dem angegebenen Tag, das dem Codierungstyp entspricht.</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">Einer der Enumerationswerte, der die zu verwendende Codierung darstellt.</param>
      <param name="value" vsli:raw="The string to write.">Die zu schreibende Zeichenfolge.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">Das zu schreibende Tag oder <see langword="null" /> für das universelle Tag, das für den angeforderten Codierungstyp geeignet ist.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> ist gleich <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> ist kein eingeschränkter Zeichenfolgen-Codierungstyp.
Oder <paramref name="encodingType" /> ist ein eingeschränkter Zeichenfolgen-Codierungstyp, der von dieser Methode derzeit nicht unterstützt wird.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">Schreibt einen einzelnen Wert, der bereits codiert wurde.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">
        <paramref name="value" /> konnte gemäß den aktuellen Codierungsregeln nicht gelesen werden.
Oder <paramref name="value" /> enthält Daten, die über das Ende des ersten Werts hinausgehen.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Schreibt einen Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert als „Enumerated“ mit dem Tag UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Der zu schreibende geschachtelte Enumerationswert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> ist kein geschachtelter Enumerationswert.
Oder der ungeschachtelte Typ von <paramref name="value" /> wird als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">Schreibt einen Nicht-[<see cref="T:System.FlagsAttribute" />]-Enumerationswert als „Enumerated“ mit dem Tag UNIVERSAL 10.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Der zu schreibende geschachtelte Enumerationswert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 10).</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">Der zu schreibende nicht-[ <see cref="T:System.FlagsAttribute" /> ]-Enumerationstyp.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <typeparamref name="TEnum" /> ist keine Enumeration.
Oder <typeparamref name="TEnum" /> wird als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">Schreibt den bereitgestellten <see cref="T:System.DateTimeOffset" /> als GeneralizedTime mit einem angegebenen Tag UNIVERSAL 24, wobei optional die Sekundenbruchteile ausgeschlossen werden.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">
        <see langword="true" />, wenn die Sekundenbruchteile in <paramref name="value" /> selbst dann als 0 behandelt werden sollen, wenn ein Wert ungleich NULL vorhanden ist.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 24).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">Der zu schreibende Integerwert in der big-endian-Bytereihenfolge mit Vorzeichen.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">Die 9 signifikantesten Bits sind alle festgelegt.
Oder die 9 signifikantesten Bits sind alle nicht festgelegt.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">Schreibt einen Integerwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">Der zu schreibende Integerwert in big-endian-Bytereihenfolge ohne Vorzeichen.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 2).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">Die 9 signifikantesten Bits sind alle nicht festgelegt.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">Schreibt einen Bit-Arraywert als NamedBitList mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The bits to write.">Die zu schreibende Bits.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht korrekt.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Schreibt einen [<see cref="T:System.FlagsAttribute" />]-Enumerationswert als NamedBitList mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">Der zu schreibende geschachtelte Enumerationswert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="value" /> ist kein geschachtelter Enumerationswert.
Oder der nicht geschachtelte Typ von <paramref name="value" /> wird nicht als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">Schreibt einen [<see cref="T:System.FlagsAttribute" />]-Enumerationswert als NamedBitList mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The enumeration value to write.">Der zu schreibende Enumerationswert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 3).</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">Der [ <see cref="T:System.FlagsAttribute" /> ]-Enumerationstyp, der geschrieben werden soll.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <typeparamref name="TEnum" /> ist kein Enumerationswert.
Oder <typeparamref name="TEnum" /> ist nicht als [<see cref="T:System.FlagsAttribute" />] deklariert.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">Schreibt NULL mit einem angegebenen Tag.</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 5).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Schreibt einen Objektbezeichner mit einem angegebenen Tag.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Der zu schreibende Objektbezeichner.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="oidValue" /> ist kein gültiger punktierter Dezimalobjektbezeichner.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">Schreibt einen Objektbezeichner mit einem angegebenen Tag.</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">Der zu schreibende Objektbezeichner.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 6).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.
Oder <paramref name="oidValue" /> ist kein gültiger punktierter Dezimalobjektbezeichner.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">Schreibt einen Oktett-Zeichenfolgenwert mit einem angegebenen Tag.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 4).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">Schreibt den bereitgestellten Wert als UTCTime mit einem angegebenen Tag, sofern das Jahr im zulässigen Bereich liegt.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">Das maximale gültige Jahr für <paramref name="value" /> nach der Konvertierung in UTC.
Übergibt für den X.509-Time.utcTime-Bereich von 1950 bis 2049 den Wert <c>2049</c>.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (nach der Konvertierung in UTC) liegt nicht im Bereich (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">Schreibt den bereitgestellten Wert als UTCTime mit einem angegebenen Tag und akzeptiert das zweistellige Jahr als im Kontext gültig.</summary>
      <param name="value" vsli:raw="The value to write.">Der zu schreibende Wert.</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">Das zu schreibende Tag oder <see langword="null" /> für das Standardtag (Universal 23).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> ist <see cref="F:System.Formats.Asn1.TagClass.Universal" />, aber <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> ist für die Methode nicht richtig.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">Ruft die Codierungsregeln ab, die von diesem Writer verwendet werden.</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">Die von diesem Writer verwendeten Codierungsregeln.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">Stellt ein <see cref="T:System.IDisposable" />-Ziel zum sicheren Schließen eines geöffneten Tags mithilfe eines lexikalischen Bereichs als logischen Bereich bereit.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">Führt anwendungsspezifische Aufgaben durch, die mit der Freigabe, der Zurückgabe oder dem Zurücksetzen von nicht verwalteten Ressourcen zusammenhängen.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">Die Tagklasse für ein bestimmtes ASN.1-Tag.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">Die Application-Tagklasse.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">Die Context-Specific-Tagklasse.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">Die Private-Tagklasse.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">Die Universal-Tagklasse.</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">Tagzuweisungen für die UNIVERSAL-Klasse in ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">Der Tagwert der Universal-Klasse für Bit-Zeichenfolge.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">Der Tagwert der Universal-Klasse für BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Der Tagwert der Universal-Klasse für Boolean.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Der Tagwert der Universal-Klasse für Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Der Tagwert der Universal-Klasse für Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Der Tagwert der Universal-Klasse für Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Der Tagwert der Universal-Klasse für Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">Der reservierte Bezeichner für die End-of-Content-Markierung in einer unbestimmten Längencodierung.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Der Tagwert der Universal-Klasse für Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">Der Tagwert der Universal-Klasse für External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">Der Tagwert der Universal-Klasse für GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">Der Tagwert der Universal-Klasse für GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">Der Tagwert der Universal-Klasse für GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">Der Tagwert der Universal-Klasse für IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Der Tagwert der Universal-Klasse für Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Der Tagwert der Universal-Klasse für Integer.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">Der Tagwert der Universal-Klasse für ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Der Tagwert der Universal-Klasse für NULL.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">Der Tagwert der Universal-Klasse für NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">Der Tagwert der Universal-Klasse für Object Descriptor.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">Der Tagwert der Universal-Klasse für Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">Der Tagwert der Universal-Klasse für Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">Der Tagwert der Universal-Klasse für Octet String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">Der Tagwert der Universal-Klasse für PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Der Tagwert der Universal-Klasse für Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">Der Tagwert der Universal-Klasse für Relative Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">Der Tagwert der Universal-Klasse für Relative Object Identifier Internationalized Resource Identifier (IRI).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Der Tagwert der Universal-Klasse für Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Der Tagwert der Universal-Klasse für Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Der Tagwert der Universal-Klasse für Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Der Tagwert der Universal-Klasse für Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">Der Tagwert der Universal-Klasse für T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">Der Tagwert der Universal-Klasse für TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Der Tagwert der Universal-Klasse für Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Der Tagwert der Universal-Klasse für Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">Der Tagwert der Universal-Klasse für UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">Der Tagwert der Universal-Klasse für eine uneingeschränkte Zeichenfolge.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">Der Tagwert der Universal-Klasse für UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">Der Tagwert der Universal-Klasse für UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">Der Tagwert der Universal-Klasse für VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">Der Tagwert der Universal-Klasse für VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>