<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.TypeConverter</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.AddingNewEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.BindingSource.AddingNew" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.AddingNewEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AddingNewEventArgs" />-Klasse ohne Parameter.</summary>
    </member>
    <member name="M:System.ComponentModel.AddingNewEventArgs.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AddingNewEventArgs" />-Klasse unter Verwendung des angegebenen Objekts als neuem Element.</summary>
      <param name="newObject">Ein als neuer Elementwert zu verwendendes <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:System.ComponentModel.AddingNewEventArgs.NewObject">
      <summary>Ruft das Objekt ab, das der Bindungsliste hinzugefügt werden soll, oder legt dieses fest.</summary>
      <returns>Das <see cref="T:System.Object" />, das der zugeordneten Auflistung als neues Element hinzugefügt werden soll.</returns>
    </member>
    <member name="T:System.ComponentModel.AddingNewEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Forms.BindingSource.AddingNew" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses, i. d. R. ein Datencontainer oder eine datengebundene Auflistung.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.AddingNewEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.AmbientValueAttribute">
      <summary>Gibt den Wert an, der an eine Eigenschaft übergeben werden soll, damit die Eigenschaft den zugehörigen Wert von einer anderen Quelle abrufen kann. Dies wird als Umgebung bezeichnet. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert ein boolescher Wert angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Byte)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine vorzeichenlose 8-Bit-Ganzzahl angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Char)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert ein Unicode-Zeichen angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine Gleitkommazahl mit doppelter Genauigkeit angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int16)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine 16-Bit-Ganzzahl mit Vorzeichen angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine 32-Bit-Ganzzahl mit Vorzeichen angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine 64-Bit-Ganzzahl mit Vorzeichen angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert ein Objekt angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Single)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine Gleitkommazahl mit einfacher Genauigkeit angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern für ihren Wert eine Zeichenfolge angegeben ist.</summary>
      <param name="value">Der Wert dieses Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AmbientValueAttribute" />-Klasse, sofern der Wert und dessen Typ angegeben sind.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des <paramref name="value" />-Parameters.</param>
      <param name="value">Der Wert für dieses Attribut.</param>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.ComponentModel.AmbientValueAttribute" /> und das aktuelle <see cref="T:System.ComponentModel.AmbientValueAttribute" /> gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.ComponentModel.AmbientValueAttribute" />, das mit dem aktuellen <see cref="T:System.ComponentModel.AmbientValueAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.AmbientValueAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.AmbientValueAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AmbientValueAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.AmbientValueAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AmbientValueAttribute.Value">
      <summary>Ruft das Objekt ab, das der Wert dieses <see cref="T:System.ComponentModel.AmbientValueAttribute" /> ist.</summary>
      <returns>Das Objekt, das der Wert dieses <see cref="T:System.ComponentModel.AmbientValueAttribute" /> ist.</returns>
    </member>
    <member name="T:System.ComponentModel.ArrayConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Array" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ArrayConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft eine Auflistung von Eigenschaften für den durch den Wertparameter angegebenen Typ von Array ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Eine <see cref="T:System.Object" />-Klasse, die den Typ von Array angibt, für den die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den Eigenschaften, die für ein Array verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften verfügbar sind.</returns>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt Eigenschaften unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da <see cref="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.AttributeCollection">
      <summary>Stellt eine Auflistung von Attributen dar.</summary>
    </member>
    <member name="F:System.ComponentModel.AttributeCollection.Empty">
      <summary>Gibt eine leere Auflistung an, die Sie verwenden können, um so keine neue Auflistung erstellen zu müssen. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse.</summary>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das die Attribute für diese Auflistung bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
      <summary>Bestimmt, ob das angegebene Attribut in dieser Auflistung von Attributen enthalten ist.</summary>
      <param name="attribute">Eine <see cref="T:System.Attribute" />-Klasse, die in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung das Attribut enthält oder das Standardattribut für den Attributtyp ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])">
      <summary>Bestimmt, ob diese Auflistung von Attributen sämtliche angegebenen Attribute im Attributarray enthält.</summary>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung sämtliche Attribute enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Auflistung in ein Array, wobei am angegebenen Index begonnen wird.</summary>
      <param name="array">Die <see cref="T:System.Array" />-Klasse, in die die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
      <summary>Erstellt eine neue <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse aus einer vorhandenen <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse.</summary>
      <param name="existing">Die <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse, aus der die neue Kopie erstellt werden soll.</param>
      <param name="newAttributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das die Attribute für diese Auflistung bereitstellt. Kann <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="existing" /> ist <see langword="null" />.</exception>
      <returns>Eine neue <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse, die eine Kopie von <paramref name="existing" /> darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
      <summary>Gibt die <see cref="T:System.Attribute" />-Standardklasse einer bestimmten <see cref="T:System.Type" />-Klasse zurück.</summary>
      <param name="attributeType">Die <see cref="T:System.Type" />-Klasse des abzurufenden Attributs.</param>
      <returns>Die <see cref="T:System.Attribute" />-Standardklasse einer bestimmten <paramref name="attributeType" />-Klasse zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.GetEnumerator">
      <summary>Ruft einen Enumerator für diese Auflistung ab.</summary>
      <returns>Ein Enumerator vom Typ <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)">
      <summary>Bestimmt, ob ein angegebenes Attribut mit einem Attribut in der Auflistung identisch ist.</summary>
      <param name="attribute">Eine Instanz der <see cref="T:System.Attribute" />-Klasse, die mit den Attributen in dieser Auflistung verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Attribut in der Auflistung enthalten ist und denselben Wert hat wie das Attribut in der Auflistung, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
      <summary>Bestimmt, ob die Attribute im angegebenen Array mit den Attributen in der Auflistung identisch sind.</summary>
      <param name="attributes">Ein Array von <see cref="T:System.CodeDom.MemberAttributes" />, das mit den Attributen in dieser Auflistung verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn sämtliche Attribute im Array in der Auflistung enthalten sind und dieselben Werte haben wie die Attribute in der Auflistung, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.IDictionary" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Attributes">
      <summary>Ruft die Attributauflistung ab.</summary>
      <returns>Die Attributauflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Count">
      <summary>Ruft die Anzahl der Attribute ab.</summary>
      <returns>Die Anzahl der Attribute.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Item(System.Int32)">
      <summary>Ruft das Attribut mit der angegebenen Indexnummer ab.</summary>
      <param name="index">Der nullbasierte Index der <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse.</param>
      <returns>Die <see cref="T:System.Attribute" />-Klasse mit der angegebenen Indexnummer.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
      <summary>Ruft das Attribut mit dem angegebenen Typ ab.</summary>
      <param name="attributeType">Die <see cref="T:System.Type" />-Klasse der <see cref="T:System.Attribute" />-Klasse, die aus der Auflistung abgerufen werden soll.</param>
      <returns>Die <see cref="T:System.Attribute" />-Klasse mit dem angegebenen Typ oder, wenn das Attribut nicht vorhanden ist, der Standardwert für den Attributtyp.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der in der Auflistung enthaltenen Elemente.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf die Auflistung synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.AttributeProviderAttribute">
      <summary>Ermöglicht die Umleitung von Attributen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AttributeProviderAttribute" />-Klasse mit dem angegebenen Typnamen.</summary>
      <param name="typeName">Der Name des anzugebenden Typs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AttributeProviderAttribute" />-Klasse mit dem angegebenen Typnamen und Eigenschaftenname.</summary>
      <param name="typeName">Der Name des anzugebenden Typs.</param>
      <param name="propertyName">Der Name der Eigenschaft, für die Attribute abgerufen werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.AttributeProviderAttribute" />-Klasse mit dem angegebenen Typ.</summary>
      <param name="type">Der anzugebende Typ.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.AttributeProviderAttribute.PropertyName">
      <summary>Ruft den Namen der Eigenschaft ab, für die Attribute abgerufen werden.</summary>
      <returns>Der Name der Eigenschaft, für die Attribute abgerufen werden.</returns>
    </member>
    <member name="P:System.ComponentModel.AttributeProviderAttribute.TypeName">
      <summary>Ruft den durch die Assembly bezeichneten Typnamen ab, der an den Konstruktor übergeben wurde.</summary>
      <returns>Der durch die Assembly bezeichnete Name des Typs, der im Konstruktor angegeben wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.BaseNumberConverter">
      <summary>Stellt einen Basistypkonverter für numerische Typen bereit, die keine Gleitkommawerte sind.</summary>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter den Vorgang durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter den Vorgang durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, in der die Zahl dargestellt werden soll.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.Exception">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, in der die Zahl dargestellt werden soll.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.BindableAttribute">
      <summary>Gibt an, ob ein Member normalerweise für Bindungen verwendet wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.BindableAttribute" /> an, der <see cref="F:System.ComponentModel.BindableAttribute.No" /> ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.No">
      <summary>Gibt an, dass eine Eigenschaft normalerweise nicht für Bindungen verwendet wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableAttribute.Yes">
      <summary>Gibt an, dass eine Eigenschaft normalerweise für Bindungen verwendet wird. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindableAttribute" />-Klasse mit einem booleschen Wert.</summary>
      <param name="bindable">
        <see langword="true" />, wenn die Eigenschaft zum Binden verwendet wird; andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindableAttribute" />-Klasse.</summary>
      <param name="bindable">
        <see langword="true" />, wenn die Eigenschaft zum Binden verwendet wird; andernfalls <see langword="false" />.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.BindingDirection" />-Werte.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindableAttribute" />-Klasse mit einem der <see cref="T:System.ComponentModel.BindableSupport" />-Werte.</summary>
      <param name="flags">Einer der <see cref="T:System.ComponentModel.BindableSupport" />-Werte.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindableAttribute" />-Klasse.</summary>
      <param name="flags">Einer der <see cref="T:System.ComponentModel.BindableSupport" />-Werte.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.BindingDirection" />-Werte.</param>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob zwei <see cref="T:System.ComponentModel.BindableAttribute" />-Objekte gleich sind.</summary>
      <param name="obj">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.BindableAttribute" /> gleich dem aktuellen <see cref="T:System.ComponentModel.BindableAttribute" /> ist; <see langword="false" />, wenn es nicht gleich ist.</returns>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.GetHashCode">
      <summary>Fungiert als eine Hashfunktion für die <see cref="T:System.ComponentModel.BindableAttribute" />-Klasse.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.BindableAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindableAttribute.IsDefaultAttribute">
      <summary>Bestimmt, ob dieses Attribut der Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn das Attribut der Standardwert für diese Attributklasse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindableAttribute.Bindable">
      <summary>Ruft einen Wert ab, der angibt, dass eine Eigenschaft normalerweise für Bindungen verwendet wird.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft normalerweise für Bindungen verwendet wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindableAttribute.Direction">
      <summary>Ruft einen Wert ab, der die Richtung bzw. Richtungen der Datenbindung dieser Eigenschaft angibt.</summary>
      <returns>Die Richtung der Datenbindung dieser Eigenschaft.</returns>
    </member>
    <member name="T:System.ComponentModel.BindableSupport">
      <summary>Gibt Werte an, die angeben, ob eine Eigenschaft an ein Datenelement oder an eine andere Eigenschaft gebunden werden kann.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.Default">
      <summary>Die Eigenschaft ist auf den Standardwert festgelegt.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.No">
      <summary>Diese Eigenschaft kann zur Entwurfszeit nicht gebunden werden.</summary>
    </member>
    <member name="F:System.ComponentModel.BindableSupport.Yes">
      <summary>Diese Eigenschaft kann zur Entwurfszeit gebunden werden.</summary>
    </member>
    <member name="T:System.ComponentModel.BindingDirection">
      <summary>Gibt an, ob die Vorlage mit einer oder zwei Methoden gebunden werden kann.</summary>
    </member>
    <member name="F:System.ComponentModel.BindingDirection.OneWay">
      <summary>Die Vorlage kann nur Eigenschaftswerte zulassen. Wird mit einer generischen <see cref="T:System.Web.UI.ITemplate" /> verwendet.</summary>
    </member>
    <member name="F:System.ComponentModel.BindingDirection.TwoWay">
      <summary>Die Vorlage kann Eigenschaftswerte zulassen und verfügbar machen. Wird mit einer <see cref="T:System.Web.UI.IBindableTemplate" /> verwendet.</summary>
    </member>
    <member name="T:System.ComponentModel.BindingList`1">
      <summary>Stellt eine generische Auflistung bereit, die die Datenbindung unterstützt.</summary>
      <typeparam name="T">Der Typ der Elemente in der Liste</typeparam>
    </member>
    <member name="E:System.ComponentModel.BindingList`1.AddingNew">
      <summary>Tritt ein, bevor der Liste ein Element hinzugefügt wird.</summary>
    </member>
    <member name="E:System.ComponentModel.BindingList`1.ListChanged">
      <summary>Tritt ein, wenn die Liste oder ein Element der Liste geändert wird.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindingList`1" />-Klasse unter Verwendung von Standardwerten.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BindingList`1" />-Klasse mit der angegebenen Liste.</summary>
      <param name="list">Eine <see cref="T:System.Collections.Generic.IList`1" /> von Elementen, die in <see cref="T:System.ComponentModel.BindingList`1" /> enthalten sein sollen.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.AddNew">
      <summary>Fügt der Auflistung ein neues Element hinzu.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.BindingSource.AllowNew" />-Eigenschaft ist auf <see langword="false" /> festgelegt.  
  
- oder - 
Für den aktuellen Elementtyp konnte kein öffentlicher parameterloser Konstruktor gefunden werden.</exception>
      <returns>Das der Liste hinzugefügte Element.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.AddNewCore">
      <summary>Fügt am Ende der Auflistung ein neues Element hinzu.</summary>
      <exception cref="T:System.InvalidCastException">Der Typ des neuen Elements entspricht nicht dem Typ der in <see cref="T:System.ComponentModel.BindingList`1" /> enthaltenen Objekte.</exception>
      <returns>Das der Auflistung hinzugefügte Element.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sortiert die gegebenenfalls in einer abgeleiteten Klasse überschriebenen Elemente; andernfalls wird eine <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <param name="prop">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach der sortiert werden soll.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
      <exception cref="T:System.NotSupportedException">Die Methode wird in einer abgeleiteten Klasse nicht überschrieben.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.CancelNew(System.Int32)">
      <summary>Verwirft ein ausstehendes neues Element.</summary>
      <param name="itemIndex">Der Index des neuen hinzuzufügenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ClearItems">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.EndNew(System.Int32)">
      <summary>Übergibt ein anstehendes neues Element an die Auflistung.</summary>
      <param name="itemIndex">Der Index des neuen hinzuzufügenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Sucht nach dem Index des Elements, das über den angegebenen Eigenschaftendeskriptor mit dem angegebenen Wert verfügt, wenn der Suchvorgang in einer abgeleiteten Klasse implementiert wird, andernfalls <see cref="T:System.NotSupportedException" />.</summary>
      <param name="prop">Die zu suchende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Der Wert von <paramref name="prop" />, der übereinstimmen soll.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="M:System.ComponentModel.BindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)" /> wird in einer abgeleiteten Klasse nicht überschrieben.</exception>
      <returns>Der nullbasierte Index des Elements, das dem Eigenschaftendeskriptor entspricht und den angegebenen Wert enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.InsertItem(System.Int32,`0)">
      <summary>Fügt das angegebene Element am angegebenen Index in die Liste ein.</summary>
      <param name="index">Der nullbasierte Index, an dem das Element eingefügt werden soll.</param>
      <param name="item">Das in die Liste einzufügende Element.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.BindingList`1.AddingNew" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.AddingNewEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Sie entfernen ein neu hinzugefügtes Element, und <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> ist auf <see langword="false" /> festgelegt.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.RemoveSortCore">
      <summary>Entfernt jede mit <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> angewendete Sortierung, wenn die Sortierung in einer abgeleiteten Klasse implementiert wird; andernfalls wird <see cref="T:System.NotSupportedException" /> ausgelöst.</summary>
      <exception cref="T:System.NotSupportedException">Die Methode wird in einer abgeleiteten Klasse nicht überschrieben.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ResetBindings">
      <summary>Löst ein <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignis vom Typ <see cref="F:System.ComponentModel.ListChangedType.Reset" /> aus.</summary>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.ResetItem(System.Int32)">
      <summary>Löst für das Element an der angegebenen Position ein <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignis vom Typ <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> aus.</summary>
      <param name="position">Ein nullbasierter Index des zurückzusetzenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.SetItem(System.Int32,`0)">
      <summary>Ersetzt das Element im angegebenen Index durch ein angegebenes Element.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index. Der Wert kann für Verweistypen <see langword="null" /> sein.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="index" /> ist größer als <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="prop">Der als Suchkriterium hinzuzufügende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew">
      <summary>Fügt der Liste ein neues Element hinzu. Weitere Informationen finden Sie unter <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <exception cref="T:System.NotSupportedException">Diese Methode wird nicht unterstützt.</exception>
      <returns>Das der Liste hinzugefügte Element.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sortiert die Liste entsprechend einem <see cref="T:System.ComponentModel.PropertyDescriptor" /> und einer <see cref="T:System.ComponentModel.ListSortDirection" />. Eine ausführliche Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="prop">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, nach dem sortiert werden soll.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="prop">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, in dem gesucht werden soll.</param>
      <param name="key">Der Wert des <paramref name="prop" />-Parameters, nach dem gesucht werden soll.</param>
      <returns>Der Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="prop">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der aus den für die Suche verwendeten Indizes entfernt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Eine Beschreibung dieses Members finden Sie unter der <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />-Methode.</summary>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowEdit">
      <summary>Ruft einen Wert ab, der angibt, ob Elemente in der Liste bearbeitet werden können, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Listenelemente bearbeitet werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowNew">
      <summary>Ruft einen Wert ab, der angibt, ob der Liste mithilfe der <see cref="M:System.ComponentModel.BindingList`1.AddNew" />-Methode neue Elemente hinzugefügt werden können.</summary>
      <returns>
        <see langword="true" />, wenn der Liste mithilfe der <see cref="M:System.ComponentModel.BindingList`1.AddNew" />-Methode neue Elemente hinzugefügt werden können, andernfalls <see langword="false" />. Der Standardwert hängt von dem in der Liste enthaltenen zugrunde liegenden Typ ab.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.AllowRemove">
      <summary>Ruft einen Wert ab, der angibt, ob Elemente aus der Auflistung entfernt werden können, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Elemente mithilfe der <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />-Methode aus der Liste entfernt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.IsSortedCore">
      <summary>Ruft einen Wert ab, der angibt, ob die Liste sortiert ist.</summary>
      <returns>
        <see langword="true" />, wenn die Liste sortiert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.RaiseListChangedEvents">
      <summary>Ruft den Wert ab, der angibt, ob durch das Hinzufügen oder Entfernen von Elementen in der Liste <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignisse ausgelöst werden, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn durch das Hinzufügen oder Löschen von Elementen <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignisse ausgelöst werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SortDirectionCore">
      <summary>Ruft die Sortierrichtung der Liste ab.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte. Der Standardwert ist <see cref="F:System.ComponentModel.ListSortDirection.Ascending" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SortPropertyCore">
      <summary>Ruft den Eigenschaftendeskriptor auf, mit dem die Liste sortiert wird, wenn die Liste in einer abgeleiteten Klasse sortiert wird, andernfalls <see langword="null" />.</summary>
      <returns>Der zum Sortieren der Liste verwendete <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsChangeNotificationCore">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignisse aktiviert sind.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignisse unterstützt werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsSearchingCore">
      <summary>Ruft einen Wert ab, der angibt, ob die Liste Suchvorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn Liste Suchvorgänge unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.SupportsSortingCore">
      <summary>Ruft einen Wert ab, der angibt, ob die Liste Sortiervorgänge unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Liste die Sortierung unterstützt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Ruft einen Wert ab, der angibt, ob Elemente in der Liste bearbeitet werden können.</summary>
      <returns>
        <see langword="true" />, wenn die Listenelemente bearbeitet werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowNew">
      <summary>Ruft einen Wert ab, der angibt, ob der Liste mithilfe der <see cref="M:System.ComponentModel.BindingList`1.AddNew" />-Methode neue Elemente hinzugefügt werden können.</summary>
      <returns>
        <see langword="true" />, wenn der Liste mithilfe der <see cref="M:System.ComponentModel.BindingList`1.AddNew" />-Methode neue Elemente hinzugefügt werden können, andernfalls <see langword="false" />. Der Standardwert hängt von dem in der Liste enthaltenen zugrunde liegenden Typ ab.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Ruft einen Wert ab, der angibt, ob Elemente aus der Liste entfernt werden können.</summary>
      <returns>
        <see langword="true" />, wenn Elemente mithilfe der <see cref="M:System.ComponentModel.BindingList`1.RemoveItem(System.Int32)" />-Methode aus der Liste entfernt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#IsSorted">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" /> aufgerufen wurde und <see cref="M:System.ComponentModel.IBindingList.RemoveSort" /> nicht aufgerufen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortDirection">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der für die Sortierung verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>
        <see langword="true" />, wenn bei Änderungen der Liste oder eines Elements ein <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis ausgelöst wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>
        <see langword="true" />, wenn die Liste die Suche mit der <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />-Methode unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>
        <see langword="true" />, wenn die Liste die Sortierung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
      <summary>Ruft einen Wert ab, der angibt, ob durch Änderungen des Elementeigenschaftswerts <see cref="E:System.ComponentModel.BindingList`1.ListChanged" />-Ereignisse vom Typ <see cref="F:System.ComponentModel.ListChangedType.ItemChanged" /> ausgelöst werden. Dieser Member kann in einer abgeleiteten Klasse nicht überschrieben werden.</summary>
      <returns>
        <see langword="true" /> , wenn der Auflistungstyp implementiert <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> , andernfalls <see langword="false" /> . Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.BooleanConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Boolean" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.BooleanConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in ein boolesches Objekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Wertobjekt in ein boolesches Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, in die konvertiert werden soll.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung der Standardwerte für den booleschen Datentyp ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Klasse, die einen Standardsatz gültiger Werte enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob die von der <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Klasse eine vollständige Liste der möglichen Werte darstellt. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ByteConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 8-Bit-Ganzzahlobjekten ohne Vorzeichen in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ByteConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ByteConverter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.CancelEventHandler">
      <summary>Stellt die Methode dar, die ein Ereignis behandelt, das abgebrochen werden kann.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.CharConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von Unicodezeichenobjekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CharConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in ein Unicode-Zeichenobjekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in ein Unicode-Zeichenobjekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt mithilfe der Argumente in ein Unicode-Zeichenobjekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeAction">
      <summary>Gibt an, in welcher Weise die Auflistung geändert wurde.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Add">
      <summary>Gibt an, dass der Auflistung ein Element hinzugefügt wurde.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Refresh">
      <summary>Gibt an, dass sich die gesamte Auflistung geändert hat. Dies wird durch Methoden verursacht, die sich auf die gesamte Auflistung auswirken, z. B. <see cref="M:System.Collections.CollectionBase.Clear" />.</summary>
    </member>
    <member name="F:System.ComponentModel.CollectionChangeAction.Remove">
      <summary>Gibt an, dass ein Element aus der Auflistung entfernt wurde.</summary>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Data.DataColumnCollection.CollectionChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />-Klasse.</summary>
      <param name="action">Einer der <see cref="T:System.ComponentModel.CollectionChangeAction" />-Werte, der angibt, in welcher Weise die Auflistung geändert wurde.</param>
      <param name="element">Ein <see cref="T:System.Object" />, das die Instanz der Auflistung angibt, die geändert wurde.</param>
    </member>
    <member name="P:System.ComponentModel.CollectionChangeEventArgs.Action">
      <summary>Ruft eine Aktion ab, die angibt, in welcher Weise die Auflistung geändert wurde.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.CollectionChangeAction" />-Werte.</returns>
    </member>
    <member name="P:System.ComponentModel.CollectionChangeEventArgs.Element">
      <summary>Ruft die Instanz der Auflistung mit der Änderung ab.</summary>
      <returns>Ein <see cref="T:System.Object" />, das die Instanz der Auflistung mit der Änderung darstellt, oder <see langword="null" />, wenn Sie die Auflistung aktualisieren.</returns>
    </member>
    <member name="T:System.ComponentModel.CollectionChangeEventHandler">
      <summary>Stellt die Methode für die Behandlung des <see cref="E:System.Data.DataColumnCollection.CollectionChanged" />-Ereignisses dar, das beim Hinzufügen oder Entfernen von Elementen in einer Auflistung ausgelöst wird.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.CollectionConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von Auflistungsobjekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CollectionConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />. Dieser Parameter muss von der <see cref="T:System.Collections.ICollection" />-Schnittstelle erben.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den durch den Wertparameter angegebenen Typ von Array ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Eine <see cref="T:System.Object" />-Klasse, die den Typ von Array angibt, für den die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind. Diese Methode gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt Eigenschaften unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="false" />, da die <see cref="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />-Methode nicht aufgerufen werden darf, um die Eigenschaften dieses Objekts zu ermitteln. Diese Methode gibt nie <see langword="true" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ComplexBindingPropertiesAttribute">
      <summary>Gibt die Datenquellen- und Datenmembereigenschaften für eine Komponente an, die die komplexe Datenbindung unterstützt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.ComplexBindingPropertiesAttribute.Default">
      <summary>Stellt den Standardwert für die <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Klasse dar.</summary>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Klasse ohne Parameter.</summary>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Klasse unter Verwendung der angegebenen Datenquelle.</summary>
      <param name="dataSource">Der Name der Eigenschaft, die als Datenquelle verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Klasse unter Verwendung der angegebenen Datenquelle und des Datenmembers.</summary>
      <param name="dataSource">Der Name der Eigenschaft, die als Datenquelle verwendet werden soll.</param>
      <param name="dataMember">Der Name der Eigenschaft, die als Quelle für Daten verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Instanz gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" />-Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Objekt und die aktuelle Instanz gleich sind, andernfalls <see langword="false" />, wenn sie nicht gleicht sind.</returns>
    </member>
    <member name="M:System.ComponentModel.ComplexBindingPropertiesAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataMember">
      <summary>Ruft den Namen der Datenmembereigenschaft für die Komponente ab, an die das <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> gebunden ist.</summary>
      <returns>Der Name der Datenmembereigenschaft für die Komponente, an die <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> gebunden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ComplexBindingPropertiesAttribute.DataSource">
      <summary>Ruft den Namen der Datenquelleneigenschaft für die Komponente ab, an die das <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> gebunden ist.</summary>
      <returns>Der Name der Datenquelleneigenschaft für die Komponente, an die <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> gebunden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von Komponenten in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComponentConverter" />-Klasse.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der den Typ darstellt, der diesem Komponentenkonverter zugeordnet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft eine Auflistung von Eigenschaften für den durch den Wertparameter angegebenen Typ von Komponente ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, das den Typ von Komponente angibt, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für die Komponente verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentEditor">
      <summary>Stellt die Basisklasse für einen benutzerdefinierten Komponenten-Editor bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComponentEditor" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Bearbeitet die Komponente und gibt einen Wert zurück, der angibt, ob die Komponente auf Basis eines angegebenen Kontexts geändert wurde.</summary>
      <param name="context">Ein optionales Kontextobjekt, mit dem weitere Informationen über den Bearbeitungsvorgang abgerufen werden können.</param>
      <param name="component">Die zu bearbeitende Komponente.</param>
      <returns>
        <see langword="true" />, wenn die Komponente geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)">
      <summary>Bearbeitet die Komponente und gibt einen Wert zurück, der angibt, ob die Komponente geändert wurde.</summary>
      <param name="component">Die zu bearbeitende Komponente.</param>
      <returns>
        <see langword="true" />, wenn die Komponente geändert wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentResourceManager">
      <summary>Stellt einfache Funktionen zum Auflisten von Ressourcen für eine Komponente oder ein Objekt bereit. Die <see cref="T:System.ComponentModel.ComponentResourceManager" />-Klasse ist ein <see cref="T:System.Resources.ResourceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ComponentResourceManager" />-Klasse mit Standardwerten.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)">
      <summary>Erstellt einen <see cref="T:System.ComponentModel.ComponentResourceManager" />, der Ressourcen in Satellitenassemblys auf der Grundlage der Informationen aus dem angegebenen <see cref="T:System.Type" /> sucht.</summary>
      <param name="t">Eine <see cref="T:System.Type" />-Klasse, aus der die <see cref="T:System.ComponentModel.ComponentResourceManager" />-Klasse alle Informationen zum Suchen von Ressourcendateien ableitet.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)">
      <summary>Wendet den Wert einer Ressource auf die entsprechende Eigenschaft des Objekts an.</summary>
      <param name="value">Eine <see cref="T:System.Object" />-Klasse, die den anzuwendenden Eigenschaftswert enthält.</param>
      <param name="objectName">Eine <see cref="T:System.String" />-Klasse, die den Namen des Objekts enthält, nach dem in den Ressourcen gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> oder <paramref name="objectName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Wendet den Wert einer Ressource auf die entsprechende Eigenschaft des Objekts an.</summary>
      <param name="value">Eine <see cref="T:System.Object" />-Klasse, die den anzuwendenden Eigenschaftswert enthält.</param>
      <param name="objectName">Eine <see cref="T:System.String" />-Klasse, die den Namen des Objekts enthält, nach dem in den Ressourcen gesucht werden soll.</param>
      <param name="culture">Die Kultur, auf die Ressourcen angewendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> oder <paramref name="objectName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Container">
      <summary>Kapselt 0 (null) oder mehr Komponenten.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Container" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
      <summary>Fügt dem <see cref="T:System.ComponentModel.Component" /> die angegebene <see cref="T:System.ComponentModel.Container" /> hinzu. Die Komponente hat keinen Namen.</summary>
      <param name="component">Die hinzuzufügende Komponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Fügt dem <see cref="T:System.ComponentModel.Component" /> die angegebene <see cref="T:System.ComponentModel.Container" /> hinzu und weist ihr einen Namen zu.</summary>
      <param name="component">Die hinzuzufügende Komponente.</param>
      <param name="name">Der eindeutige Name für die Komponente, bei dem die Groß- und Kleinschreibung nicht berücksichtigt wird.  
  
- oder - 
 <see langword="null" />, d. h., der Komponente wird kein Name zugewiesen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist nicht eindeutig.</exception>
    </member>
    <member name="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
      <summary>Erstellt eine Site <see cref="T:System.ComponentModel.ISite" /> für die angegebene <see cref="T:System.ComponentModel.IComponent" /> und weist der Site den angegebenen Namen zu.</summary>
      <param name="component">Die <see cref="T:System.ComponentModel.IComponent" />, für die eine Site erstellt werden soll.</param>
      <param name="name">Der Name, der der <paramref name="component" /> zugewiesen werden soll, oder <see langword="null" />, wenn die Namenszuweisung übersprungen werden soll.</param>
      <returns>Die neu erstellte Site.</returns>
    </member>
    <member name="M:System.ComponentModel.Container.Dispose">
      <summary>Gibt alle vom <see cref="T:System.ComponentModel.Container" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.ComponentModel.Container" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Container.Finalize">
      <summary>Gibt nicht verwaltete Ressourcen frei und führt andere Bereinigungsvorgänge durch, bevor die <see cref="T:System.ComponentModel.Container" /> durch die Garbage Collection wieder zugänglich gemacht wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Container.GetService(System.Type)">
      <summary>Ruft das Dienstobjekt des angegebenen Typs ab, sofern es verfügbar ist.</summary>
      <param name="service">Der <see cref="T:System.Type" /> des abzurufenden Dienstes.</param>
      <returns>Ein <see cref="T:System.Object" />, das den angeforderten Dienst implementiert, oder <see langword="null" />, wenn der Dienst nicht ermittelt werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
      <summary>Entfernt eine Komponente aus dem <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="component">Die zu entfernende Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
      <summary>Entfernt eine Komponente aus dem <see cref="T:System.ComponentModel.Container" />, ohne <see cref="P:System.ComponentModel.IComponent.Site" /> auf <see langword="null" /> festzulegen.</summary>
      <param name="component">Die zu entfernende Komponente.</param>
    </member>
    <member name="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
      <summary>Bestimmt, ob der Komponentenname in diesem Container eindeutig ist.</summary>
      <param name="component">Die benannte Komponente.</param>
      <param name="name">Das Komponentenname, dessen Gültigkeit geprüft werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist nicht eindeutig.</exception>
    </member>
    <member name="P:System.ComponentModel.Container.Components">
      <summary>Ruft alle Komponenten im <see cref="T:System.ComponentModel.Container" /> ab.</summary>
      <returns>Eine Auflistung mit den Komponenten im <see cref="T:System.ComponentModel.Container" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ContainerFilterService">
      <summary>Stellt eine Basisklasse für den Containerfilterdienst bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ContainerFilterService.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ContainerFilterService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ContainerFilterService.FilterComponents(System.ComponentModel.ComponentCollection)">
      <summary>Filtert die Komponentenauflistung.</summary>
      <param name="components">Die zu filternde Komponentenauflistung.</param>
      <returns>Eine <see cref="T:System.ComponentModel.ComponentCollection" />, die eine geänderte Auflistung darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.CultureInfoConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Globalization.CultureInfo" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CultureInfoConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in eine <see cref="T:System.Globalization.CultureInfo" />-Struktur konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Wertobjekt in eine <see cref="T:System.Globalization.CultureInfo" />-Struktur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, in die konvertiert werden soll.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> gibt an, dass die Kultur nicht gültig ist.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, in die konvertiert werden soll.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)">
      <summary>Ruft den Namen der angegebenen Kultur ab.</summary>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die die Kultur angibt, für die der Name abgerufen werden soll.</param>
      <returns>Der Name der angegebenen Kultur.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft unter Verwendung des angegebenen Kontexts eine Auflistung der Standardwerte für ein <see cref="T:System.Globalization.CultureInfo" />-Objekt ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die eine Standardmenge zulässiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keine Standardmenge von Werten unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob die von der <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Methode zurückgegebene Auflistung von Standardwerten eine vollständige Liste darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="false" />, da die von <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> zurückgegebene <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Klasse keine vollständige Liste möglicher Werte darstellt (d. h., andere Werte sind möglich). Diese Methode gibt nie <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt eine Standardmenge von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, weil die <see cref="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Schnittstelle aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.CustomTypeDescriptor">
      <summary>Stellt eine einfache Standardimplementierung der <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />-Schnittstelle bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CustomTypeDescriptor" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.CustomTypeDescriptor" />-Klasse unter Verwendung eines übergeordneten benutzerdefinierten Typdeskriptors.</summary>
      <param name="parent">Der übergeordnete benutzerdefinierte Typdeskriptor.</param>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes">
      <summary>Gibt eine Auflistung benutzerdefinierter Attribute für den durch diesen Typdeskriptor dargestellten Typ zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für den Typ. Der Standardwert ist <see cref="F:System.ComponentModel.AttributeCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetClassName">
      <summary>Gibt den vollqualifizierten Namen der Klasse zurück, die von diesem Typdeskriptor dargestellt wird.</summary>
      <returns>Eine <see cref="T:System.String" /> mit dem vollqualifizierten Klassennamen des Typs, den dieser Typdeskriptor beschreibt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName">
      <summary>Gibt den Namen der durch diesen Typdeskriptor dargestellten Klasse zurück.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Namen der Komponenteninstanz enthält, die diesen Typdeskriptor beschreibt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetConverter">
      <summary>Gibt einen Typkonverter für den durch diesen Typdeskriptor dargestellten Typ zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" /> für den von diesem Typdeskriptor dargestellten Typ. Der Standard ist ein neu erstellter <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent">
      <summary>Gibt die Ereignisbeschreibung für das Standardereignis des von diesem Typdeskriptor dargestellten Objekts zurück.</summary>
      <returns>Der <see cref="T:System.ComponentModel.EventDescriptor" /> für das Standardereignis in dem durch diesen Typdeskriptor dargestellten Objekt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty">
      <summary>Gibt die Eigenschaftenbeschreibung für die Standardeigenschaft des von diesem Typdeskriptor dargestellten Objekts zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> für die Standardeigenschaft in dem durch diesen Typdeskriptor dargestellten Objekt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)">
      <summary>Gibt einen Editor des angegebenen Typs zurück, der der durch diesen Typdeskriptor dargestellten Klasse zugeordnet werden soll.</summary>
      <param name="editorBaseType">Der Basistyp des abzurufenden Editors.</param>
      <returns>Ein Editor des angegebenen Typs, der der durch diesen Typdeskriptor dargestellten Klasse zugeordnet werden soll. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents">
      <summary>Gibt eine Auflistung der Ereignisbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt enthält. Der Standardwert ist <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])">
      <summary>Gibt eine gefilterte Auflistung der Ereignisbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt zurück.</summary>
      <param name="attributes">Ein Array von Attributen, das als Filter verwendet werden soll. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt enthält. Der Standardwert ist <see cref="F:System.ComponentModel.EventDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetProperties">
      <summary>Gibt eine Auflistung der Eigenschaftenbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaftenbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt enthält. Der Standardwert ist <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])">
      <summary>Gibt eine gefilterte Auflistung der Eigenschaftenbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt zurück.</summary>
      <param name="attributes">Ein Array von Attributen, das als Filter verwendet werden soll. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaftenbeschreibungen für das durch diesen Typdeskriptor dargestellte Objekt enthält. Der Standardwert ist <see cref="F:System.ComponentModel.PropertyDescriptorCollection.Empty" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd">Der Eigenschaftendeskriptor, für den das besitzende Objekt abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das die vom Typdeskriptor angegebene Eigenschaft besitzt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectAttribute">
      <summary>Identifiziert einen Typ als ein für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt geeignetes Objekt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.DataObject">
      <summary>Gibt an, dass die Klasse für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zur Entwurfszeit geeignet ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.Default">
      <summary>Stellt den Standardwert der <see cref="T:System.ComponentModel.DataObjectAttribute" />-Klasse dar, mit dem angegeben wird, dass die Klasse für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zur Entwurfszeit geeignet ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectAttribute.NonDataObject">
      <summary>Gibt an, dass die Klasse für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zur Entwurfszeit nicht geeignet ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectAttribute" />-Klasse und gibt an, ob ein Objekt für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt geeignet ist.</summary>
      <param name="isDataObject">
        <see langword="true" />, wenn das Objekt für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt geeignet ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob diese Instanz von <see cref="T:System.ComponentModel.DataObjectAttribute" /> dem Muster eines anderen Objekts entspricht.</summary>
      <param name="obj">Ein Objekt, das mit dieser Instanz von <see cref="T:System.ComponentModel.DataObjectAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn diese Instanz der vom <paramref name="obj" />-Parameter angegebenen Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectAttribute.IsDefaultAttribute">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Wert des Attributs dessen Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Wert des Attributs der Standardwert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectAttribute.IsDataObject">
      <summary>Ruft einen Wert ab, der angibt, ob ein Objekt als ein für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt zur Entwurfszeit geeignetes Objekt betrachtet werden soll.</summary>
      <returns>
        <see langword="true" />, wenn das Objekt als ein für die Bindung an ein <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />-Objekt geeignetes Objekt betrachtet werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectFieldAttribute">
      <summary>Stellt Metadaten für eine Eigenschaft bereit, die ein Datenfeld darstellt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectFieldAttribute" />-Klasse und gibt an, ob das Feld den Primärschlüssel für die Datenzeile darstellt.</summary>
      <param name="primaryKey">
        <see langword="true" />, um anzugeben, dass das Feld im Primärschlüssel der Datenzeile ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectFieldAttribute" />-Klasse und gibt an, ob das Feld den Primärschlüssel für die Datenzeile darstellt und ob das Feld ein Datenbank-Identitätsfeld darstellt.</summary>
      <param name="primaryKey">
        <see langword="true" />, um anzugeben, dass das Feld im Primärschlüssel der Datenzeile ist, andernfalls <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" />, um anzugeben, dass das Feld ein Identitätsfeld darstellt, das die Datenzeile eindeutig identifiziert, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectFieldAttribute" />-Klasse und gibt an, ob das Feld den Primärschlüssel für die Datenzeile darstellt, ob das Feld ein Datenbank-Identitätsfeld darstellt und ob das Feld NULL sein kann.</summary>
      <param name="primaryKey">
        <see langword="true" />, um anzugeben, dass das Feld im Primärschlüssel der Datenzeile ist, andernfalls <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" />, um anzugeben, dass das Feld ein Identitätsfeld darstellt, das die Datenzeile eindeutig identifiziert, andernfalls <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" />, um anzugeben, dass das Feld im Datenspeicher NULL sein kann, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectFieldAttribute" />-Klasse und gibt an, ob das Feld den Primärschlüssel für die Datenzeile darstellt, ob es ein Datenbank-Identitätsfeld darstellt und ob es NULL sein kann, und legt die Länge des Felds fest.</summary>
      <param name="primaryKey">
        <see langword="true" />, um anzugeben, dass das Feld im Primärschlüssel der Datenzeile ist, andernfalls <see langword="false" />.</param>
      <param name="isIdentity">
        <see langword="true" />, um anzugeben, dass das Feld ein Identitätsfeld darstellt, das die Datenzeile eindeutig identifiziert, andernfalls <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" />, um anzugeben, dass das Feld im Datenspeicher NULL sein kann, andernfalls <see langword="false" />.</param>
      <param name="length">Die Länge des Felds in Bytes.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein Objekt, das mit dieser Instanz von <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn diese Instanz der vom <paramref name="obj" />-Parameter angegebenen Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectFieldAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.IsIdentity">
      <summary>Ruft einen Wert ab, der angibt, ob eine Eigenschaft ein Identitätsfeld in den zugrunde liegenden Daten darstellt.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft ein Identitätsfeld in den zugrunde liegenden Daten darstellt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob eine Eigenschaft ein Identitätsfeld darstellt, das im zugrunde liegenden Datenspeicher NULL sein kann.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft ein Feld darstellt, das im zugrunde liegenden Datenspeicher NULL sein kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.Length">
      <summary>Ruft die Länge der Eigenschaft in Bytes ab.</summary>
      <returns>Die Länge der Eigenschaft in Bytes oder, falls nicht festgelegt, -1.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectFieldAttribute.PrimaryKey">
      <summary>Ruft einen Wert ab, der angibt, ob eine Eigenschaft im Primärschlüssel in den zugrunde liegenden Daten ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft im Primärschlüssel des Datenspeichers ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectMethodAttribute">
      <summary>Identifiziert die von einem Typ verfügbar gemachte Datenvorgangsmethode und gibt an, welcher Vorgangstyp von der Methode ausgeführt wird und ob die Methode die Standarddatenmethode darstellt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />-Klasse und identifiziert den Typ des von der Methode ausgeführten Datenvorgangs.</summary>
      <param name="methodType">Einer der <see cref="T:System.ComponentModel.DataObjectMethodType" />-Werte, mit denen der von der Methode ausgeführte Vorgang beschrieben wird.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.#ctor(System.ComponentModel.DataObjectMethodType,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataObjectMethodAttribute" />-Klasse, identifiziert den Typ des von der Methode ausgeführten Datenvorgangs, und gibt an, ob die Methode die vom Datenobjekt verfügbar gemachte Standarddatenmethode darstellt.</summary>
      <param name="methodType">Einer der <see cref="T:System.ComponentModel.DataObjectMethodType" />-Werte, mit denen der von der Methode ausgeführte Vorgang beschrieben wird.</param>
      <param name="isDefault">
        <see langword="true" />, um anzugeben, dass die Methode, auf die das Attribut angewendet wird, die Standardmethode des Datenobjekts für den angegebenen <paramref name="methodType" /> darstellt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein Objekt, das mit dieser Instanz von <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn diese Instanz der vom <paramref name="obj" />-Parameter angegebenen Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.DataObjectMethodAttribute.Match(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz ein allgemeines Muster für ein angegebenes Attribut freigibt.</summary>
      <param name="obj">Ein Objekt, das mit dieser Instanz von <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn diese Instanz der vom <paramref name="obj" />-Parameter angegebenen Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectMethodAttribute.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob die Methode, auf die <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> angewendet wird, die vom Datenobjekt für einen bestimmten Methodentyp verfügbar gemachte Standardwertmethode darstellt.</summary>
      <returns>
        <see langword="true" />, wenn die Methode die vom Objekt für einen Methodentyp verfügbar gemachte Standardmethode darstellt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DataObjectMethodAttribute.MethodType">
      <summary>Ruft einen <see cref="T:System.ComponentModel.DataObjectMethodType" />-Wert ab, der den Typ des von der Methode ausgeführten Datenvorgangs angibt.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.DataObjectMethodType" />-Werte, der den Typ des Datenvorgangs angibt, der von der Methode ausgeführt wird, auf die <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> angewendet wird.</returns>
    </member>
    <member name="T:System.ComponentModel.DataObjectMethodType">
      <summary>Gibt den Typ des von einer Methode ausgeführten Datenvorgangs entsprechend dem auf die Methode angewendeten <see cref="T:System.ComponentModel.DataObjectMethodAttribute" /> an.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Delete">
      <summary>Gibt an, dass eine Methode für einen Datenvorgang verwendet wird, bei dem Daten gelöscht werden.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Fill">
      <summary>Gibt an, dass eine Methode für einen Datenvorgang verwendet wird, bei dem ein <see cref="T:System.Data.DataSet" />-Objekt gefüllt wird.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Insert">
      <summary>Gibt an, dass eine Methode für einen Datenvorgang verwendet wird, bei dem Daten eingefügt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Select">
      <summary>Gibt an, dass eine Methode für einen Datenvorgang verwendet wird, bei dem Daten abgerufen werden.</summary>
    </member>
    <member name="F:System.ComponentModel.DataObjectMethodType.Update">
      <summary>Gibt an, dass eine Methode für einen Datenvorgang verwendet wird, bei dem Daten aktualisiert werden.</summary>
    </member>
    <member name="T:System.ComponentModel.DateTimeConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.DateTime" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DateTimeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in eine <see cref="T:System.DateTime" />-Struktur konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert den angegebenen Wert in eine <see cref="T:System.DateTime" />-Struktur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt mithilfe der Argumente in eine <see cref="T:System.DateTime" />-Struktur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DateTimeOffsetConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.DateTimeOffset" />-Strukturen in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DateTimeOffsetConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein Objekt des angegebenen Quelltyps in einen <see cref="T:System.DateTimeOffset" /> konvertiert werden kann.</summary>
      <param name="context">Der Datenformatkontext.</param>
      <param name="sourceType">Der zu überprüfende Quelltyp.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Typ in einen <see cref="T:System.DateTimeOffset" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.DateTimeOffset" /> in ein Objekt vom angegebenen Typ konvertiert werden kann.</summary>
      <param name="context">Der Datenformatkontext.</param>
      <param name="destinationType">Der zu überprüfende Zieltyp.</param>
      <returns>
        <see langword="true" />, wenn ein <see cref="T:System.DateTimeOffset" /> in den angegebenen Typ konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in eine <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="context">Der Datenformatkontext.</param>
      <param name="culture">Die Datumskultur.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.DateTimeOffset" />, der das angegebene Objekt darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert einen <see cref="T:System.DateTimeOffset" /> in ein Objekt vom angegebenen Typ.</summary>
      <param name="context">Der Datenformatkontext.</param>
      <param name="culture">Die Datumskultur.</param>
      <param name="value">Der zu konvertierende <see cref="T:System.DateTimeOffset" />.</param>
      <param name="destinationType">Der Typ, in den konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein Objekt vom angegebenen Typ, das den <see cref="T:System.DateTimeOffset" /> darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DecimalConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Decimal" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DecimalConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt mithilfe der Argumente in eine <see cref="T:System.Decimal" />-Struktur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultBindingPropertyAttribute">
      <summary>Gibt die Standardbindungseigenschaft für eine Komponente an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.DefaultBindingPropertyAttribute.Default">
      <summary>Stellt den Standardwert für die <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />-Klasse dar.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />-Klasse ohne Parameter.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />-Klasse unter Verwendung des angegebenen Eigenschaftsnamens.</summary>
      <param name="name">Der Name der Standardeigenschaft für die Datenbindung.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />-Instanz gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />-Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Objekt und die aktuelle Instanz gleich sind, andernfalls <see langword="false" />, wenn sie nicht gleicht sind.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultBindingPropertyAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultBindingPropertyAttribute.Name">
      <summary>Ruft den Namen der Standardeigenschaft für die Datenbindung für die Komponente ab, an die das <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> gebunden ist.</summary>
      <returns>Der Name der Standardeigenschaft für die Datenbindung für die Komponente, an die das <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> gebunden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultEventAttribute">
      <summary>Gibt das Standardereignis für eine Komponente an.</summary>
    </member>
    <member name="F:System.ComponentModel.DefaultEventAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.DefaultEventAttribute" /> an, der <see langword="null" /> ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultEventAttribute" />-Klasse.</summary>
      <param name="name">Der Name des Standardereignisses für die Komponente, an die das Attribut gebunden ist.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.DefaultEventAttribute" /> ist.</summary>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultEventAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultEventAttribute.Name">
      <summary>Ruft den Namen des Standardereignisses für die Komponente ab, an die das Attribut gebunden ist.</summary>
      <returns>Der Name des Standardereignisses für die Komponente, an die das Attribut gebunden ist. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DefaultPropertyAttribute">
      <summary>Gibt die Standardeigenschaft für eine Komponente an.</summary>
    </member>
    <member name="F:System.ComponentModel.DefaultPropertyAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.DefaultPropertyAttribute" /> an, der <see langword="null" /> ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DefaultPropertyAttribute" />-Klasse.</summary>
      <param name="name">Der Name der Standardeigenschaft für die Komponente, an die dieses Attribut gebunden ist.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.DefaultPropertyAttribute" /> ist.</summary>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.DefaultPropertyAttribute.Name">
      <summary>Ruft den Namen der Standardeigenschaft für die Komponente ab, an die dieses Attribut gebunden ist.</summary>
      <returns>Der Name der Standardeigenschaft für die Komponente, an die dieses Attribut gebunden ist. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignerEventArgs">
      <summary>Stellt Daten für das <see cref="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.IDesignerHost)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />-Klasse.</summary>
      <param name="oldDesigner">Das Dokument, das in den deaktivierten Zustand wechselt.</param>
      <param name="newDesigner">Das Dokument, das in den aktivierten Zustand wechselt.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignerEventArgs.NewDesigner">
      <summary>Ruft das Dokument ab, das in den aktivierten Zustand wechselt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der das Dokument darstellt, das in den aktivierten Zustand wechselt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignerEventArgs.OldDesigner">
      <summary>Ruft das Dokument ab, das in den deaktivierten Zustand wechselt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.Design.IDesignerHost" />, der das Dokument darstellt, das in den deaktivierten Zustand wechselt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignerEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CheckoutException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn das Auschecken einer Datei, die in ein Quellcode-Verwaltungsprogramm eingecheckt ist, abgebrochen wird oder fehlschlägt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.CheckoutException.Canceled">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse, die angibt, dass der Checkout abgebrochen wurde. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse ohne eine zugeordnete Meldung und ohne zugeordneten Fehlercode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse mit den angegebenen Serialisierungsdaten und dem angegebenen Kontext.</summary>
      <param name="info">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
      <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Eine Meldung mit einer Beschreibung der Ausnahme.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse mit der angegebenen ausführlichen Beschreibung und der angegebenen Ausnahme.</summary>
      <param name="message">Eine detaillierte Beschreibung des Fehlers.</param>
      <param name="innerException">Ein Verweis auf die innere Ausnahme, die dieser Ausnahme zugrunde liegt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CheckoutException" />-Klasse mit der angegebenen Meldung und dem angegebenen Fehlercode.</summary>
      <param name="message">Eine Meldung mit einer Beschreibung der Ausnahme.</param>
      <param name="errorCode">Der zu übergebende Fehlercode.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CommandID">
      <summary>Stellt einen eindeutigen Befehlsbezeichner dar, der aus einer numerischen Befehls-ID und einem GUID-Menügruppenbezeichner besteht.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.#ctor(System.Guid,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse unter Verwendung der angegebenen Menügruppen-GUID und Befehls-ID-Nummer.</summary>
      <param name="menuGroup">Die GUID der Gruppe, zu der dieser Menübefehl gehört.</param>
      <param name="commandID">Der numerische Bezeichner dieses Menübefehls.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.Equals(System.Object)">
      <summary>Stellt fest, ob zwei <see cref="T:System.ComponentModel.Design.CommandID" />-Instanzen gleich sind.</summary>
      <param name="obj">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt dieser Klasse entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.GetHashCode">
      <summary>Dient als Hashfunktion für einen bestimmten Typ.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CommandID.ToString">
      <summary>Gibt eine <see cref="T:System.String" /> zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge mit den Befehls-ID-Informationen, d. h. die GUID und die als Bezeichner verwendete ganze Zahl.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CommandID.Guid">
      <summary>Ruft die GUID der Menügruppe ab, zu der der Menübefehl gehört, der mit dieser <see cref="T:System.ComponentModel.Design.CommandID" /> bezeichnet wird.</summary>
      <returns>Die GUID der Befehlsgruppe für diesen Befehl.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CommandID.ID">
      <summary>Ruft die numerische Befehls-ID ab.</summary>
      <returns>Die Befehls-ID-Nummer.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignis bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentChangedEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />-Klasse.</summary>
      <param name="component">Die Komponente, die geändert wurde.</param>
      <param name="member">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den geänderten Member darstellt.</param>
      <param name="oldValue">Der alte Wert des geänderten Members.</param>
      <param name="newValue">Der neue Wert des geänderten Members.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.Component">
      <summary>Ruft die Komponente ab, die geändert wurde.</summary>
      <returns>Ein <see cref="T:System.Object" />, das die geänderte Komponente darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.Member">
      <summary>Ruft den Member ab, der geändert wurde.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den Member angibt, der geändert wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.NewValue">
      <summary>Ruft den neuen Wert des geänderten Members ab.</summary>
      <returns>Der neue Wert des geänderten Members. Diese Eigenschaft kann <see langword="null" /> sein.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangedEventArgs.OldValue">
      <summary>Ruft den alten Wert des geänderten Members ab.</summary>
      <returns>Der alte Wert des geänderten Members. Diese Eigenschaft kann <see langword="null" /> sein.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangedEventHandler">
      <summary>Stellt die Methode zur Behandlung eines <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangingEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignis bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ComponentChangingEventArgs" />-Klasse.</summary>
      <param name="component">Die Komponente, die geändert wird.</param>
      <param name="member">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den Member der Komponente angibt, der geändert wird.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangingEventArgs.Component">
      <summary>Ruft die zu ändernde Komponente ab bzw. die Komponente, die den übergeordneten Container des zu ändernden Members darstellt.</summary>
      <returns>Die Komponente mit dem Member, der geändert wird.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentChangingEventArgs.Member">
      <summary>Ruft den Member ab, der geändert wird.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den zu ändernden Member angibt, wenn der Member bekannt ist, oder <see langword="null" />, wenn der Member nicht bekannt ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentChangingEventHandler">
      <summary>Stellt die Methode zur Behandlung eines <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentChangingEventArgs" />-Ereignis, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />-Ereignis, das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />-Ereignis, das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />-Ereignis und das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentEventArgs.#ctor(System.ComponentModel.IComponent)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />-Klasse.</summary>
      <param name="component">Die Komponente, die die Quelle des Ereignisses ist.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentEventArgs.Component">
      <summary>Ruft die dem Ereignis zugeordnete Komponente ab.</summary>
      <returns>Die Komponente, die dem Ereignis zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentEventHandler">
      <summary>Stellt die Methode dar, die für Ereignisse auf Komponentenebene das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />-Ereignis , das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />-Ereignis , das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> und das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />-Ereignis auslöst.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentRenameEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentRenameEventArgs.#ctor(System.Object,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />-Klasse.</summary>
      <param name="component">Die umzubenennende Komponente.</param>
      <param name="oldName">Der frühere Name der Komponente.</param>
      <param name="newName">Der neue Name der Komponente.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.Component">
      <summary>Ruft die Komponente ab, die umbenannt wird.</summary>
      <returns>Die Komponente, die umbenannt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.NewName">
      <summary>Ruft den Namen der Komponente nach dem Umbenennungsereignis ab.</summary>
      <returns>Der Name der Komponente nach dem Umbenennungsereignis.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentRenameEventArgs.OldName">
      <summary>Ruft den Namen der Komponente vor dem Umbenennungsereignis ab.</summary>
      <returns>Der frühere Name der Komponente.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentRenameEventHandler">
      <summary>Stellt die Methode zur Behandlung eines <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCollection">
      <summary>Stellt eine Auflistung von Designern dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerCollection" />-Klasse, die den angegebenen Satz von Designern enthält.</summary>
      <param name="designers">Eine Liste, die die Auflistung von Designern enthält, die hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerCollection" />-Klasse, die die angegebenen Designer enthält.</summary>
      <param name="designers">Ein Array von <see cref="T:System.ComponentModel.Design.IDesignerHost" />-Objekten, das gespeichert werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator">
      <summary>Ruft einen neuen Enumerator für diese Auflistung ab.</summary>
      <returns>Eine <see cref="T:System.Collections.IEnumerator" />-Schnittstelle für die Enumeration der Auflistung.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen neuen Enumerator für diese Auflistung ab.</summary>
      <returns>Eine <see cref="T:System.Collections.IEnumerator" />-Schnittstelle für die Enumeration der Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.Count">
      <summary>Ruft die Anzahl der Designer in der Auflistung ab.</summary>
      <returns>Die Anzahl der Designer in der Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.Item(System.Int32)">
      <summary>Ruft den Designer am angegebenen Index ab.</summary>
      <param name="index">Der Index des zurückzugebenden Designers.</param>
      <returns>Der Designer am angegebenen Index.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der in der Auflistung enthaltenen Elemente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Collections.ICollection" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />-Ereignis und das <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerEventArgs" />-Klasse.</summary>
      <param name="host">Der <see cref="T:System.ComponentModel.Design.IDesignerHost" /> des Dokuments.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerEventArgs.Designer">
      <summary>Ruft den Host des Dokuments ab.</summary>
      <returns>Der <see cref="T:System.ComponentModel.Design.IDesignerHost" /> des Dokuments.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />-Ereignis und das <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" />-Ereignis behandelt, die ausgelöst werden, wenn ein Dokument erstellt oder freigegeben wird.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.DesignerEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerOptionService">
      <summary>Stellt eine Basisklasse für Abruf und Festlegung von Optionswerten für einen Designer bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerOptionService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)">
      <summary>Erstellt eine neue <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> mit dem angegebenen Namen und fügt es dem gegebenen übergeordneten Element hinzu.</summary>
      <param name="parent">Die übergeordnete Designeroptionsauflistung. Alle Auflistungen mit Ausnahme der Stammobjektauflistung verfügen über ein übergeordnetes Element.</param>
      <param name="name">Der Name dieser Auflistung.</param>
      <param name="value">Das Objekt, das für diese Auflistung Eigenschaften bereitstellt. Der Wert kann <see langword="null" /> sein, wenn die Auflistung keine Eigenschaften bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parent" /> oder <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist eine leere Zeichenfolge.</exception>
      <returns>Eine neue <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />-Instanz mit dem angegebenen Namen ab.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Füllt eine <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> auf.</summary>
      <param name="options">Die zu füllende Auflistung.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)">
      <summary>Zeigt das Optionsdialogfeld für das gegebene Objekt an.</summary>
      <param name="options">Die Optionsauflistung mit dem aufzurufenden Objekt.</param>
      <param name="optionObject">Das eigentliche Optionsobjekt.</param>
      <returns>
        <see langword="true" />, wenn das Dialogfeld angezeigt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)">
      <summary>Ruft den Wert einer in diesem Paket definierten Option ab.</summary>
      <param name="pageName">Die Seite, an die die Option gebunden ist.</param>
      <param name="valueName">Der Name des Optionswerts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pageName" /> oder <paramref name="valueName" /> ist <see langword="null" />.</exception>
      <returns>Der Wert der Option mit dem Namen <paramref name="valueName" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)">
      <summary>Legt den Wert einer in diesem Paket definierten Option fest.</summary>
      <param name="pageName">Die Seite, an die die Option gebunden ist.</param>
      <param name="valueName">Der Name des Optionswerts.</param>
      <param name="value">Der Wert der Option.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pageName" /> oder <paramref name="valueName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.Options">
      <summary>Ruft die Optionsauflistung für diesen Dienst ab.</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> mit verfügbaren Designeroptionen.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection">
      <summary>Enthält eine Auflistung von Designeroptionen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die gesamte Auflistung in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend am angegebenen Index des Zielarrays.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <paramref name="array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> zurück, der zum Durchlaufen dieser Auflistung verwendet werden kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen dieser Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Gibt den Index des ersten Vorkommens eines angegebenen Werts in einem Bereich dieser Auflistung zurück.</summary>
      <param name="value">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <returns>Der Index des ersten Vorkommens des Werts innerhalb der gesamten Auflistung, sofern gefunden, andernfalls die untere Grenze der Auflistung -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.ShowDialog">
      <summary>Zeigt eine Dialogfeldbenutzeroberfläche an, mit der der Benutzer die Optionen in dieser <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> konfigurieren kann.</summary>
      <returns>
        <see langword="true" />, wenn das Dialogfeld angezeigt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value">Das <see cref="T:System.Object" />, das in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Die in die Auflistung einzufügende <see cref="T:System.Object" />-Klasse.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das Auflistungselement am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Count">
      <summary>Ruft die Anzahl untergeordneter Optionsauflistungen ab, die diese <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> enthält.</summary>
      <returns>Die Anzahl untergeordneter Optionsauflistungen, die diese <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)">
      <summary>Ruft die untergeordnete Auflistung am angegebenen Index ab.</summary>
      <param name="index">Der nullbasierte Index der abzurufenden untergeordneten Auflistung.</param>
      <returns>Die untergeordnete Auflistung am angegebenen Index.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)">
      <summary>Ruft die untergeordnete Auflistung am angegebenen Namen ab.</summary>
      <param name="name">Der Name der untergeordneten Auflistung.</param>
      <returns>Die untergeordnete Auflistung mit dem vom <paramref name="name" /> angegebenen Namen oder <see langword="null" />, wenn der Name nicht gefunden wird.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Name">
      <summary>Ruft den Namen dieses <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> ab.</summary>
      <returns>Der Name dieses <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Parent">
      <summary>Ruft das übergeordnete Auflistungsobjekt ab.</summary>
      <returns>Das übergeordnete Auflistungsobjekt oder <see langword="null" />, wenn es kein übergeordnetes Element gibt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties">
      <summary>Ruft die Auflistung von Eigenschaften dieser <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> zusammen mit all ihren untergeordneten Elementen ab.</summary>
      <returns>Die Auflistung von Eigenschaften dieser <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" /> zusammen mit all ihren untergeordneten Elementen.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert und daher threadsicher ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf die Auflistung synchronisiert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransaction">
      <summary>Stellt ein Verfahren zum Gruppieren einer Reihe von Entwurfszeitaktionen bereit, um die Leistung zu verbessern und das Rückgängigmachen der meisten Arten von Änderungen zu ermöglichen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerTransaction" />-Klasse ohne Beschreibung.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerTransaction" />-Klasse mit der angegebenen Transaktionsbeschreibung.</summary>
      <param name="description">Eine Beschreibung für diese Transaktion.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Cancel">
      <summary>Bricht die Transaktion ab und versucht, einen Rollback der Änderungen durchzuführen, die von den Ereignissen der Transaktion vorgenommen wurden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Commit">
      <summary>Führt diese Transaktion durch.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.Finalize">
      <summary>Gibt die diesem Objekt zugeordneten Ressourcen frei. Falls noch kein Commit für diese Transaktion ausgeführt wurde, wird er durch diese Überschreibung ausgeführt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.OnCancel">
      <summary>Löst das <see langword="Cancel" />-Ereignis aus.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.OnCommit">
      <summary>Führt den eigentlichen Commit einer Transaktion aus.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose">
      <summary>Gibt alle vom <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Canceled">
      <summary>Ruft einen Wert ab, der angibt, ob die Transaktion abgebrochen wurde.</summary>
      <returns>
        <see langword="true" />, wenn die Transaktion abgebrochen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Committed">
      <summary>Ruft einen Wert ab, der angibt, ob die Transaktion durchgeführt wurde.</summary>
      <returns>
        <see langword="true" />, wenn die Transaktion durchgeführt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransaction.Description">
      <summary>Ruft eine Beschreibung für diese Transaktion ab.</summary>
      <returns>Eine Beschreibung für die Transaktion.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />-Ereignis und das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />-Klasse unter Verwendung des angegebenen Werts, der angibt, ob der Designer eine <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />-Methode für die Transaktion aufgerufen hat.</summary>
      <param name="commit">Ein Wert, der angibt, ob die Transaktion durchgeführt wurde.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />-Klasse.</summary>
      <param name="commit">Ein Wert, der angibt, ob die Transaktion durchgeführt wurde.</param>
      <param name="lastTransaction">
        <see langword="true" />, wenn es sich um die letzte zu schließende Transaktion handelt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.LastTransaction">
      <summary>Ruft einen Wert ab, der angibt, ob dies die letzte zu schließende Transaktion ist.</summary>
      <returns>
        <see langword="true" />, wenn es sich um die letzte zu schließende Transaktion handelt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.TransactionCommitted">
      <summary>Gibt an, ob der Designer eine <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />-Methode für die Transaktion aufgerufen hat.</summary>
      <returns>
        <see langword="true" />, wenn der Designer eine <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" />-Methode für die Transaktion aufgerufen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />-Ereignis und das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />-Ereignis eines Designers behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerVerb">
      <summary>Stellt ein Verb dar, das aus einem Designer aufgerufen werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Klasse.</summary>
      <param name="text">Der Text des Menübefehls, der für Benutzer angezeigt wird.</param>
      <param name="handler">Der Ereignishandler, der die Aktionen des Verbs ausführt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Klasse.</summary>
      <param name="text">Der Text des Menübefehls, der für Benutzer angezeigt wird.</param>
      <param name="handler">Der Ereignishandler, der die Aktionen des Verbs ausführt.</param>
      <param name="startCommandID">Die Startbefehls-ID dieses Verbs. In der Standardeinstellung reserviert die Designerarchitektur einen Bereich für Befehls-IDs von Verben. Dies kann durch Angabe einer benutzerdefinierten Befehls-ID überschrieben werden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerb.ToString">
      <summary>Überschreibt <see cref="M:System.Object.ToString" />.</summary>
      <returns>Der Text des Verbs oder eine leere Zeichenfolge (""), wenn das Textfeld leer ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerb.Description">
      <summary>Ruft die Beschreibung des Menüelements für das Verb ab oder legt diese fest.</summary>
      <returns>Eine Zeichenfolge, die das Menüelement beschreibt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerb.Text">
      <summary>Ruft die Textbeschreibung für den Verbbefehl im Menü ab.</summary>
      <returns>Eine Beschreibung für den Verbbefehl.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerVerbCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.ComponentModel.Design.DesignerVerb" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />-Klasse unter Verwendung des angegebenen Arrays von <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Objekten.</summary>
      <param name="value">Ein <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Array, das die Verben angibt, die in der Auflistung enthalten sein sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)">
      <summary>Fügt der Auflistung den angegebenen <see cref="T:System.ComponentModel.Design.DesignerVerb" /> hinzu.</summary>
      <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
      <returns>Der Index in der Auflistung, an dem das Verb hinzugefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])">
      <summary>Fügt den angegebenen Satz von Designerverben der Auflistung hinzu.</summary>
      <param name="value">Ein Array von <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)">
      <summary>Fügt die angegebene Auflistung von Designerverben der Auflistung hinzu.</summary>
      <param name="value">Eine der Auflistung hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)">
      <summary>Ruft einen Wert ab, der angibt, ob das angegebene <see cref="T:System.ComponentModel.Design.DesignerVerb" /> in der Auflistung vorhanden ist.</summary>
      <param name="value">Das <see cref="T:System.ComponentModel.Design.DesignerVerb" />, das in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn angegebene Objekt in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)">
      <summary>Kopiert die Auflistungsmember in das angegebene <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Array, beginnend am angegebenen Zielindex.</summary>
      <param name="array">Das Array, in das Auflistungsmember kopiert werden sollen.</param>
      <param name="index">Das Zielindex, an dem der Kopiervorgang begonnen werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)">
      <summary>Ruft den Index der angegebenen <see cref="T:System.ComponentModel.Design.DesignerVerb" /> ab.</summary>
      <param name="value">Das <see cref="T:System.ComponentModel.Design.DesignerVerb" />, dessen Index in der Auflistung abgerufen werden soll.</param>
      <returns>Der Index des angegeben Objekts, wenn es in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)">
      <summary>Fügt das angegebene <see cref="T:System.ComponentModel.Design.DesignerVerb" /> am angegebenen Index ein.</summary>
      <param name="index">Der Index in der Auflistung, an dem das Verb eingefügt werden soll.</param>
      <param name="value">Das in der Auflistung einzufügende <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnClear">
      <summary>Löst das <see langword="Clear" />-Ereignis aus.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)">
      <summary>Löst das <see langword="Insert" />-Ereignis aus.</summary>
      <param name="index">Der Index, an dem ein Element eingefügt werden soll.</param>
      <param name="value">Das einzufügende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)">
      <summary>Löst das <see langword="Remove" />-Ereignis aus.</summary>
      <param name="index">Der Index, an dem das Element entfernt werden soll.</param>
      <param name="value">Das zu entfernende Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Löst das <see langword="Set" />-Ereignis aus.</summary>
      <param name="index">Der Index, an dem das Element festgelegt werden soll.</param>
      <param name="oldValue">Das alte Objekt.</param>
      <param name="newValue">Das neue Objekt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)">
      <summary>Löst das <see langword="Validate" />-Ereignis aus.</summary>
      <param name="value">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)">
      <summary>Entfernt den angegebenen <see cref="T:System.ComponentModel.Design.DesignerVerb" /> aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerVerbCollection.Item(System.Int32)">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
      <param name="index">Der Index, an dem das <see cref="T:System.ComponentModel.Design.DesignerVerb" /> abgerufen oder festgelegt werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.Design.DesignerVerb" /> an jedem gültigen Index in der Auflistung.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesigntimeLicenseContext">
      <summary>Stellt einen Entwurfszeit-Lizenzkontext für die Unterstützung eines Lizenzgebers zur Entwurfszeit dar.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesigntimeLicenseContext" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <summary>Ruft einen gespeicherten Lizenzschlüssel ab.</summary>
      <param name="type">Der Typ des Lizenzschlüssels.</param>
      <param name="resourceAssembly">Die Assembly, von der der Schlüssel abzurufen ist.</param>
      <returns>Der gespeicherte Lizenzschlüssel, der mit dem angegebenen Typ übereinstimmt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <summary>Legt einen gespeicherten Lizenzschlüssel fest.</summary>
      <param name="type">Der Typ des Lizenzschlüssels.</param>
      <param name="key">Der Lizenzschlüssel.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesigntimeLicenseContext.UsageMode">
      <summary>Ruft den Modus der Lizenzverwendung ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.LicenseUsageMode" />-Enumeration, die den Lizenzmodus des Kontexts angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer">
      <summary>Ermöglicht eine Unterstützung für die Serialisierung des Entwurfszeit-Lizenzkontexts.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)">
      <summary>Serialisiert die Lizenzen innerhalb des angegebenen Entwurfszeit-Lizenzkontexts mithilfe des angegebenen Schlüssels und Ausgabestreams.</summary>
      <param name="o">Der Stream für die Ausgabe.</param>
      <param name="cryptoKey">Der bei der Verschlüsselung zu verwendende Schlüssel.</param>
      <param name="context">Ein <see cref="T:System.ComponentModel.Design.DesigntimeLicenseContext" />, der den Lizenzkontext angibt.</param>
    </member>
    <member name="T:System.ComponentModel.Design.HelpContextType">
      <summary>Definiert Bezeichner, die Informationen über den Kontext liefern, aus dem eine Hilfeanforderung stammt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Ambient">
      <summary>Ein allgemeiner Kontext.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Selection">
      <summary>Eine Auswahl.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.ToolWindowSelection">
      <summary>Eine Auswahl in einem Toolfenster.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpContextType.Window">
      <summary>Ein Fenster.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.HelpKeywordAttribute">
      <summary>Gibt das Kontextschlüsselwort für eine Klasse oder ein Element an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordAttribute.Default">
      <summary>Stellt den Standardwert für <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> dar. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />-Klasse.</summary>
      <param name="keyword">Der Wert des Hilfeschlüsselworts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />-Klasse für den angegebenen Typ.</summary>
      <param name="t">Der Typ, von dem das Hilfeschlüsselwort übernommen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.Equals(System.Object)">
      <summary>Stellt fest, ob zwei <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />-Instanzen gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />, das mit dem aktuellen <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.IsDefaultAttribute">
      <summary>Bestimmt, ob das Hilfeschlüsselwort <see langword="null" /> lautet.</summary>
      <returns>
        <see langword="true" />, wenn das Hilfeschlüsselwort <see langword="null" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.HelpKeywordAttribute.HelpKeyword">
      <summary>Ruft das von diesem Attribut angegebene Hilfeschlüsselwort ab.</summary>
      <returns>Das von diesem Attribut angegebene Hilfeschlüsselwort.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.HelpKeywordType">
      <summary>Definiert Bezeichner, die den Typ eines Hilfestichwortes angeben.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.F1Keyword">
      <summary>Ein Schlüsselwort, für das durch Drücken von F1 Hilfe angefordert wurde.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.FilterKeyword">
      <summary>Ein Filterschlüsselwort.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.HelpKeywordType.GeneralKeyword">
      <summary>Ein allgemeines Schlüsselwort.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentChangeService">
      <summary>Bietet eine Schnittstelle zum Hinzufügen und Entfernen von Handlern für Ereignisse, die Komponenten hinzufügen, ändern, entfernen oder umbenennen, sowie Methoden zum Auslösen eines <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignisses oder eines <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignisses.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
      <summary>Tritt ein, wenn eine Komponente hinzugefügt wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
      <summary>Tritt während des Hinzufügens einer Komponente ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
      <summary>Tritt ein, wenn eine Komponente geändert wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
      <summary>Tritt während der Änderung einer Komponente ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
      <summary>Tritt ein, wenn eine Komponente entfernt wurde.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
      <summary>Tritt während des Entfernens einer Komponente ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
      <summary>Tritt beim Umbenennen einer Komponente ein.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Teilt dem Komponentenänderungsdienst mit, dass eine bestimmte Komponente geändert wurde.</summary>
      <param name="component">Die Komponente, die geändert wurde.</param>
      <param name="member">Der Member, der geändert wurde. Der Wert ist <see langword="null" />, wenn sich die Änderung nicht auf einen einzelnen Member bezieht.</param>
      <param name="oldValue">Der alte Wert des Members. Dieser ist nur gültig, wenn der Member nicht <see langword="null" /> ist.</param>
      <param name="newValue">Der neue Wert des Members. Dieser ist nur gültig, wenn der Member nicht <see langword="null" /> ist.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Teilt dem Komponentenänderungsdienst mit, dass eine bestimmte Komponente gerade geändert wird.</summary>
      <param name="component">Die Komponente, die gerade geändert wird.</param>
      <param name="member">Der Member, der gerade geändert wird. Der Wert ist <see langword="null" />, wenn sich die Änderung nicht auf einen einzelnen Member bezieht.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDiscoveryService">
      <summary>Ermöglicht die Enumeration von Komponenten zur Entwurfszeit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Ruft die Liste der verfügbaren Komponententypen ab.</summary>
      <param name="designerHost">Der Designerhost, der Entwurfszeitdienste bereitstellt. Kann <see langword="null" /> sein.</param>
      <param name="baseType">Der Basistyp, der die abzurufenden Komponenten angibt. Kann <see langword="null" /> sein.</param>
      <returns>Die Liste der verfügbaren Komponententypen.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentInitializer">
      <summary>Stellt während der Komponentenerstellung einen Satz empfohlener Standardwerte bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Stellt eine Instanz einer Komponente im Standardzustand wieder her.</summary>
      <param name="defaultValues">Ein Wörterbuch der Standardeigenschaftswerte in Form von Name-Wert-Paaren, mit denen der Zustand der Komponente zurückgesetzt wird.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initialisiert mithilfe eines Satzes empfohlener Werte eine neue Komponente.</summary>
      <param name="defaultValues">Ein Wörterbuch der Standardeigenschaftswerte in Form von Name-Wert-Paaren, mit denen der Zustand der Komponente initialisiert wird.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesigner">
      <summary>Stellt das grundlegende Framework für das Erstellen eines benutzerdefinierten Designers bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <summary>Führt die Standardaktion für diesen Designer durch.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initialisiert den Designer mit der angegebenen Komponente.</summary>
      <param name="component">Die Komponente, die diesem Designer zugeordnet werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IDesigner.Component">
      <summary>Ruft die von diesem Designer entworfene Basiskomponente ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.IComponent" />, die die von diesem Designer entworfene Basiskomponente angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesigner.Verbs">
      <summary>Ruft eine Auflistung der Entwurfszeitverben ab, die vom Designer unterstützt werden.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> mit den Verben, die vom Designer unterstützt werden, oder <see langword="null" />, wenn die Komponente keine Verben besitzt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerEventService">
      <summary>Stellt Ereignisbenachrichtungen bereit, wenn Stammdesigner hinzugefügt und entfernt werden und wenn eine ausgewählte Komponente oder der aktuelle Stammdesigner geändert werden.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged">
      <summary>Tritt ein, wenn sich der aktuelle Stammdesigner ändert.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated">
      <summary>Tritt beim Erstellen eines Stammdesigners ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed">
      <summary>Tritt ein, wenn ein Stammdesigner für ein Dokument freigegeben wird.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerEventService.SelectionChanged">
      <summary>Tritt ein, wenn die aktuelle Auswahl für die Entwurfsansicht geändert wird.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner">
      <summary>Ruft den Stammdesigner für das aktuell aktive Dokument ab.</summary>
      <returns>Das gegenwärtig aktive Dokument oder <see langword="null" />, wenn kein aktives Dokument vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerEventService.Designers">
      <summary>Ruft eine Auflistung von Stammdesignern für Entwurfsdokumente ab, die in der Entwicklungsumgebung zur Zeit aktiv sind.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.Design.DesignerCollection" />, die die Stammdesigner enthält, die erstellt und noch nicht freigegeben wurden.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerFilter">
      <summary>Stellt eine Schnittstelle bereit, die einem Designer den Zugriff auf und das Filtern von Wörterbüchern eines <see cref="T:System.ComponentModel.TypeDescriptor" /> ermöglicht, der Eigenschafts-, Attribut- und Ereignisdeskriptoren enthält, die ein Komponenten-Designer für die Entwurfszeitumgebung verfügbar machen kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Attributgruppe zu ändern oder zu entfernen.</summary>
      <param name="attributes">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Ermöglicht einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Menge von Ereignissen zu ändern oder daraus entfernen.</summary>
      <param name="events">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Ermöglicht einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Menge von Eigenschaften zu ändern oder daraus entfernen.</summary>
      <param name="properties">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse den über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Attributen Elemente hinzuzufügen.</summary>
      <param name="attributes">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Gruppe von Ereignissen Elemente hinzuzufügen.</summary>
      <param name="events">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Gruppe von Eigenschaften Elemente hinzuzufügen.</summary>
      <param name="properties">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerHost">
      <summary>Stellt eine Schnittstelle zum Verwalten von Designertransaktionen und Komponenten bereit.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.Activated">
      <summary>Tritt beim Aktivieren dieses Designers ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
      <summary>Tritt beim Deaktivieren dieses Designers ein.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
      <summary>Tritt ein, wenn dieser Designer sein Dokument lädt.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
      <summary>Fügt einen Ereignishandler für das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />-Ereignis hinzu.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
      <summary>Fügt einen Ereignishandler für das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />-Ereignis hinzu.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
      <summary>Fügt einen Ereignishandler für das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />-Ereignis hinzu.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
      <summary>Fügt einen Ereignishandler für das <see cref="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />-Ereignis hinzu.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.Activate">
      <summary>Aktiviert den Designer auf diesem Host.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
      <summary>Erstellt eine Komponente des angegebenen Typs und fügt diese dem Entwurfsdokument hinzu.</summary>
      <param name="componentClass">Der Typ der zu erstellenden Komponente.</param>
      <returns>Die neu erstellte Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
      <summary>Erstellt eine Komponente des angegebenen Typs und Namens und fügt diese dem Entwurfsdokument hinzu.</summary>
      <param name="componentClass">Der Typ der zu erstellenden Komponente.</param>
      <param name="name">Der Name für die Komponente.</param>
      <returns>Die neu erstellte Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
      <summary>Erstellt eine <see cref="T:System.ComponentModel.Design.DesignerTransaction" />, die Ereignissequenzen kapseln kann, um dadurch die Leistung zu erhöhen und die Unterstützungsfunktionen von Aktionen zum Rückgängigmachen und Wiederherstellen zu aktivieren.</summary>
      <returns>Eine neue Instanz von <see cref="T:System.ComponentModel.Design.DesignerTransaction" />. Nach Abschluss aller Transaktionsschritte müssen Sie für dieses Objekt <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> aufrufen.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
      <summary>Erstellt eine <see cref="T:System.ComponentModel.Design.DesignerTransaction" />, die Ereignissequenzen unter Verwendung der angegebenen Transaktionsbeschreibung kapseln kann, um die Leistung zu erhöhen und um die Unterstützungsfunktionen für Aktionen zum Rückgängigmachen und Wiederherstellen zu aktivieren.</summary>
      <param name="description">Ein Titel oder eine Beschreibung für die neu erstellte Transaktion.</param>
      <returns>Ein neuer <see cref="T:System.ComponentModel.Design.DesignerTransaction" />. Nach Abschluss aller Transaktionsschritte müssen Sie für dieses Objekt <see cref="M:System.ComponentModel.Design.DesignerTransaction.Commit" /> aufrufen.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
      <summary>Zerstört die angegebene Komponente und entfernt sie aus dem Designercontainer.</summary>
      <param name="component">Die Komponente, die zerstört werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
      <summary>Ruft die Designerinstanz ab, die die angegebene Komponente enthält.</summary>
      <param name="component">Die <see cref="T:System.ComponentModel.IComponent" />, für die der Designer abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.Design.IDesigner" /> oder <see langword="null" />, wenn für die angegebene Komponente kein Designer vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
      <summary>Ruft eine Instanz des angegebenen voll gekennzeichneten Typnamens ab.</summary>
      <param name="typeName">Der Name des zu ladenden Typs.</param>
      <returns>Das Typobjekt für den angegebenen Typnamen oder <see langword="null" />, wenn der Typ nicht gefunden werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.Container">
      <summary>Ruft den Container für diesen Designerhost ab.</summary>
      <returns>Der <see cref="T:System.ComponentModel.IContainer" /> für diesen Host.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
      <summary>Ruft einen Wert ab, der angibt, ob sich der Designerhost gegenwärtig in einer Transaktion befindet.</summary>
      <returns>
        <see langword="true" />, wenn gegenwärtig eine Transaktion ausgeführt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.Loading">
      <summary>Ruft einen Wert ab, der angibt, ob der Designerhost gegenwärtig das Dokument lädt.</summary>
      <returns>
        <see langword="true" />, wenn der Designerhost gegenwärtig das Dokument lädt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
      <summary>Ruft die Instanz der Basisklasse ab, die als Stammkomponente für den aktuellen Entwurf verwendet wird.</summary>
      <returns>Die Instanz der Stammkomponentenklasse.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
      <summary>Ruft den voll gekennzeichneten Namen der Klasse ab, die entworfen wird.</summary>
      <returns>Der voll gekennzeichnete Name der Basiskomponentenklasse.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
      <summary>Ruft die Beschreibung der aktuellen Transaktion ab.</summary>
      <returns>Eine Beschreibung der aktuellen Transaktion.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerHostTransactionState">
      <summary>Gibt Methoden an, mit denen der Designerhost den Zustand von Transaktionen melden kann.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction">
      <summary>Ruft einen Wert ab, der angibt, ob der Designerhost gegenwärtig eine Transaktion beendet.</summary>
      <returns>
        <see langword="true" />, wenn der Designer gegenwärtig eine Transaktion beendet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignerOptionService">
      <summary>Ermöglicht den Zugriff auf die Designeroptionen, die sich in der Visual Studio-Entwicklungsumgebung im Menü Extras unter dem Befehl Optionen befinden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)">
      <summary>Ruft den Wert der angegebenen Windows Forms-Designer-Option ab.</summary>
      <param name="pageName">Der Name der Seite, die die Option definiert.</param>
      <param name="valueName">Der Name der Optionseigenschaft.</param>
      <returns>Der Wert der angegebenen Option.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)">
      <summary>Legt den Wert der angegebenen Windows Forms-Designer-Option fest.</summary>
      <param name="pageName">Der Name der Seite, die die Option definiert.</param>
      <param name="valueName">Der Name der Optionseigenschaft.</param>
      <param name="value">Der neue Wert.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDictionaryService">
      <summary>Stellt über einen Dienst, mit dem ein Designer benutzerdefinierte Daten speichern kann, ein einfaches, komponentensitespezifisches Wörterbuch mit Schlüssel-Wert-Paaren bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.GetKey(System.Object)">
      <summary>Ruft den Schlüssel ab, der dem angegebenen Wert entspricht.</summary>
      <param name="value">Der Wert, nach dem im Wörterbuch gesucht werden soll.</param>
      <returns>Der zugeordnete Schlüssel oder <see langword="null" />, wenn kein Schlüssel vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.GetValue(System.Object)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel entspricht.</summary>
      <param name="key">Der Schlüssel, für den der Wert gesucht werden soll.</param>
      <returns>Der zugeordnete Wert oder <see langword="null" />, wenn kein Wert vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IDictionaryService.SetValue(System.Object,System.Object)">
      <summary>Legt das angegebene Schlüssel-Wert-Paar fest.</summary>
      <param name="key">Ein Objekt, das als Schlüssel verwendet und dem der Wert zugeordnet werden soll.</param>
      <param name="value">Der zu speichernde Wert.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IEventBindingService">
      <summary>Stellt einen Dienst zum Registrieren von Ereignishandlern für Komponentenereignisse bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Erstellt einen eindeutigen Namen einer Ereignishandlermethode für die angegebene Komponente und das angegebene Ereignis.</summary>
      <param name="component">Die Komponenteninstanz, mit dem das Ereignis verbunden ist.</param>
      <param name="e">Das Ereignis, für das ein Name erstellt werden soll.</param>
      <returns>Der empfohlene Name der Ereignishandlermethode für dieses Ereignis.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Ruft eine Auflistung von Ereignishandlermethoden ab, die über eine mit dem angegebenen Ereignis kompatible Methodensignatur verfügen.</summary>
      <param name="e">Das Ereignis, für das die kompatiblen Ereignishandlermethoden abgerufen werden sollen.</param>
      <returns>Eine Auflistung von Zeichenfolgen.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Ruft einen <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis ab, das vom angegebenen Eigenschaftenbezeichner dargestellt wird, sofern dieser ein Ereignis darstellt.</summary>
      <param name="property">Die Eigenschaft, die ein Ereignis darstellt.</param>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis, das die Eigenschaft darstellt, oder <see langword="null" />, wenn die Eigenschaft kein Ereignis darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Konvertiert eine Gruppe von Ereignisdeskriptoren in eine Gruppe von Eigenschaftenbezeichnern.</summary>
      <param name="events">Die Ereignisse, die zu Eigenschaften konvertiert werden sollen.</param>
      <returns>Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die die Ereignisgruppe beschreiben.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Konvertiert einen einzelnen Ereignisdeskriptor in einen Eigenschaftenbezeichner.</summary>
      <param name="e">Das zu konvertierende Ereignis.</param>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das Ereignis beschreibt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode">
      <summary>Zeigt den Benutzercode für den Designer an.</summary>
      <returns>
        <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Zeigt den Benutzercode für das angegebene Ereignis an.</summary>
      <param name="component">Die Komponente, mit der das Ereignis verbunden ist.</param>
      <param name="e">Das anzuzeigende Ereignis.</param>
      <returns>
        <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)">
      <summary>Zeigt den Benutzercode für den Designer in der angegebenen Zeile an.</summary>
      <param name="lineNumber">Die Nummer der Zeile, in die die Einfügemarke gesetzt werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IExtenderListService">
      <summary>Stellt eine Schnittstelle bereit, die Extenderanbieter auflisten kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderListService.GetExtenderProviders">
      <summary>Ruft die Gruppe von Extenderanbietern für die Komponente ab.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.ComponentModel.IExtenderProvider" />, das die aktiven Extenderanbieter auflistet. Wenn keine Extenderanbieter vorhanden sind, wird ein leeres Array zurückgegeben.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IExtenderProviderService">
      <summary>Stellt eine Schnittstelle zum Hinzufügen und Entfernen von Extenderanbietern zur Entwurfszeit bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <summary>Fügt den angegebenen Extenderanbieter hinzu.</summary>
      <param name="provider">Der hinzuzufügende Extenderanbieter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <summary>Entfernt den angegebenen Extenderanbieter.</summary>
      <param name="provider">Der zu entfernende Extenderanbieter.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IHelpService">
      <summary>Stellt Methoden zum Anzeigen von Hilfethemen sowie zum Hinzufügen und Entfernen von Hilfeschlüsselwörtern zur Entwurfszeit bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)">
      <summary>Fügt dem Dokument ein Kontextattribut hinzu.</summary>
      <param name="name">Der Name des hinzuzufügenden Attributs.</param>
      <param name="value">Der Wert des Attributs.</param>
      <param name="keywordType">Der Typ des Schlüsselwortes aus der <see cref="T:System.ComponentModel.Design.HelpKeywordType" />-Enumeration.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ClearContextAttributes">
      <summary>Entfernt alle vorhandenen Kontextattribute aus dem Dokument.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)">
      <summary>Erstellt einen lokalen <see cref="T:System.ComponentModel.Design.IHelpService" /> zum Verwalten von untergeordneten Kontexten.</summary>
      <param name="contextType">Der Prioritätstyp des hinzuzufügenden untergeordneten Kontexts.</param>
      <returns>Der neu erstellte <see cref="T:System.ComponentModel.Design.IHelpService" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.RemoveContextAttribute(System.String,System.String)">
      <summary>Entfernt ein zuvor hinzugefügtes Kontextattribut.</summary>
      <param name="name">Der Name des zu entfernenden Attributs.</param>
      <param name="value">Der Wert des zu entfernenden Attributs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.RemoveLocalContext(System.ComponentModel.Design.IHelpService)">
      <summary>Entfernt einen Kontext, der mit einem <see cref="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)" /> erstellt wurde.</summary>
      <param name="localContext">Der zu entfernende lokale Kontext <see cref="T:System.ComponentModel.Design.IHelpService" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ShowHelpFromKeyword(System.String)">
      <summary>Zeigt das Hilfethema an, das dem angegebenen Schlüsselwort entspricht.</summary>
      <param name="helpKeyword">Das Schlüsselwort des anzuzeigenden Hilfethemas.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IHelpService.ShowHelpFromUrl(System.String)">
      <summary>Zeigt das Hilfethema an, das der angegebenen URL entspricht.</summary>
      <param name="helpUrl">Die URL des anzuzeigenden Hilfethemas.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IInheritanceService">
      <summary>Stellt Methoden zum Bestimmen der Komponenten einer Komponente bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Durchsucht die angegebene Komponente auf Felder, die die <see cref="T:System.ComponentModel.IComponent" />-Schnittstelle implementieren, und fügt diese jeweils dem angegebenen Container hinzu, wobei die jeweilige Vererbungsebene gespeichert wird. Diese kann mithilfe der <see cref="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />-Methode abgerufen werden.</summary>
      <param name="component">Die <see cref="T:System.ComponentModel.IComponent" />, die durchsucht werden soll. Der Suchvorgang beginnt mit dieser Komponente.</param>
      <param name="container">Der <see cref="T:System.ComponentModel.IContainer" />, dem Komponenten hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Ruft das Vererbungsattribut für die angegebene Komponente ab.</summary>
      <param name="component">Die <see cref="T:System.ComponentModel.IComponent" />, für die das Vererbungsattribut abgerufen werden soll.</param>
      <returns>Eine Instanz von <see cref="T:System.ComponentModel.InheritanceAttribute" />, das die Vererbungsebene der angegebenen Komponente beschreibt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMenuCommandService">
      <summary>Stellt Methoden bereit, mit denen Sie die im Entwurfsmodus verfügbaren globalen Designerverben und Menübefehle verwalten sowie einige Typen von Kontextmenüs anzeigen können.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Fügt dem Menü den angegebenen Standardmenübefehl hinzu.</summary>
      <param name="command">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.MenuCommand" />.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.ComponentModel.Design.CommandID" /> des angegebenen <see cref="T:System.ComponentModel.Design.MenuCommand" /> ist bereits in einem Menü vorhanden.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Fügt das angegebene Designerverb der Gruppe der globalen Designerverben hinzu.</summary>
      <param name="verb">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Sucht nach der angegebenen Befehls-ID und gibt den zugeordneten Menübefehl zurück.</summary>
      <param name="commandID">Die zu suchende <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns>Der <see cref="T:System.ComponentModel.Design.MenuCommand" />, dem diese Befehls-ID zugeordnet ist, oder <see langword="null" />, wenn kein Befehl gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Ruft einen der angegebenen Befehls-ID entsprechenden Menübefehl oder Designerverbbefehl auf.</summary>
      <param name="commandID">Die <see cref="T:System.ComponentModel.Design.CommandID" /> des zu suchenden und auszuführenden Befehls.</param>
      <returns>
        <see langword="true" />, wenn der Befehl gefunden und erfolgreich aufgerufen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Entfernt den angegebenen Standardmenübefehl aus dem Menü.</summary>
      <param name="command">Das zu entfernende <see cref="T:System.ComponentModel.Design.MenuCommand" />-Element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Entfernt das angegebene Designerverb aus der Auflistung von globalen Designerverben.</summary>
      <param name="verb">Das zu entfernende <see cref="T:System.ComponentModel.Design.DesignerVerb" />-Element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Zeigt das angegebene Kontextmenü an der angegebenen Position an.</summary>
      <param name="menuID">Die <see cref="T:System.ComponentModel.Design.CommandID" /> für das anzuzeigende Kontextmenü.</param>
      <param name="x">Die x-Koordinate in Bildschirmkoordinaten, an der das Menü angezeigt werden soll.</param>
      <param name="y">Die y-Koordinate in Bildschirmkoordinaten, an der das Menü angezeigt werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IMenuCommandService.Verbs">
      <summary>Ruft eine Auflistung der aktuell verfügbaren Designerverben ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />, die die aktuell verfügbaren Designerverben enthält.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IReferenceService">
      <summary>Stellt eine Schnittstelle bereit, mit der Sie Verweise auf Objekte innerhalb eines Projekts anhand des Namens oder Typs abrufen, den Namen eines angegebenen Objekts abrufen und innerhalb eines Designerprojekts nach dem übergeordneten Element eines angegebenen Objekts suchen können.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetComponent(System.Object)">
      <summary>Ruft die Komponente ab, die die angegebene Komponente enthält.</summary>
      <param name="reference">Das Objekt, dessen übergeordnete Komponente abgerufen werden soll.</param>
      <returns>Die Basis-<see cref="T:System.ComponentModel.IComponent" />, die das angegebene Objekt enthält, oder <see langword="null" />, wenn keine übergeordnete Komponente vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetName(System.Object)">
      <summary>Ruft den Namen der angegebenen Komponente ab.</summary>
      <param name="reference">Das Objekt, dessen Name zurückgegeben werden soll.</param>
      <returns>Der Name des Objekts, auf das verwiesen wird, oder <see langword="null" />, wenn der Objektverweis nicht gültig ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReference(System.String)">
      <summary>Ruft einen Verweis auf die Komponente ab, deren Name mit dem angegebenen Namen übereinstimmt.</summary>
      <param name="name">Der Name der Komponente, an die ein Verweis zurückgegeben werden soll.</param>
      <returns>Ein Objekt, auf das der angegebene Name verweist, oder <see langword="null" />, wenn kein Verweis gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReferences">
      <summary>Ruft alle verfügbaren Verweise auf Projektkomponenten ab.</summary>
      <returns>Ein Array aller Objekte mit Verweisen, die für <see cref="T:System.ComponentModel.Design.IReferenceService" /> verfügbar sind.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)">
      <summary>Ruft alle verfügbaren Verweise auf Komponenten des angegebenen Typs ab.</summary>
      <param name="baseType">Der Typ des Objekts, für das Verweise auf dessen Instanzen zurückgegeben werden sollen.</param>
      <returns>Ein Array aller verfügbaren Objekte des angegebenen Typs.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IResourceService">
      <summary>Stellt eine Schnittstelle für Designer bereit, mit der Sie auf Ressourcenreader und -writer für bestimmte <see cref="T:System.Globalization.CultureInfo" />-Ressourcentypen zugreifen können.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IResourceService.GetResourceReader(System.Globalization.CultureInfo)">
      <summary>Sucht den Ressourcenreader für die angegebene Kultur und gibt diesen zurück.</summary>
      <param name="info">Die <see cref="T:System.Globalization.CultureInfo" /> der Ressource, für die ein Ressourcenreader abgerufen werden soll.</param>
      <returns>Eine <see cref="T:System.Resources.IResourceReader" />-Schnittstelle, die die Ressourcen für die Kultur enthält, oder <see langword="null" />, wenn keine Ressourcen für die Kultur vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IResourceService.GetResourceWriter(System.Globalization.CultureInfo)">
      <summary>Sucht den Ressourcenwriter für die angegebene Kultur und gibt diesen zurück.</summary>
      <param name="info">Die <see cref="T:System.Globalization.CultureInfo" /> der Ressource, für die ein Ressourcenwriter erstellt werden soll.</param>
      <returns>Die <see cref="T:System.Resources.IResourceWriter" />-Schnittstelle für die angegebene Kultur.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IRootDesigner">
      <summary>Unterstützt Ansichtstechnologien für Designer auf Stammebene.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Ruft ein Ansichtsobjekt für die angegebene Ansichtstechnologie ab.</summary>
      <param name="technology">Eine <see cref="T:System.ComponentModel.Design.ViewTechnology" />, die eine bestimmte Ansichtstechnologie angibt.</param>
      <exception cref="T:System.ArgumentException">Die angegebene Ansichtstechnologie wird nicht unterstützt oder ist nicht vorhanden.</exception>
      <returns>Ein Objekt, das die Ansicht für diesen Designer darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <summary>Ruft den Satz von Technologien ab, die dieser Designer für die Anzeige unterstützen kann.</summary>
      <returns>Ein Array von unterstützten <see cref="T:System.ComponentModel.Design.ViewTechnology" />-Werten.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ISelectionService">
      <summary>Stellt für einen Designer eine Schnittstelle zum Auswählen von Komponenten bereit.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.ISelectionService.SelectionChanged">
      <summary>Tritt auf, wenn sich die aktuelle Auswahl ändert.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.ISelectionService.SelectionChanging">
      <summary>Tritt ein, wenn sich die aktuelle Auswahl gerade ändert.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob die angegebene Komponente momentan ausgewählt ist.</summary>
      <param name="component">Die zu prüfende Komponente.</param>
      <returns>
        <see langword="true" />, wenn die Komponente Teil der aktuellen Auswahl des Benutzers ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.GetSelectedComponents">
      <summary>Ruft eine Auflistung der Komponenten ab, die momentan ausgewählt sind.</summary>
      <returns>Eine Auflistung, die den Satz der momentan ausgewählten Komponenten darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)">
      <summary>Wählt die angegebene Auflistung von Komponenten aus.</summary>
      <param name="components">Die Auflistung der auszuwählenden Komponenten.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)">
      <summary>Wählt in der angegebenen Komponentenauflistung die Komponenten aus, die dem angegebenen Auswahltyp entsprechen.</summary>
      <param name="components">Die Auflistung der auszuwählenden Komponenten.</param>
      <param name="selectionType">Ein Wert aus der <see cref="T:System.ComponentModel.Design.SelectionTypes" />-Enumeration. Der Standardwert ist <see cref="F:System.ComponentModel.Design.SelectionTypes.Normal" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ISelectionService.PrimarySelection">
      <summary>Ruft das Objekt ab, das gegenwärtig das primäre ausgewählte Objekt ist.</summary>
      <returns>Das Objekt, das gegenwärtig das primäre ausgewählte Objekt ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ISelectionService.SelectionCount">
      <summary>Ruft den Zähler der ausgewählten Objekte ab.</summary>
      <returns>Die Anzahl der ausgewählten Objekte.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IServiceContainer">
      <summary>Stellt einen Container für Dienste bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="callback">Ein Rückrufobjekt, das zur Diensterstellung verwendet wird. Über dieses Objekt kann ein Dienst als verfügbar deklariert werden, die Objekterstellung wird jedoch bis zur Dienstanforderung verzögert.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu und stuft den Dienst optional auf übergeordnete Dienstcontainer hoch.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="callback">Ein Rückrufobjekt, das zur Diensterstellung verwendet wird. Über dieses Objekt kann ein Dienst als verfügbar deklariert werden, die Objekterstellung wird jedoch bis zur Dienstanforderung verzögert.</param>
      <param name="promote">
        <see langword="true" />, wenn diese Anforderung auf einen beliebigen übergeordneten Dienstcontainer hochgestuft wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="serviceInstance">Eine Instanz des hinzuzufügenden Diensttyps. Eine Instanz des hinzuzufügenden Dienstes. Dabei muss es sich um ein Objekt handeln, das den mit dem <paramref name="serviceType" />-Parameter angegebenen Typ implementiert oder von diesem erbt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu und stuft den Dienst optional auf einen beliebigen übergeordneten Dienstcontainer hoch.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="serviceInstance">Eine Instanz des hinzuzufügenden Diensttyps. Eine Instanz des hinzuzufügenden Dienstes. Dabei muss es sich um ein Objekt handeln, das den mit dem <paramref name="serviceType" />-Parameter angegebenen Typ implementiert oder von diesem erbt.</param>
      <param name="promote">
        <see langword="true" />, wenn diese Anforderung auf einen beliebigen übergeordneten Dienstcontainer hochgestuft wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)">
      <summary>Entfernt den angegebenen Diensttyp aus dem Dienstcontainer.</summary>
      <param name="serviceType">Der Typ des zu entfernenden Diensts.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)">
      <summary>Entfernt den angegebenen Diensttyp aus dem Dienstcontainer und stuft den Dienst optional auf übergeordnete Dienstcontainer hoch.</summary>
      <param name="serviceType">Der Typ des zu entfernenden Diensts.</param>
      <param name="promote">
        <see langword="true" />, wenn diese Anforderung auf einen beliebigen übergeordneten Dienstcontainer hochgestuft wird, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ITreeDesigner">
      <summary>Stellt Unterstützung für das Erstellen eines Satzes verwandter, benutzerdefinierter Designer bereit.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ITreeDesigner.Children">
      <summary>Ruft eine Auflistung untergeordneter Designer ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Auflistung untergeordneter <see cref="T:System.ComponentModel.Design.IDesigner" /> des aktuellen Designers enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ITreeDesigner.Parent">
      <summary>Ruft den übergeordneten Designer ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.Design.IDesigner" />, der den übergeordneten Designer darstellt, oder <see langword="null" />, wenn kein übergeordneter Designer vorhanden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
      <summary>Stellt eine Schnittstelle bereit, mit der der Satz der Memberdeskriptoren für eine Komponente im Entwurfsmodus bearbeitet werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtert die Attribute, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="component">Die Komponente, deren Attribute gefiltert werden sollen.</param>
      <param name="attributes">Ein Attributwörterbuch, das geändert werden kann.</param>
      <returns>
        <see langword="true" />, wenn der Satz von gefilterten Attributen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine weitere Abfrage ausführen muss.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtert die Ereignisse, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="component">Die Komponente, deren Ereignisse gefiltert werden sollen.</param>
      <param name="events">Ein Ereigniswörterbuch, das geändert werden kann.</param>
      <returns>
        <see langword="true" />, wenn der Satz von gefilterten Ereignissen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>Filtert die Eigenschaften, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
      <param name="component">Die Komponente, deren Eigenschaften gefiltert werden sollen.</param>
      <param name="properties">Ein Eigenschaftenwörterbuch, das geändert werden kann.</param>
      <returns>
        <see langword="true" />, wenn der Satz von gefilterten Eigenschaften zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeDiscoveryService">
      <summary>Ermittelt zur Entwurfszeit verfügbare Typen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
      <summary>Ruft die Liste der verfügbaren Typen ab.</summary>
      <param name="baseType">Der Basistyp, mit dem eine Übereinstimmung gefunden werden soll. Kann <see langword="null" /> sein.</param>
      <param name="excludeGlobalTypes">Gibt an, ob Typen von allen Assemblys, auf die verwiesen wird, überprüft werden sollen.</param>
      <returns>Eine Auflistung der Typen, die die von <paramref name="baseType" /> und <paramref name="excludeGlobalTypes" /> angegebenen Kriterien erfüllen.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ITypeResolutionService">
      <summary>Stellt eine Schnittstelle bereit, mit der eine Assembly oder ein Typ anhand des Namens abgerufen werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
      <summary>Ruft die angeforderte Assembly ab.</summary>
      <param name="name">Der Name der abzurufenden Assembly.</param>
      <returns>Eine Instanz der angeforderten Assembly oder <see langword="null" />, falls keine Assembly gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
      <summary>Ruft die angeforderte Assembly ab.</summary>
      <param name="name">Der Name der abzurufenden Assembly.</param>
      <param name="throwOnError">
        <see langword="true" />, wenn diese Methode eine Ausnahme auslösen soll, falls die Assembly nicht gefunden werden kann, andernfalls <see langword="false" />, und die Methode gibt <see langword="null" /> zurück, falls die Assembly nicht gefunden werden kann.</param>
      <returns>Eine Instanz der angeforderten Assembly oder <see langword="null" />, falls keine Assembly gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
      <summary>Ruft den Pfad der Datei ab, aus der die Assembly geladen wurde.</summary>
      <param name="name">Der Name der Assembly.</param>
      <returns>Der Pfad der Datei, aus der die Assembly geladen wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
      <summary>Lädt einen Typ mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Typs. Wenn der Typname nicht voll gekennzeichnet ist und keine Assembly angibt, durchsucht dieser Dienst seinen internen Satz von Assemblys nach den Assemblys, auf die Verweise vorhanden sind.</param>
      <returns>Eine Instanz von <see cref="T:System.Type" />, die mit dem angegebenen Namen übereinstimmt, oder <see langword="null" />, falls kein Typ gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
      <summary>Lädt einen Typ mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Typs. Wenn der Typname nicht voll gekennzeichnet ist und keine Assembly angibt, durchsucht dieser Dienst seinen internen Satz von Assemblys nach den Assemblys, auf die Verweise vorhanden sind.</param>
      <param name="throwOnError">
        <see langword="true" />, wenn diese Methode eine Ausnahme auslösen soll, falls die Assembly nicht gefunden werden kann, andernfalls <see langword="false" />, und die Methode gibt <see langword="null" /> zurück, falls die Assembly nicht gefunden werden kann.</param>
      <returns>Eine Instanz von <see cref="T:System.Type" />, die mit dem angegebenen Namen übereinstimmt, oder <see langword="null" />, falls kein Typ gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
      <summary>Lädt einen Typ mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Typs. Wenn der Typname nicht voll gekennzeichnet ist und keine Assembly angibt, durchsucht dieser Dienst seinen internen Satz von Assemblys nach den Assemblys, auf die Verweise vorhanden sind.</param>
      <param name="throwOnError">
        <see langword="true" />, wenn diese Methode eine Ausnahme auslösen soll, falls die Assembly nicht gefunden werden kann, andernfalls <see langword="false" />, und die Methode gibt <see langword="null" /> zurück, falls die Assembly nicht gefunden werden kann.</param>
      <param name="ignoreCase">
        <see langword="true" />, um die Groß- und Kleinschreibung bei der Suche nach Typen zu ignorieren, andernfalls <see langword="false" />.</param>
      <returns>Eine Instanz von <see cref="T:System.Type" />, die mit dem angegebenen Namen übereinstimmt, oder <see langword="null" />, falls kein Typ gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
      <summary>Fügt einen Verweis auf die angegebene Assembly hinzu.</summary>
      <param name="name">Ein <see cref="T:System.Reflection.AssemblyName" />, der die Assembly angibt, auf die verwiesen werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommand">
      <summary>Stellt einen Befehl in einem Windows-Menü oder auf einer Windows-Symbolleiste dar.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
      <summary>Tritt bei einer Änderung des Menübefehls ein.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.MenuCommand" />-Klasse.</summary>
      <param name="handler">Das Ereignis, das ausgelöst werden soll, wenn der Benutzer den Menübefehl oder die Symbolleisten-Schaltfläche auswählt.</param>
      <param name="command">Die eindeutige Befehls-ID, durch die dieser Menübefehl mit dem Umgebungsmenü verknüpft ist.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.Invoke">
      <summary>Ruft den Befehl auf.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
      <summary>Ruft den Befehl mit dem angegebenen Parameter auf.</summary>
      <param name="arg">Ein optionales Argument für die Verwendung durch den Befehl.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
      <summary>Löst das <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommand.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung dieses Menübefehls zurück.</summary>
      <returns>Eine Zeichenfolge, die den Wert der <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" />-Eigenschaft enthält, auf die die Namen sämtlicher festgelegter Flags folgen, die getrennt sind durch das Symbol (| Zu diesen Flageigenschaften gehören <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /> und <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Checked">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Menüelement aktiviert ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.CommandID">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse ab, die diesem Menübefehl zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse, die dem Menübefehl zugeordnet ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Enabled">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Menüelement verfügbar ist.</summary>
      <returns>
        <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.OleStatus">
      <summary>Ruft den OLE-Befehlsstatus für dieses Menüelement ab.</summary>
      <returns>Eine ganze Zahl, die eine Kombination von Statusflags enthält, die den Zustand dieses Menübefehls wiedergeben.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Properties">
      <summary>Ruft die öffentlichen Eigenschaften ab, die der <see cref="T:System.ComponentModel.Design.MenuCommand" />-Klasse zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Collections.IDictionary" />-Schnittstelle mit den öffentlichen Eigenschaften der <see cref="T:System.ComponentModel.Design.MenuCommand" />-Klasse.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Supported">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Menüelement unterstützt wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Element unterstützt wird (Standardeinstellung), andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommand.Visible">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Menüelement sichtbar ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Element sichtbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.SelectionTypes">
      <summary>Definiert Bezeichner, die den Typ einer Auswahl angeben.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Add">
      <summary>Stellt eine hinzuzufügende Auswahl dar, die die ausgewählten Komponenten der aktuellen Auswahl hinzufügt, wobei die aktuelle Gruppe ausgewählter Komponenten beibehalten wird.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Auto">
      <summary>Stellt eine normale Auswahl dar. Der Auswahldienst reagiert auf die STRG-TASTE und die UMSCHALTTASTE, um das Hinzufügen von Komponenten zur Auswahl oder das Entfernen von Komponenten aus der Auswahl zu unterstützen.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Click">
      <summary>Stellt eine Auswahl dar, die eintritt, wenn ein Benutzer auf eine Komponente klickt. Wenn die entprechende Komponente bereits ausgewählt ist, wird die Auswahl nicht abgebrochen, sondern die Komponente wird zur primären ausgewählten Komponente.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.MouseDown">
      <summary>Stellt eine Auswahl dar, die eintritt, wenn ein Benutzer die Maustaste drückt, während sich der Mauszeiger über einer Komponente befindet. Wenn die entprechende Komponente bereits ausgewählt ist, wird die Auswahl nicht abgebrochen, sondern die Komponente wird zur primären ausgewählten Komponente.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.MouseUp">
      <summary>Stellt eine Auswahl dar, die eintritt, wenn der Benutzer die Maustaste unmittelbar nach dem Auswählen einer Komponente loslässt. Wenn die entprechende Komponente bereits ausgewählt ist, wird die Auswahl nicht abgebrochen, sondern die Komponente wird zur primären ausgewählten Komponente.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Normal">
      <summary>Stellt eine normale Auswahl dar. Der Auswahldienst reagiert auf die STRG-TASTE und die UMSCHALTTASTE, um das Hinzufügen von Komponenten zur Auswahl oder das Entfernen von Komponenten aus der Auswahl zu unterstützen.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Primary">
      <summary>Stellt eine primäre Auswahl dar, die eintritt, wenn ein Benutzer auf eine Komponente klickt. Wenn in der Auswahlliste bereits eine Komponente ausgewählt ist, wird die Komponente zur primären Auswahl.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Remove">
      <summary>Stellt eine zu entfernende Auswahl dar, die die ausgewählten Komponenten aus der aktuellen Auswahl entfernt, wobei die aktuelle Gruppe ausgewählter Komponenten beibehalten wird.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Replace">
      <summary>Stellt eine Auswahl dar, die eintritt, wenn der Inhalt einer Auswahl ersetzt wird. Der Auswahldienst ersetzt die aktuelle Auswahl durch die Ersetzung.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Toggle">
      <summary>Stellt eine wechselweise Auswahl dar, die zwischen der aktuellen Auswahl und der bereitgestellten Auswahl wechselt. Wenn eine Komponente bereits ausgewählt ist und mit dem Auswahltyp <see cref="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents" /> an <see cref="F:System.ComponentModel.Design.SelectionTypes.Toggle" /> übergeben wird, wird die Komponentenauswahl abgebrochen.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.SelectionTypes.Valid">
      <summary>Kennzeichnet die gültigen Auswahltypen wie <see cref="F:System.ComponentModel.Design.SelectionTypes.Normal" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.Replace" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.MouseDown" />, <see cref="F:System.ComponentModel.Design.SelectionTypes.MouseUp" /> oder <see cref="F:System.ComponentModel.Design.SelectionTypes.Click" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ComponentSerializationService">
      <summary>Stellt die Basisklasse bereit, mit der ein Satz von Komponenten oder serialisierbaren Objekten in einen Serialisierungsspeicher serialisiert werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore">
      <summary>Erstellt einen neuen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>Ein neuer erstellter Serialisierungsspeicher.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Deserialisiert den angegebenen Speicher, um eine Auflistung von Objekten zu erstellen.</summary>
      <param name="store">Die zu deserialisierende <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> enthält keine Daten in einem Format, das der Serialisierungscontainer verarbeiten kann.</exception>
      <returns>Eine Auflistung von Objekten, die auf der Grundlage des gespeicherten Zustands erstellt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserialisiert den angegebenen Speicher und füllt den angegebenen <see cref="T:System.ComponentModel.IContainer" /> mit deserialisierten <see cref="T:System.ComponentModel.IComponent" />-Objekten.</summary>
      <param name="store">Die zu deserialisierende <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <param name="container">Der <see cref="T:System.ComponentModel.IContainer" />, dem die <see cref="T:System.ComponentModel.IComponent" />-Objekte hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> enthält keine Daten in einem Format, das der Serialisierungscontainer verarbeiten kann.</exception>
      <returns>Eine Auflistung von Objekten, die auf der Grundlage des gespeicherten Zustands erstellt wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserialisiert den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in den angegebenen Container.</summary>
      <param name="store">Die zu deserialisierende <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <param name="container">Der Container, dem die <see cref="T:System.ComponentModel.IComponent" />-Objekte hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> enthält keine Daten in einem Format, das der Serialisierungscontainer verarbeiten kann.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)">
      <summary>Deserialisiert den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in den angegebenen Container und überprüft optional wiederverwendete Typen.</summary>
      <param name="store">Die zu deserialisierende <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <param name="container">Der Container, dem die <see cref="T:System.ComponentModel.IComponent" />-Objekte hinzugefügt werden.</param>
      <param name="validateRecycledTypes">
        <see langword="true" />, um zu gewährleisten, dass die Deserialisierung nur dann ausgeführt wird, wenn sie auf ein Objekt desselben Typs angewendet wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> enthält keine Daten in einem Format, das der Serialisierungscontainer verarbeiten kann.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Deserialisiert den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in den angegebenen Container und wendet optional Standardeigenschaftswerte an.</summary>
      <param name="store">Die zu deserialisierende <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <param name="container">Der Container, dem die <see cref="T:System.ComponentModel.IComponent" />-Objekte hinzugefügt werden.</param>
      <param name="validateRecycledTypes">
        <see langword="true" />, um zu gewährleisten, dass die Deserialisierung nur dann ausgeführt wird, wenn sie auf ein Objekt desselben Typs angewendet wird.</param>
      <param name="applyDefaults">
        <see langword="true" />, um anzugeben, dass die Standardeigenschaftswerte angewendet werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="container" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> enthält keine Daten in einem Format, das der Serialisierungscontainer verarbeiten kann.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Lädt <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> aus einem Stream.</summary>
      <param name="stream">Der <see cref="T:System.IO.Stream" />, aus dem der Speicher geladen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="stream" /> enthält keine Daten, die bei einem vorherigen Aufruf von <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" /> gespeichert wurden.</exception>
      <returns>Eine neue <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />-Instanz.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serialisiert das angegebene Objekt in den angegebenen <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, in den der Zustand von <paramref name="value" /> geschrieben wird.</param>
      <param name="value">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serialisiert das angegebene Objekt unter Berücksichtigung von Standardeigenschaftswerten.</summary>
      <param name="store">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, in den der Zustand von <paramref name="value" /> serialisiert wird.</param>
      <param name="value">Das zu serialisierende Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serialisiert den angegebenen Member für das angegebene Objekt.</summary>
      <param name="store">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, in den der Zustand von <paramref name="member" /> serialisiert wird.</param>
      <param name="owningObject">Das Objekt, an das <paramref name="member" /> angefügt ist.</param>
      <param name="member">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den zu serialisierenden Member angibt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serialisiert den angegebenen Member für das angegebene Objekt unter Berücksichtigung des Standardeigenschaftswerts.</summary>
      <param name="store">Der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />, in den der Zustand von <paramref name="member" /> serialisiert wird.</param>
      <param name="owningObject">Das Objekt, an das <paramref name="member" /> angefügt ist.</param>
      <param name="member">Der zu serialisierende Member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> wird geschlossen, oder <paramref name="store" /> ist kein unterstützter Typ des Serialisierungsspeichers. Verwenden Sie einen von <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> zurückgegebenen Speicher.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ContextStack">
      <summary>Stellt ein Stapelobjekt zur Verfügung, das von einem Serialisierungsprogramm verwendet werden kann, um geschachtelten Serialisierungsprogrammen Informationen zur Verfügung zu stellen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
      <summary>Hängt ein Objekt an das Ende des Stapels an, anstatt es auf der obersten Ebene des Stapels abzulegen.</summary>
      <param name="context">Ein Kontextobjekt, das an den Stapel angehängt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Pop">
      <summary>Entfernt das aktuelle Objekt vom Stapel und gibt seinen Wert zurück.</summary>
      <returns>Das aus dem Stapel entfernte Objekt; <see langword="null" />, wenn keine Objekte auf dem Stapel vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
      <summary>Legt das angegebene Objekt auf dem Stapel ab.</summary>
      <param name="context">Das Kontextobjekt, das auf dem Stapel abgelegt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Current">
      <summary>Ruft das aktuelle Objekt auf dem Stapel ab.</summary>
      <returns>Das aktuelle Objekt auf dem Stapel oder <see langword="null" />, wenn keine Objekte abgelegt wurden.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)">
      <summary>Ruft das Objekt im Stapel auf der angegebenen Ebene ab.</summary>
      <param name="level">Die Ebene des abzurufenden Objekts im Stapel. Ebene 0 (null) ist die oberste Ebene des Stapels, darauf folgt Ebene 1, usw. Diese Ebene muss 0 (null) oder größer sein. Wenn die Ebene größer als die Anzahl der Ebenen im Stapel ist, wird <see langword="null" /> zurückgegeben.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="level" /> ist kleiner als 0.</exception>
      <returns>Das Objekt im Stapel auf der angegebenen Ebene oder <see langword="null" />, wenn kein Objekt auf dieser Ebene vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
      <summary>Ruft das erste Objekt auf dem Stapel ab, das vom angegebenen Typ erbt oder diesen implementiert.</summary>
      <param name="type">Ein Typ, der vom Kontextstapel abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <returns>Das erste Objekt auf dem Stapel, das von dem angegebenen Typ erbt oder diesen implementiert, oder <see langword="null" />, wenn kein Objekt im Stapel den Typ implementiert.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute">
      <summary>Das <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" />-Attribut wird in einem Serialisierungsprogramm platziert, um die Klasse anzugeben, die für diesen Serialisierungsprogrammtyp als Standardanbieter verwendet werden soll.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" />-Klasse mit dem benannten Anbietertyp.</summary>
      <param name="providerTypeName">Der Name des Serialisierungsanbietertyps.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerTypeName" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute" />-Klasse mit dem angegebenen Anbietertyp.</summary>
      <param name="providerType">Der <see cref="T:System.Type" /> des Serialisierungsanbieters.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.ProviderTypeName">
      <summary>Ruft den Typnamen des Serialisierungsanbieters ab.</summary>
      <returns>Eine Zeichenfolge mit dem Namen des Anbieters.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerLoader">
      <summary>Stellt eine grundlegende Schnittstelle für ein Designerladeprogramm bereit, mit der ein benutzerdefiniertes Designerladeprogramm implementiert werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Startet mit dem Laden eines Designers.</summary>
      <param name="host">Der Ladeprogrammhost, über den dieses Ladeprogramm Komponenten lädt.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
      <summary>Gibt alle vom <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
      <summary>Schreibt zwischengespeicherte Änderungen an den Speicherort, von dem aus der Designer geladen wurde.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
      <summary>Ruft einen Wert ab, der angibt, ob das Ladeprogramm gegenwärtig ein Dokument lädt.</summary>
      <returns>
        <see langword="true" />, wenn das Ladeprogramm gegenwärtig ein Dokument lädt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost">
      <summary>Stellt eine Schnittstelle bereit, die einen Designerhost erweitern kann, um das Laden aus einem serialisierten Zustand zu unterstützen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad(System.String,System.Boolean,System.Collections.ICollection)">
      <summary>Beendet den Ladevorgang des Designers.</summary>
      <param name="baseClassName">Der voll gekennzeichnete Name der Basisklasse des Dokuments, das von dieser Designerklasse entworfen wird.</param>
      <param name="successful">
        <see langword="true" />, wenn der Designer erfolgreich geladen wurde, andernfalls <see langword="false" />.</param>
      <param name="errorCollection">Eine Auflistung, die, wenn zutreffend, die während des Ladevorgangs aufgetretenen Fehler enthält. Wenn keine Fehler aufgetreten sind, übergeben Sie eine leere Auflistung oder <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.Reload">
      <summary>Lädt das Entwurfsdokument erneut.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2">
      <summary>Stellt eine Schnittstelle bereit, die <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> erweitert, um anzugeben, ob während des Ladens eines Entwurfsdokuments Fehler toleriert werden.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.CanReloadWithErrors">
      <summary>Ruft einen Wert ab, der angibt, ob das erneute Laden mit Fehlern möglich ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Designerladeprogramm das Entwurfsdokument erneut laden kann, wenn Fehler auftreten, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2.IgnoreErrorsDuringReload">
      <summary>Ruft ab einen Wert ab, der angibt, ob beim Aufruf von <see cref="M:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.Reload" /> Fehler ignoriert werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das Designerladeprogramm beim erneuten Laden Fehler ignoriert, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService">
      <summary>Stellt eine Schnittstelle bereit, die ein Designerladeprogramm erweitern kann, um das asynchrone Laden externer Komponenten zu unterstützen.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <summary>Registriert eine externe Komponente als Teil des Ladeprozesses, der von dieser Schnittstelle verwaltet wird.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Signalisiert, dass ein abhängiger Ladevorgang beendet wurde.</summary>
      <param name="successful">
        <see langword="true" />, wenn das Laden des Designers erfolgreich war, <see langword="false" />, wenn der Ladevorgang aufgrund von Fehlern nicht beendet werden konnte.</param>
      <param name="errorCollection">Eine Auflistung, die, wenn zutreffend, die während des Ladevorgangs aufgetretenen Fehler enthält. Wenn keine Fehler aufgetreten sind, übergeben Sie eine leere Auflistung oder <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <summary>Lädt das Entwurfsdokument erneut.</summary>
      <returns>
        <see langword="true" />, wenn die Anforderung nach einem erneuten Ladevorgang akzeptiert wird, oder <see langword="false" />, wenn das Ladeprogramm den erneuten Ladevorgang nicht zulässt.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
      <summary>Stellt eine Schnittstelle bereit, mit der die Serialisierung zur Entwurfszeit verwaltet werden kann.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <summary>Tritt ein, wenn <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> den angegebenen Namen in der Namenstabelle des Serialisierungs-Managers nicht finden kann.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <summary>Tritt ein, wenn die Serialisierung abgeschlossen ist.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Fügt dem Serialisierungs-Manager den angegebenen Serialisierungsprovider hinzu.</summary>
      <param name="provider">Der hinzuzufügende Serialisierungsprovider.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Erstellt eine Instanz des angegebenen Typs und fügt sie einer Auflistung benannter Instanzen hinzu.</summary>
      <param name="type">Der zu erstellende Datentyp.</param>
      <param name="arguments">Die an den Konstruktor für diesen Typ zu übergebenden Argumente.</param>
      <param name="name">Der Name des Objekts. Mit diesem Namen kann später über <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> auf das Objekt zugegriffen werden. Wenn <see langword="null" /> übergeben wird, dann wird das Objekt dennoch erstellt, jedoch kann darauf nicht über den Namen zugegriffen werden.</param>
      <param name="addToContainer">Wird <see langword="true" /> übergeben, dann wird dieses Objekt dem Entwurfscontainer hinzugefügt. Dies wirkt sich nur dann aus, wenn das Objekt <see cref="T:System.ComponentModel.IComponent" /> implementiert.</param>
      <returns>Die neu erstellte Objektinstanz.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)">
      <summary>Ruft eine Instanz eines erstellten Objekts mit dem angegebenen Namen ab oder <see langword="null" />, wenn dieses Objekt nicht vorhanden ist.</summary>
      <param name="name">Der Name des abzurufenden Objekts.</param>
      <returns>Eine Instanz des Objekts mit dem angegebenen Namen oder <see langword="null" />, wenn kein Objekt mit diesem Namen gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)">
      <summary>Ruft den Namen des angegebenen Objekts ab oder <see langword="null" />, wenn dem Objekt kein Name zugewiesen ist.</summary>
      <param name="value">Das Objekt, dessen Name abgerufen werden soll.</param>
      <returns>Der Name des Objekts oder <see langword="null" />, wenn das Objekt unbenannt ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Ruft ein Serialisierungsprogramm vom angeforderten Typ für den angegebenen Objekttyp ab.</summary>
      <param name="objectType">Der Typ des Objekts, für das das Serialisierungsprogramm abgerufen werden soll.</param>
      <param name="serializerType">Der Typ des abzurufenden Serialisierungsprogramms.</param>
      <returns>Eine Instanz des angeforderten Serialisierungsprogramms oder <see langword="null" />, falls kein entsprechendes Serialisierungsprogramm gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)">
      <summary>Ruft einen Typ mit dem angegebenen Namen ab.</summary>
      <param name="typeName">Der voll gekennzeichnete Name des zu ladenden Typs.</param>
      <returns>Eine Instanz des Typs oder <see langword="null" />, wenn der Typ nicht geladen werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Entfernt einen benutzerdefinierten Serialisierungsprovider aus dem Serialisierungs-Manager.</summary>
      <param name="provider">Der zu entfernende Provider. Dieses Objekt muss mithilfe von <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> hinzugefügt worden sein.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)">
      <summary>Meldet einen Fehler bei der Serialisierung.</summary>
      <param name="errorInformation">Der zu meldende Fehler. Dieses Informationsobjekt kann einem beliebigen Objekttyp aufweisen. Wenn es sich um eine Ausnahme handelt, wird die Meldung der Ausnahme extrahiert und dem Benutzer angezeigt. Wenn es sich um einen anderen Typ handelt, wird <see cref="M:System.Object.ToString" /> aufgerufen, um dem Benutzer die Informationen anzuzeigen.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)">
      <summary>Legt den Namen des angegebenen vorhandenen Objekts fest.</summary>
      <param name="instance">Die zu benennende Objektinstanz.</param>
      <param name="name">Der Name, der der Instanz gegeben werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <summary>Ruft einen stapelbasierten, benutzerdefinierten Speicherbereich ab, der die Kommunikation zwischen Serialisierungsprogrammen erleichtert.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, in dem Daten gespeichert werden.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <summary>Gibt benutzerdefinierte Eigenschaften an, die mit verfügbaren Serialisierungsprogrammen serialisiert werden können.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die zu serialisierenden Eigenschaften enthält.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider">
      <summary>Stellt eine Schnittstelle bereit, die den Zugriff auf ein Serialisierungsprogramm ermöglicht.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>Ruft mithilfe der angegebenen Attribute ein Serialisierungsprogramm ab.</summary>
      <param name="manager">Der Serialisierungs-Manager, der das Serialisierungsprogramm anfordert.</param>
      <param name="currentSerializer">Eine Instanz des aktuellen Serialisierungsprogramms vom angegebenen Typ. Dies kann <see langword="null" /> sein, wenn kein Serialisierungsprogramm vom angegebenen Typ vorhanden ist.</param>
      <param name="objectType">Der Datentyp des zu serialisierenden Objekts.</param>
      <param name="serializerType">Der Datentyp des zu erstellenden Serialisierungsprogramms.</param>
      <returns>Eine Instanz eines Serialisierungsprogramms vom angeforderten Typ oder <see langword="null" />, wenn die Anforderung nicht erfüllt werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService">
      <summary>Stellt eine Schnittstelle bereit, die Serialisierung und Deserialisierung aufrufen kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)">
      <summary>Deserialisiert das angegebene Serialisierungsdatenobjekt und gibt eine Auflistung von Objekten zurück, die von diesen Daten dargestellt werden.</summary>
      <param name="serializationData">Ein Objekt, das aus serialisierten Daten besteht.</param>
      <returns>Eine <see cref="T:System.Collections.ICollection" /> von Objekten, die aus dem angegebenen Serialisierungsdatenobjekt neu erstellt werden.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)">
      <summary>Serialisiert die angegebene Auflistung von Objekten und speichert sie in einem Serialisierungsdatenobjekt.</summary>
      <param name="objects">Eine Auflistung zu serialisierender Objekte.</param>
      <returns>Ein Objekt, das den serialisierten Zustand der angegebenen Auflistung von Objekten enthält.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.INameCreationService">
      <summary>Stellt einen Dienst bereit, der eindeutige Namen für Objekte generieren kann.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Erstellt einen neuen Namen, der für sämtliche Komponenten im angegebenen Container eindeutig ist.</summary>
      <param name="container">Der Container, in dem das neue Objekt hinzugefügt wird.</param>
      <param name="dataType">Der Datentyp des Objekts, das den Namen erhält.</param>
      <returns>Ein eindeutiger Name für den Datentyp.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene Name gültig ist.</summary>
      <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Name gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene Name gültig ist.</summary>
      <param name="name">Der Name, dessen Gültigkeit validiert werden soll.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.InstanceDescriptor">
      <summary>Stellt die für das Erstellen einer Objektinstanz notwendigen Informationen bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />-Klasse unter Verwendung der angegebenen Memberinformationen und Argumente.</summary>
      <param name="member">Die Memberinformationen für den Deskriptor. Dies kann <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.ConstructorInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> sein. Wenn es sich um <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> handelt, muss hierdurch ein <see langword="static" />-Member dargestellt werden.</param>
      <param name="arguments">Die Auflistung der an den Member zu übergebenden Argumente. Dieser Parameter kann <see langword="null" /> sein oder eine leere Auflistung, wenn keine Argumente vorhanden sind. Die Auflistung kann auch aus anderen Instanzen von <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> bestehen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> und stellt keinen <see langword="static" />-Member dar.  

- oder - 
<paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.PropertyInfo" /> und kann nicht gelesen werden.  

- oder - 
<paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.MethodInfo" /> oder <see cref="T:System.Reflection.ConstructorInfo" />, und die Anzahl der Argumente in <paramref name="arguments" /> entspricht nicht der Signatur von <paramref name="member" />.

- oder -

<paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.ConstructorInfo" /> und stellt einen <see langword="static" />-Member dar.  

- oder - 
<paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.FieldInfo" />, und die Anzahl der Argumente in <paramref name="arguments" /> ist nicht 0 (null).</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />-Klasse unter Verwendung der angegebenen Memberinformationen und Argumente sowie des Werts, der angibt, ob die angegebenen Informationen die Instanz vollständig beschreiben.</summary>
      <param name="member">Die Memberinformationen für den Deskriptor. Dies kann <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.ConstructorInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> sein. Wenn es sich um <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> handelt, muss hierdurch ein <see langword="static" />-Member dargestellt werden.</param>
      <param name="arguments">Die Auflistung der an den Member zu übergebenden Argumente. Dieser Parameter kann <see langword="null" /> sein oder eine leere Auflistung, wenn keine Argumente vorhanden sind. Die Auflistung kann auch aus anderen Instanzen von <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> bestehen.</param>
      <param name="isComplete">
        <see langword="true" />, wenn die angegebenen Informationen die Instanz vollständig beschreiben, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.MethodInfo" />, <see cref="T:System.Reflection.FieldInfo" /> oder <see cref="T:System.Reflection.PropertyInfo" /> und stellt keinen <see langword="static" />-Member dar. 
 <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.PropertyInfo" /> und kann nicht gelesen werden.  
  
 <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.MethodInfo" /> oder <see cref="T:System.Reflection.ConstructorInfo" />, und die Anzahl der Argumente in <paramref name="arguments" /> entspricht nicht der Signatur von <paramref name="member" />.  
  
 <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.ConstructorInfo" /> und stellt einen <see langword="static" />-Member dar. 
 <paramref name="member" /> ist vom Typ <see cref="T:System.Reflection.FieldInfo" />, und die Anzahl der Argumente in <paramref name="arguments" /> ist nicht 0 (null).</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke">
      <summary>Ruft den Deskriptor dieser Instanz auf und gibt das vom Deskriptor beschriebene Objekt zurück.</summary>
      <returns>Das Objekt, das vom Deskriptor dieser Instanz beschrieben wird.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments">
      <summary>Ruft eine Auflistung von Argumenten ab, mit der eine Instanz des Objekts neu erstellt werden kann, das der Deskriptor dieser Instanz darstellt.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" /> von Argumenten, mit der das Objekt erstellt werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete">
      <summary>Ruft einen Wert ab, der angibt, ob der Inhalt dieses <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> die Instanz vollständig beschreibt.</summary>
      <returns>
        <see langword="true" />, wenn die Instanz vollständig beschrieben wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo">
      <summary>Ruft die Memberinformationen ab, die die Instanz beschreiben, der dieser Deskriptor zugeordnet ist.</summary>
      <returns>Eine <see cref="T:System.Reflection.MemberInfo" />, die die Instanz beschreibt, der dieses Objekt zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberRelationship">
      <summary>Stellt eine einzelne Beziehung zwischen einem Objekt und einem Member dar.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty">
      <summary>Stellt die leere Memberbeziehung dar. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Klasse.</summary>
      <param name="owner">Das Objekt, das Besitzer von <paramref name="member" /> ist.</param>
      <param name="member">Der Member, für den eine Beziehung zu <paramref name="owner" /> erstellt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> oder <paramref name="member" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.Equals(System.Object)">
      <summary>Stellt fest, ob zwei <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Instanzen gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />, das mit dem aktuellen <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> gleich der aktuellen <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.op_Equality(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Strukturen äquivalent sind.</summary>
      <param name="left">Die <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Struktur auf der linken Seite des Gleichheitsoperators.</param>
      <param name="right">Die <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Struktur auf der rechten Seite des Gleichheitsoperators.</param>
      <returns>Dieser Operator gibt <see langword="true" /> zurück, wenn die beiden <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Strukturen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.op_Inequality(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Überprüft, ob zwei angegebene <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Strukturen unterschiedlich sind.</summary>
      <param name="left">Die <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Struktur auf der linken Seite des Ungleichheitsoperators.</param>
      <param name="right">Die <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Struktur auf der rechten Seite des Ungleichheitsoperators.</param>
      <returns>Dieser Operator gibt <see langword="true" /> zurück, wenn die beiden <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Strukturen unterschiedlich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob diese Beziehung der <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />-Beziehung entspricht.</summary>
      <returns>
        <see langword="true" />, wenn diese Beziehung der angegebenen <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />-Beziehung entspricht; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.Member">
      <summary>Ruft den zugehörigen Member ab.</summary>
      <returns>Der Member, der an <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)" /> übergeben wird.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationship.Owner">
      <summary>Ruft das besitzende Objekt ab.</summary>
      <returns>Das besitzende Objekt, das an <see cref="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)" /> übergeben wird.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberRelationshipService">
      <summary>Stellt die Basisklasse zum Erstellen von Beziehungen zwischen Membern bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationshipService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Ruft eine Beziehung für die angegebene Quellbeziehung ab.</summary>
      <param name="source">Die Quellbeziehung.</param>
      <returns>Eine Beziehung zu <paramref name="source" /> oder <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />, wenn keine Beziehung vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Erstellt zwischen der Quellobjekt- und der Zielbeziehung eine Beziehung.</summary>
      <param name="source">Die Quellbeziehung.</param>
      <param name="relationship">Die für die Quelle festzulegende Beziehung.</param>
      <exception cref="T:System.ArgumentException">Die Beziehung wird von dem Dienst nicht unterstützt.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Ruft einen Wert ab, der angibt, ob die angegebene Beziehung unterstützt wird.</summary>
      <param name="source">Die Quellbeziehung.</param>
      <param name="relationship">Die für die Quelle festzulegende Beziehung.</param>
      <returns>
        <see langword="true" />, wenn eine Beziehung zwischen den beiden angegebenen Objekten unterstützt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)">
      <summary>Stellt eine Beziehung zwischen einem Quell- und einem Zielobjekt her.</summary>
      <param name="source">Die Quellbeziehung. Dabei handelt es sich um die linke Seite einer Beziehungszuweisung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> ist leer, oder die Beziehung wird nicht vom Dienst unterstützt.</exception>
      <returns>Die aktuelle <paramref name="source" /> zugeordnete Beziehung oder <see cref="F:System.ComponentModel.Design.Serialization.MemberRelationship.Empty" />, falls keine Beziehung vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Stellt eine Beziehung zwischen einem Quell- und einem Zielobjekt her.</summary>
      <param name="sourceOwner">Der Besitzer einer Quellbeziehung.</param>
      <param name="sourceMember">Der Member einer Quellbeziehung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceOwner" /> oder <paramref name="sourceMember" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceOwner" /> oder <paramref name="sourceMember" /> ist leer, oder die Beziehung wird nicht vom Dienst unterstützt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" />-Struktur, die die Beziehung zwischen einem Quell- und einem Zielobjekt kapselt, oder <see langword="null" />, falls keine Beziehung vorhanden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />-Klasse.</summary>
      <param name="name">Der aufzulösende Name.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.Name">
      <summary>Ruft den Namen des aufzulösenden Objekts ab.</summary>
      <returns>Der Name des aufzulösenden Objekts.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ResolveNameEventArgs.Value">
      <summary>Ruft das Objekt ab, das mit dem Namen übereinstimmt, oder legt dieses fest.</summary>
      <returns>Das Objekt, dem der Name zugeordnet ist.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ResolveNameEventHandler">
      <summary>Stellt die Methode für die Behandlung des <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />-Ereignisses eines Serialisierungs-Managers dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
      <summary>Gibt das für ein Stammdesignerobjekt zu verwendende Basisserialisierungsprogramm an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />-Klasse unter Verwendung der angegebenen Attribute.</summary>
      <param name="serializerTypeName">Der voll gekennzeichnete Name des Datentyps des Serialisierungsprogramms.</param>
      <param name="baseSerializerTypeName">Der Name des Basistyps dieses Serialisierungsprogramms. Eine Klasse kann mehrere Serialisierungsprogramme enthalten, da diese verschiedene Basistypen aufweisen.</param>
      <param name="reloadable">
        <see langword="true" />, wenn dieses Serialisierungsprogramm das dynamische Neuladen des Dokuments unterstützt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />-Klasse unter Verwendung der angegebenen Attribute.</summary>
      <param name="serializerTypeName">Der voll gekennzeichnete Name des Datentyps des Serialisierungsprogramms.</param>
      <param name="baseSerializerType">Der Name des Basistyps dieses Serialisierungsprogramms. Eine Klasse kann mehrere Serialisierungsprogramme enthalten, da diese verschiedene Basistypen aufweisen.</param>
      <param name="reloadable">
        <see langword="true" />, wenn dieses Serialisierungsprogramm das dynamische Neuladen des Dokuments unterstützt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />-Klasse unter Verwendung der angegebenen Attribute.</summary>
      <param name="serializerType">Der Datentyp des Serialisierungsprogramms.</param>
      <param name="baseSerializerType">Der Basistyp des Serialisierungsprogramms. Eine Klasse kann mehrere Serialisierungsprogramme enthalten, da diese verschiedene Basistypen aufweisen.</param>
      <param name="reloadable">
        <see langword="true" />, wenn dieses Serialisierungsprogramm das dynamische Neuladen des Dokuments unterstützt, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable">
      <summary>Ruft einen Wert ab, der angibt, ob das Stammserialisierungsprogramm das Neuladen des Entwurfsdokuments ohne vorherige Freigabe des Designerhosts unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn das Stammserialisierungsprogramm das Neuladen unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName">
      <summary>Ruft den voll gekennzeichneten Typnamen für den Basistyp des Serialisierungsprogramms ab.</summary>
      <returns>Der Name des Basistyps dieses Serialisierungsprogramms.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName">
      <summary>Ruft den voll gekennzeichneten Typnamen des Serialisierungsprogramms ab.</summary>
      <returns>Der Name des Typs des Serialisierungsprogramms.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId">
      <summary>Ruft eine eindeutige ID für diesen Attributtyp ab.</summary>
      <returns>Ein Objekt, das eine eindeutige ID für diesen Attributtyp enthält.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializationStore">
      <summary>Stellt die Basisklasse zum Speichern von Serialisierungsdaten für <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Close">
      <summary>Schließt den Serialisierungsspeicher.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
      <summary>Speichert den Speicher in den angegebenen Stream.</summary>
      <param name="stream">Der Stream, in den der Speicher serialisiert wird.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.System#IDisposable#Dispose">
      <summary>Gibt alle vom <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializationStore.Errors">
      <summary>Ruft eine Auflistung von Fehlern ab, die während der Serialisierung oder Deserialisierung aufgetreten sind.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" /> mit Fehlern, die bei der Serialisierung oder Deserialisierung aufgetreten sind.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ServiceContainer">
      <summary>Stellt eine einfache Implementierung der <see cref="T:System.ComponentModel.Design.IServiceContainer" />-Schnittstelle bereit. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ServiceContainer" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ServiceContainer" />-Klasse unter Verwendung des angegebenen übergeordneten Dienstanbieters.</summary>
      <param name="parentProvider">Ein übergeordneter Dienstanbieter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="callback">Ein Rückrufobjekt, das den Dienst erstellen kann. Dadurch kann ein Dienst als verfügbar deklariert werden, die Erstellung des Objekts wird jedoch bis zur Anforderung des Dienstes verzögert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> oder <paramref name="callback" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ein Dienst vom Typ <paramref name="serviceType" /> ist bereits im Container vorhanden.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="callback">Ein Rückrufobjekt, das den Dienst erstellen kann. Dadurch kann ein Dienst als verfügbar deklariert werden, die Erstellung des Objekts wird jedoch bis zur Anforderung des Dienstes verzögert.</param>
      <param name="promote">
        <see langword="true" />, wenn dieser Dienst allen übergeordneten Dienstcontainern hinzugefügt werden soll, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> oder <paramref name="callback" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ein Dienst vom Typ <paramref name="serviceType" /> ist bereits im Container vorhanden.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="serviceInstance">Eine Instanz des hinzuzufügenden Diensts. Eine Instanz des hinzuzufügenden Dienstes. Dabei muss es sich um ein Objekt handeln, das den mit dem <paramref name="serviceType" />-Parameter angegebenen Typ implementiert oder von diesem erbt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> oder <paramref name="serviceInstance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ein Dienst vom Typ <paramref name="serviceType" /> ist bereits im Container vorhanden.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <summary>Fügt dem Dienstcontainer den angegebenen Dienst hinzu.</summary>
      <param name="serviceType">Der hinzuzufügende Diensttyp.</param>
      <param name="serviceInstance">Eine Instanz des hinzuzufügenden Diensttyps. Eine Instanz des hinzuzufügenden Dienstes. Dabei muss es sich um ein Objekt handeln, das den mit dem <paramref name="serviceType" />-Parameter angegebenen Typ implementiert oder von diesem erbt.</param>
      <param name="promote">
        <see langword="true" />, wenn dieser Dienst allen übergeordneten Dienstcontainern hinzugefügt werden soll, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> oder <paramref name="serviceInstance" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ein Dienst vom Typ <paramref name="serviceType" /> ist bereits im Container vorhanden.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.Dispose">
      <summary>Verwirft diesen Dienstcontainer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)">
      <summary>Verwirft diesen Dienstcontainer.</summary>
      <param name="disposing">
        <see langword="true" />, wenn der <see cref="T:System.ComponentModel.Design.ServiceContainer" /> gerade verworfen werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)">
      <summary>Ruft den angeforderten Dienst ab.</summary>
      <param name="serviceType">Der Typ des abzurufenden Diensts.</param>
      <returns>Eine Instanz des Dienstes, wenn eine solche gefunden werden konnte, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)">
      <summary>Entfernt den angegebenen Diensttyp aus dem Dienstcontainer.</summary>
      <param name="serviceType">Der Typ des zu entfernenden Diensts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)">
      <summary>Entfernt den angegebenen Diensttyp aus dem Dienstcontainer.</summary>
      <param name="serviceType">Der Typ des zu entfernenden Diensts.</param>
      <param name="promote">
        <see langword="true" />, wenn dieser Dienst aus allen übergeordneten Dienstcontainern entfernt werden soll, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ServiceContainer.DefaultServices">
      <summary>Ruft die direkt von <see cref="T:System.ComponentModel.Design.ServiceContainer" /> implementierten Standarddienste ab.</summary>
      <returns>Die Standarddienste.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ServiceCreatorCallback">
      <summary>Stellt einen Rückrufmechanismus bereit, der bei Bedarf eine Instanz eines Dienstes erstellen kann.</summary>
      <param name="container">Der Dienstcontainer, der die Erstellung des Dienstes angefordert hat.</param>
      <param name="serviceType">Der Typ des zu erstellenden Dienstes.</param>
      <returns>Der durch <paramref name="serviceType" /> angegebene Dienst oder <see langword="null" />, wenn der Dienst nicht erstellt werden konnte.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.StandardCommands">
      <summary>Definiert Bezeichner für einen Standardsatz von Befehlen, die den meisten Anwendungen zur Verfügung stehen.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignBottom">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignBottom ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignHorizontalCenters">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignHorizontalCenters ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignLeft">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignLeft ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignRight">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignRight ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignToGrid">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignToGrid ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignTop">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignTop ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.AlignVerticalCenters">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl AlignVerticalCenters ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeBottom">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ArrangeBottom ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeIcons">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ArrangeIcons ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ArrangeRight">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ArrangeRight ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.BringForward">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl BringForward ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.BringToFront">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl BringToFront ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.CenterHorizontally">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl CenterHorizontally ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.CenterVertically">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl CenterVertically ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Copy">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Copy ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Cut">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Cut ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Delete">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Delete ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.DocumentOutline">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Document Outline ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.F1Help">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl F1Help ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Group">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Group ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceConcatenate">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl HorizSpaceConcatenate ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceDecrease">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl HorizSpaceDecrease ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceIncrease">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl HorizSpaceIncrease ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.HorizSpaceMakeEqual">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl HorizSpaceMakeEqual ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.LineupIcons">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl LineupIcons ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.LockControls">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl LockControls ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.MultiLevelRedo">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl MultiLevelRedo ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.MultiLevelUndo">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl MultiLevelUndo ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Paste">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Paste ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Properties">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Properties ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.PropertiesWindow">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl PropertiesWindow ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Redo">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Redo ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Replace">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Replace ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SelectAll">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SelectAll ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SendBackward">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SendBackward ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SendToBack">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SendToBack ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ShowGrid">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ShowGrid ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ShowLargeIcons">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ShowLargeIcons ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControl">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SizeToControl ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControlHeight">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SizeToControlHeight ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToControlWidth">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SizeToControlWidth ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToFit">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SizeToFit ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SizeToGrid">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SizeToGrid ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.SnapToGrid">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl SnapToGrid ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.TabOrder">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl TabOrder ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Undo">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Undo ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.Ungroup">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl Ungroup ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VerbFirst">
      <summary>Ruft das erste Verb einer Gruppe von Verben ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VerbLast">
      <summary>Ruft das letzte Verb einer Gruppe von Verben ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceConcatenate">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl VertSpaceConcatenate ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceDecrease">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl VertSpaceDecrease ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceIncrease">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl VertSpaceIncrease ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.VertSpaceMakeEqual">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl VertSpaceMakeEqual ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ViewCode">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ViewCode ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardCommands.ViewGrid">
      <summary>Ruft die <see cref="T:System.ComponentModel.Design.CommandID" />-Klasse für den Befehl ViewGrid ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.StandardCommands.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.StandardCommands" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.StandardToolWindows">
      <summary>Definiert GUID-Bezeichner, die dem Standardsatz von Toolfenstern entsprechen, die in der Entwurfsumgebung zur Verfügung stehen.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ObjectBrowser">
      <summary>Ruft die GUID für den Objektkatalog ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.OutputWindow">
      <summary>Ruft die GUID für das Ausgabefenster ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ProjectExplorer">
      <summary>Ruft die GUID für den Projektmappen-Explorer ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.PropertyBrowser">
      <summary>Ruft die GUID für das Eigenschaftenfenster ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.RelatedLinks">
      <summary>Ruft die GUID für den Frame mit verwandten Links ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.ServerExplorer">
      <summary>Ruft die GUID für den Server-Explorer ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.TaskList">
      <summary>Ruft die GUID für die Aufgabenliste ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.StandardToolWindows.Toolbox">
      <summary>Ruft die GUID für die Toolbox ab. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.StandardToolWindows.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.StandardToolWindows" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.TypeDescriptionProviderService">
      <summary>Stellt einen Typbeschreibungsanbieter für einen angegebenen Typ bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.TypeDescriptionProviderService" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)">
      <summary>Ruft einen Typbeschreibungsanbieter für das angegebene Objekt ab.</summary>
      <param name="instance">Das Objekt, für das ein Typbeschreibungsanbieter abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, der <paramref name="instance" /> entspricht.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)">
      <summary>Ruft einen Typbeschreibungsanbieter für den angegebenen Typ ab.</summary>
      <param name="type">Der Typ, für den ein Typbeschreibungsanbieter abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, der <paramref name="type" /> entspricht.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ViewTechnology">
      <summary>Definiert Bezeichner für eine Gruppe von Technologien, die von Designerhosts unterstützt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.Default">
      <summary>Gibt die Standardunterstützung für die Ansichtstechnologie an.
        
Der Stammdesigner kann Objekte jedes Typs zurückgeben, aber das Objekt muss mit einem Adapter für die Technologie des Hosts kompatibel sein. Hostumgebungen wie Visual Studio ermöglichen das Einbinden neuer Ansichtstechnologieadapter. Das Standardansichtsobjekt für den Windows Forms-Designer ist eine <see cref="T:System.Windows.Forms.Control" />-Instanz.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
      <summary>Stellt einen Modus dar, in dem das Ansichtsobjekt direkt an die Entwicklungsumgebung übergeben wird.
        
Das Ansichtsobjekt muss alle Schnittstellen implementieren, die die Entwicklungsumgebung erfordert. Die Visual Studio-Entwicklungsumgebung unterstützt Ansichtsobjekte, bei denen es sich entweder um ein ActiveX-Steuerelement, ein aktives Dokument oder ein Objekt handelt, das die IVsWindowPane-Schnittstelle implementiert, die über das Visual Studio-VSI-Programm (Visual Studio Integration) verfügbar ist. Die Entwicklungsumgebung von Visual Studio bietet Unterstützung für diese Ansichtstechnologie. Diese Ansichtstechnologie wird nicht unbedingt in allen Entwicklungsumgebungen unterstützt.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
      <summary>Stellt einen Modus dar, in dem ein Windows Forms-Steuerelementobjekt die Anzeige für den Stammdesigner bereitstellt. Der Designerhost füllt das Dokumentfenster der Entwicklungsumgebung mit dem Windows Forms-Steuerelement.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignTimeVisibleAttribute">
      <summary>
        <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" /> markiert die Sichtbarkeit einer Komponente. Wenn <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes" /> vorhanden ist, kann ein visueller Designer diese Komponente in einem Designer anzeigen.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.Default">
      <summary>Die Standardsichtbarkeit <see langword="Yes" />.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.No">
      <summary>Markiert eine Komponente in einem visuellen Designer als nicht sichtbar.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignTimeVisibleAttribute.Yes">
      <summary>Markiert eine Komponente in einem visuellen Designer als sichtbar.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor">
      <summary>Erstellt ein neues <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" />-Element, das auf den Standardwert <see langword="false" /> festgelegt ist.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.#ctor(System.Boolean)">
      <summary>Erstellt ein neues <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" />, dessen <see cref="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" />-Eigenschaft auf den in <paramref name="visible" /> angegebenen Wert festgelegt ist.</summary>
      <param name="visible">Der Wert, auf den die <see cref="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible" />-Eigenschaft festgelegt wird.</param>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein Objekt für den Vergleich mit dieser Instanz oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignTimeVisibleAttribute.IsDefaultAttribute">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz gleich dem <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />-Wert ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz gleich dem <see cref="F:System.ComponentModel.DesignTimeVisibleAttribute.Default" />-Wert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignTimeVisibleAttribute.Visible">
      <summary>Ruft ab oder legt fest, ob die Komponente zur Entwurfszeit angezeigt werden soll.</summary>
      <returns>
        <see langword="true" />, wenn diese Komponente zur Entwurfszeit angezeigt werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DoubleConverter">
      <summary>Stellt einen Typkonverter bereit, mit dem Objekte für Gleitkommazahlen doppelter Genauigkeit in andere und aus anderen Darstellungen konvertiert werden können.</summary>
    </member>
    <member name="M:System.ComponentModel.DoubleConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DoubleConverter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.EnumConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Enum" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EnumConverter" />-Klasse für den angegebenen Typ.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Typ der Enumeration darstellt, der diesem Enumerationskonverter zugeordnet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in ein Enumerationsobjekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Wertobjekt in ein Enumerationsobjekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein gültiger Wert für die Enumeration.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung von Standardwerten für den Datentyp ab, für den diese Bestätigung vorgesehen ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp einen Standardsatz von Werten nicht unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob die unter Verwendung des angegebenen Kontexts von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt eine Standardmenge von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, weil die <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Schnittstelle aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob der für das Objekt angegebene Wert für diesen Typ gültig ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Der zu überprüfende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.Comparer">
      <summary>Ruft eine <see cref="T:System.Collections.IComparer" />-Schnittstelle ab, mit der die Werte der Enumeration sortiert werden können.</summary>
      <returns>Eine <see cref="T:System.Collections.IComparer" />-Schnittstelle für das Sortieren der Enumerationswerte.</returns>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.EnumType">
      <summary>Gibt den Typ des Enumerators an, dem dieser Konverter zugeordnet wurde.</summary>
      <returns>Der Typ des Enumerators, dem dieser Konverter zugeordnet wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.Values">
      <summary>Ruft eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Klasse auf, die die möglichen Werte für die Enumeration angibt, oder legt eine solche Klasse fest.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Klasse, die die möglichen Werte für die Enumeration angibt.</returns>
    </member>
    <member name="T:System.ComponentModel.EventDescriptor">
      <summary>Enthält Informationen über ein Ereignis.</summary>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit dem Namen und den Attributen im angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" />.</summary>
      <param name="descr">Ein <see cref="T:System.ComponentModel.MemberDescriptor" />, der den Namen des Ereignisses und dessen Attribute enthält.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit dem Namen im angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" /> und den Attributen im <see cref="T:System.ComponentModel.MemberDescriptor" /> sowie dem <see cref="T:System.Attribute" />-Array.</summary>
      <param name="descr">Eine <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit dem Namen des Members und dessen Attributen.</param>
      <param name="attrs">Ein <see cref="T:System.Attribute" />-Array mit den Attributen, die Sie dieser Ereignisbeschreibung hinzufügen möchten.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit dem angegebenen Namen und Attributarray.</summary>
      <param name="name">Der Name des Ereignisses.</param>
      <param name="attrs">Ein Array vom Typ <see cref="T:System.Attribute" />, das die Ereignisattribute enthält.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
      <summary>Bindet beim Überschreiben in einer abgeleiteten Klasse das Ereignis an die Komponente.</summary>
      <param name="component">Eine Komponente, die Ereignisse für den Delegaten bereitstellt.</param>
      <param name="value">Ein Delegat, der die Methode für die Ereignisbehandlung darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
      <summary>Hebt beim Überschreiben in einer abgeleiteten Klasse die Bindung des Delegaten mit der Komponente auf, sodass der Delegat keine weiteren Ereignisse von der Komponente empfängt.</summary>
      <param name="component">Die Komponente, an die der Delegat gebunden ist.</param>
      <param name="value">Der Delegat, dessen Bindung an die Komponente aufgehoben werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.ComponentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ der Komponente ab, an die dieses Ereignis gebunden ist.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ der Komponente darstellt, an die das Ereignis gebunden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.EventType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ des Delegaten für das Ereignis ab.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ des Delegaten für das Ereignis darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptor.IsMulticast">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der Ereignisdelegat ein Multicastdelegat ist.</summary>
      <returns>
        <see langword="true" />, wenn der Ereignisdelegat ein Multicastdelegat ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.EventDescriptorCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.ComponentModel.EventDescriptor" />-Objekten dar.</summary>
    </member>
    <member name="F:System.ComponentModel.EventDescriptorCollection.Empty">
      <summary>Gibt eine leere Auflistung an, die Sie verwenden können, um so keine neue Auflistung ohne Elemente erstellen zu müssen. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Klasse mit dem angegebenen Array von <see cref="T:System.ComponentModel.EventDescriptor" />-Objekten.</summary>
      <param name="events">Ein Array vom Typ <see cref="T:System.ComponentModel.EventDescriptor" />, das die Ereignisse für diese Auflistung bereitstellt.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Klasse mit dem angegebenen Array von <see cref="T:System.ComponentModel.EventDescriptor" />-Objekten. Die Auflistung kann bei Bedarf mit Schreibschutz versehen werden.</summary>
      <param name="events">Ein Array vom Typ <see cref="T:System.ComponentModel.EventDescriptor" />, das die Ereignisse für diese Auflistung bereitstellt.</param>
      <param name="readOnly">
        <see langword="true" />, wenn diese Auflistung schreibgeschützt sein soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)">
      <summary>Fügt am Ende der Auflistung eine <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse hinzu.</summary>
      <param name="value">Eine der Auflistung hinzuzufügende <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <returns>Die Position der <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse in der Auflistung.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Clear">
      <summary>Entfernt alle Objekte aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)">
      <summary>Gibt zurück, ob die Auflistung die angegebene <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse enthält.</summary>
      <param name="value">Die in der Auflistung zu suchende <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung den angegebenen <paramref name="value" />-Parameter enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)">
      <summary>Ruft die Beschreibung des Ereignisses mit dem angegebenen Namen in der Auflistung ab.</summary>
      <param name="name">Der Name des Ereignisses, das aus der Auflistung abgerufen werden soll.</param>
      <param name="ignoreCase">
        <see langword="true" />, wenn die Groß- und Kleinschreibung des Ereignisses ignoriert werden soll, andernfalls <see langword="false" />.</param>
      <returns>Die <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit dem angegebenen Namen oder <see langword="null" />, wenn das Ereignis nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator">
      <summary>Ruft einen Enumerator für diese <see cref="T:System.ComponentModel.EventDescriptorCollection" /> ab.</summary>
      <returns>Ein Enumerator, der <see cref="T:System.Collections.IEnumerator" /> implementiert.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)">
      <summary>Gibt den Index des angegebenen <see cref="T:System.ComponentModel.EventDescriptor" /> zurück.</summary>
      <param name="value">Die in der Auflistung zu suchende <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse.</param>
      <returns>Der Index der angegebenen <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse in der Auflistung.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)">
      <summary>Fügt in der Auflistung eine <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse am angegebenen Index ein.</summary>
      <param name="index">Der Index in der Auflistung, an dem der <paramref name="value" />-Parameter eingefügt werden soll.</param>
      <param name="value">Eine <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse, die in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Klasse unter Verwendung der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="sorter">Ein Comparer zum Sortieren der <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in dieser Auflistung.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Auflistung. Die angegebene Reihenfolge wird zuerst angewendet, darauf folgt die Standardsortierung für diese Auflistung, die i. d. R. alphabetisch erfolgt.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge der <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in dieser Auflistung beschreibt.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)">
      <summary>Entfernt den angegebenen <see cref="T:System.ComponentModel.EventDescriptor" /> aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.ComponentModel.EventDescriptor" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)">
      <summary>Entfernt <see cref="T:System.ComponentModel.EventDescriptor" /> am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der Index der zu entfernenden <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Auflistung unter Verwendung der Standardsortierung für diese Auflistung, die i. d. R. alphabetisch ist.</summary>
      <returns>Die neue <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Klasse unter Verwendung der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="comparer">Eine <see cref="T:System.Collections.IComparer" />-Schnittstelle, die zum Sortieren der <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in dieser Auflistung verwendet werden soll.</param>
      <returns>Die neue <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Auflistung, wenn eine Sortierreihenfolge angegeben ist.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge für die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in der Auflistung beschreibt.</param>
      <returns>Die neue <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <summary>Sortiert die Member dieser <see cref="T:System.ComponentModel.EventDescriptorCollection" />-Auflistung, wenn eine Sortierreihenfolge und eine <see cref="T:System.Collections.IComparer" />-Schnittstelle angegeben sind.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge für die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in der Auflistung beschreibt.</param>
      <param name="comparer">Eine <see cref="T:System.Collections.IComparer" />-Schnittstelle, die zum Sortieren der <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte in dieser Auflistung verwendet werden soll.</param>
      <returns>Die neue <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</summary>
      <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der Auflistung ein Element hinzu.</summary>
      <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt am angegebenen Index ein Element in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Die in die Auflistung einzufügende <see cref="T:System.Object" />-Klasse.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Count">
      <summary>Ruft die Anzahl der Ereignisdeskriptoren in der Auflistung ab.</summary>
      <returns>Die Anzahl der Ereignisdeskriptoren in der Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)">
      <summary>Ruft das Ereignis mit der angegebenen Indexnummer ab oder legt dieses fest.</summary>
      <param name="index">Die nullbasierte Indexnummer des <see cref="T:System.ComponentModel.EventDescriptor" />, der abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> ist kein gültiger Index für <see cref="P:System.ComponentModel.EventDescriptorCollection.Item(System.Int32)" />.</exception>
      <returns>Die <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit der angegebenen Indexnummer.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.Item(System.String)">
      <summary>Ruft das Ereignis mit dem angegebenen Namen ab oder legt dieses fest.</summary>
      <param name="name">Der Name des abzurufenden oder festzulegenden <see cref="T:System.ComponentModel.EventDescriptor" />.</param>
      <returns>Die <see cref="T:System.ComponentModel.EventDescriptor" />-Klasse mit dem angegebenen Namen oder <see langword="null" />, wenn das Ereignis nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der in der Auflistung enthaltenen Elemente.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist.</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf die Auflistung synchronisiert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.  
  
- oder - 
 <paramref name="index" /> ist größer oder gleich <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</exception>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.ComponentModel.ExpandableObjectConverter">
      <summary>Stellt einen Typkonverter bereit, um erweiterbare Objekte in andere und aus anderen Darstellungen zu konvertieren.</summary>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ExpandableObjectConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft eine Auflistung von Eigenschaften für den durch den Wertparameter angegebenen Typ von Objekt ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, das den Typ von Objekt angibt, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die für die Komponente verfügbar sind, oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ExtenderProvidedPropertyAttribute">
      <summary>Gibt eine Eigenschaft an, die von einem Extenderanbieter angeboten wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ExtenderProvidedPropertyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein <see cref="T:System.Object" /> für den Vergleich mit dieser Instanz oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.IsDefaultAttribute">
      <summary>Gibt an, ob der Wert dieser Instanz der Standardwert für die abgeleitete Klasse ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz das Standardattribut für die Klasse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ExtenderProperty">
      <summary>Ruft die Eigenschaft ab, die bereitgestellt wird.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft kapselt, die bereitgestellt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.Provider">
      <summary>Ruft den Extenderanbieter ab, der die Eigenschaft bereitstellt.</summary>
      <returns>Der <see cref="T:System.ComponentModel.IExtenderProvider" />, der die Eigenschaft bereitstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.ExtenderProvidedPropertyAttribute.ReceiverType">
      <summary>Ruft den Objekttyp ab, der die Eigenschaft empfangen kann.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Objekttyp beschreibt, der die Eigenschaft empfangen kann.</returns>
    </member>
    <member name="T:System.ComponentModel.GuidConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Guid" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.GuidConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des Kontexts in ein GUID-Objekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in ein GUID-Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
      <param name="context">Ein Formatierungskontext.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="T:System.ComponentModel.HandledEventArgs">
      <summary>Stellt Daten für Ereignisse bereit, die vollständig in einem Ereignishandler behandelt werden können.</summary>
    </member>
    <member name="M:System.ComponentModel.HandledEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.HandledEventArgs" />-Klasse mit dem <see cref="P:System.ComponentModel.HandledEventArgs.Handled" />-Standardeigenschaftswert <see langword="false" />.</summary>
    </member>
    <member name="M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.HandledEventArgs" />-Klasse mit dem angegebenen Standardwert für die <see cref="P:System.ComponentModel.HandledEventArgs.Handled" />-Eigenschaft.</summary>
      <param name="defaultHandledValue">Der Standardwert für die <see cref="P:System.ComponentModel.HandledEventArgs.Handled" />-Eigenschaft.</param>
    </member>
    <member name="P:System.ComponentModel.HandledEventArgs.Handled">
      <summary>Ruft einen Wert ab, der angibt, ob der Ereignishandler das Ereignis vollständig behandelt hat oder ob das System mit der eigenen Verarbeitung fortfahren soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn das Ereignis vollständig behandelt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.HandledEventHandler">
      <summary>Stellt eine Methode dar, die Ereignisse behandeln kann, für die nach der Rückgabe des Ereignishandlers eine weitere Verarbeitung erforderlich bzw. nicht erforderlich ist.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.HandledEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.IBindingList">
      <summary>Stellt die Features bereit, die für die Unterstützung komplexer wie auch einfacher Szenarien mit Bindung an eine Datenquelle erforderlich sind.</summary>
    </member>
    <member name="E:System.ComponentModel.IBindingList.ListChanged">
      <summary>Tritt ein, wenn die Liste oder ein Element der Liste geändert wird.</summary>
    </member>
    <member name="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Fügt den Indizes, die für die Suche verwendet werden, den <see cref="T:System.ComponentModel.PropertyDescriptor" /> hinzu.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der den Indizes hinzugefügt werden soll, die für die Suche verwendet werden.</param>
    </member>
    <member name="M:System.ComponentModel.IBindingList.AddNew">
      <summary>Fügt der Liste ein neues Element hinzu.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.AllowNew" /> ist <see langword="false" />.</exception>
      <returns>Das der Liste hinzugefügte Element.</returns>
    </member>
    <member name="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Sortiert die Liste entsprechend einem <see cref="T:System.ComponentModel.PropertyDescriptor" /> und einer <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, nach dem sortiert werden soll.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> ist <see langword="false" />.</exception>
    </member>
    <member name="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Gibt den Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, in dem gesucht werden soll.</param>
      <param name="key">Der Wert des <paramref name="property" />-Parameters, nach dem gesucht werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" /> ist <see langword="false" />.</exception>
      <returns>Der Index der Zeile mit dem angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Entfernt den <see cref="T:System.ComponentModel.PropertyDescriptor" /> aus den Indizes, die für die Suche verwendet werden.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der aus den für die Suche verwendeten Indizes entfernt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.IBindingList.RemoveSort">
      <summary>Entfernt alle Sortierungen, die unter Verwendung von <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> angewendet wurden.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> ist <see langword="false" />.</exception>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowEdit">
      <summary>Ruft ab, ob Elemente der Liste aktualisiert werden können.</summary>
      <returns>
        <see langword="true" />, wenn Elemente der Liste aktualisiert werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowNew">
      <summary>Ruft ab, ob der Liste mithilfe von <see cref="M:System.ComponentModel.IBindingList.AddNew" /> Elemente hinzugefügt werden können.</summary>
      <returns>
        <see langword="true" />, wenn Sie der Liste mithilfe von <see cref="M:System.ComponentModel.IBindingList.AddNew" /> Elemente hinzufügen können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.AllowRemove">
      <summary>Ruft ab, ob Elemente unter Verwendung von <see cref="M:System.Collections.IList.Remove(System.Object)" /> oder <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> aus der Liste entfernt werden können.</summary>
      <returns>
        <see langword="true" />, wenn Elemente aus der Liste entfernt werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.IsSorted">
      <summary>Ruft ab, ob die Element in der Liste sortiert werden.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> ist <see langword="false" />.</exception>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" /> aufgerufen wurde und <see cref="M:System.ComponentModel.IBindingList.RemoveSort" /> nicht aufgerufen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SortDirection">
      <summary>Ruft die Sortierrichtung ab.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> ist <see langword="false" />.</exception>
      <returns>Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SortProperty">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> ab, der für die Sortierung verwendet wird.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> ist <see langword="false" />.</exception>
      <returns>Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der für die Sortierung verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
      <summary>Ruft ab, ob bei Änderungen der Liste oder eines Elements ein <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis ausgelöst wird.</summary>
      <returns>
        <see langword="true" />, wenn bei Änderungen der Liste oder eines Elements ein <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis ausgelöst wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsSearching">
      <summary>Ruft ab, ob die Liste die Suche mit der <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />-Methode unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Liste die Suche mit der <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />-Methode unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingList.SupportsSorting">
      <summary>Ruft ab, ob die Liste die Sortierung unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Liste die Sortierung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IBindingListView">
      <summary>Erweitert die <see cref="T:System.ComponentModel.IBindingList" />-Schnittstelle durch die Bereitstellung erweiterter Sortier- und Filterfunktionen.</summary>
    </member>
    <member name="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Sortiert die Daten anhand der angegebenen <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</summary>
      <param name="sorts">Die <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> mit den Sortierbeschreibungen, die auf die Datenquelle angewendet werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.IBindingListView.RemoveFilter">
      <summary>Entfernt den gegenwärtig auf die Datenquelle angewendeten Filter.</summary>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.Filter">
      <summary>Ruft den Filter ab, mit dem Elemente aus der Sammlung von Elementen, die von der Datenquelle zurückgegeben wird, ausgeschlossen werden, oder legt diesen fest.</summary>
      <returns>Die Zeichenfolge, anhand derer die Elemente in der Auflistung von Elementen, die von der Datenquelle zurückgegeben wird, ausgefiltert werden.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SortDescriptions">
      <summary>Ruft die Auflistung der momentan auf die Datenquelle angewendeten Sortierbeschreibungen ab.</summary>
      <returns>Die momentan auf die Datenquelle angewendete <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting">
      <summary>Ruft einen Wert ab, der angibt, ob die Datenquelle erweiterte Sortierung unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Datenquelle erweiterte Sortierung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.IBindingListView.SupportsFiltering">
      <summary>Ruft einen Wert ab, der angibt, ob die Datenquelle die Filterung unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn die Datenquelle Filterung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ICancelAddNew">
      <summary>Fügt beim Erweitern einer Auflistung um ein neues Element Transaktionsfähigkeit hinzu.</summary>
    </member>
    <member name="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)">
      <summary>Entfernt ein anstehendes neues Element aus der Auflistung.</summary>
      <param name="itemIndex">Der Index des Elements, das der Auflistung hinzugefügt wurde.</param>
    </member>
    <member name="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)">
      <summary>Übergibt ein anstehendes neues Element an die Auflistung.</summary>
      <param name="itemIndex">Der Index des Elements, das der Auflistung hinzugefügt wurde.</param>
    </member>
    <member name="T:System.ComponentModel.IComNativeDescriptorHandler">
      <summary>Stellt eine Zuordnungsebene auf oberster Ebene zwischen einem COM-Objekt und <see cref="T:System.ComponentModel.TypeDescriptor" /> bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)">
      <summary>Ruft die Attribute für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die Attribute abgerufen werden sollen.</param>
      <returns>Eine Auflistung von Attributen für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)">
      <summary>Ruft den Klassennamen für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die der Klassenname abgerufen werden soll.</param>
      <returns>Der Name der Klasse, die <paramref name="component" /> entspricht.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)">
      <summary>Ruft den Typkonverter für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die der <see cref="T:System.ComponentModel.TypeConverter" /> abgerufen werden soll.</param>
      <returns>Das <see cref="T:System.ComponentModel.TypeConverter" /> für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)">
      <summary>Ruft das Standardereignis für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die das Standardereignis abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" />, der den Standardwert von <paramref name="component" /> darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)">
      <summary>Ruft die Standardeigenschaft für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die die Standardeigenschaft abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft von <paramref name="component" /> darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)">
      <summary>Ruft den Editor für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die der Editor abgerufen werden soll.</param>
      <param name="baseEditorType">Der Basistyp des Editors für <paramref name="component" />.</param>
      <returns>Der Editor für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)">
      <summary>Ruft die Ereignisse für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <returns>Eine Auflistung von Ereignisdeskriptoren für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])">
      <summary>Ruft die Ereignisse mit den angegebenen Attributen für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <param name="attributes">Die Attribute, mit denen Ereignisse gefiltert werden.</param>
      <returns>Eine Auflistung von Ereignisdeskriptoren für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)">
      <summary>Ruft den Namen der angegebenen Komponente ab.</summary>
      <param name="component">Der Komponente, deren Name abgerufen werden soll.</param>
      <returns>Der Name von <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])">
      <summary>Ruft die Eigenschaften mit den angegebenen Attributen für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <param name="attributes">Die Attribute, mit denen Eigenschaften gefiltert werden.</param>
      <returns>Eine Auflistung von Eigenschaftendeskriptoren für <paramref name="component" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)">
      <summary>Ruft den Wert der Eigenschaft ab, die über den angegebenen Dispatchbezeichner verfügt.</summary>
      <param name="component">Das Objekt, zu dem die Eigenschaft gehört.</param>
      <param name="dispid">Der Dispatchbezeichner.</param>
      <param name="success">Ein als Verweis übergebener <see cref="T:System.Boolean" />, der darstellt, ob die Eigenschaft abgerufen wurde.</param>
      <returns>Der Wert der Eigenschaft, die über den angegebenen Dispatchbezeichner verfügt.</returns>
    </member>
    <member name="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)">
      <summary>Ruft den Wert der Eigenschaft mit dem angegebenen Namen ab.</summary>
      <param name="component">Das Objekt, zu dem die Eigenschaft gehört.</param>
      <param name="propertyName">Den Namen der Eigenschaft.</param>
      <param name="success">Ein als Verweis übergebener <see cref="T:System.Boolean" />, der darstellt, ob die Eigenschaft abgerufen wurde.</param>
      <returns>Der Wert der Eigenschaft mit dem angegebenen Namen.</returns>
    </member>
    <member name="T:System.ComponentModel.ICustomTypeDescriptor">
      <summary>Stellt eine Schnittstelle bereit, die dynamische benutzerdefinierte Typinformationen für ein Objekt angibt.</summary>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <summary>Gibt eine Auflistung benutzerdefinierter Attribute für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" />, die die Attribute für dieses Objekt enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <summary>Gibt den Klassennamen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Klassenname des Objekts oder <see langword="null" />, wenn die Klasse keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <summary>Gibt den Namen dieser Instanz einer Komponente zurück.</summary>
      <returns>Der Name des Objekts oder <see langword="null" />, wenn das Objekt keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <summary>Gibt einen Typkonverter für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" />, der der Konverter für dieses Objekt ist, oder <see langword="null" />, wenn für dieses Objekt kein <see cref="T:System.ComponentModel.TypeConverter" /> vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <summary>Gibt das Standardereignis für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" />, das das Standardereignis für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Ereignisse aufweist.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <summary>Gibt die Standardeigenschaft für diese Instanz einer Komponente zurück.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Standardeigenschaft für dieses Objekt darstellt, oder <see langword="null" />, wenn dieses Objekt keine Eigenschaften hat.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
      <summary>Gibt einen Editor des angegebenen Typs für diese Instanz einer Komponente zurück.</summary>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Editor für dieses Objekt darstellt.</param>
      <returns>Ein <see cref="T:System.Object" /> des angegebenen Typs, das den Editor für dieses Objekt darstellt, oder <see langword="null" /> wenn der Editor nicht gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
      <summary>Gibt die Ereignisse für diese Instanz einer Komponente zurück, wobei das angegebene Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" />, die die gefilterten Ereignisse für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
      <summary>Gibt die Eigenschaften für diese Instanz einer Komponente zurück, wobei das Attributarray als Filter verwendet wird.</summary>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die gefilterten Eigenschaften für diese Komponenteninstanz darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt ein Objekt zurück, das die Eigenschaft enthält, die durch den Eigenschaftendeskriptor angegeben ist.</summary>
      <param name="pd">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, nach deren Besitzer gesucht werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Besitzer der angegebenen Eigenschaft darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.IDataErrorInfo">
      <summary>Stellt Funktionen für die Unterstützung benutzerdefinierter Fehlerinformationen bereit, an die eine Benutzeroberfläche gebunden werden kann.</summary>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Error">
      <summary>Ruft eine Fehlermeldung ab, die den Fehler in diesem Objekt angibt.</summary>
      <returns>Eine Fehlermeldung, die den Fehler in diesem Objekt angibt. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
      <summary>Ruft die Fehlermeldung für die Eigenschaft mit dem angegebenen Namen ab.</summary>
      <param name="columnName">Der Name der Eigenschaft, deren Fehlermeldung abgerufen werden soll.</param>
      <returns>Die Fehlermeldung für die Eigenschaft. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="T:System.ComponentModel.IExtenderProvider">
      <summary>Definiert die Schnittstelle für das Erweitern von Eigenschaften auf andere Komponenten in einem Container.</summary>
    </member>
    <member name="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)">
      <summary>Gibt an, ob dieses Objekt dem angegebenen Objekt seine Extendereigenschaften zur Verfügung stellen kann.</summary>
      <param name="extendee">Das <see cref="T:System.Object" />, das Extendereigenschaften empfangen soll.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt seine Extendereigenschaften für das angegebene Objekt bereitstellen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.IIntellisenseBuilder">
      <summary>Stellt eine Schnittstelle bereit, um das Abrufen des Generatornamens zu erleichtern und den Generator anzuzeigen.</summary>
    </member>
    <member name="M:System.ComponentModel.IIntellisenseBuilder.Show(System.String,System.String,System.String@)">
      <summary>Zeigt den Generator an.</summary>
      <param name="language">Der Sprachdienst, der den Generator aufruft.</param>
      <param name="value">Der Ausdruck, der bearbeitet wird.</param>
      <param name="newValue">Der neue Wert.</param>
      <returns>
        <see langword="true" />, wenn der Wert durch <paramref name="newValue" /> ersetzt werden soll; andernfalls <see langword="false" /> (z. B., wenn der Benutzer den Vorgang abbricht).</returns>
    </member>
    <member name="P:System.ComponentModel.IIntellisenseBuilder.Name">
      <summary>Ruft einen lokalisierten Namen ab.</summary>
      <returns>Ein lokalisierter Name.</returns>
    </member>
    <member name="T:System.ComponentModel.IListSource">
      <summary>Stellt Funktionen für ein Objekt bereit, mit denen dieses eine Liste zurückgeben kann, die an eine Datenquelle gebunden werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.IListSource.GetList">
      <summary>Gibt eine <see cref="T:System.Collections.IList" /> zurück, die an eine Datenquelle eines Objekts gebunden werden kann, das selbst keine <see cref="T:System.Collections.IList" /> implementiert.</summary>
      <returns>Eine <see cref="T:System.Collections.IList" />, die an eine Datenquelle eines Objekts gebunden werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.IListSource.ContainsListCollection">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine <see cref="T:System.Collections.IList" />-Objektauflistung ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.INestedContainer">
      <summary>Stellt Funktionalität für geschachtelte Container bereit, die logisch 0 (null) oder mehr Komponenten enthalten und von einer übergeordneten Komponente besessen werden.</summary>
    </member>
    <member name="P:System.ComponentModel.INestedContainer.Owner">
      <summary>Ruft die besitzende Komponente für den geschachtelten Container ab.</summary>
      <returns>Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</returns>
    </member>
    <member name="T:System.ComponentModel.INestedSite">
      <summary>Ermöglicht das Abrufen des vollen geschachtelten Namens einer Komponente.</summary>
    </member>
    <member name="P:System.ComponentModel.INestedSite.FullName">
      <summary>Ruft den vollständigen Namen der Komponente in dieser Site ab.</summary>
      <returns>Der vollständige Name der Komponente in dieser Site.</returns>
    </member>
    <member name="T:System.ComponentModel.InheritanceAttribute">
      <summary>Gibt an, ob die diesem Attribut zugeordnete Komponente von einer Basisklasse vererbt wurde. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.Default">
      <summary>Gibt an, dass <see cref="T:System.ComponentModel.InheritanceAttribute" /> der Standardwert für <see cref="F:System.ComponentModel.InheritanceAttribute.NotInherited" /> ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.Inherited">
      <summary>Gibt an, dass die Komponente vererbt ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.InheritedReadOnly">
      <summary>Gibt an, dass die Komponente vererbt und schreibgeschützt ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceAttribute.NotInherited">
      <summary>Gibt an, dass die Komponente nicht vererbt ist. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.InheritanceAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.#ctor(System.ComponentModel.InheritanceLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.InheritanceAttribute" />-Klasse mit der angegebenen Vererbungsebene.</summary>
      <param name="inheritanceLevel">Ein <see cref="T:System.ComponentModel.InheritanceLevel" />, das die Vererbungsebene angibt, auf die dieses Attribut festgelegt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.Equals(System.Object)">
      <summary>Überschreiben Sie diesen Member, um auf Gleichheit zu prüfen.</summary>
      <param name="value">Das zu überprüfende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das Objekt gleich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.GetHashCode">
      <summary>Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.InheritanceAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.IsDefaultAttribute">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Wert des Attributs dessen Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Wert des Attributs der Standardwert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.InheritanceAttribute.ToString">
      <summary>Konvertiert dieses Attribut in eine Zeichenfolge.</summary>
      <returns>Eine Zeichenfolge, die diese <see cref="T:System.ComponentModel.InheritanceAttribute" /> darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.InheritanceAttribute.InheritanceLevel">
      <summary>Ruft die in diesem Attribut gespeicherte aktuelle Vererbungsebene ab oder legt diese fest.</summary>
      <returns>Das in diesem Attribut gespeicherte <see cref="T:System.ComponentModel.InheritanceLevel" />.</returns>
    </member>
    <member name="T:System.ComponentModel.InheritanceLevel">
      <summary>Definiert Bezeichner für Typen von Vererbungsebenen.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.Inherited">
      <summary>Das Objekt ist vererbt.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.InheritedReadOnly">
      <summary>Das Objekt ist vererbt, aber mit Schreibschutz versehen.</summary>
    </member>
    <member name="F:System.ComponentModel.InheritanceLevel.NotInherited">
      <summary>Das Objekt ist nicht vererbt.</summary>
    </member>
    <member name="T:System.ComponentModel.InstallerTypeAttribute">
      <summary>Gibt das Installationsprogramm für einen Typ an, das Komponenten installiert.</summary>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.InstallerTypeAttribute" />-Klasse mit dem Namen des Installationsprogrammtyps für die Komponente.</summary>
      <param name="typeName">Der Name eines <see cref="T:System.Type" />, der das Installationsprogramm für die Komponente darstellt, an die dieses Attribut gebunden ist. Diese Klasse muss <see cref="T:System.ComponentModel.Design.IDesigner" /> implementieren.</param>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.InstallerTypeAttribute" />-Klasse, wenn ein <see cref="T:System.Type" /> angegeben wird, der das Installationsprogramm für eine Komponente darstellt.</summary>
      <param name="installerType">Ein <see cref="T:System.Type" />, der das Installationsprogramm für die Komponente darstellt, an die dieses Attribut gebunden ist. Diese Klasse muss <see cref="T:System.ComponentModel.Design.IDesigner" /> implementieren.</param>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.InstallerTypeAttribute" /> ist.</summary>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.InstallerTypeAttribute.GetHashCode">
      <summary>Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.InstallerTypeAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.InstallerTypeAttribute.InstallerType">
      <summary>Ruft den Typ des Installationsprogramms ab, das diesem Attribut zugeordnet ist.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ des Installationsprogramms darstellt, das diesem Attribut zugeordnet ist, oder <see langword="null" />, wenn kein Installationsprogramm vorhanden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.InstanceCreationEditor">
      <summary>Erstellt eine Instanz eines bestimmten Eigenschaftentyps aus einem Dropdown-Listenfeld innerhalb von <see cref="T:System.Windows.Forms.PropertyGrid" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InstanceCreationEditor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.InstanceCreationEditor" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.InstanceCreationEditor.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine Instanz des angegebenen Typs zurück.</summary>
      <param name="context">Die Kontextinformationen.</param>
      <param name="instanceType">Der angegebene Typ.</param>
      <returns>Eine Instanz des angegebenen Typs oder <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.InstanceCreationEditor.Text">
      <summary>Ruft den angegebenen Text ab.</summary>
      <returns>Der angegebene Text.</returns>
    </member>
    <member name="T:System.ComponentModel.Int16Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 16-Bit-Ganzzahlobjekten mit Vorzeichen in und von anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Int16Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Int16Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.Int32Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 32-Bit-Objekten, die ganze Zahlen mit Vorzeichen sind, in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Int32Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Int32Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.Int64Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 64-Bit-Objekten, die ganze Zahlen mit Vorzeichen sind, in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.Int64Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Int64Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.IRaiseItemChangedEvents">
      <summary>Gibt an, ob eine Klasse Eigenschaftenänderungsereignisse in <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignisse konvertiert.</summary>
    </member>
    <member name="P:System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.ComponentModel.IRaiseItemChangedEvents" />-Objekt <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignisse auslöst.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.ComponentModel.IRaiseItemChangedEvents" />-Objekt bei der Änderung einer seiner Eigenschaftswerte ein <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis auslöst, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitializeNotification">
      <summary>Ermöglicht die Koordination der Initialisierung einer Komponente und ihrer abhängigen Eigenschaften.</summary>
    </member>
    <member name="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
      <summary>Tritt ein, wenn die Initialisierung der Komponente abgeschlossen ist.</summary>
    </member>
    <member name="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <summary>Ruft einen Wert ab, der angibt, ob die Komponente initialisiert ist.</summary>
      <returns>
        <see langword="true" />, um anzugeben, dass die Komponente die Initialisierung abgeschlossen hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypeDescriptorContext">
      <summary>Stellt Kontextinformationen über eine Komponente bereit, z. B. den zugehörigen Container und Eigenschaftendeskriptor.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <summary>Löst das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignis aus.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <summary>Löst das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignis aus.</summary>
      <returns>
        <see langword="true" />, wenn dieses Objekt geändert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <summary>Ruft den Container ab, der diese <see cref="T:System.ComponentModel.TypeDescriptor" />-Anforderung darstellt.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.IContainer" /> mit der Gruppe von Objekten für diesen <see cref="T:System.ComponentModel.TypeDescriptor" />, andernfalls <see langword="null" />, wenn kein Container vorhanden ist oder der <see cref="T:System.ComponentModel.TypeDescriptor" /> keine externen Objekte verwendet.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <summary>Ruft das Objekt ab, das mit dieser Typdeskriptoranforderung verbunden ist.</summary>
      <returns>Das Objekt, das die Methode für den <see cref="T:System.ComponentModel.TypeDescriptor" /> aufruft, andernfalls <see langword="null" />, wenn kein für den Aufruf verantwortliches Objekt vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> ab, der dem angegebenen Kontextelement zugeordnet ist.</summary>
      <returns>Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das angegebene Kontextelement beschreibt, andernfalls <see langword="null" />, wenn kein für den Aufruf verantwortlicher <see cref="T:System.ComponentModel.PropertyDescriptor" /> vorhanden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.ITypedList">
      <summary>Stellt Funktionen bereit, mit denen das Schema für eine bindbare Liste ermittelt werden kann, in der für die Bindung verfügbare Eigenschaften von den öffentlichen Eigenschaften des Objekts, an das gebunden werden soll, unterschieden werden.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Gibt die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse zurück, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die in der Sammlung als bindbar gesucht werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Die <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften auf jedem Element darstellt, das zum Binden von Daten verwendet wird.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Gibt den Namen der Liste zurück.</summary>
      <param name="listAccessors">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, für die der Listenname zurückgegeben wird. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Der Name der Liste.</returns>
    </member>
    <member name="T:System.ComponentModel.License">
      <summary>Stellt die <see langword="abstract" />-Basisklasse für alle Lizenzen bereit. Eine Lizenz wird einer bestimmten Instanz einer Komponente erteilt.</summary>
    </member>
    <member name="M:System.ComponentModel.License.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.License" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.License.Dispose">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse die von der Lizenz verwendeten Ressource frei.</summary>
    </member>
    <member name="P:System.ComponentModel.License.LicenseKey">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den für diese Komponente erteilten Lizenzschlüssel ab.</summary>
      <returns>Ein für diese Komponente erteilter Lizenzschlüssel.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseContext">
      <summary>Gibt an, wann ein lizenziertes Objekt verwendet werden kann, und bietet eine Möglichkeit, zusätzliche Dienste für die Unterstützung der Lizenzen zu erhalten, die in der entsprechenden Domäne ausgeführt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseContext" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen gespeicherten Lizenzschlüssel für den angegebenen Typ aus der angegebenen Ressourcenassembly zurück.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der den Typ der Komponente darstellt.</param>
      <param name="resourceAssembly">Eine <see cref="T:System.Reflection.Assembly" /> mit dem Lizenzschlüssel.</param>
      <returns>Der <see cref="P:System.ComponentModel.License.LicenseKey" /> für den angegebenen Typ. Diese Methode gibt <see langword="null" /> zurück, sofern sie nicht überschrieben wird.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.GetService(System.Type)">
      <summary>Ruft den angeforderten Dienst ab, wenn dieser verfügbar ist.</summary>
      <param name="type">Der Typ des abzurufenden Diensts.</param>
      <returns>Eine Instanz des Dienstes oder <see langword="null" />, wenn der Dienst nicht gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <summary>Legt beim Überschreiben in einer abgeleiteten Klasse einen Lizenzschlüssel für den angegebenen Typ fest.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der die Komponente darstellt, die dem Lizenzschlüssel zugeordnet ist.</param>
      <param name="key">Der <see cref="P:System.ComponentModel.License.LicenseKey" />, der für den Komponententyp gespeichert werden soll.</param>
    </member>
    <member name="P:System.ComponentModel.LicenseContext.UsageMode">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, wann eine Lizenz verwendet werden kann.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.LicenseUsageMode" />-Werte, der angibt, wann eine Lizenz verwendet werden kann. Der Standardwert ist <see cref="F:System.ComponentModel.LicenseUsageMode.Runtime" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn einer Komponente keine Lizenz erteilt werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseException" />-Klasse mit der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
      <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseException" />-Klasse für den Komponententyp, dem die Lizenz verweigert wurde.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, dem keine Lizenz erteilt wurde.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseException" />-Klasse für den Typ und die Instanz der Komponente, der die Lizenz verweigert wurde.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, dem keine Lizenz erteilt wurde.</param>
      <param name="instance">Die Instanz der Komponente, der keine Lizenz erteilt wurde.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseException" />-Klasse für den Typ und die Instanz der Komponente, der die Lizenz verweigert wurde, sowie eine anzuzeigende Meldung.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, dem keine Lizenz erteilt wurde.</param>
      <param name="instance">Die Instanz der Komponente, der keine Lizenz erteilt wurde.</param>
      <param name="message">Die anzuzeigende Ausnahmemeldung.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseException" />-Klasse für den Typ und die Instanz der Komponente, der die Lizenz verweigert wurde, sowie eine anzuzeigende Meldung und die ursprünglich ausgelöste Ausnahme.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, dem keine Lizenz erteilt wurde.</param>
      <param name="instance">Die Instanz der Komponente, der keine Lizenz erteilt wurde.</param>
      <param name="message">Die anzuzeigende Ausnahmemeldung.</param>
      <param name="innerException">Eine <see cref="T:System.Exception" />-Klasse, die die ursprüngliche Ausnahme darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit Informationen zur Ausnahme fest.</summary>
      <param name="info">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
      <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.LicenseException.LicensedType">
      <summary>Ruft den Typ der Komponente ab, der keine Lizenz erteilt wurde.</summary>
      <returns>Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, dem keine Lizenz erteilt wurde.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseManager">
      <summary>Stellt Eigenschaften und Methoden zur Verfügung, um eine Lizenz zu einer Komponente hinzuzufügen und einen <see cref="T:System.ComponentModel.LicenseProvider" /> zu verwalten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)">
      <summary>Erstellt eine Instanz des angegebenen Typs, wenn ein Kontext angegeben ist, in dem Sie die lizenzierte Instanz verwenden können.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den zu erstellenden Typ darstellt.</param>
      <param name="creationContext">Eine <see cref="T:System.ComponentModel.LicenseContext" />-Klasse, die angibt, wann Sie die lizenzierte Instanz verwenden können.</param>
      <returns>Eine Instanz des angegebenen Typs.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])">
      <summary>Erstellt eine Instanz des angegebenen Typs mit den angegebenen Argumenten, wenn ein Kontext vorhanden ist, in dem Sie die lizenzierte Instanz verwenden können.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den zu erstellenden Typ darstellt.</param>
      <param name="creationContext">Eine <see cref="T:System.ComponentModel.LicenseContext" />-Klasse, die angibt, wann Sie die lizenzierte Instanz verwenden können.</param>
      <param name="args">Ein Array vom Typ <see cref="T:System.Object" />, das die Argumente für den Typ darstellt.</param>
      <returns>Eine Instanz des angegebenen Typs mit dem angegebenen Array von Argumenten.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)">
      <summary>Gibt zurück, ob der angegebene Typ über eine gültige Lizenz verfügt.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse, für die eine gültige Lizenz gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Typ lizenziert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type)">
      <summary>Bestimmt, ob für den angegebenen Typ eine gültige Lizenz erteilt werden kann.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse, die den Typ des Objekts darstellt, das die <see cref="T:System.ComponentModel.License" />-Klasse anfordert.</param>
      <returns>
        <see langword="true" />, wenn eine gültige Lizenz erteilt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)">
      <summary>Bestimmt, ob für die angegebene Instanz des Typs eine gültige Lizenz erteilt werden kann. Diese Methode erstellt eine gültige <see cref="T:System.ComponentModel.License" />-Klasse.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Typ des Objekts darstellt, das die Lizenz anfordert.</param>
      <param name="instance">Ein Objekt vom angegebenen Typ oder einem Typ, der vom angegebenen Typ abgeleitet ist.</param>
      <param name="license">Eine <see cref="T:System.ComponentModel.License" />-Klasse, die eine gültige Lizenz darstellt, oder <see langword="null" />, wenn keine gültige Lizenz erteilt werden kann.</param>
      <returns>
        <see langword="true" />, wenn eine gültige <see cref="T:System.ComponentModel.License" />-Klasse aufgerufen werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.LockContext(System.Object)">
      <summary>Verhindert Änderungen an der aktuellen <see cref="T:System.ComponentModel.LicenseContext" />-Klasse des angegebenen Objekts.</summary>
      <param name="contextUser">Das Objekt, dessen aktuellen Kontext Sie sperren möchten.</param>
      <exception cref="T:System.InvalidOperationException">Der Kontext ist bereits gesperrt.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.UnlockContext(System.Object)">
      <summary>Ermöglicht Änderungen an der aktuellen <see cref="T:System.ComponentModel.LicenseContext" />-Klasse des angegebenen Objekts.</summary>
      <param name="contextUser">Das Objekt, dessen aktuellen Kontext Sie entsperren möchten.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="contextUser" />-Parameter stellt einen anderen Benutzer dar als den in einem vorherigen Aufruf der <see cref="M:System.ComponentModel.LicenseManager.LockContext(System.Object)" />-Methode angegebenen Benutzer.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type)">
      <summary>Bestimmt, ob für den angegebenen Typ eine Lizenz erteilt werden kann.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Typ des Objekts darstellt, das die Lizenz anfordert.</param>
      <exception cref="T:System.ComponentModel.LicenseException">Eine <see cref="T:System.ComponentModel.License" />-Klasse kann nicht aufgerufen werden.</exception>
    </member>
    <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)">
      <summary>Bestimmt, ob für die Instanz des angegebenen Typs eine Lizenz erteilt werden kann.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den Typ des Objekts darstellt, das die Lizenz anfordert.</param>
      <param name="instance">Eine <see cref="T:System.Object" />-Klasse vom angegebenen Typ oder einem Typ, der vom angegebenen Typ abgeleitet ist.</param>
      <exception cref="T:System.ComponentModel.LicenseException">Der Typ ist lizenziert, aber es konnte keine <see cref="T:System.ComponentModel.License" />-Klasse aufgerufen werden.</exception>
      <returns>Ein gültiges <see cref="T:System.ComponentModel.License" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseManager.CurrentContext">
      <summary>Ruft die aktuelle <see cref="T:System.ComponentModel.LicenseContext" />-Klasse ab, die angibt, wann Sie das lizenzierte Objekt verwenden können, oder legt diese fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />-Eigenschaft ist gegenwärtig gesperrt und kann nicht geändert werden.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.LicenseContext" />-Klasse, die angibt, wann Sie das lizenzierte Objekt verwenden können.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseManager.UsageMode">
      <summary>Ruft die <see cref="T:System.ComponentModel.LicenseUsageMode" />-Enumeration ab, die angibt, wann Sie das lizenzierte Objekt für die <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />-Eigenschaft verwenden können.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.LicenseUsageMode" />-Werte, wie in der <see cref="P:System.ComponentModel.LicenseManager.CurrentContext" />-Eigenschaft angegeben.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseProvider">
      <summary>Stellt die <see langword="abstract" />-Basisklasse für die Implementierung eines Lizenzgebers bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Lizenz für eine Instanz oder einen Typ einer Komponente ab, wenn ein Kontext vorhanden und angegeben ist, ob bei einer Lizenzverweigerung eine Ausnahme ausgelöst wird.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.LicenseContext" />, der angibt, wo Sie das lizenzierte Objekt verwenden können.</param>
      <param name="type">Ein <see cref="T:System.Type" />, der die Komponente darstellt, die die Lizenz anfordert.</param>
      <param name="instance">Ein Objekt, das die Lizenz anfordert.</param>
      <param name="allowExceptions">
        <see langword="true" />, wenn eine <see cref="T:System.ComponentModel.LicenseException" /> ausgelöst werden soll, wenn der Komponente keine Lizenz erteilt werden kann, andernfalls <see langword="false" />.</param>
      <returns>Ein gültiges <see cref="T:System.ComponentModel.License" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseProviderAttribute">
      <summary>Gibt den mit einer Klasse zu verwendenden <see cref="T:System.ComponentModel.LicenseProvider" /> an. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.LicenseProviderAttribute.Default">
      <summary>Gibt den Standardwert an, der kein Anbieter ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseProviderAttribute" />-Klasse ohne Lizenzgeber.</summary>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseProviderAttribute" />-Klasse mit dem angegebenen Typ.</summary>
      <param name="typeName">Der voll gekennzeichnete Name der Lizenzgeber-Klasse.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicenseProviderAttribute" />-Klasse mit dem angegebenen Typ eines Lizenzgebers.</summary>
      <param name="type">Ein <see cref="T:System.Type" />, der den Typ der Lizenzgeber-Klasse darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)">
      <summary>Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="value">Ein weiteres Objekt für den Vergleich.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> gleich dieser Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LicenseProviderAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.LicenseProviderAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseProviderAttribute.LicenseProvider">
      <summary>Ruft den Lizenzgeber ab, der für die zugeordnete Klasse verwendet werden muss.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ des Lizenzgebers darstellt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LicenseProviderAttribute.TypeId">
      <summary>Gibt eine eindeutige ID für diesen Attributtyp an.</summary>
      <returns>Eine eindeutige ID für diesen Attributtyp.</returns>
    </member>
    <member name="T:System.ComponentModel.LicenseUsageMode">
      <summary>Gibt an, wann <see cref="T:System.ComponentModel.License" /> verwendet werden kann.</summary>
    </member>
    <member name="F:System.ComponentModel.LicenseUsageMode.Designtime">
      <summary>Wird zur Entwurfszeit von einem visuellen Designer oder dem Compiler verwendet.</summary>
    </member>
    <member name="F:System.ComponentModel.LicenseUsageMode.Runtime">
      <summary>Wird zur Laufzeit verwendet.</summary>
    </member>
    <member name="T:System.ComponentModel.LicFileLicenseProvider">
      <summary>Stellt eine Implementierung eines <see cref="T:System.ComponentModel.LicenseProvider" /> bereit. Die Funktionsweise des Lizenzgebers weist große Ähnlichkeit mit der des Standardlizenzierungsmodells von Microsoft .NET Framework auf.</summary>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LicFileLicenseProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
      <summary>Gibt einen Schlüssel für den angegebenen Typ zurück.</summary>
      <param name="type">Der Objekttyp, der den Schlüssel zurückgeben soll.</param>
      <returns>Eine Bestätigung, dass der <paramref name="type" />-Parameter lizenziert ist.</returns>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
      <summary>Gibt eine ggf. verfügbare Lizenz für die Instanz der Komponente zurück.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.LicenseContext" />, der angibt, wo Sie das lizenzierte Objekt verwenden können.</param>
      <param name="type">Ein <see cref="T:System.Type" />, der die Komponente darstellt, die die <see cref="T:System.ComponentModel.License" /> anfordert.</param>
      <param name="instance">Ein Objekt, das die <see cref="T:System.ComponentModel.License" /> anfordert.</param>
      <param name="allowExceptions">
        <see langword="true" />, wenn eine <see cref="T:System.ComponentModel.LicenseException" /> ausgelöst werden soll, sobald einer Komponente keine Lizenz erteilt werden kann, andernfalls <see langword="false" />.</param>
      <returns>Ein gültiges <see cref="T:System.ComponentModel.License" />. Wenn diese Methode keine gültige <see cref="T:System.ComponentModel.License" /> oder keinen gültigen <paramref name="context" />-Parameter findet, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
      <summary>Bestimmt, ob der durch die <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />-Methode abgerufene Schlüssel für den angegebenen Typ gültig ist.</summary>
      <param name="key">Der zu überprüfende <see cref="P:System.ComponentModel.License.LicenseKey" />.</param>
      <param name="type">Ein <see cref="T:System.Type" />, der die Komponente darstellt, die die <see cref="T:System.ComponentModel.License" /> anfordert.</param>
      <returns>
        <see langword="true" />, wenn der Schlüssel ein gültiger <see cref="P:System.ComponentModel.License.LicenseKey" /> für den angegebenen Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ListBindableAttribute">
      <summary>Gibt an, dass eine Liste als Datenquelle verwendet werden kann. Ein visueller Designer ermittelt mithilfe dieses Attributs, ob eine bestimmte Liste in einer Datenbindungsauswahl angezeigt werden soll. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.Default">
      <summary>Stellt den Standardwert für <see cref="T:System.ComponentModel.ListBindableAttribute" /> dar.</summary>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.No">
      <summary>Gibt an, dass die Liste nicht bindbar ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.ListBindableAttribute.Yes">
      <summary>Gibt an, dass die Liste bindbar ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListBindableAttribute" />-Klasse, wobei durch einen Wert angegeben wird, ob die Liste bindbar ist.</summary>
      <param name="listBindable">
        <see langword="true" />, wenn die Liste bindbar ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.#ctor(System.ComponentModel.BindableSupport)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListBindableAttribute" />-Klasse, wobei <see cref="T:System.ComponentModel.BindableSupport" /> angibt, ob die Liste bindbar ist.</summary>
      <param name="flags">Ein <see cref="T:System.ComponentModel.BindableSupport" />, der angibt, ob die Liste bindbar ist.</param>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob das übergebene Objekt gleich diesem <see cref="T:System.ComponentModel.ListBindableAttribute" /> ist.</summary>
      <param name="obj">Das Objekt, das auf Gleichheit überprüft wird.</param>
      <returns>
        <see langword="true" />, wenn das übergebene Objekt gleich diesem <see cref="T:System.ComponentModel.ListBindableAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.ListBindableAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListBindableAttribute.IsDefaultAttribute">
      <summary>Gibt zurück, ob <see cref="P:System.ComponentModel.ListBindableAttribute.ListBindable" /> auf den Standardwert festgelegt ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="P:System.ComponentModel.ListBindableAttribute.ListBindable" /> auf den Standardwert festgelegt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ListBindableAttribute.ListBindable">
      <summary>Ruft ab, ob die Liste bindbar ist.</summary>
      <returns>
        <see langword="true" />, wenn die Liste bindbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ListChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.ComponentModel.PropertyDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListChangedEventArgs" />-Klasse bei angegebenem Typ der Änderung und betroffenem <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
      <param name="listChangedType">Ein <see cref="T:System.ComponentModel.ListChangedType" />-Wert, der den Typ der Änderung angibt.</param>
      <param name="propDesc">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der hinzugefügt, entfernt oder geändert wurde.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListChangedEventArgs" />-Klasse bei angegebenem Typ der Änderung und Index des betroffenen Elements.</summary>
      <param name="listChangedType">Ein <see cref="T:System.ComponentModel.ListChangedType" />-Wert, der den Typ der Änderung angibt.</param>
      <param name="newIndex">Der Index des Elements, das hinzugefügt, geändert oder entfernt wurde.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListChangedEventArgs" />-Klasse bei angegebenem Typ der Änderung, Index des betroffenen Elements und einem <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das betroffene Element beschreibt.</summary>
      <param name="listChangedType">Ein <see cref="T:System.ComponentModel.ListChangedType" />-Wert, der den Typ der Änderung angibt.</param>
      <param name="newIndex">Der Index des Elements, das hinzugefügt oder geändert wurde.</param>
      <param name="propDesc">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das Element beschreibt.</param>
    </member>
    <member name="M:System.ComponentModel.ListChangedEventArgs.#ctor(System.ComponentModel.ListChangedType,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListChangedEventArgs" />-Klasse bei angegebenem Typ der Änderung und altem und neuen Index des Elements, das verschoben wurde.</summary>
      <param name="listChangedType">Ein <see cref="T:System.ComponentModel.ListChangedType" />-Wert, der den Typ der Änderung angibt.</param>
      <param name="newIndex">Der neue Index des Elements, das verschoben wurde.</param>
      <param name="oldIndex">Der alte Index des Elements, das verschoben wurde.</param>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.ListChangedType">
      <summary>Ruft den Typ der Änderung ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ListChangedType" />-Wert, der den Typ der Änderung angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.NewIndex">
      <summary>Ruft den Index des von der Änderung betroffenen Elements ab.</summary>
      <returns>Der Index der von der Änderung betroffenen Elements.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.OldIndex">
      <summary>Ruft den alten Index eines Elements ab, das verschoben wurde.</summary>
      <returns>Der alte Index des verschobenen Elements.</returns>
    </member>
    <member name="P:System.ComponentModel.ListChangedEventArgs.PropertyDescriptor">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> ab, der hinzugefügt, geändert oder gelöscht wurde.</summary>
      <returns>Der von der Änderung betroffene <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ListChangedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.ComponentModel.IBindingList.ListChanged" />-Ereignis der <see cref="T:System.ComponentModel.IBindingList" />-Klasse behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.ComponentModel.ListChangedEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.ComponentModel.ListChangedType">
      <summary>Gibt an, in welcher Weise die Liste geändert wurde.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemAdded">
      <summary>Ein der Liste hinzugefügtes Element. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> enthält den Index des hinzugefügten Elements.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemChanged">
      <summary>Ein Listenelement, das geändert wurde. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> enthält den Index des geänderten Elements.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemDeleted">
      <summary>Ein Element, das aus der Liste entfernt wurde. <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> enthält den Index des gelöschten Elements.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.ItemMoved">
      <summary>Ein Element, das innerhalb der Liste verschoben wurde. <see cref="P:System.ComponentModel.ListChangedEventArgs.OldIndex" /> enthält den vorherigen Index des Elements, und <see cref="P:System.ComponentModel.ListChangedEventArgs.NewIndex" /> enthält den neuen Index des Elements.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorAdded">
      <summary>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> wurde hinzugefügt, wobei eine Änderung des Schemas stattfand.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorChanged">
      <summary>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> wurde geändert, wobei eine Änderung des Schemas stattfand.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.PropertyDescriptorDeleted">
      <summary>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> wurde gelöscht, wobei eine Änderung des Schemas stattfand.</summary>
    </member>
    <member name="F:System.ComponentModel.ListChangedType.Reset">
      <summary>An der Liste wurde sehr viel geändert. Jedes überwachende Steuerelement muss seine gesamten Daten aus der Liste aktualisieren.</summary>
    </member>
    <member name="T:System.ComponentModel.ListSortDescription">
      <summary>Stellt eine Beschreibung des Sortiervorgangs bereit, der auf eine Datenquelle angewendet wird.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescription.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListSortDescription" />-Klasse mit der angegebenen Eigenschaftsbeschreibung und -richtung.</summary>
      <param name="property">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft beschreibt, anhand derer die Datenquelle sortiert wird.</param>
      <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDescription" />-Werte.</param>
    </member>
    <member name="P:System.ComponentModel.ListSortDescription.PropertyDescriptor">
      <summary>Ruft die abstrakte Beschreibung einer Klasseneigenschaft ab, die dieser <see cref="T:System.ComponentModel.ListSortDescription" /> zugeordnet ist, oder legt diese fest.</summary>
      <returns>Das dieser <see cref="T:System.ComponentModel.PropertyDescriptor" /> zugeordnete <see cref="T:System.ComponentModel.ListSortDescription" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescription.SortDirection">
      <summary>Ruft die Richtung des Sortiervorgangs ab, der dieser <see cref="T:System.ComponentModel.ListSortDescription" /> zugeordnet ist, oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</returns>
    </member>
    <member name="T:System.ComponentModel.ListSortDescriptionCollection">
      <summary>Stellt eine Auflistung von<see cref="T:System.ComponentModel.ListSortDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.#ctor(System.ComponentModel.ListSortDescription[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />-Klasse mit dem angegebenen Array von <see cref="T:System.ComponentModel.ListSortDescription" />-Objekten.</summary>
      <param name="sorts">Das Array von <see cref="T:System.ComponentModel.ListSortDescription" />-Objekten, die in der Auflistung enthalten sein sollen.</param>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)">
      <summary>Ermittelt, ob das <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> einen bestimmten Wert enthält.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert den Inhalt der Auflistung in das angegebene Array, wobei am angegebenen Index des Zielarrays begonnen wird.</summary>
      <param name="array">Das Zielarray für die aus der Auflistung kopierten Elemente.</param>
      <param name="index">Der Index des Zielarrays, an dem der Kopiervorgang beginnen soll.</param>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.IndexOf(System.Object)">
      <summary>Gibt den Index des angegebenen Elements in der Auflistung zurück.</summary>
      <param name="value">Die <see cref="T:System.Object" />, die in der Auflistung gesucht werden soll.</param>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ruft einen <see cref="T:System.Collections.IEnumerator" /> ab, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der Auflistung ein Element hinzu.</summary>
      <param name="value">Das Element, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index der <see cref="T:System.ComponentModel.ListSortDescription" /> in der Auflistung, die abgerufen oder festgelegt werden soll</param>
      <param name="value">Das Element, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines Elements aus der Auflistung.</summary>
      <param name="value">Das Element, das aus der Auflistung entfernt werden soll.</param>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
    </member>
    <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt ein Element am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der nullbasierte Index des aus der Auflistung zu entfernenden <see cref="T:System.ComponentModel.ListSortDescription" /></param>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.Item(System.Int32)">
      <summary>Ruft den angegebenen <see cref="T:System.ComponentModel.ListSortDescription" /> ab oder legt diesen fest.</summary>
      <param name="index">Der nullbasierte Index des <see cref="T:System.ComponentModel.ListSortDescription" />-Objekts in der Auflistung, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.InvalidOperationException">In der schreibgeschützten <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> wird ein Element festgelegt.</exception>
      <returns>Das <see cref="T:System.ComponentModel.ListSortDescription" /> mit dem angegebenen Index.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung threadsicher ist.</summary>
      <returns>
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft die aktuelle Instanz ab, mit der der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Die aktuelle Instanz der <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft die angegebene <see cref="T:System.ComponentModel.ListSortDescription" /> ab.</summary>
      <param name="index">Der nullbasierte Index der <see cref="T:System.ComponentModel.ListSortDescription" />, die aus der Auflistung abgerufen werden soll</param>
      <returns>Das <see cref="T:System.ComponentModel.ListSortDescription" /> mit dem angegebenen Index.</returns>
    </member>
    <member name="T:System.ComponentModel.ListSortDirection">
      <summary>Gibt die Reihenfolge eines Sortiervorgangs an.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Ascending">
      <summary>Sortiert in aufsteigender Reihenfolge.</summary>
    </member>
    <member name="F:System.ComponentModel.ListSortDirection.Descending">
      <summary>Sortiert in absteigender Reihenfolge.</summary>
    </member>
    <member name="T:System.ComponentModel.LookupBindingPropertiesAttribute">
      <summary>Gibt die Eigenschaften an, die eine suchbasierte Bindung unterstützen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.LookupBindingPropertiesAttribute.Default">
      <summary>Stellt den Standardwert für die <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />-Klasse dar.</summary>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />-Klasse ohne Parameter.</summary>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />-Klasse.</summary>
      <param name="dataSource">Der Name der Eigenschaft, die als Datenquelle verwendet werden soll.</param>
      <param name="displayMember">Der Name der Eigenschaft, der für den Anzeigenamen verwendet werden soll.</param>
      <param name="valueMember">Der Name der Eigenschaft, die als Quelle für Werte verwendet werden soll.</param>
      <param name="lookupMember">Der Name der Eigenschaft, der für Suchvorgänge verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />-Instanz gleich sind.</summary>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />-Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Objekt und die aktuelle Instanz gleich sind, andernfalls <see langword="false" />, wenn sie nicht gleicht sind.</returns>
    </member>
    <member name="M:System.ComponentModel.LookupBindingPropertiesAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.DataSource">
      <summary>Ruft den Namen der Datenquelleneigenschaft für die Komponente ab, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</summary>
      <returns>Die Datenquelleneigenschaft für die Komponente, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden wird.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.DisplayMember">
      <summary>Ruft den Namen der Anzeigemembereigenschaft für die Komponente ab, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</summary>
      <returns>Der Name der Anzeigemembereigenschaft für die Komponente, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.LookupMember">
      <summary>Ruft den Namen des Suchmembers für die Komponente ab, an die das Attribut gebunden ist.</summary>
      <returns>Der Name des Suchmembers für die Komponente, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.LookupBindingPropertiesAttribute.ValueMember">
      <summary>Ruft den Namen der Wertmembereigenschaft für die Komponente ab, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</summary>
      <returns>Der Name der Wertmembereigenschaft für die Komponente, an die das <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> gebunden ist.</returns>
    </member>
    <member name="T:System.ComponentModel.MarshalByValueComponent">
      <summary>Implementiert <see cref="T:System.ComponentModel.IComponent" /> und stellt die Basisimplementierung für remotefähige Komponenten bereit, die als Wert gemarshallt werden (eine Kopie des serialisierten Objekts wird übergeben).</summary>
    </member>
    <member name="E:System.ComponentModel.MarshalByValueComponent.Disposed">
      <summary>Fügt einen Ereignishandler hinzu, der auf das <see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" />-Ereignis für die Komponente lauscht.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MarshalByValueComponent" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Dispose">
      <summary>Gibt alle vom <see cref="T:System.ComponentModel.MarshalByValueComponent" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.ComponentModel.MarshalByValueComponent" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.Finalize">
      <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
      <summary>Ruft die Implementierung von <see cref="T:System.IServiceProvider" /> ab.</summary>
      <param name="service">Ein <see cref="T:System.Type" />, der den Typ des gewünschten Dienstes darstellt.</param>
      <returns>Ein <see cref="T:System.Object" />, das die Implementierung von <see cref="T:System.IServiceProvider" /> darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.MarshalByValueComponent.ToString">
      <summary>Gibt einen <see cref="T:System.String" /> zurück, der den Namen der <see cref="T:System.ComponentModel.Component" /> enthält (sofern vorhanden). Diese Methode darf nicht überschrieben werden.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Namen dieser <see cref="T:System.ComponentModel.Component" /> enthält, sofern vorhanden.  
  
 <see langword="null" />, wenn die <see cref="T:System.ComponentModel.Component" /> unbenannt ist.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Container">
      <summary>Ruft den Container für die Komponente ab.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.ComponentModel.IContainer" />-Schnittstelle implementiert, die den Container der Komponente darstellt, oder <see langword="null" />, wenn die Komponente keine Site besitzt.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
      <summary>Ruft einen Wert ab, der angibt, ob sich die Komponente gegenwärtig im Entwurfsmodus befindet.</summary>
      <returns>
        <see langword="true" />, wenn sich die Komponente im Entwurfsmodus befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Events">
      <summary>Ruft die Liste der an diese Komponente angefügten Ereignishandler ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.EventHandlerList" />, die die Delegaten für diese Komponente bereitstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.MarshalByValueComponent.Site">
      <summary>Ruft die Site der Komponente ab oder legt sie fest.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.ComponentModel.ISite" />-Schnittstelle implementiert, die die Site der Komponente darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.MaskedTextProvider">
      <summary>Stellt einen Maskenanalysedienst dar, der von einer beliebigen Anzahl von Steuerelementen, die Maskierung unterstützen, verwendet werden kann, z. B. dem <see cref="T:System.Windows.Forms.MaskedTextBox" />-Steuerelement.</summary>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und des angegebenen ASCII-Einschränkungswerts.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="restrictToAscii">
        <see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)">
      <summary>Initialisiert unter Verwendung der angegebenen Maske, des angegebenen Kennwortzeichens und des Aufforderungsverwendungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="passwordChar">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</param>
      <param name="allowPromptAsInput">
        <see langword="true" />, um die Eingabe des Aufforderungszeichens zuzulassen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und der angegebenen Kultur.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse unter Verwendung der angegebenen Maske und Kultur sowie des angegebenen ASCII-Einschränkungswerts.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</param>
      <param name="restrictToAscii">
        <see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
      <summary>Initialisiert unter Verwendung der angegebenen Maske und Kultur, des angegebenen Aufforderungsverwendungswerts, des Kennwortzeichens und des ASCII-Einschränkungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</param>
      <param name="allowPromptAsInput">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob das Aufforderungszeichen als gültiges Eingabezeichen zugelassen werden soll.</param>
      <param name="promptChar">Ein <see cref="T:System.Char" />, der als Platzhalter für Benutzereingaben angezeigt wird.</param>
      <param name="passwordChar">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</param>
      <param name="restrictToAscii">
        <see langword="true" />, um die Eingabe auf ASCII-kompatible Zeichen zu beschränken, andernfalls <see langword="false" />, um den gesamten Unicode-Satz zuzulassen.</param>
      <exception cref="T:System.ArgumentException">Der Maskenparameter hat den Wert <see langword="null" /> oder <see cref="F:System.String.Empty" />.  
  
- oder - 
Die Maske enthält ein oder mehrere nicht druckbare Zeichen.</exception>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)">
      <summary>Initialisiert unter Verwendung der angegebenen Maske und Kultur, des angegebenen Kennwortzeichens und des Aufforderungsverwendungswerts eine neue Instanz der <see cref="T:System.ComponentModel.MaskedTextProvider" />-Klasse.</summary>
      <param name="mask">Ein <see cref="T:System.String" />, der die Eingabemaske darstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, mit deren Hilfe regionsabhängige Trennzeichen festgelegt werden.</param>
      <param name="passwordChar">Ein <see cref="T:System.Char" />, der für in eine Kennwortzeichenfolge eingegebene Zeichen angezeigt wird.</param>
      <param name="allowPromptAsInput">
        <see langword="true" />, um die Eingabe des Aufforderungszeichens zuzulassen, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.Char)">
      <summary>Fügt das angegebene Eingabezeichen am Ende der formatierten Zeichenfolge hinzu.</summary>
      <param name="input">Ein <see cref="T:System.Char" />-Wert, der an die formatierte Zeichenfolge angefügt werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Eingabezeichen erfolgreich hinzugefügt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Fügt das angegebene Eingabezeichen am Ende der formatierten Zeichenfolge hinzu und gibt dann Positions- und beschreibende Informationen aus.</summary>
      <param name="input">Ein <see cref="T:System.Char" />-Wert, der an die formatierte Zeichenfolge angefügt werden soll.</param>
      <param name="testPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der versucht wurde, das Zeichen hinzuzufügen. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das Eingabezeichen erfolgreich hinzugefügt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String)">
      <summary>Fügt die Zeichen aus der angegebenen Eingabezeichenfolge am Ende der formatierten Zeichenfolge hinzu.</summary>
      <param name="input">Ein <see cref="T:System.String" /> mit Zeichenwerten, die an die formatierte Zeichenfolge angefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn alle Zeichen aus der Eingabezeichenfolge erfolgreich hinzugefügt wurden, andernfalls <see langword="false" />, um anzugeben, dass keine Zeichen hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Fügt die Zeichen aus der angegebenen Eingabezeichenfolge am Ende der formatierten Zeichenfolge hinzu und gibt dann Positions- und beschreibende Informationen aus.</summary>
      <param name="input">Ein <see cref="T:System.String" /> mit Zeichenwerten, die an die formatierte Zeichenfolge angefügt werden sollen.</param>
      <param name="testPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der versucht wurde, das Zeichen hinzuzufügen. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn alle Zeichen aus der Eingabezeichenfolge erfolgreich hinzugefügt wurden, andernfalls <see langword="false" />, um anzugeben, dass keine Zeichen hinzugefügt wurden.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clear">
      <summary>Löscht alle bearbeitbaren Eingabezeichen aus der formatierten Zeichenfolge und ersetzt sie durch Aufforderungszeichen.</summary>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)">
      <summary>Löscht alle bearbeitbaren Eingabezeichen aus der formatierten Zeichenfolge, ersetzt sie durch Aufforderungszeichen und gibt dann beschreibende Informationen aus.</summary>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Clone">
      <summary>Erstellt eine Kopie der aktuellen <see cref="T:System.ComponentModel.MaskedTextProvider" />.</summary>
      <returns>Das von dieser Methode erstellte <see cref="T:System.ComponentModel.MaskedTextProvider" />-Objekt, umgewandelt in ein Objekt.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten zugewiesenen bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</summary>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten zugewiesenen bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</summary>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</summary>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</summary>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten nicht-bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</summary>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten gefundenen Literalposition darstellt, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten nicht-bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</summary>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten gefundenen Literalposition darstellt, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten nicht zugewiesenen bearbeitbaren Position nach der angegebenen Position in der angegebenen Suchrichtung zurück.</summary>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche gestartet werden soll.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten nicht zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)">
      <summary>Gibt die Position der ersten nicht zugewiesenen bearbeitbaren Position zwischen den angegebenen Positionen in der angegebenen Suchrichtung zurück.</summary>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Suche endet.</param>
      <param name="direction">Ein <see cref="T:System.Boolean" />, der die Suchrichtung angibt: <see langword="true" />, um vorwärts zu suchen, oder <see langword="false" />, um rückwärts zu suchen.</param>
      <returns>Bei erfolgreicher Suche ein <see cref="T:System.Int32" />, der die nullbasierte Position der ersten nicht zugewiesenen bearbeitbaren Position darstellt, die gefunden wurde, andernfalls <see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.ComponentModel.MaskedTextResultHint" /> einen Erfolg oder ein Fehlschlagen anzeigt.</summary>
      <param name="hint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />-Wert, der i. d. R. als Ausgabeparameter eines vorherigen Vorgangs abgerufen wird.</param>
      <returns>
        <see langword="true" />, wenn der angegebene <see cref="T:System.ComponentModel.MaskedTextResultHint" />-Wert einen Erfolg darstellt, andernfalls <see langword="false" />, wenn er ein Fehlschlagen darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)">
      <summary>Fügt das angegebene Zeichen an der angegebenen Position innerhalb der formatierten Zeichenfolge ein.</summary>
      <param name="input">Das einzufügende <see cref="T:System.Char" />-Objekt.</param>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen eingefügt werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Fügt das angegebene Zeichen an der angegebenen Position innerhalb der formatierten Zeichenfolge ein und gibt die letzte Einfügeposition sowie den Status des Vorgangs zurück.</summary>
      <param name="input">Das einzufügende <see cref="T:System.Char" />-Objekt.</param>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen eingefügt werden soll.</param>
      <param name="testPosition">Bei Erfolg der Methode die Position, an der zuletzt ein Zeichen eingefügt wurde, andernfalls die erste Position, an der die Einfügung fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Einfügevorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)">
      <summary>Fügt die angegebene Zeichenfolge an einer angegebenen Position innerhalb der formatierten Zeichenfolge ein.</summary>
      <param name="input">Das einzufügende <see cref="T:System.String" />-Objekt.</param>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Eingabezeichenfolge eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Fügt die angegebene Zeichenfolge an einer angegebenen Position innerhalb der formatierten Zeichenfolge ein und gibt die letzte Einfügeposition sowie den Status des Vorgangs zurück.</summary>
      <param name="input">Das einzufügende <see cref="T:System.String" />-Objekt.</param>
      <param name="position">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Eingabezeichenfolge eingefügt werden soll.</param>
      <param name="testPosition">Bei Erfolg der Methode die Position, an der zuletzt ein Zeichen eingefügt wurde, andernfalls die erste Position, an der die Einfügung fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Einfügevorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn die Einfügung erfolgreich war, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)">
      <summary>Bestimmt, ob die angegebene Position zugewiesen werden kann.</summary>
      <param name="position">Die zu überprüfende nullbasierte Position in der Maske.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Position in der formatierten Zeichenfolge bearbeitbar ist und noch nicht zugewiesen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)">
      <summary>Bestimmt, ob die angegebene Position bearbeitbar ist.</summary>
      <param name="position">Die zu überprüfende nullbasierte Position in der Maske.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Position in der formatierten Zeichenfolge bearbeitbar ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)">
      <summary>Bestimmt, ob das angegebene Zeichen ein gültiges Eingabezeichen ist.</summary>
      <param name="c">Der zu testende <see cref="T:System.Char" />-Wert.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Zeichen einen gültigen Eingabewert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)">
      <summary>Bestimmt, ob das angegebene Zeichen ein gültiges Maskenzeichen ist.</summary>
      <param name="c">Der zu testende <see cref="T:System.Char" />-Wert.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Zeichen einen gültigen Maskenwert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)">
      <summary>Bestimmt, ob das angegebene Zeichen ein gültiges Kennwortzeichen ist.</summary>
      <param name="c">Der zu testende <see cref="T:System.Char" />-Wert.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Zeichen einen gültigen Kennwortwert enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Remove">
      <summary>Entfernt das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge.</summary>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Entfernt das zuletzt zugewiesene Zeichen aus der formatierten Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="testPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der das Zeichen entfernt wurde. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)">
      <summary>Entfernt das zugewiesene Zeichen an der angegebenen Position aus der formatierten Zeichenfolge.</summary>
      <param name="position">Die nullbasierte Position des zu entfernenden zugewiesenen Zeichens.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)">
      <summary>Entfernt die zugewiesenen Zeichen zwischen den angegebenen Positionen aus der formatierten Zeichenfolge.</summary>
      <param name="startPosition">Der nullbasierte Index des zuerst zu entfernenden zugewiesenen Zeichens.</param>
      <param name="endPosition">Der nullbasierte Index des zuletzt zu entfernenden zugewiesenen Zeichens.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Entfernt die zwischen den angegebenen Positionen zugewiesenen Zeichen aus der formatierten Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="startPosition">Der nullbasierte Index des zuerst zu entfernenden zugewiesenen Zeichens.</param>
      <param name="endPosition">Der nullbasierte Index des zuletzt zu entfernenden zugewiesenen Zeichens.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der die Zeichen entfernt wurden, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich entfernt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)">
      <summary>Ersetzt ein einzelnes Zeichen an oder hinter der angegebenen Position durch den angegebenen Zeichenwert.</summary>
      <param name="input">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</param>
      <param name="position">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Ersetzt ein einzelnes Zeichen zwischen der angegebenen Anfangs- und Endposition durch den angegebenen Zeichenwert und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="input">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</param>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung endet.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Ersetzt ein einzelnes Zeichen an oder hinter der angegebenen Position durch den angegebenen Zeichenwert und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="input">Der <see cref="T:System.Char" />-Wert, der den vorhandenen Wert ersetzt.</param>
      <param name="position">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen erfolgreich ersetzt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)">
      <summary>Ersetzt einen Bereich bearbeitbarer Zeichen und beginnt dabei an der angegebenen Position sowie mit der angegebenen Zeichenfolge.</summary>
      <param name="input">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</param>
      <param name="position">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Ersetzt einen Bereich bearbeitbarer Zeichen zwischen der angegebenen Anfangs- und Endposition durch die angegebene Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="input">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</param>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung beginnt.</param>
      <param name="endPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ersetzung endet.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Ersetzt einen Bereich bearbeitbarer Zeichen beginnend an der angegebenen Position und mit der angegebenen Zeichenfolge und gibt dann die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="input">Der <see cref="T:System.String" />-Wert, durch den die vorhandenen bearbeitbaren Zeichen ersetzt werden.</param>
      <param name="position">Die nullbasierte Position, an der nach dem ersten zu ersetzenden bearbeitbaren Zeichen gesucht werden soll.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen ersetzt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Ersetzung kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn alle Zeichen erfolgreich ersetzt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String)">
      <summary>Legt die formatierte Zeichenfolge auf die angegebene Eingabezeichenfolge fest.</summary>
      <param name="input">Der <see cref="T:System.String" />-Wert, über den die formatierte Zeichenfolge festgelegt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn alle Zeichen erfolgreich festgelegt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Legt die formatierte Zeichenfolge auf die angegebene Eingabezeichenfolge fest und gibt anschließend die Löschposition sowie beschreibende Informationen aus.</summary>
      <param name="input">Der <see cref="T:System.String" />-Wert, über den die formatierte Zeichenfolge festgelegt wird.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position in der formatierten Zeichenfolge, an der das letzte Zeichen festgelegt wurde, andernfalls die erste Position, an der der Vorgang fehlgeschlagen ist. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Festlegungsvorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn alle Zeichen erfolgreich festgelegt wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToDisplayString">
      <summary>Gibt die formatierte Zeichenfolge in anzeigbarer Form zurück.</summary>
      <returns>Der formatierte <see cref="T:System.String" /> mit Aufforderungszeichen und Maskenliteralzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString">
      <summary>Gibt die formatierte Zeichenfolge zurück, die alle zugewiesenen Zeichenwerte umfasst.</summary>
      <returns>Der formatierte <see cref="T:System.String" />, der alle zugewiesenen Zeichenwerte umfasst.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)">
      <summary>Gibt die formatierte Zeichenfolge (optional einschließlich von Kennwortzeichen) zurück.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</param>
      <returns>Der formatierte <see cref="T:System.String" />, der Literalzeichen, Aufforderungszeichen und optional auch Kennwortzeichen umfasst.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)">
      <summary>Gibt die formatierte Zeichenfolge (optional einschließlich Aufforderungs- und Literalzeichen) zurück.</summary>
      <param name="includePrompt">
        <see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <returns>Der formatierte <see cref="T:System.String" />, der alle zugewiesenen Zeichenwerte und optional Literal- und Aufforderungszeichen umfasst.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich Aufforderungs-, Literal- und Kennwortzeichen) zurück.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</param>
      <param name="includePrompt">
        <see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</param>
      <param name="length">Die Anzahl der zu zurückzugebenden Zeichen</param>
      <returns>Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte und optional Literal-, Aufforderungs- und Kennwortzeichen umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich Aufforderungs- und Literalzeichen) zurück.</summary>
      <param name="includePrompt">
        <see langword="true" />, um Aufforderungszeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <param name="includeLiterals">
        <see langword="true" />, um Literalzeichen in die Rückgabezeichenfolge einzuschließen, andernfalls <see langword="false" />.</param>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</param>
      <param name="length">Die Anzahl der zu zurückzugebenden Zeichen</param>
      <returns>Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte und optional Literal- und Aufforderungszeichen umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)">
      <summary>Gibt eine Teilzeichenfolge der formatierten Zeichenfolge (optional einschließlich von Kennwortzeichen) zurück.</summary>
      <param name="ignorePasswordChar">
        <see langword="true" />, um die tatsächlich bearbeitbaren Zeichen zurückzugeben, andernfalls <see langword="false" />, um anzugeben, dass die <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />-Eigenschaft zu beachten ist.</param>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</param>
      <param name="length">Die Anzahl der zu zurückzugebenden Zeichen</param>
      <returns>Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die Literal-, Aufforderungs- und optional Kennwortzeichen einschließt, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)">
      <summary>Gibt eine Teilzeichenfolge der formatierten Zeichenfolge zurück.</summary>
      <param name="startPosition">Die nullbasierte Position in der formatierten Zeichenfolge, an der die Ausgabe beginnt.</param>
      <param name="length">Die Anzahl der zu zurückzugebenden Zeichen</param>
      <returns>Bei Erfolg eine Teilzeichenfolge des formatierten <see cref="T:System.String" />, die alle zugewiesenen Zeichenwerte umfasst, andernfalls die <see cref="F:System.String.Empty" />-Zeichenfolge.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Prüft, ob das angegebene Zeichen erfolgreich an der angegebenen Position festgelegt werden konnte.</summary>
      <param name="input">Der zu testende <see cref="T:System.Char" />-Wert.</param>
      <param name="position">Die Position in der Maske, gegen die das Eingabezeichen geprüft werden soll.</param>
      <param name="hint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis des Vorgangs kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Zeichen für die angegebene Position gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)">
      <summary>Prüft, ob das angegebene Zeichen an der angegebenen Position mit Escapezeichen versehen werden würde.</summary>
      <param name="input">Der zu testende <see cref="T:System.Char" />-Wert.</param>
      <param name="position">Die Position in der Maske, gegen die das Eingabezeichen geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Zeichen an der angegebenen Position mit Escapezeichen versehen werden würde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)">
      <summary>Prüft, ob die angegebene Zeichenfolge erfolgreich festgelegt werden konnte.</summary>
      <param name="input">Der zu testende <see cref="T:System.String" />-Wert.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Zeichenfolge eine gültige Eingabe ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
      <summary>Prüft, ob die angegebene Zeichenfolge erfolgreich festgelegt werden konnte, und gibt dann die Position und beschreibende Informationen aus.</summary>
      <param name="input">Der zu testende <see cref="T:System.String" />-Wert.</param>
      <param name="testPosition">Bei Erfolg die nullbasierte Position des zuletzt geprüften Zeichens, andernfalls die erste Position, an der die Prüfung fehlschlug. Ein Ausgabeparameter.</param>
      <param name="resultHint">Ein <see cref="T:System.ComponentModel.MaskedTextResultHint" />, mit dem das Ergebnis der Prüfung kurz beschrieben wird. Ein Ausgabeparameter.</param>
      <returns>
        <see langword="true" />, wenn die angegebene Zeichenfolge eine gültige Eingabe ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput">
      <summary>Ruft einen Wert ab, der angibt, ob das Aufforderungszeichen als gültiges Eingabezeichen behandelt werden soll.</summary>
      <returns>
        <see langword="true" />, wenn der Benutzer <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" /> im Steuerelement eingeben darf, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AsciiOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Maske Zeichen akzeptiert, die nicht dem ASCII-Zeichensatz angehören.</summary>
      <returns>
        <see langword="true" />, wenn nur ASCII akzeptiert wird, und <see langword="false" />, wenn <see cref="T:System.ComponentModel.MaskedTextProvider" /> jedes beliebige Unicode-Zeichen akzeptieren darf. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount">
      <summary>Ruft die Anzahl von bearbeitbaren Zeichenpositionen ab, denen bereits erfolgreich ein Eingabewert zugewiesen wurde.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Anzahl der in der Eingabemaske enthaltenen bearbeitbaren Zeichenpositionen, denen bereits ein Zeichenwert in der formatierten Zeichenfolge zugewiesen wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount">
      <summary>Ruft die Anzahl der bearbeitbaren Zeichenpositionen in der Eingabemaske ab, denen bisher noch kein Eingabewert zugewiesen wurde.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Anzahl der bearbeitbaren Zeichenpositionen, denen bisher noch kein Zeichenwert zugewiesen wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Culture">
      <summary>Ruft die Kultur ab, die den Wert der lokalisierbaren Trennzeichen und Platzhalter in der Eingabemaske bestimmt.</summary>
      <returns>Ein <see cref="T:System.Globalization.CultureInfo" /> mit den der Eingabemaske zugeordneten Kulturinformationen.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar">
      <summary>Ruft das zur Verdeckung von Benutzereingaben verwendete Standardkennwortzeichen ab.</summary>
      <returns>Ein <see cref="T:System.Char" />, der das Standardkennwortzeichen darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.EditPositionCount">
      <summary>Ruft die Anzahl der bearbeitbaren Positionen in der formatierten Zeichenfolge ab.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Anzahl der bearbeitbaren Positionen in der formatierten Zeichenfolge.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.EditPositions">
      <summary>Ruft einen neu erstellten Enumerator für die bearbeitbaren Positionen in der formatierten Zeichenfolge ab.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der Enumeration über die bearbeitbaren Positionen in der formatierten Zeichenfolge unterstützt.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IncludeLiterals">
      <summary>Ruft einen Wert ab, der angibt, ob in der Eingabemaske vorhandene Literalzeichen in die formatierte Zeichenfolge aufgenommen werden, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn Literalzeichen aufgenommen werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IncludePrompt">
      <summary>Ruft einen Wert ab, der angibt, ob mithilfe von <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> bei der Anzeige der formatierten Zeichenfolge das Nichtvorhandensein von Benutzereingaben angegeben wird, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn das Aufforderungszeichen zur Darstellung der Positionen verwendet wird, an denen keine Benutzereingaben vorgenommen wurden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.InvalidIndex">
      <summary>Ruft die Obergrenze des ungültigen Indexbereichs ab.</summary>
      <returns>Ein Wert, der den von der Anbieterimplementierung bestimmten größten ungültigen Index darstellt. Wenn beispielsweise der niedrigste gültige Index 0 ist, gibt diese Eigenschaft -1 zurück.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.IsPassword">
      <summary>Ruft einen Wert ab, der bestimmt, ob auf die formatierte Zeichenfolge Kennwortschutz angewendet werden soll, oder legt einen solchen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Eingabezeichenfolge als Kennwortzeichenfolge behandelt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)">
      <summary>Ruft das Element an der angegebenen Position in der formatierten Zeichenfolge ab.</summary>
      <param name="index">Ein nullbasierter Index des abzurufenden Elements.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0 (null) oder größer oder gleich der <see cref="P:System.ComponentModel.MaskedTextProvider.Length" /> der Maske.</exception>
      <returns>Der <see cref="T:System.Char" /> an der angegebenen Position in der formatierten Zeichenfolge.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition">
      <summary>Ruft in der Maske den Index des ganz rechts stehenden, der Maske zugeordneten Eingabezeichens ab.</summary>
      <returns>Wenn der Maske mindestens ein Eingabezeichen zugeordnet wurde, ein <see cref="T:System.Int32" /> mit dem Index der am weitesten rechts zugeordneten Position, andernfalls<see cref="P:System.ComponentModel.MaskedTextProvider.InvalidIndex" />, wenn keine Position zugeordnet wurde.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Length">
      <summary>Ruft die Länge der Maske ohne Maskenmodifiziererzeichen ab.</summary>
      <returns>Ein <see cref="T:System.Int32" /> mit der Anzahl der in der Maske enthaltenen Positionen mit Ausnahme von Zeichen zur Änderung der Maskeneingabe.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.Mask">
      <summary>Ruft die Eingabemaske ab.</summary>
      <returns>Ein <see cref="T:System.String" /> mit der vollständigen Maske.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.MaskCompleted">
      <summary>Ruft einen Wert ab, der angibt, ob in der formatierten Zeichenfolge alle erforderlichen Eingaben erfolgt sind.</summary>
      <returns>
        <see langword="true" />, wenn alle erforderlichen Eingaben in der Maske erfolgt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.MaskFull">
      <summary>Ruft einen Wert ab, der angibt, ob in der formatierten Zeichenfolge alle erforderlichen und optionalen Eingaben erfolgt sind.</summary>
      <returns>
        <see langword="true" />, wenn alle erforderlichen und optionalen Eingaben erfolgt sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.PasswordChar">
      <summary>Ruft das Zeichen ab, das das eigentliche Eingabezeichen ersetzen soll, oder legt dieses fest.</summary>
      <exception cref="T:System.InvalidOperationException">Das bei der Festlegung dieser Eigenschaft angegebene Kennwortzeichen entspricht dem aktuellen Aufforderungszeichen <see cref="P:System.ComponentModel.MaskedTextProvider.PromptChar" />. Die zwei Zeichen müssen unterschiedlich sein.</exception>
      <exception cref="T:System.ArgumentException">Das bei der Festlegung dieser Eigenschaft angegebene Zeichen ist kein durch die <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />-Methode festgelegtes gültiges Kennwortzeichen.</exception>
      <returns>Der als Kennwortzeichen verwendete <see cref="T:System.Char" />-Wert.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.PromptChar">
      <summary>Ruft das Zeichen ab, mit dem das Nichtvorhandensein von Benutzereingaben für alle verfügbaren Bearbeitungspositionen dargestellt wird, oder legt dieses Zeichen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Das bei der Festlegung dieser Eigenschaft angegebene Aufforderungszeichen entspricht dem aktuellen Kennwortzeichen <see cref="P:System.ComponentModel.MaskedTextProvider.PasswordChar" />. Die zwei Zeichen müssen unterschiedlich sein.</exception>
      <exception cref="T:System.ArgumentException">Das bei der Festlegung dieser Eigenschaft angegebene Zeichen ist kein durch die <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" />-Methode festgelegtes gültiges Kennwortzeichen.</exception>
      <returns>Das Zeichen, über das der Benutzer zur Eingabe aufgefordert wird. Der Standardwert ist ein Unterstrich (_).</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt">
      <summary>Ruft einen Wert ab, der bestimmt, wie ein dem Aufforderungszeichen entsprechendes Eingabezeichen behandelt werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Eingabe des Aufforderungszeichens die Zurücksetzung der aktuellen bearbeitbaren Position in der Maske zur Folge hat, andernfalls <see langword="false" />, um anzugeben, dass das Aufforderungszeichen wie ein normales Eingabezeichen verarbeitet werden soll. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.ResetOnSpace">
      <summary>Ruft einen Wert ab, der bestimmt, wie ein eingegebenes Leerzeichen zu behandeln ist, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Eingabe des Leerzeichens die Zurücksetzung der aktuellen bearbeitbaren Position in der Maske zur Folge hat, andernfalls <see langword="false" />, um anzugeben, dass das Leerzeichen wie ein normales Eingabezeichen verarbeitet werden soll. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MaskedTextProvider.SkipLiterals">
      <summary>Ruft einen Wert ab, der angibt, ob Literalzeichenpositionen in der Maske durch ihnen entsprechende Werte überschrieben werden dürfen, oder legt einen solchen Wert fest.</summary>
      <returns>
        <see langword="true" />, um das Wiederhinzufügen von Literalzeichen zuzulassen, andernfalls <see langword="false" />, wenn das Überschreiben von Literalzeichen durch den Benutzer nicht erlaubt werden soll. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.MaskedTextResultHint">
      <summary>Gibt Werte an, mit denen die Ergebnisse einer Analyseoperation für maskierten Text kurz beschrieben werden.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.AlphanumericCharacterExpected">
      <summary>Der Vorgang war erfolglos. Ein nicht alphanumerisches Eingabezeichen wurde gefunden. .</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.AsciiCharacterExpected">
      <summary>Der Vorgang war erfolglos. Ein Eingabezeichen wurde gefunden, bei dem es sich nicht um einen Bestandteil des ASCII-Zeichensatzes handelte.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.CharacterEscaped">
      <summary>Erfolgreich. Der Vorgang war erfolgreich, da ein Literalzeichen, ein Aufforderungszeichen oder ein Leerzeichen ein Escapezeichen war. Weitere Informationen über Escapezeichen finden Sie unter der <see cref="M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)" />-Methode.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.DigitExpected">
      <summary>Der Vorgang war erfolglos. Ein Eingabezeichen wurde gefunden, bei dem es sich nicht um eine Ziffer handelte.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.InvalidInput">
      <summary>Der Vorgang war erfolglos. Vom Programm wurde ein ungültiges Eingabezeichen gefunden. Weitere Informationen über ungültige Zeichen finden Sie unter der <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)" />-Methode.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.LetterExpected">
      <summary>Der Vorgang war erfolglos. Ein Eingabezeichen wurde gefunden, bei dem es sich nicht um einen Buchstaben handelte.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.NoEffect">
      <summary>Erfolgreich. Der primäre Vorgang wurde nicht ausgeführt, da er nicht erforderlich war. Daher wurde kein Nebeneffekt erzeugt.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.NonEditPosition">
      <summary>Der Vorgang war erfolglos. Die aktuelle Position in der formatierten Zeichenfolge ist ein Literalzeichen.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.PositionOutOfRange">
      <summary>Der Vorgang war erfolglos. Die angegebene Position liegt außerhalb des Bereichs der Zielzeichenfolge. Sie ist dann normalerweise entweder kleiner als 0 (null) oder länger als die Zielzeichenfolge.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.PromptCharNotAllowed">
      <summary>Der Vorgang war erfolglos. Die Eingabe des Aufforderungszeichens ist ungültig, da möglicherweise die <see cref="P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.SideEffect">
      <summary>Erfolgreich. Der primäre Vorgang wurde nicht ausgeführt, da er nicht erforderlich war. Die Methode hat jedoch einen Nebeneffekt erzeugt. Die <see cref="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt" />-Methode kann z. B. eine nicht zugewiesene Bearbeitungsposition löschen, was zu einer Linksverschiebung der Folgezeichen in der formatierten Zeichenfolge führt.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.SignedDigitExpected">
      <summary>Der Vorgang war erfolglos. Ein Eingabezeichen wurde gefunden, bei dem es sich nicht um eine Ziffer mit Vorzeichen handelte.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.Success">
      <summary>Erfolgreich. Der primäre Vorgang war erfolgreich.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.UnavailableEditPosition">
      <summary>Der Vorgang war erfolglos. Es waren nicht genügend Bearbeitungspositionen zur Bearbeitung der Anforderung verfügbar.</summary>
    </member>
    <member name="F:System.ComponentModel.MaskedTextResultHint.Unknown">
      <summary>Unbekannt. Das Ergebnis des Vorgangs konnte nicht bestimmt werden.</summary>
    </member>
    <member name="T:System.ComponentModel.MemberDescriptor">
      <summary>Stellt einen Klassenmember dar, z. B. eine Eigenschaft oder ein Ereignis. Dies ist eine abstrakte Basisklasse.</summary>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit der angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" />.</summary>
      <param name="descr">Eine <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse, die den Namen des Members und dessen Attribute enthält.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit dem Namen in der angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse und den Attributen in der alten <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse und im <see cref="T:System.Attribute" />-Array.</summary>
      <param name="oldMemberDescriptor">Eine <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit dem Namen des Members und dessen Attributen.</param>
      <param name="newAttributes">Ein Array von <see cref="T:System.Attribute" />-Objekten mit den Attributen, die dem Member hinzugefügt werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit dem angegebenen Namen des Members.</summary>
      <param name="name">Der Name des Members.</param>
      <exception cref="T:System.ArgumentException">Der Name ist eine leere Zeichenfolge ("") oder <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse mit dem angegebenen Namen des Members und einem Array von Attributen.</summary>
      <param name="name">Der Name des Members.</param>
      <param name="attributes">Ein Array vom Typ <see cref="T:System.Attribute" />, das die Memberattribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der Name ist eine leere Zeichenfolge ("") oder <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection">
      <summary>Erstellt eine Auflistung von Attributen, wobei das Array von Attributen verwendet wird, das an den Konstruktor übergeben wurde.</summary>
      <returns>Eine neue <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse, die die <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray" />-Attribute enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)">
      <summary>Vergleicht diese Instanz und das angegebene Objekt auf Äquivalenz.</summary>
      <param name="obj">Das Objekt, das mit der aktuellen Instanz verglichen werden soll.</param>
      <returns>
        <see langword="true" /> bei Äquivalenz, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)">
      <summary>Fügt beim Überschreiben in einer abgeleiteten Klasse der angegebenen Attributliste in der übergeordneten Klasse die Attribute der erbenden Klasse hinzu.</summary>
      <param name="attributeList">Eine <see cref="T:System.Collections.IList" />-Schnittstelle, in der die Attribute in der übergeordneten Klasse aufgeführt sind. Diese ist zunächst leer.</param>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)">
      <summary>Sucht die angegebene Methode mithilfe von Reflektion, wobei nur nach öffentlichen Methoden gesucht wird.</summary>
      <param name="componentClass">Die Komponente, die die Methode enthält.</param>
      <param name="name">Der Name der zu suchenden Methode.</param>
      <param name="args">Ein Array von Parametern für die Methode, mit dessen Hilfe zwischen überladenen Methoden ausgewählt werden kann.</param>
      <param name="returnType">Der Typ, der für die Methode zurückgegeben wird.</param>
      <returns>Eine <see cref="T:System.Reflection.MethodInfo" />-Klasse, die die Methode darstellt, oder <see langword="null" />, wenn die Methode nicht gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)">
      <summary>Sucht die angegebene Methode mithilfe von Reflektion, wobei nur nach öffentlichen Methoden gesucht wird.</summary>
      <param name="componentClass">Die Komponente, die die Methode enthält.</param>
      <param name="name">Der Name der zu suchenden Methode.</param>
      <param name="args">Ein Array von Parametern für die Methode, mit dessen Hilfe zwischen überladenen Methoden ausgewählt werden kann.</param>
      <param name="returnType">Der Typ, der für die Methode zurückgegeben wird.</param>
      <param name="publicOnly">Legt fest, ob die Suche auf öffentliche Methoden beschränkt bleiben soll.</param>
      <returns>Eine <see cref="T:System.Reflection.MethodInfo" />-Klasse, die die Methode darstellt, oder <see langword="null" />, wenn die Methode nicht gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.MemberDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <summary>Ruft das Objekt ab, das beim Aufrufen der Member verwendet werden soll.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse des Aufrufziels.</param>
      <param name="instance">Das potenzielle Aufrufziel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> oder <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Das Objekt, das beim Aufrufen der Member verwendet werden soll.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)">
      <summary>Ruft die Komponente ab, für die eine Methode aufgerufen werden soll.</summary>
      <param name="componentClass">Eine <see cref="T:System.Type" />-Klasse, die den Komponententyp darstellt, an den diese <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse gebunden ist. Wenn diese <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse z. B. eine Eigenschaft beschreibt, muss es sich bei diesem Parameter um die Klasse handeln, für die die Eigenschaft deklariert ist.</param>
      <param name="component">Eine Instanz des aufzurufenden Objekts.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentClass" /> oder <paramref name="component" /> ist <see langword="null" />.</exception>
      <returns>Eine Instanz der aufzurufenden Komponente. Diese Methode gibt einen visuellen Designer zurück, sofern sie einem visuellen Designer zugeordnet ist.</returns>
    </member>
    <member name="M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)">
      <summary>Ruft eine Komponentensite für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die eine Site gesucht werden soll.</param>
      <returns>Die Site der Komponente oder <see langword="null" />, wenn keine Site vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.AttributeArray">
      <summary>Ruft ein Array von Attributen ab oder legt es fest.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.Attribute" />, das die Attribute dieses Members enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Attributes">
      <summary>Ruft die Auflistung von Attributen für diesen Member ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" />-Klasse, die die Attribute für diesen Member bereitstellt, oder eine leere Auflistung, wenn in der <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray" />-Eigenschaft keine Attribute vorhanden sind.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Category">
      <summary>Ruft den Namen der Kategorie ab, zu der der Member gehört. Dieser ist in der <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse angegeben.</summary>
      <returns>Der Name der Kategorie, zu der der Member gehört. Wenn keine <see cref="T:System.ComponentModel.CategoryAttribute" />-Klasse vorhanden ist, wird der Kategoriename auf die Standardkategorie <see langword="Misc" /> festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Description">
      <summary>Ruft die Beschreibung des Members ab, die in der <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse angegeben ist.</summary>
      <returns>Die Beschreibung des Members. Wenn keine <see cref="T:System.ComponentModel.DescriptionAttribute" />-Klasse vorhanden ist, wird der Eigenschaftswert auf die Standardeinstellung, eine leere Zeichenfolge (""), festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly">
      <summary>Ruft ab, ob dieser Member nur zur Entwurfszeit festgelegt werden darf. Dies ist in der <see cref="T:System.ComponentModel.DesignOnlyAttribute" />-Klasse angegeben.</summary>
      <returns>
        <see langword="true" />, wenn dieser Member nur zur Entwurfszeit festgelegt werden darf, <see langword="false" />, wenn der Member zur Laufzeit festgelegt werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.DisplayName">
      <summary>Ruft den Namen ab, der in einem Fenster, z. B. im Eigenschaftenfenster, angezeigt werden kann.</summary>
      <returns>Der Name, der für den Member angezeigt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.IsBrowsable">
      <summary>Ruft einen Wert ab, der angibt, ob der Member durchsucht werden kann. Dies ist in der <see cref="T:System.ComponentModel.BrowsableAttribute" />-Klasse angegeben.</summary>
      <returns>
        <see langword="true" />, wenn der Member durchsucht werden kann, andernfalls <see langword="false" />. Wenn keine <see cref="T:System.ComponentModel.BrowsableAttribute" />-Klasse vorhanden ist, wird der Eigenschaftswert auf die Standardeinstellung <see langword="true" /> festgelegt.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.Name">
      <summary>Ruft den Namen des Members ab.</summary>
      <returns>Der Name des Members.</returns>
    </member>
    <member name="P:System.ComponentModel.MemberDescriptor.NameHashCode">
      <summary>Ruft den Hashcode für den Namen des Members ab, der in <see cref="M:System.String.GetHashCode" /> angegeben ist.</summary>
      <returns>Der Hashcode für den Namen des Members.</returns>
    </member>
    <member name="T:System.ComponentModel.MultilineStringConverter">
      <summary>Stellt einen Typkonverter zum Konvertieren mehrzeiliger Zeichenfolgen in eine einfache Zeichenfolge bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.MultilineStringConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der Wertparameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Arraytyp zurück, der durch den <paramref name="value" />-Parameter angegeben ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn <see cref="Overload:System.ComponentModel.MultilineStringConverter.GetProperties" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.NestedContainer">
      <summary>Stellt die Basisimplementierung für die <see cref="T:System.ComponentModel.INestedContainer" />-Schnittstelle bereit, die es Containern ermöglicht, über eine besitzende Komponente zu verfügen.</summary>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.NestedContainer" />-Klasse.</summary>
      <param name="owner">Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)">
      <summary>Erstellt eine Site für die Komponente im Container.</summary>
      <param name="component">Die <see cref="T:System.ComponentModel.IComponent" />, für die eine Site erstellt werden soll.</param>
      <param name="name">Der Name, der der <paramref name="component" /> zugewiesen werden soll, oder <see langword="null" />, wenn die Namenszuweisung übersprungen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <returns>Der neu erstellte <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.Dispose(System.Boolean)">
      <summary>Gibt die vom geschachtelten Container verwendeten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.ComponentModel.NestedContainer.GetService(System.Type)">
      <summary>Ruft das Dienstobjekt des angegebenen Typs ab, sofern es verfügbar ist.</summary>
      <param name="service">Der <see cref="T:System.Type" /> des abzurufenden Dienstes.</param>
      <returns>Ein <see cref="T:System.Object" />, das den angeforderten Dienst implementiert, oder <see langword="null" />, wenn der Dienst nicht ermittelt werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.NestedContainer.Owner">
      <summary>Ruft die besitzende Komponente für diesen geschachtelten Container ab.</summary>
      <returns>Die <see cref="T:System.ComponentModel.IComponent" />, die den geschachtelten Container besitzt.</returns>
    </member>
    <member name="P:System.ComponentModel.NestedContainer.OwnerName">
      <summary>Ruft den Namen der besitzenden Komponente ab.</summary>
      <returns>Der Name der besitzenden Komponente.</returns>
    </member>
    <member name="T:System.ComponentModel.NullableConverter">
      <summary>Stellt die automatische Konvertierung zwischen dem Nullable-Typ und dessen zugrunde liegendem primitiven Typ bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.NullableConverter" />-Klasse.</summary>
      <param name="type">Der angegebene Typ, der NULL-Werte zulässt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> ist kein Typ, der NULL-Werte zulässt.</exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt vom angegebenen Typ unter Verwendung des angegebenen Kontexts in den Typ dieses Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den Typ dieses Konverters mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der Wertparameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt über den angegebenen Kontext, der aus einer angegebenen Menge von Eigenschaftswerten für das Objekt besteht, eine Instanz des Typs, der dieser <see cref="T:System.ComponentModel.TypeConverter" />-Klasse zugeordnet ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="propertyValues">Ein <see cref="T:System.Collections.IDictionary" /> mit neuen Eigenschaftswerten.</param>
      <returns>Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann. Diese Methode gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob bei Ändern eines Werts für dieses Objekt ein Aufruf von <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts mit dem angegebenen Kontext erforderlich ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn bei Ändern einer Eigenschaft für dieses Objekt ein Aufruf von <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts erforderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Arraytyp zurück, der durch den Wertparameter angegeben ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt eine Auflistung von Standardwerten für den Datentyp zurück, auf den dieser Typkonverter ausgelegt ist, wenn ein Formatkontext bereitgestellt wird.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatkontext bereitstellt, der zum Extrahieren von weiteren Informationen über die Umgebung verwendet werden kann, aus der dieser Konverter aufgerufen wurde. Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp einen Standardsatz von Werten nicht unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob die Auflistung von Standardwerten, die von der <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode unter Verwendung des angegebenen Kontexts zurückgegeben werden, eine exklusive Liste von möglichen Werten darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt zurück, ob das angegebene Wertobjekt für diesen Typ und den angegebenen Kontext gültig ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Das auf Gültigkeit zu prüfende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.NullableType">
      <summary>Ruft den Typ ab, der NULL-Werte zulässt.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ darstellt, der NULL-Werte zulässt.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingType">
      <summary>Ruft den zugrunde liegenden Typ ab.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den zugrunde liegenden Typ darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter">
      <summary>Ruft den zugrunde liegenden Typkonverter ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" />, der den zugrunde liegenden Typkonverter darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.PasswordPropertyTextAttribute">
      <summary>Gibt an, dass die Textdarstellung eines Objekts von Zeichen wie Sternchen verdeckt wird. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> an.</summary>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.No">
      <summary>Gibt an, dass eine Texteigenschaft nicht als Kennwort verwendet wird. Dieses <see langword="static" /> (<see langword="Shared" /> in Visual Basic) Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.PasswordPropertyTextAttribute.Yes">
      <summary>Gibt an, dass eine Texteigenschaft als Kennwort verwendet wird. Dieses <see langword="static" /> (<see langword="Shared" /> in Visual Basic) Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />-Klasse, wobei optional Kennworttext angezeigt wird.</summary>
      <param name="password">
        <see langword="true" />, um anzugeben, dass die Eigenschaft als Kennworttext angezeigt werden sollte; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.Equals(System.Object)">
      <summary>Stellt fest, ob zwei <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />-Instanzen gleich sind.</summary>
      <param name="o">Das <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />, das mit dem aktuellen <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PasswordPropertyTextAttribute.IsDefaultAttribute">
      <summary>Gibt die Angabe zurück, ob der Wert dieser Instanz der Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz das Standardattribut für die Klasse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PasswordPropertyTextAttribute.Password">
      <summary>Ruft einen Wert ab, der angibt, ob die Eigenschaft, für die das <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> definiert wird, als Kennworttext angezeigt werden soll.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft als Kennworttext angezeigt werden soll; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptor">
      <summary>Stellt eine Abstraktion einer Eigenschaft für eine Klasse bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem Namen und den Attributen im angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" />.</summary>
      <param name="descr">Eine <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse, die den Namen der Eigenschaft und ihre Attribute enthält.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem Namen im angegebenen <see cref="T:System.ComponentModel.MemberDescriptor" /> und den Attributen im <see cref="T:System.ComponentModel.MemberDescriptor" /> sowie dem <see cref="T:System.Attribute" />-Array.</summary>
      <param name="descr">Eine <see cref="T:System.ComponentModel.MemberDescriptor" />-Klasse, die den Namen des Members und seiner Attribute enthält.</param>
      <param name="attrs">Ein <see cref="T:System.Attribute" />-Array mit den Attributen, die der Eigenschaft zugewiesen werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem angegebenen Namen und den angegebenen Attributen.</summary>
      <param name="name">Den Namen der Eigenschaft.</param>
      <param name="attrs">Ein Array vom Typ <see cref="T:System.Attribute" />, das die Eigenschaftsattribute enthält.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component">Die Komponente, für die der Handler hinzugefügt wird.</param>
      <param name="handler">Der Delegat, der als Listener hinzugefügt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> oder <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse zurück, ob beim Zurücksetzen eines Objekts dessen Wert geändert wird.</summary>
      <param name="component">Die Komponente, die auf die Fähigkeit des Zurücksetzens zu prüfen ist.</param>
      <returns>
        <see langword="true" />, wenn durch Zurücksetzen der Komponente deren Wert geändert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
      <summary>Erstellt eine Instanz des angegebenen Typs.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den zu erstellenden Typ darstellt.</param>
      <returns>Eine neue Instanz des Typs.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
      <summary>Vergleicht dieses Objekt mit einem anderen auf Äquivalenz.</summary>
      <param name="obj">Das mit diesem <see cref="T:System.ComponentModel.PropertyDescriptor" /> zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn die Objekte äquivalent sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
      <summary>Fügt der angegebenen Liste der Attribute in der übergeordneten Klasse die Attribute der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse hinzu.</summary>
      <param name="attributeList">Eine <see cref="T:System.Collections.IList" />-Schnittstelle, in der die Attribute in der übergeordneten Klasse aufgeführt sind. Diese ist zunächst leer.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
      <summary>Gibt die als Standard festgelegte <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse zurück.</summary>
      <returns>Eine Auflistung von Eigenschaftendeskriptoren.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
      <summary>Gibt eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse unter Verwendung eines angegebenen Arrays von Attributen als Filter zurück.</summary>
      <param name="filter">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den Eigenschaften, die mit den angegebenen Attributen übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
      <summary>Gibt eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse für ein angegebenes Objekt zurück.</summary>
      <param name="instance">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften für die angegebene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>Gibt eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse für ein angegebenes Objekt zurück, wobei ein angegebenes Array von Attributen als Filter verwendet wird.</summary>
      <param name="instance">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <param name="filter">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
      <summary>Ruft einen Editor des angegebenen Typs ab.</summary>
      <param name="editorBaseType">Der Basistyp des Editors, der für die Unterscheidung mehrerer von einer Eigenschaft unterstützten Editoren verwendet wird.</param>
      <returns>Eine Instanz des angeforderten Editor-Typs oder <see langword="null" />, wenn kein Editor gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
      <summary>Gibt den Hashcode für dieses Objekt zurück.</summary>
      <returns>Der Hashcode für dieses Objekt.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
      <summary>Diese Methode gibt das Objekt zurück, das beim Aufrufen der Member verwendet werden sollte.</summary>
      <param name="type">Die <see cref="T:System.Type" />-Klasse des Aufrufziels.</param>
      <param name="instance">Das potenzielle Aufrufziel.</param>
      <returns>Die <see cref="T:System.Object" />-Klasse, die beim Aufrufen der Member verwendet werden soll.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
      <summary>Gibt einen Typ unter Verwendung seines Namens zurück.</summary>
      <param name="typeName">Der durch die Assembly bezeichnete Name des abzurufenden Typs.</param>
      <returns>Eine <see cref="T:System.Type" />-Klasse, die mit dem angegebenen Typnamen übereinstimmt, oder <see langword="null" />, wenn keine Übereinstimmung gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen Wert der Eigenschaft einer Komponente ab.</summary>
      <param name="component">Die Komponente mit der Eigenschaft, deren Wert abgerufen werden soll.</param>
      <returns>Der Wert einer Eigenschaft für eine angegebenen Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
      <summary>Ruft die aktuellen <c>ValueChanged</c>-Ereignishandler für eine bestimmte Komponente ab.</summary>
      <param name="component">Die Komponente, für die Ereignishandler abgerufen werden sollen.</param>
      <returns>Ein kombinierter Multicast-Ereignishandler oder <see langword="null" />, wenn <paramref name="component" /> gegenwärtig keine Ereignishandler zugeordnet sind.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
      <summary>Löst das <c>ValueChanged</c>-Ereignis aus, das Sie implementiert haben.</summary>
      <param name="component">Das Objekt, das das Ereignis auslöst.</param>
      <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>Ermöglicht es, andere Objekte zu benachrichtigen, wenn sich diese Eigenschaft ändert.</summary>
      <param name="component">Die Komponente, für die der Handler entfernt wird.</param>
      <param name="handler">Der Delegat, der als Listener entfernt wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> oder <paramref name="handler" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
      <summary>Setzt beim Überschreiben in einer abgeleiteten Klasse den Wert dieser Komponenteneigenschaft auf den Standardwert zurück.</summary>
      <param name="component">Die Komponente mit dem Eigenschaftswert, der auf den Standardwert zurückgesetzt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>Legt beim Überschreiben in einer abgeleiteten Klasse den Wert der Komponente auf einen anderen Wert fest.</summary>
      <param name="component">Die Komponente mit dem Eigenschaftswert, der festgelegt werden soll.</param>
      <param name="value">Der neue Wert.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse einen Wert, der angibt, ob der Wert dieser Eigenschaft beibehalten werden muss.</summary>
      <param name="component">Die Komponente mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Eigenschaft beibehalten werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.ComponentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ der Komponente ab, an die diese Eigenschaft gebunden ist.</summary>
      <returns>Eine <see cref="T:System.Type" />-Klasse, die den Typ der Komponente darstellt, an die diese Eigenschaft gebunden ist. Wenn die <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />-Methode oder die <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />-Methode aufgerufen wird, kann das angegebene Objekt eine Instanz dieses Typs sein.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.Converter">
      <summary>Ruft den Typkonverter für diese Eigenschaft ab.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter" />-Klasse, die zum Konvertieren der <see cref="T:System.Type" />-Klasse dieser Eigenschaft verwendet wird.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
      <summary>Ruft einen Wert ab, der angibt, ob diese Eigenschaft gemäß den Angaben in <see cref="T:System.ComponentModel.LocalizableAttribute" /> lokalisiert werden soll.</summary>
      <returns>
        <see langword="true" />, wenn der Member mit der auf <see langword="true" /> festgelegten <see cref="T:System.ComponentModel.LocalizableAttribute" />-Klasse gekennzeichnet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob diese Eigenschaft schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.PropertyType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ der Eigenschaft ab.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ der Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
      <summary>Ruft einen Wert ab, der angibt, ob diese Eigenschaft gemäß den Angaben in <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> serialisiert werden soll.</summary>
      <returns>Einer der <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />-Enumerationswerte, die angeben, ob diese Eigenschaft serialisiert werden soll.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
      <summary>Ruft einen Wert ab, der angibt, ob Wertänderungsbenachrichtigungen für diese Eigenschaft von außerhalb des Eigenschaftendeskriptors stammen dürfen.</summary>
      <returns>
        <see langword="true" />, wenn Wertänderungsbenachrichtigungen von außerhalb des Eigenschaftendeskriptors stammen dürfen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptorCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten dar.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyDescriptorCollection.Empty">
      <summary>Gibt eine leere Auflistung an, sodass Sie keine neue Auflistung ohne Elemente erstellen müssen. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse.</summary>
      <param name="properties">Ein Array vom Typ <see cref="T:System.ComponentModel.PropertyDescriptor" />, das die Eigenschaften für diese Auflistung bereitstellt.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.#ctor(System.ComponentModel.PropertyDescriptor[],System.Boolean)">
      <summary>Initialisiert eine neue, ggf. schreibgeschützte Instanz der <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse.</summary>
      <param name="properties">Ein Array vom Typ <see cref="T:System.ComponentModel.PropertyDescriptor" />, das die Eigenschaften für diese Auflistung bereitstellt.</param>
      <param name="readOnly">Wenn <see langword="true" /> angegeben ist, kann die Auflistung nicht geändert werden.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)">
      <summary>Fügt der Auflistung den angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> hinzu.</summary>
      <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <returns>Der Index von <see cref="T:System.ComponentModel.PropertyDescriptor" />, der der Auflistung hinzugefügt werden soll.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Clear">
      <summary>Entfernt alle <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Contains(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt zurück, ob die Auflistung die angegebene <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse enthält.</summary>
      <param name="value">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, der in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Auflistung die angegebene <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die vollständige Auflistung in ein Array, wobei an der angegebenen Indexnummer begonnen wird.</summary>
      <param name="array">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, in das Elemente der Auflistung kopiert werden sollen.</param>
      <param name="index">Der Index des <paramref name="array" />-Parameters, ab dem kopiert wird.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)">
      <summary>Gibt die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem angegebenen Namen zurück. Mithilfe eines booleschen Werts wird angegeben, ob die Groß- und Kleinschreibung unberücksichtigt bleibt.</summary>
      <param name="name">Der Name der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse, die aus der Auflistung zurückgegeben werden soll.</param>
      <param name="ignoreCase">
        <see langword="true" />, wenn die Groß- und Kleinschreibung des Eigenschaftennamens nicht berücksichtigt werden soll, andernfalls <see langword="false" />.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem angegebenen Namen oder <see langword="null" />, wenn die Eigenschaft nicht vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator">
      <summary>Gibt einen Enumerator für diese Klasse zurück.</summary>
      <returns>Ein Enumerator vom Typ <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.IndexOf(System.ComponentModel.PropertyDescriptor)">
      <summary>Gibt den Index des angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> zurück.</summary>
      <param name="value">Der <see cref="T:System.ComponentModel.PropertyDescriptor" />, dessen Index zurückgegeben werden soll.</param>
      <returns>Der Index des angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Insert(System.Int32,System.ComponentModel.PropertyDescriptor)">
      <summary>Fügt der Auflistung die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse an der angegebenen Indexnummer hinzu.</summary>
      <param name="index">Der Index, an dem der <paramref name="value" />-Parameter der Auflistung hinzugefügt wird.</param>
      <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.Collections.IComparer)">
      <summary>Sortiert die Member dieser Auflistung unter Verwendung der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="sorter">Ein Comparer zum Sortieren der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.InternalSort(System.String[])">
      <summary>Sortiert die Member dieser Auflistung. Die angegebene Reihenfolge wird zuerst angewendet, darauf folgt die Standardsortierung für diese Auflistung, die i. d. R. alphabetisch erfolgt.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung beschreibt.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)">
      <summary>Entfernt den angegebenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> aus der Auflistung.</summary>
      <param name="value">Die aus der Auflistung zu entfernende <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.RemoveAt(System.Int32)">
      <summary>Entfernt <see cref="T:System.ComponentModel.PropertyDescriptor" /> am angegebenen Index aus der Auflistung.</summary>
      <param name="index">Der Index der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse, die aus der Auflistung entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort">
      <summary>Sortiert die Member dieser Auflistung unter Verwendung der Standardsortierung für diese Auflistung, die i. d. R. alphabetisch erfolgt.</summary>
      <returns>Eine neue <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse, die die sortierten <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)">
      <summary>Sortiert die Member dieser Auflistung unter Verwendung der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="comparer">Ein Comparer zum Sortieren der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung.</param>
      <returns>Eine neue <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse, die die sortierten <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])">
      <summary>Sortiert die Member dieser Auflistung. Die angegebene Reihenfolge wird zuerst angewendet, darauf folgt die Standardsortierung für diese Auflistung, die i. d. R. alphabetisch erfolgt.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung beschreibt.</param>
      <returns>Eine neue <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse, die die sortierten <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
      <summary>Sortiert die Member dieser Auflistung. Die angegebene Reihenfolge wird zuerst angewendet, darauf folgt die Sortierung mit der angegebenen <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
      <param name="names">Ein Array von Zeichenfolgen, das die Sortierreihenfolge der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung beschreibt.</param>
      <param name="comparer">Ein Comparer zum Sortieren der <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte in dieser Auflistung.</param>
      <returns>Eine neue <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse, die die sortierten <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IDictionary" />-Schnittstelle ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Das <see cref="T:System.Object" />, das als Schlüssel für das hinzuzufügende Element verwendet werden soll.</param>
      <param name="value">Das <see cref="T:System.Object" />, das als Wert für das hinzuzufügende Element verwendet werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Ermittelt, ob das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
      <param name="key">Der im <see cref="T:System.Collections.IDictionary" /> zu suchende Schlüssel.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> ein Element mit dem Schlüssel enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator">
      <summary>Gibt einen Enumerator für diese Klasse zurück.</summary>
      <returns>Ein Enumerator vom Typ <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.IDictionary" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)">
      <summary>Fügt der <see cref="T:System.Collections.IList" /> ein Element hinzu.</summary>
      <param name="value">Das Element, das der Auflistung hinzugefügt werden soll.</param>
      <returns>Die Position, an der das neue Element eingefügt wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</summary>
      <param name="value">Das Element, das in der Auflistung gesucht werden soll.</param>
      <returns>
        <see langword="true" />, wenn sich das Element in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines angegebenen Elements in der Auflistung.</summary>
      <param name="value">Das Element, das in der Auflistung gesucht werden soll.</param>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das Element, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen des angegebenen Werts aus der Auflistung.</summary>
      <param name="value">Das Element, das aus der Auflistung entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Entfernt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Count">
      <summary>Ruft die Anzahl der Eigenschaftenbezeichner in der Auflistung ab.</summary>
      <returns>Die Anzahl der Eigenschaftenbezeichner in der Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> an der angegebenen Indexnummer ab oder legt diesen fest.</summary>
      <param name="index">Der nullbasierte Index von <see cref="T:System.ComponentModel.PropertyDescriptor" />, der abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der <paramref name="index" />-Parameter ist kein gültiger Index für <see cref="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.Int32)" />.</exception>
      <returns>Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit der angegebenen Indexnummer.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)">
      <summary>Ruft den <see cref="T:System.ComponentModel.PropertyDescriptor" /> mit dem angegebenen Namen ab oder legt diesen fest.</summary>
      <param name="name">Der Name des <see cref="T:System.ComponentModel.PropertyDescriptor" />, das aus der Auflistung abgerufen werden soll.</param>
      <returns>Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Klasse mit dem angegebenen Namen oder <see langword="null" />, wenn die Eigenschaft nicht vorhanden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der in der Auflistung enthaltenen Elemente.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</summary>
      <returns>
        <see langword="true" />, wenn der Zugriff auf die Auflistung synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist.</summary>
      <returns>Ist <see langword="true" />, wenn die <see cref="T:System.Collections.IDictionary" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Collections.IDictionary" /> schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ruft das Element mit dem angegebenen Schlüssel ab oder legt dieses fest.</summary>
      <param name="key">Der Schlüssel des Elements, das abgerufen oder festgelegt werden soll.</param>
      <returns>Das Element mit dem angegebenen Schlüssel.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel des <see cref="T:System.Collections.IDictionary" /> enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte im <see cref="T:System.Collections.IDictionary" /> enthält.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung eine feste Größe hat, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft ein Element am angegebenen Index aus der Auflistung ab oder legt dieses fest.</summary>
      <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist keine <see cref="T:System.ComponentModel.PropertyDescriptor" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> ist kleiner als 0.  
  
- oder - 
 <paramref name="index" /> ist größer oder gleich <see cref="P:System.ComponentModel.EventDescriptorCollection.Count" />.</exception>
      <returns>Das Element am angegebenen Index.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyTabAttribute">
      <summary>Gibt die Registerkarten für Eigenschaften an, die für die angegebenen Klassen angezeigt werden sollen.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse mit dem angegebenen Klassennamen der Registerkarte.</summary>
      <param name="tabClassName">Der durch die Assembly bezeichnete Name des zu erstellenden Registerkartentyps. Ein Beispiel für diese Formatkonvention finden Sie unter der <see cref="P:System.Type.AssemblyQualifiedName" />-Eigenschaft.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.String,System.ComponentModel.PropertyTabScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse mit dem angegebenen Klassennamen und Gültigkeitsbereich der Registerkarte.</summary>
      <param name="tabClassName">Der durch die Assembly bezeichnete Name des zu erstellenden Registerkartentyps. Ein Beispiel für diese Formatkonvention finden Sie unter der <see cref="P:System.Type.AssemblyQualifiedName" />-Eigenschaft.</param>
      <param name="tabScope">Ein <see cref="T:System.ComponentModel.PropertyTabScope" /> , der den Gültigkeitsbereich dieser Registerkarte angibt. Wenn der Gültigkeitsbereich ist <see cref="F:System.ComponentModel.PropertyTabScope.Component" /> , wird er nur für Komponenten mit dem entsprechenden angezeigt <see cref="T:System.ComponentModel.PropertyTabAttribute" /> . Wenn dieser Gültigkeitsbereich <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> ist, wird er für alle Komponenten im Dokument angezeigt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tabScope" /> ist nicht <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> oder <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse unter Verwendung des angegebenen Registerkartentyps.</summary>
      <param name="tabClass">Der Typ der zu erstellenden Registerkarte.</param>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.#ctor(System.Type,System.ComponentModel.PropertyTabScope)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse mit dem angegebenen Typ und Gültigkeitsbereich der Registerkarte.</summary>
      <param name="tabClass">Der Typ der zu erstellenden Registerkarte.</param>
      <param name="tabScope">Ein <see cref="T:System.ComponentModel.PropertyTabScope" /> , der den Gültigkeitsbereich dieser Registerkarte angibt. Wenn der Gültigkeitsbereich ist <see cref="F:System.ComponentModel.PropertyTabScope.Component" /> , wird er nur für Komponenten mit dem entsprechenden angezeigt <see cref="T:System.ComponentModel.PropertyTabAttribute" /> . Wenn dieser Gültigkeitsbereich <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> ist, wird er für alle Komponenten im Dokument angezeigt.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tabScope" /> ist nicht <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> oder <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Attribut ist.</summary>
      <param name="other">Eine <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse, um einen Vergleich mit dieser Instanz durchzuführen, oder <see langword="null" />.</param>
      <exception cref="T:System.TypeLoadException">Die durch die <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />-Eigenschaft des <paramref name="other" />-Parameters angegebenen Typen können nicht gefunden werden.</exception>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Instanzen gleich sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="other">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</param>
      <exception cref="T:System.TypeLoadException">Die durch die <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />-Eigenschaft des <paramref name="other" />-Parameters angegebenen Typen konnten nicht gefunden werden.</exception>
      <returns>
        <see langword="true" />, wenn <paramref name="other" /> auf die gleiche <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Instanz verweist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.GetHashCode">
      <summary>Ruft den Hashcode für dieses Objekt ab.</summary>
      <returns>Der Hashcode für das Objekt, zu dem das Attribut gehört.</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.String[],System.ComponentModel.PropertyTabScope[])">
      <summary>Initialisiert das Attribut unter Verwendung der angegebenen Namen der Registerkartenklassen und des Arrays der Gültigkeitsbereiche für Registerkarten.</summary>
      <param name="tabClassNames">Ein Array von vollqualifizierten Typennamen der Typen, die für Registerkarten im Eigenschaftenfenster erstellt werden.</param>
      <param name="tabScopes">Der Gültigkeitsbereich der einzelnen Registerkarten. Wenn der Gültigkeitsbereich ist <see cref="F:System.ComponentModel.PropertyTabScope.Component" /> , wird er nur für Komponenten mit dem entsprechenden angezeigt <see cref="T:System.ComponentModel.PropertyTabAttribute" /> . Wenn dieser Gültigkeitsbereich <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> ist, wird er für alle Komponenten im Dokument angezeigt.</param>
      <exception cref="T:System.ArgumentException">Mindestens ein Wert in <paramref name="tabScopes" /> ist nicht <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> oder <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.  
  
- oder - 
Die Länge des <paramref name="tabClassNames" />-Arrays und die Länge des <paramref name="tabScopes" />-Arrays stimmen nicht überein.  
  
- oder - 
 <paramref name="tabClassNames" /> oder <paramref name="tabScopes" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyTabAttribute.InitializeArrays(System.Type[],System.ComponentModel.PropertyTabScope[])">
      <summary>Initialisiert das Attribut unter Verwendung der angegebenen Namen der Registerkartenklassen und des Arrays der Gültigkeitsbereiche für Registerkarten.</summary>
      <param name="tabClasses">Die Typen der zu erstellenden Registerkarten.</param>
      <param name="tabScopes">Der Gültigkeitsbereich der einzelnen Registerkarten. Wenn der Gültigkeitsbereich ist <see cref="F:System.ComponentModel.PropertyTabScope.Component" /> , wird er nur für Komponenten mit dem entsprechenden angezeigt <see cref="T:System.ComponentModel.PropertyTabAttribute" /> . Wenn dieser Gültigkeitsbereich <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> ist, wird er für alle Komponenten im Dokument angezeigt.</param>
      <exception cref="T:System.ArgumentException">Mindestens ein Wert in <paramref name="tabScopes" /> ist nicht <see cref="F:System.ComponentModel.PropertyTabScope.Document" /> oder <see cref="F:System.ComponentModel.PropertyTabScope.Component" />.  
  
- oder - 
Die Länge des <paramref name="tabClassNames" />-Arrays und die Länge des <paramref name="tabScopes" />-Arrays stimmen nicht überein.  
  
- oder - 
 <paramref name="tabClassNames" /> oder <paramref name="tabScopes" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabClasses">
      <summary>Ruft die Typen von Registerkarten ab, die von diesem Attribut verwendet werden.</summary>
      <exception cref="T:System.TypeLoadException">Die durch die <see cref="P:System.ComponentModel.PropertyTabAttribute.TabClassNames" />-Eigenschaft angegebenen Typen konnten nicht gefunden werden.</exception>
      <returns>Ein Array von Typen, das die von diesem Attribut verwendeten Typen von Registerkarten angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabClassNames">
      <summary>Ruft die Namen der Registerkartenklassen ab, die dieses Attribut verwendet.</summary>
      <returns>Die Namen der Registerkartenklassen, die dieses Attribut verwendet.</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyTabAttribute.TabScopes">
      <summary>Ruft für jede Registerkarte dieser <see cref="T:System.ComponentModel.PropertyTabAttribute" />-Klasse ein Array von Gültigkeitsbereichen ab.</summary>
      <returns>Ein Array von <see cref="T:System.ComponentModel.PropertyTabScope" />-Objekten, die die Gültigkeitsbereiche der Registerkarten angeben.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyTabScope">
      <summary>Definiert Bezeichner, die den Gültigkeitsbereich einer Registerkarte im Eigenschaftenfenster angeben.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Component">
      <summary>Diese Registerkarte ist spezifisch für die aktuelle Komponente. Diese Registerkarte wird nur dem Eigenschaftenfenster für die aktuelle Komponente hinzugefügt und wird entfernt, wenn die Komponente nicht mehr ausgewählt ist.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Document">
      <summary>Diese Registerkarte ist spezifisch für das aktuelle Dokument. Sie wird dem Eigenschaftenfenster hinzugefügt und bei Änderung des aktuell ausgewählten Dokuments entfernt.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Global">
      <summary>Diese Registerkarte wird dem Eigenschaftenfenster hinzugefügt und kann nur explizit von einer übergeordneten Komponente entfernt werden.</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyTabScope.Static">
      <summary>Diese Registerkarte wird dem Eigenschaftenfenster hinzugefügt und kann nicht entfernt werden.</summary>
    </member>
    <member name="T:System.ComponentModel.ProvidePropertyAttribute">
      <summary>Gibt den Namen der Eigenschaft an, die ein Implementierer von <see cref="T:System.ComponentModel.IExtenderProvider" /> für andere Komponenten bereitstellt. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />-Klasse mit dem Namen der Eigenschaft und dem Typ des Empfängers.</summary>
      <param name="propertyName">Der Name der Eigenschaft, die auf ein Objekt vom angegebenen Typ erweitert wird.</param>
      <param name="receiverTypeName">Der Name des Datentyps, den diese Eigenschaft erweitern kann.</param>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />-Klasse mit dem Namen der Eigenschaft und deren <see cref="T:System.Type" />.</summary>
      <param name="propertyName">Der Name der Eigenschaft, die auf ein Objekt vom angegebenen Typ erweitert wird.</param>
      <param name="receiverType">Der <see cref="T:System.Type" /> des Datentyps von dem Objekt, das die Eigenschaft erhalten kann.</param>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)">
      <summary>Gibt zurück, ob der Wert des angegebenen Objekts gleich dem aktuellen <see cref="T:System.ComponentModel.ProvidePropertyAttribute" /> ist.</summary>
      <param name="obj">Das Objekt, dessen Wert auf Gleichheit geprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Wert des angegebenen Objekts dem aktuellen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.PropertyName">
      <summary>Ruft den Namen einer Eigenschaft ab, die von dieser Klasse bereitgestellt wird.</summary>
      <returns>Der Name einer Eigenschaft, die von dieser Klasse bereitgestellt wird.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName">
      <summary>Ruft den Namen des Datentyps ab, den diese Eigenschaft erweitern kann.</summary>
      <returns>Der Name des Datentyps, den diese Eigenschaft erweitern kann.</returns>
    </member>
    <member name="P:System.ComponentModel.ProvidePropertyAttribute.TypeId">
      <summary>Ruft einen eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns>Ein <see cref="T:System.Object" />, das ein eindeutiger Bezeichner für dieses Attribut ist.</returns>
    </member>
    <member name="T:System.ComponentModel.RecommendedAsConfigurableAttribute">
      <summary>Gibt an, dass die Eigenschaft als Anwendungseinstellung verwendet werden kann.</summary>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Default">
      <summary>Gibt den Standardwert für das <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" /> an, der <see cref="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No" /> ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.No">
      <summary>Gibt an, dass eine Eigenschaft nicht als Anwendungseinstellung verwendet werden kann. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.RecommendedAsConfigurableAttribute.Yes">
      <summary>Gibt an, dass eine Eigenschaft als Anwendungseinstellung verwendet werden kann. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />-Klasse.</summary>
      <param name="recommendedAsConfigurable">
        <see langword="true" />, wenn die Eigenschaft, an die dieses Attribut gebunden ist, als Anwendungseinstellung verwendet werden kann, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals(System.Object)">
      <summary>Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
      <param name="obj">Ein weiteres Objekt für den Vergleich.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> gleich dieser Instanz ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.RecommendedAsConfigurableAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RecommendedAsConfigurableAttribute.IsDefaultAttribute">
      <summary>Gibt an, ob der Wert dieser Instanz der Standardwert für die Klasse ist.</summary>
      <returns>
        <see langword="true" />, wenn diese Instanz das Standardattribut für die Klasse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RecommendedAsConfigurableAttribute.RecommendedAsConfigurable">
      <summary>Ruft einen Wert ab, der angibt, ob die Eigenschaft, an die dieses Attribut gebunden ist, als Anwendungseinstellung verwendet werden kann.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft, an die dieses Attribut gebunden ist, als Anwendungseinstellung verwendet werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReferenceConverter">
      <summary>Stellt einen Typkonverter bereit, um Objektverweise in andere und aus anderen Darstellungen zu konvertieren.</summary>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ReferenceConverter" />-Klasse.</summary>
      <param name="type">Eine <see cref="T:System.Type" />-Klasse, die den diesem Verweiskonverter zuzuordnenden Typ darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in ein Verweisobjekt konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den Referenztyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, mit der die Schriftart dargestellt wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt mithilfe des angegebenen Kontexts und der angegebenen Argumente in den angegebenen Referenztyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, mit der die Schriftart dargestellt wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung der Standardwerte für den Verweisdatentyp ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp einen Standardsatz von Werten nicht unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob die von der <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Klasse eine vollständige Liste der möglichen Werte darstellt. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da <see cref="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein bestimmter Wert der Auflistung von Standardwerten hinzugefügt werden kann.</summary>
      <param name="context">Eine <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle, die einen zusätzlichen Kontext bereitstellt.</param>
      <param name="value">Der zu überprüfende Wert.</param>
      <returns>
        <see langword="true" />, wenn der Wert zulässig ist und der Auflistung der Standardwerte hinzugefügt werden kann, <see langword="false" />, wenn der Wert der Auflistung der Standardwerte nicht hinzugefügt werden kann.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RefreshEventArgs" />-Klasse mit der Komponente, die geändert wurde.</summary>
      <param name="componentChanged">Die Komponente, die geändert wurde.</param>
    </member>
    <member name="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RefreshEventArgs" />-Klasse mit dem Komponententyp, der geändert wurde.</summary>
      <param name="typeChanged">Der <see cref="T:System.Type" />, der geändert wurde.</param>
    </member>
    <member name="P:System.ComponentModel.RefreshEventArgs.ComponentChanged">
      <summary>Ruft die Komponente ab, deren Eigenschaften, Ereignisse oder Extender sich geändert haben.</summary>
      <returns>Die Komponente, deren Eigenschaften, Ereignisse oder Extender sich geändert haben, oder <see langword="null" />, wenn sich alle Komponenten desselben Typs geändert haben.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshEventArgs.TypeChanged">
      <summary>Ruft den <see cref="T:System.Type" /> ab, dessen Eigenschaften oder Ereignisse sich geändert haben.</summary>
      <returns>Der <see cref="T:System.Type" />, dessen Eigenschaften oder Ereignisse sich geändert haben.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshEventHandler">
      <summary>Stellt die Methode für die Behandlung des <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />-Ereignisses dar, das beim Ändern eines <see cref="T:System.Type" /> oder einer Komponente zur Entwurfszeit ausgelöst wird.</summary>
      <param name="e">Ein <see cref="T:System.ComponentModel.RefreshEventArgs" />, das die geänderte Komponente oder den geänderten <see cref="T:System.Type" /> enthält.</param>
    </member>
    <member name="T:System.ComponentModel.RunInstallerAttribute">
      <summary>Gibt an, ob bei der Installation der Assembly der Installer für benutzerdefinierte Aktionen von Visual Studio oder Installutil.exe (Installationstool) aufgerufen werden soll.</summary>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.Default">
      <summary>Gibt die Standardsichtbarkeit an, die <see cref="F:System.ComponentModel.RunInstallerAttribute.No" /> ist. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.No">
      <summary>Gibt an, dass bei der Installation der Assembly der Installer für benutzerdefinierte Aktionen von Visual Studio oder Installutil.exe (Installationstool) nicht aufgerufen werden soll. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.RunInstallerAttribute.Yes">
      <summary>Gibt an, dass bei der Installation der Assembly der Installer für benutzerdefinierte Aktionen von Visual Studio oder Installutil.exe (Installationstool) aufgerufen werden soll. Dieses <see langword="static" />-Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.RunInstallerAttribute" />-Klasse.</summary>
      <param name="runInstaller">
        <see langword="true" />, wenn bei der Installation einer Assembly ein Installer aufgerufen werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)">
      <summary>Bestimmt, ob der Wert des angegebenen <see cref="T:System.ComponentModel.RunInstallerAttribute" /> gleich dem aktuellen <see cref="T:System.ComponentModel.RunInstallerAttribute" /> ist.</summary>
      <param name="obj">Das zu vergleichende Objekt.</param>
      <returns>
        <see langword="true" />, wenn das angegebene <see cref="T:System.ComponentModel.RunInstallerAttribute" /> gleich der aktuellen <see cref="T:System.ComponentModel.RunInstallerAttribute" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.GetHashCode">
      <summary>Generiert einen Hashcode für das aktuelle <see cref="T:System.ComponentModel.RunInstallerAttribute" />.</summary>
      <returns>Ein Hashcode für die aktuelle <see cref="T:System.ComponentModel.RunInstallerAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute">
      <summary>Bestimmt, ob dieses Attribut der Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn das Attribut der Standardwert für diese Attributklasse ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RunInstallerAttribute.RunInstaller">
      <summary>Ruft einen Wert ab, der angibt, ob während der Installation einer Assembly ein Installer aufgerufen werden soll.</summary>
      <returns>
        <see langword="true" />, wenn bei der Installation einer Assembly ein Installer aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.SByteConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 8-Bit-Objekten, die ganze Zahlen ohne Vorzeichen sind, in eine und aus einer Zeichenfolge bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.SByteConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SByteConverter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.SettingsBindableAttribute">
      <summary>Gibt an, wann eine Komponenteneigenschaft an eine Anwendungseinstellung gebunden werden kann.</summary>
    </member>
    <member name="F:System.ComponentModel.SettingsBindableAttribute.No">
      <summary>Gibt an, dass eine Eigenschaft nicht zum Binden von Einstellungen geeignet ist.</summary>
    </member>
    <member name="F:System.ComponentModel.SettingsBindableAttribute.Yes">
      <summary>Gibt an, dass eine Eigenschaft zum Binden von Eigenschaften geeignet ist.</summary>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SettingsBindableAttribute" />-Klasse.</summary>
      <param name="bindable">
        <see langword="true" />, um anzugeben, dass eine Eigenschaft zum Binden von Einstellungen geeignet ist, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein <see cref="T:System.Object" /> für den Vergleich mit dieser Instanz oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SettingsBindableAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="P:System.ComponentModel.SettingsBindableAttribute.Bindable">
      <summary>Ruft einen Wert ab, der angibt, ob eine Eigenschaft zum Binden von Einstellungen geeignet ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft zum Binden von Einstellungen geeignet ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.SingleConverter">
      <summary>Stellt einen Typkonverter bereit, um Gleitkommazahlobjekte mit einfacher Genauigkeit in andere und aus anderen Darstellungen zu konvertieren.</summary>
    </member>
    <member name="M:System.ComponentModel.SingleConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.SingleConverter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.StringConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von Zeichenfolgenobjekten in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.StringConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in eine Zeichenfolge konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Wertobjekt in ein <see cref="T:System.String" />-Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Der zu verwendende <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung konnte nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.SyntaxCheck">
      <summary>Stellt Methoden bereit, mit denen überprüft werden kann, ob der Computername und Pfad einer bestimmten Syntax entsprechen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckMachineName(System.String)">
      <summary>Überprüft die Syntax des Computernamens, um sicherzustellen, dass er kein „\“ enthält.</summary>
      <param name="value">Eine Zeichenfolge mit dem zu überprüfenden Computernamen.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> dem korrekten Format für Computernamen entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckPath(System.String)">
      <summary>Überprüft die Syntax des Pfades darauf, ob er mit „\\“ beginnt.</summary>
      <param name="value">Eine Zeichenfolge mit dem zu überprüfenden Pfad.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> dem korrekten Format für Pfade entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.SyntaxCheck.CheckRootedPath(System.String)">
      <summary>Überprüft die Syntax des Pfades darauf, ob er mit „\“ oder dem Laufwerkbuchstaben „C:“ beginnt.</summary>
      <param name="value">Eine Zeichenfolge mit dem zu überprüfenden Pfad.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> dem korrekten Format für Pfade entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.TimeSpanConverter">
      <summary>Stellt einen Typkonverter zum Konvertieren von <see cref="T:System.TimeSpan" />-Objekten in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TimeSpanConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp unter Verwendung des angegebenen Kontexts in eine <see cref="T:System.TimeSpan" />-Struktur konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Eine <see cref="T:System.Type" />-Klasse, die den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in eine <see cref="T:System.TimeSpan" />-Struktur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist kein gültiger Wert für den Zieltyp.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
      <param name="context">Ein Formatierungskontext.</param>
      <param name="culture">Die Kultur, in die der <paramref name="value" /> konvertiert wird.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemAttribute">
      <summary>Stellt ein Attribut eines Werkzeugkastenelements dar.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemAttribute.Default">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemAttribute" />-Klasse und legt den Typ auf die Standardeinstellung <see cref="T:System.Drawing.Design.ToolboxItem" /> fest. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemAttribute.None">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemAttribute" />-Klasse und legt den Typ auf <see langword="null" /> fest. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemAttribute" />-Klasse und gibt an, ob Standardinitialisierungswerte verwendet werden sollen.</summary>
      <param name="defaultType">
        <see langword="true" />, wenn ein Toolboxelementattribut für einen Standardtyp erstellt werden soll, <see langword="false" />, wenn diesem Attribut keine Unterstützung von Standardtoolboxelementen zugeordnet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemAttribute" />-Klasse unter Verwendung des angegebenen Typnamens.</summary>
      <param name="toolboxItemTypeName">Der Name des Toolboxelementtyps und der Assembly, die den Typ enthält.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemAttribute" />-Klasse unter Verwendung des angegebenen Typs des Toolboxelements.</summary>
      <param name="toolboxItemType">Der Typ des Toolboxelements.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein <see cref="T:System.Object" /> für den Vergleich mit dieser Instanz oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemAttribute.IsDefaultAttribute">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Wert des Attributs dessen Standardwert ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Wert des Attributs der Standardwert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType">
      <summary>Ruft den Typ des Toolboxelements ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Der Typ kann nicht gefunden werden.</exception>
      <returns>Der Typ des Toolboxelements.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName">
      <summary>Ruft den Namen des Typs der aktuellen <see cref="T:System.Drawing.Design.ToolboxItem" />-Klasse ab.</summary>
      <returns>Der vollqualifizierte Typname des aktuellen Toolboxelements.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemFilterAttribute">
      <summary>Gibt die für ein Toolboxelement zu verwendende Filterzeichenfolge und den Filtertyp an.</summary>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />-Klasse unter Verwendung der angegebenen Filterzeichenfolge.</summary>
      <param name="filterString">Die Filterzeichenfolge für das Toolboxelement.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.#ctor(System.String,System.ComponentModel.ToolboxItemFilterType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />-Klasse unter Verwendung der angegebenen Filterzeichenfolge und des Filtertyps.</summary>
      <param name="filterString">Die Filterzeichenfolge für das Toolboxelement.</param>
      <param name="filterType">Ein <see cref="T:System.ComponentModel.ToolboxItemFilterType" />, der den Filtertyp angibt.</param>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</summary>
      <param name="obj">Ein <see cref="T:System.Object" /> für den Vergleich mit dieser Instanz oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic).</param>
      <returns>
        <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.GetHashCode">
      <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
      <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.Match(System.Object)">
      <summary>Gibt an, ob das angegebene Objekt über eine entsprechende Filterzeichenfolge verfügt.</summary>
      <param name="obj">Das Objekt, das auf eine entsprechende Filterzeichenfolge getestet werden soll.</param>
      <returns>
        <see langword="true" />, wenn das angegebene Objekt über eine entsprechende Filterzeichenfolge verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
      <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterString">
      <summary>Ruft die Filterzeichenfolge für das Toolboxelement ab.</summary>
      <returns>Die Filterzeichenfolge für das Toolboxelement.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.FilterType">
      <summary>Ruft den Typ des Filters ab.</summary>
      <returns>Ein <see cref="T:System.ComponentModel.ToolboxItemFilterType" />, der den Typ des Filters angibt.</returns>
    </member>
    <member name="P:System.ComponentModel.ToolboxItemFilterAttribute.TypeId">
      <summary>Ruft die Typ-ID für das Attribut ab.</summary>
      <returns>Die Typ-ID für dieses Attribut. Alle <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />-Objekte mit derselben Filterzeichenfolge geben die gleiche Typ-ID zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.ToolboxItemFilterType">
      <summary>Definiert Bezeichner, mit denen der durch ein <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> verwendete Filtertyp angegeben wird.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Allow">
      <summary>Gibt an, dass eine Filterzeichenfolge für ein Toolboxelement zulässig, aber nicht erforderlich ist.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Custom">
      <summary>Gibt an, dass eine benutzerdefinierte Verarbeitung erforderlich ist, um zu bestimmen, ob eine Filterzeichenfolge für ein Toolboxelement verwendet werden soll. Es wird in der Regel für eine Stammdesignerklasse angegeben, um anzugeben, dass der Designer ein Toolboxelement mittels Code annehmen oder ablehnen möchte. Der Designer muss die <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />-Methode der <see cref="T:System.Drawing.Design.IToolboxUser" />-Schnittstelle implementieren.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Prevent">
      <summary>Gibt an, dass eine Filterzeichenfolge für ein Toolboxelement nicht zulässig ist. Wenn ein Designer und eine Komponentenklasse jeweils über eine Filterzeichenfolge verfügen, und eine davon den Wert <c>ToolboxItemFilterType.Prevent</c> hat, steht das Toolboxelement nicht zur Verfügung.</summary>
    </member>
    <member name="F:System.ComponentModel.ToolboxItemFilterType.Require">
      <summary>Gibt an, dass eine Filterzeichenfolge für ein Toolboxelement vorhanden sein muss, um ein Toolboxelement zu aktivieren.  Damit ein Toolboxelement mit dem Filtertyp <c>Require</c> aktiviert ist, müssen Designer und Komponentenklasse eine übereinstimmende Filterzeichenfolge besitzen. Darüber hinaus darf weder für den Designer noch die Komponentenklasse ein <c>Prevent</c>-Filtertyp für das Toolboxelement aktiviert sein.</summary>
    </member>
    <member name="T:System.ComponentModel.TypeConverter">
      <summary>Stellt eine einheitliche Methode zum Konvertieren von Werttypen in andere Typen sowie zum Zugreifen auf Standardwerte und Untereigenschaften bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt vom angegebenen Typ unter Verwendung des angegebenen Kontexts in den Typ dieses Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Typs in den Typ dieses Konverters konvertieren kann.</summary>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</summary>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den Typ dieses Konverters mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <summary>Konvertiert den angegebenen Wert in den Typ dieses Konverters.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <summary>Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur und des angegebenen Kontexts in den Typ dieses Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="text">Die zu konvertierende <see cref="T:System.String" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolge unter Verwendung der invarianten Kultur in einen Typ dieses Konverters.</summary>
      <param name="text">Die zu konvertierende <see cref="T:System.String" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
      <summary>Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in ein Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="text">Die zu konvertierende <see cref="T:System.String" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <summary>Konvertiert den angegebenen Text unter Verwendung des angegebenen Kontexts in ein Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="text">Die zu konvertierende <see cref="T:System.String" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <summary>Konvertiert den angegebenen Text in ein Objekt.</summary>
      <param name="text">Die Textdarstellung des zu konvertierenden Objekts.</param>
      <exception cref="T:System.NotSupportedException">Die Zeichenfolge kann nicht in das entsprechende Objekt konvertiert werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten Text darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt unter Verwendung der Argumente in den angegebenen Typ.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung mit invarianter Kultur.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
      <summary>Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung mit invarianter Kultur.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.String" />-Klasse, die den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in eine Zeichenfolgendarstellung.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Konvertiert den angegebenen Wert unter Verwendung des angegebenen Kontexts in eine Zeichenfolgendarstellung.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <summary>Konvertiert den angegebenen Wert in eine Zeichenfolgendarstellung.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
      <summary>Erstellt eine <see cref="T:System.Object" />-Klasse mit einer angegebenen Menge von Eigenschaftswerten für das Objekt neu.</summary>
      <param name="propertyValues">Eine <see cref="T:System.Collections.IDictionary" />-Schnittstelle, die ein Wörterbuch mit neuen Eigenschaftswerten darstellt.</param>
      <returns>Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann. Diese Methode gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt über den angegebenen Kontext, der aus einer angegebenen Menge von Eigenschaftswerten für das Objekt besteht, eine Instanz des Typs, der dieser <see cref="T:System.ComponentModel.TypeConverter" />-Klasse zugeordnet ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="propertyValues">Ein <see cref="T:System.Collections.IDictionary" /> mit neuen Eigenschaftswerten.</param>
      <returns>Ein <see cref="T:System.Object" />, das das angegebene <see cref="T:System.Collections.IDictionary" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann. Diese Methode gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
      <summary>Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</param>
      <exception cref="T:System.NotSupportedException">Wird automatisch durch diese Methode ausgelöst.</exception>
      <returns>Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
      <summary>Gibt eine Ausnahme zurück, wenn eine Konvertierung nicht erfolgen kann.</summary>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />-Klasse oder <see langword="null" />, wenn das Objekt nicht verfügbar ist.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Typ darstellt, in den konvertiert werden sollte.</param>
      <exception cref="T:System.NotSupportedException">Wird automatisch durch diese Methode ausgelöst.</exception>
      <returns>Eine <see cref="T:System.Exception" />-Klasse, die die Ausnahme darstellt, die ausgelöst wird, wenn eine Konvertierung nicht durchgeführt werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
      <summary>Gibt zurück, ob zum Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />-Methode erforderlich ist.</summary>
      <returns>
        <see langword="true" />, wenn bei Ändern einer Eigenschaft für dieses Objekt ein Aufruf von <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts erforderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob bei Ändern eines Werts für dieses Objekt ein Aufruf von <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts mit dem angegebenen Kontext erforderlich ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn bei Ändern einer Eigenschaft für dieses Objekt ein Aufruf von <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts erforderlich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt unter Verwendung des angegebenen Kontexts eine Auflistung der Eigenschaften für den Typ von Array zurück, der durch den Wertparameter angegeben ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gibt unter Verwendung des angegebenen Kontexts und der angegebenen Attribute eine Auflistung der Eigenschaften für den Arraytyp zurück, der durch den Wertparameter angegeben ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das als Filter verwendet wird.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
      <summary>Gibt eine Auflistung von Eigenschaften für den Typ Array zurück, der durch den Wertparameter angegeben ist.</summary>
      <param name="value">Ein <see cref="T:System.Object" />, die den Typ des Arrays angibt, für den Eigenschaften abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit für diesen Datentyp verfügbar gemachten Eigenschaften oder<see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetPropertiesSupported">
      <summary>Gibt zurück, ob dieses Objekt Eigenschaften unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob dieses Objekt Eigenschaften unter Verwendung des angegebenen Kontexts unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValues">
      <summary>Gibt eine Auflistung von Standardwerten aus dem Standardkontext für den Datentyp zurück, für den dieser Typkonverter vorgesehen ist.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die eine Standardmenge zulässiger Werte enthält, oder <see langword="null" />, wenn der Datentyp keine Standardmenge von Werten unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt eine Auflistung von Standardwerten für den Datentyp zurück, auf den dieser Typkonverter ausgelegt ist, wenn ein Formatkontext bereitgestellt wird.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatkontext bereitstellt, der zum Extrahieren von weiteren Informationen über die Umgebung verwendet werden kann, aus der dieser Konverter aufgerufen wurde. Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp einen Standardsatz von Werten nicht unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
      <summary>Gibt zurück, ob die von <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</summary>
      <returns>
        <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob die Auflistung von Standardwerten, die von der <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />-Methode unter Verwendung des angegebenen Kontexts zurückgegeben werden, eine exklusive Liste von möglichen Werten darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> eine vollständige Liste möglicher Werte darstellt, oder <see langword="false" />, wenn andere Werte möglich sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
      <summary>Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob dieses Objekt einen Standardsatz von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt zurück, ob das angegebene Wertobjekt für diesen Typ und den angegebenen Kontext gültig ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Das auf Gültigkeit zu prüfende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
      <summary>Ruft ab, ob das angegebene Werteobjekt für diesen Typ gültig ist.</summary>
      <param name="value">Das auf Gültigkeit zu prüfende Objekt.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
      <summary>Sortiert eine Auflistung von Eigenschaften.</summary>
      <param name="props">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den zu sortierenden Eigenschaften.</param>
      <param name="names">Ein Array von Namen in der Reihenfolge, in der die Eigenschaften in der Auflistung angezeigt werden sollen.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />-Klasse mit den sortierten Eigenschaften.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor">
      <summary>Stellt eine <see langword="abstract" />-Klasse dar, die Eigenschaften für Objekte bereitstellt, die über keine Eigenschaften verfügen.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />-Klasse.</summary>
      <param name="componentType">Ein <see cref="T:System.Type" />, der den Komponententyp darstellt, an den dieser Eigenschaftenbezeichner gebunden ist.</param>
      <param name="name">Den Namen der Eigenschaft.</param>
      <param name="propertyType">Ein <see cref="T:System.Type" />, der den Datentyp für diese Eigenschaft darstellt.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />-Klasse.</summary>
      <param name="componentType">Ein <see cref="T:System.Type" />, der den Komponententyp darstellt, an den dieser Eigenschaftenbezeichner gebunden ist.</param>
      <param name="name">Den Namen der Eigenschaft.</param>
      <param name="propertyType">Ein <see cref="T:System.Type" />, der den Datentyp für diese Eigenschaft darstellt.</param>
      <param name="attributes">Ein <see cref="T:System.Attribute" />-Array mit den der Eigenschaft zuzuweisenden Attributen.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)">
      <summary>Gibt zurück, ob das Zurücksetzen der Komponente deren Wert ändert.</summary>
      <param name="component">Die Komponente, die auf die Fähigkeit des Zurücksetzens zu prüfen ist.</param>
      <returns>
        <see langword="true" />, wenn durch Zurücksetzen der Komponente deren Wert geändert wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)">
      <summary>Setzt den Wert für diese Eigenschaft der Komponente zurück.</summary>
      <param name="component">Die Komponente mit dem Eigenschaftswert, der zurückgesetzt werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>Gibt zurück, ob der Wert dieser Eigenschaft beibehalten werden kann.</summary>
      <param name="component">Die Komponente mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Wert der Eigenschaft beibehalten werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType">
      <summary>Ruft den Komponententyp ab, an den dieser Eigenschaftenbezeichner gebunden ist.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Komponententyp darstellt, an den diese Eigenschaft gebunden ist.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob diese Eigenschaft schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn die Eigenschaft schreibgeschützt ist, <see langword="false" />, wenn für die Eigenschaft Lese-/Schreibzugriff festgelegt ist.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType">
      <summary>Ruft den Typ der Eigenschaft ab.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Typ der Eigenschaft darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeConverter.StandardValuesCollection">
      <summary>Stellt eine Auflistung von Werten dar.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Klasse.</summary>
      <param name="values">Eine <see cref="T:System.Collections.ICollection" />, die die Objekte darstellt, die in die Auflistung aufgenommen werden sollen.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert den Inhalt dieser Auflistung in ein Array.</summary>
      <param name="array">Ein <see cref="T:System.Array" />, das das Array darstellt, in das kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator">
      <summary>Gibt einen Enumerator für diese Auflistung zurück.</summary>
      <returns>Ein Enumerator vom Typ <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count">
      <summary>Ruft die Anzahl der Objekte in der Auflistung ab.</summary>
      <returns>Die Anzahl der -Objekte in der -Auflistung.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)">
      <summary>Ruft das Objekt an der angegebenen Indexnummer ab.</summary>
      <param name="index">Der aus der Auflistung abzurufende nullbasierte Index des <see cref="T:System.Object" />.</param>
      <returns>Das <see cref="T:System.Object" /> mit dem angegebenen Index.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="false" /> in allen Fällen.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>
        <see langword="null" /> in allen Fällen.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptionProvider">
      <summary>Stellt ergänzende Metadaten für <see cref="T:System.ComponentModel.TypeDescriptor" /> bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Klasse unter Verwendung eines übergeordneten Typbeschreibungsanbieters.</summary>
      <param name="parent">Der übergeordnete Typbeschreibungsanbieter.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <summary>Erstellt ein Objekt, das einen anderen Datentyp ersetzen kann.</summary>
      <param name="provider">Ein optionaler Dienstanbieter.</param>
      <param name="objectType">Der Typ des zu erstellenden Objekts. Dieser Parameter ist nie <see langword="null" />.</param>
      <param name="argTypes">Ein optionales Array von Typen, die die Parametertypen darstellen, die an den Konstruktor des Objekts übergeben werden sollen. Dieses Array kann <see langword="null" /> sein oder die Länge 0 haben.</param>
      <param name="args">Ein optionales Array von Parameterwerten, die an den Konstruktor des Objekts übergeben werden.</param>
      <returns>Das ersetzende <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
      <summary>Ruft einen objektbezogenen Cache ab, auf den als <see cref="T:System.Collections.IDictionary" /> der Schlüssel-Wert-Paare zugegriffen wird.</summary>
      <param name="instance">Das Objekt, für das der Cache abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.Collections.IDictionary" />, wenn das bereitgestellte Objekt das Zwischenspeichern unterstützt; andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
      <summary>Ruft einen erweiterten benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</summary>
      <param name="instance">Das Objekt, für das der erweiterte Typdeskriptor abgerufen wird.</param>
      <returns>Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der erweiterte Metadaten für das Objekt enthalten kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
      <summary>Ruft die Extenderanbieter für das angegebene Objekt ab.</summary>
      <param name="instance">Das Objekt, für das Extenderanbieter abgerufen werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Ein Array von Extenderanbietern für <paramref name="instance" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
      <summary>Ruft den Namen der angegebenen Komponente ab, oder <see langword="null" />, wenn der Komponente kein Name zugewiesen ist.</summary>
      <param name="component">Die angegebene Komponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <returns>Der Name der angegebenen Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
      <summary>Führt normale Reflektion eines gegebenen Objekts aus.</summary>
      <param name="instance">Eine Instanz des Typs (sollte nicht <see langword="null" /> sein).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Der Typ der Reflexion für dieses <paramref name="instance" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
      <summary>Führt normale Reflektion eines Typs aus.</summary>
      <param name="objectType">Der Objekttyp, für den <see cref="T:System.Reflection.IReflect" /> abgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> ist <see langword="null" />.</exception>
      <returns>Der Typ der Reflexion für dieses <paramref name="objectType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
      <summary>Führt normale Reflektion eines gegebenen Objekts mit dem gegebenen Typ aus.</summary>
      <param name="objectType">Der Objekttyp, für den <see cref="T:System.Reflection.IReflect" /> abgerufen wird.</param>
      <param name="instance">Eine Instanz des Typs. Kann <see langword="null" /> sein.</param>
      <returns>Der Typ der Reflexion für dieses <paramref name="objectType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
      <summary>Konvertiert einen Reflektionstyp in einen Laufzeittyp.</summary>
      <param name="reflectionType">Der Typ, der in seine Laufzeitentsprechung konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reflectionType" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Type" />, der die Laufzeitentsprechung von <paramref name="reflectionType" /> darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
      <summary>Ruft einen benutzerdefinierten Typdeskriptor für das gegebene Objekt ab.</summary>
      <param name="instance">Eine Instanz des Typs. Kann <see langword="null" /> sein, wenn keine Instanz an den <see cref="T:System.ComponentModel.TypeDescriptor" /> übergeben würde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
      <summary>Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ ab.</summary>
      <param name="objectType">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</param>
      <returns>Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
      <summary>Ruft einen benutzerdefinierten Typdeskriptor für den gegebenen Typ und das gegebene Objekt ab.</summary>
      <param name="objectType">Der Objekttyp, für den der Typdeskriptor abgerufen wird.</param>
      <param name="instance">Eine Instanz des Typs. Kann <see langword="null" /> sein, wenn keine Instanz an den <see cref="T:System.ComponentModel.TypeDescriptor" /> übergeben würde.</param>
      <returns>Ein <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, der Metadaten für den Typ bereitstellen kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob der angegebene Typ mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist.</summary>
      <param name="type">Der Typ, der auf Kompatibilität überprüft werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn <paramref name="type" /> mit der Typbeschreibung und der Kette von Typbeschreibungsanbietern kompatibel ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptor">
      <summary>Stellt Informationen zu den Merkmalen für eine Komponente bereit, z.B. zu Attributen, Eigenschaften und Ereignissen. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="E:System.ComponentModel.TypeDescriptor.Refreshed">
      <summary>Tritt auf, wenn der Cache für eine Komponente gelöscht wird.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
      <summary>Fügt Attribute auf Klassenebene zur Zielkomponenteninstanz hinzu.</summary>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die zur Klasse der Komponente hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
      <returns>Das neu erstellte <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, das zum Hinzufügen der angegebenen Attribute verwendet wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
      <summary>Fügt Attribute auf Klassenebene zum Zielkomponententyp hinzu.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die zur Klasse der Komponente hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
      <returns>Das neu erstellte <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, das zum Hinzufügen der angegebenen Attribute verwendet wurde.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
      <summary>Fügt eine Editor-Tabelle für den angegebenen Editor-Basistyp hinzu.</summary>
      <param name="editorBaseType">Der Editor-Basistyp, für den die Editor-Tabelle hinzugefügt wird. Wenn für diesen Typ bereits eine Tabelle vorhanden ist, führt diese Methode keine Aktion aus.</param>
      <param name="table">Das hinzuzufügende <see cref="T:System.Collections.Hashtable" />.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Fügt einen Typbeschreibungsanbieter für eine einzelne Instanz einer Komponente hinzu.</summary>
      <param name="provider">Das hinzuzufügende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Fügt einen Typbeschreibungsanbieter für eine Komponentenklasse hinzu.</summary>
      <param name="provider">Das hinzuzufügende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Fügt einen Typbeschreibungsanbieter für eine einzelne Instanz einer Komponente hinzu.</summary>
      <param name="provider">Das hinzuzufügende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Fügt einen Typbeschreibungsanbieter für eine Komponentenklasse hinzu.</summary>
      <param name="provider">Das hinzuzufügende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
      <summary>Erstellt eine Primär-/Sekundär-Zuordnung zwischen zwei Objekten.</summary>
      <param name="primary">Das primäre <see cref="T:System.Object" />.</param>
      <param name="secondary">Das sekundäre <see cref="T:System.Object" />.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="primary" /> ist gleich <paramref name="secondary" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
      <summary>Erstellt eine Instanz des angegebenen Designers, der der angegebenen Komponente zugeordnet ist, und des angegebenen Typs des Designers.</summary>
      <param name="component">Eine <see cref="T:System.ComponentModel.IComponent" />, die die Komponente angibt, die dem Designer zugeordnet werden soll.</param>
      <param name="designerBaseType">Ein <see cref="T:System.Type" />, der den Typ des zu erstellenden Designers darstellt.</param>
      <returns>Ein <see cref="T:System.ComponentModel.Design.IDesigner" />, der eine Instanz des Designers für die Komponente oder <see langword="null" /> ist, falls kein Designer gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
      <summary>Erstellt einen neuen Ereignisdeskriptor, der mit einem vorhandenen Ereignisdeskriptor identisch ist, wenn der vorhandene <see cref="T:System.ComponentModel.EventDescriptor" /> übergeben wird.</summary>
      <param name="componentType">Der Typ der Komponente, für die das neue Ereignis erstellt werden soll.</param>
      <param name="oldEventDescriptor">Die vorhandenen Ereignisinformationen.</param>
      <param name="attributes">Die neuen Attribute.</param>
      <returns>Ein neuer <see cref="T:System.ComponentModel.EventDescriptor" />, der die angegebenen Metadatenattribute und die vorhandenen Metadatenattributen zusammengeführt hat.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Erstellt einen neuen Ereignisdeskriptor, der mit einem vorhandenen Ereignisdeskriptor identisch ist, indem die Deskriptorinformationen aus einem angegebenen Ereignis für einen Typ dynamisch erzeugt werden.</summary>
      <param name="componentType">Der Typ der Komponente, in der das Ereignis vorhanden ist.</param>
      <param name="name">Der Name des Ereignisses.</param>
      <param name="type">Der Typ des Delegaten, der das Ereignis behandelt.</param>
      <param name="attributes">Die Attribute für dieses Ereignis.</param>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" />, das an einen Typ gebunden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
      <summary>Erstellt ein Objekt, das einen anderen Datentyp ersetzen kann.</summary>
      <param name="provider">Der Dienstanbieter, der einen <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Dienst bereitstellt. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="objectType">Der <see cref="T:System.Type" /> des zu erstellenden Objekts.</param>
      <param name="argTypes">Ein optionales Array von Parametertypen, die an den Konstruktor des Objekts übergeben werden sollen. Dieser Parameter kann <see langword="null" /> oder ein Array der Länge 0 (null) sein.</param>
      <param name="args">Ein optionales Array von Parameterwerten, die an den Konstruktor des Objekts übergeben werden. Wenn der Wert nicht <see langword="null" /> ist, muss die Anzahl der Elemente dem Wert <paramref name="argTypes" /> entsprechen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> ist <see langword="null" />, oder <paramref name="args" /> ist <see langword="null" />, wenn <paramref name="argTypes" /> nicht <see langword="null" /> ist.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="argTypes" /> und <paramref name="args" /> weisen eine unterschiedliche Anzahl von Elementen auf.</exception>
      <returns>Eine Instanz des Ersatzdatentyps, wenn ein zugeordneter <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> gefunden wurde, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
      <summary>Erstellt einen neuen Eigenschaftendeskriptor aus einem vorhandenen Eigenschaftendeskriptor mithilfe des angegebenen vorhandenen <see cref="T:System.ComponentModel.PropertyDescriptor" /> und Attributarrays.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Komponente, der die Eigenschaft angehört.</param>
      <param name="oldPropertyDescriptor">Der vorhandene Eigenschaftendeskriptor.</param>
      <param name="attributes">Die neuen Attribute für diese Eigenschaft.</param>
      <returns>Ein neuer <see cref="T:System.ComponentModel.PropertyDescriptor" />, bei dem die angegebenen Metadatenattribute mit den vorhandenen Metadatenattributen zusammengeführt sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
      <summary>Erstellt eine Eigenschaftsbeschreibung und bindet diese dynamisch an einen Typ. Dazu werden der angegebene Eigenschaftenname, der Typ und das Attributarray verwendet.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Komponente, der die Eigenschaft angehört.</param>
      <param name="name">Den Namen der Eigenschaft.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Eigenschaft.</param>
      <param name="attributes">Die neuen Attribute für diese Eigenschaft.</param>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der an den angegebenen Typ gebunden ist und bei dem die angegebenen Metadatenattribute mit den vorhandenen Metadatenattributen zusammengeführt sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
      <summary>Gibt eine Instanz des Typs zurück, der dem angegebenen primären Objekt zugeordnet ist.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <param name="primary">Das primäre Objekt der Zuordnung.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
      <returns>Eine Instanz des sekundären Typs, der dem primären Objekt zugeordnet ist, sofern eine Zuordnung vorhanden ist, andernfalls <paramref name="primary" />, wenn keine angegebene Zuordnung vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
      <summary>Gibt eine Auflistung von Attributen für die angegebene Komponente zurück.</summary>
      <param name="component">Die Komponente, für die Sie Attribute abrufen möchten.</param>
      <returns>Eine <see cref="T:System.ComponentModel.AttributeCollection" />, die die Attribute für diese Komponente enthält. Wenn <paramref name="component" /><see langword="null" /> ist, gibt diese Methode eine leere Auflistung zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
      <summary>Gibt eine Auflistung von Attributen für die angegebene Komponente und einen booleschen Wert zurück, der angibt, dass ein Deskriptor mit benutzerdefiniertem Typ erstellt wurde.</summary>
      <param name="component">Die Komponente, für die Sie Attribute abrufen möchten.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um einen Basissatz von Attributen des benutzerdefinierten Typdeskriptors zu verwenden, wenn <paramref name="component" /> den Typ <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> besitzt, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für die Komponente. Wenn die Komponente <see langword="null" /> ist, gibt diese Methode eine leere Auflistung zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)">
      <summary>Gibt eine Auflistung von Attributen für den angegebenen Typ der Komponente zurück.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <returns>Ein <see cref="T:System.ComponentModel.AttributeCollection" /> mit den Attributen für den Typ der Komponente. Wenn die Komponente <see langword="null" /> ist, gibt diese Methode eine leere Auflistung zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
      <summary>Gibt den Namen der Klasse für die angegebene Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</summary>
      <param name="component">Das <see cref="T:System.Object" />, für das Sie den Klassennamen abrufen möchten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.String" />, der den Namen der Klasse für die angegebene Komponente enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
      <summary>Gibt den Namen der Klasse für die angegebene Komponente mithilfe eines benutzerdefinierten Typdeskriptors zurück.</summary>
      <param name="component">Das <see cref="T:System.Object" />, für das Sie den Klassennamen abrufen möchten.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.String" />, der den Namen der Klasse für die angegebene Komponente enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
      <summary>Gibt den Namen der Klasse für den angegebenen Typ zurück.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> ist <see langword="null" />.</exception>
      <returns>Eine <see cref="T:System.String" />, die den Namen der Klasse für den angegebenen Komponententyp enthält.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
      <summary>Gibt den Namen der angegebenen Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</summary>
      <param name="component">Das <see cref="T:System.Object" />, für das Sie den Klassennamen abrufen möchten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.String" /> mit dem Namen der angegebenen Komponente, oder <see langword="null" />, wenn kein Komponentenname vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
      <summary>Gibt den Namen der angegebenen Komponente zurück. Dazu wird ein benutzerdefinierter Typdeskriptor verwendet.</summary>
      <param name="component">Das <see cref="T:System.Object" />, für das Sie den Klassennamen abrufen möchten.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Der Name der Klasse für die angegebene Komponente oder <see langword="null" />, wenn kein Komponentenname vorhanden ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
      <summary>Gibt einen Typkonverter für den Typ der angegebenen Komponente zurück.</summary>
      <param name="component">Eine Komponente, für die der Konverter abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" /> für die angegebene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
      <summary>Gibt einen Typkonverter für den Typ der angegebenen Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</summary>
      <param name="component">Eine Komponente, für die der Konverter abgerufen werden soll.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" /> für die angegebene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
      <summary>Gibt für den angegebenen Typ einen Typkonverter zurück.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.TypeConverter" /> für den angegebenen Typ.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
      <summary>Gibt das Standardereignis für die  angegebene Komponente zurück.</summary>
      <param name="component">Die Komponente, für die das Ereignis abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" /> mit dem Standardereignis oder <see langword="null" />, wenn keine Ereignisse vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
      <summary>Gibt das Standardereignis für eine Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</summary>
      <param name="component">Die Komponente, für die das Ereignis abgerufen werden soll.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" /> mit dem Standardereignis oder <see langword="null" />, wenn keine Ereignisse vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
      <summary>Gibt das Standardereignis für den angegebenen Typ der Komponente zurück.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.EventDescriptor" /> mit dem Standardereignis oder <see langword="null" />, wenn keine Ereignisse vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
      <summary>Gibt die Standardeigenschaft für die angegebene Komponente zurück.</summary>
      <param name="component">Die Komponente, für die die Standardeigenschaft abgerufen werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> mit der Standardeigenschaft oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
      <summary>Gibt die Standardeigenschaft für die angegebene Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</summary>
      <param name="component">Die Komponente, für die die Standardeigenschaft abgerufen werden soll.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> mit der Standardeigenschaft oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
      <summary>Gibt die Standardeigenschaft für den angegebenen Komponententyp zurück.</summary>
      <param name="componentType">Ein <see cref="T:System.Type" />, der die Klasse darstellt, für die die Eigenschaft abgerufen werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptor" /> mit der Standardeigenschaft oder <see langword="null" />, wenn keine Eigenschaften vorhanden sind.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
      <summary>Ruft einen Editor mit dem angegebenen Basistyp für die angegebene Komponente ab.</summary>
      <param name="component">Die Komponente, für die der Editor abgerufen werden soll.</param>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Basistyp des Editors darstellt, den Sie suchen möchten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> oder <paramref name="editorBaseType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine Instanz des Editors, die in den angegebenen Editortyp umgewandelt werden kann, oder <see langword="null" />, falls kein Editor des angeforderten Typs gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
      <summary>Gibt einen Editor mit dem angegebenen Basistyp und mit einem benutzerdefinierten Typdeskriptor für die angegebene Komponente zurück.</summary>
      <param name="component">Die Komponente, für die der Editor abgerufen werden soll.</param>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Basistyp des Editors darstellt, den Sie suchen möchten.</param>
      <param name="noCustomTypeDesc">Ein Flag, das angibt, ob benutzerdefinierte Typbeschreibungsinformationen berücksichtigt werden sollten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> oder <paramref name="editorBaseType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine Instanz des Editors, die in den angegebenen Editortyp umgewandelt werden kann, oder <see langword="null" />, falls kein Editor des angeforderten Typs gefunden wird.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
      <summary>Gibt einen Editor mit dem angegebenen Basistyp für den angegebenen Typ zurück.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <param name="editorBaseType">Ein <see cref="T:System.Type" />, der den Basistyp des Editors darstellt, den Sie zu finden versuchen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> oder <paramref name="editorBaseType" /> ist <see langword="null" />.</exception>
      <returns>Eine Instanz des Editorobjekts, die in den angegebenen Basistyp oder in <see langword="null" /> umgewandelt werden kann, falls kein Editor des angeforderten Typs gefunden werden kann.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
      <summary>Gibt eine Auflistung von Ereignissen für die angegebene Komponente zurück.</summary>
      <param name="component">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen für diese Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
      <summary>Gibt die Auflistung der Ereignisse für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</summary>
      <param name="component">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das Sie als Filter verwenden können.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
      <summary>Gibt die Auflistung von Ereignissen für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter und ein benutzerdefinierter Typdeskriptor verwendet.</summary>
      <param name="component">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
      <summary>Gibt die Auflistung von Eigenschaften für eine angegebene Komponente mit einem benutzerdefinierten Typdeskriptor zurück.</summary>
      <param name="component">Eine Komponente, für die die Ereignisse abgerufen werden sollen.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen für diese Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
      <summary>Gibt die Auflistung von Ereignissen für einen angegebenen Komponententyp zurück.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen für diese Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
      <summary>Gibt die Auflistung der Ereignisse für einen angegebenen Komponententyp zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, das Sie als Filter verwenden können.</param>
      <returns>Eine <see cref="T:System.ComponentModel.EventDescriptorCollection" /> mit den Ereignissen, die mit den angegebenen Attributen für diese Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
      <summary>Gibt den vollqualifizierten Namen der Komponente zurück.</summary>
      <param name="component">Das <see cref="T:System.ComponentModel.Component" />, für das der Name gesucht wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> ist <see langword="null" />.</exception>
      <returns>Der vollqualifizierte Name der angegebenen Komponente, oder <see langword="null" />, wenn die Komponente keinen Namen besitzt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
      <summary>Gibt die Auflistung von Eigenschaften für eine angegebene Komponente zurück.</summary>
      <param name="component">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften für die angegebene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
      <summary>Gibt die Auflistung der Eigenschaften für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</summary>
      <param name="component">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
      <summary>Gibt die Auflistung der Eigenschaften für eine angegebene Komponente zurück. Hierbei wird ein angegebenes Array von Attributen als Filter sowie ein benutzerdefinierter Typdeskriptor verwendet.</summary>
      <param name="component">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen zu berücksichtigen, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Ereignissen, die mit den angegebenen Attributen für die angegebene Komponente übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
      <summary>Gibt die Auflistung von Eigenschaften für eine angegebene Komponente zurück. Dazu wird der Standardtypdeskriptor verwendet.</summary>
      <param name="component">Eine Komponente, deren Eigenschaften abgerufen werden sollen.</param>
      <param name="noCustomTypeDesc">
        <see langword="true" />, um benutzerdefinierte Typbeschreibungsinformationen nicht zu berücksichtigen; anderenfalls <see langword="false" />.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="component" /> ist ein prozessübergreifendes Remoteobjekt.</exception>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften für eine angegebene Komponente.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
      <summary>Gibt die Auflistung von Eigenschaften für einen angegebenen Komponententyp zurück.</summary>
      <param name="componentType">Ein <see cref="T:System.Type" />, der die Komponente darstellt, für die Eigenschaften abgerufen werden sollen.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften für einen angegebenen Komponententyp.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
      <summary>Gibt die Auflistung der Eigenschaften für einen angegebenen Komponententyp zurück. Hierbei wird ein angegebenes Array von Attributen als Filter verwendet.</summary>
      <param name="componentType">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <param name="attributes">Ein Array des Typs <see cref="T:System.Attribute" />, der als Filter verwendet werden soll.</param>
      <returns>Ein <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> mit den Eigenschaften, die mit den angegebenen Attributen für diesen Komponententyp übereinstimmen.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
      <summary>Gibt den Typbeschreibungsanbieter für die angegebene Komponente zurück.</summary>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, der der angegebenen Komponente zugeordnet ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
      <summary>Gibt den Typbeschreibungsanbieter für den angegebenen Typ zurück.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.ComponentModel.TypeDescriptionProvider" />, der dem angegebenen Typ zugeordnet ist.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
      <summary>Gibt einen <see cref="T:System.Type" /> zurück, der zum Durchführen der Reflektion bei Angabe eines Objekts verwendet werden kann.</summary>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Type" /> für das angegebene Objekt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
      <summary>Gibt einen <see cref="T:System.Type" /> zurück, der zum Durchführen der Reflektion bei Angabe eines Klassentyps verwendet werden kann.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Type" /> der angegebenen Klasse.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)">
      <summary>Löscht die Eigenschaften und Ereignisse für die angegebene Komponente aus dem Cache.</summary>
      <param name="component">Eine Komponente, für die die Eigenschaften oder Ereignisse geändert wurden.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)">
      <summary>Löscht die Eigenschaften und Ereignisse für die angegebene Assembly aus dem Cache.</summary>
      <param name="assembly">Das <see cref="T:System.Reflection.Assembly" />, das die zu aktualisierende Assembly darstellt. Jedes <see cref="T:System.Type" /> in dieser Assembly wird aktualisiert.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)">
      <summary>Löscht die Eigenschaften und Ereignisse für das angegebene Modul aus dem Cache.</summary>
      <param name="module">Das <see cref="T:System.Reflection.Module" />, das das zu aktualisierende Modul darstellt. Jeder <see cref="T:System.Type" /> in diesem Modul wird aktualisiert.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)">
      <summary>Löscht die Eigenschaften und Ereignisse für die angegebene Art von Komponente aus dem Cache.</summary>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
      <summary>Entfernt eine Zuordnung zwischen zwei Objekten.</summary>
      <param name="primary">Das primäre <see cref="T:System.Object" />.</param>
      <param name="secondary">Das sekundäre <see cref="T:System.Object" />.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
      <summary>Entfernt alle Zuordnungen für ein primäres Objekt.</summary>
      <param name="primary">Das primäre <see cref="T:System.Object" /> in einer Zuordnung.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primary" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Objekt zugeordnet ist.</summary>
      <param name="provider">Das zu entfernende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Element.</param>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Typ zugeordnet ist.</summary>
      <param name="provider">Das zu entfernende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Element.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
      <summary>Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Objekt zugeordnet ist.</summary>
      <param name="provider">Das zu entfernende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Element.</param>
      <param name="instance">Eine Instanz der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
      <summary>Entfernt einen zuvor hinzugefügten Typbeschreibungsanbieter, der dem angegebenen Typ zugeordnet ist.</summary>
      <param name="provider">Das zu entfernende <see cref="T:System.ComponentModel.TypeDescriptionProvider" />-Element.</param>
      <param name="type">Der <see cref="T:System.Type" /> der Zielkomponente.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
      <summary>Sortiert Deskriptoren anhand der Namen der Deskriptoren.</summary>
      <param name="infos">Ein <see cref="T:System.Collections.IList" />-Objekt, das die zu sortierenden Deskriptoren enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="infos" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler">
      <summary>Ruft den Anbieter für COM-Typinformationen (Component Object Model) für die Zielkomponente ab oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" />-Instanz, die den Anbieter von COM-Typinformationen darstellt.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.ComObjectType">
      <summary>Ruft den Typ des COM-Objekts (Component Object Model) ab, das durch die Zielkomponente dargestellt wird.</summary>
      <returns>Das <see cref="T:System.Type" /> des COM-Objekts, das von dieser Komponente dargestellt wird, oder <see langword="null" /> für Nicht-COM-Objekte.</returns>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptor.InterfaceType">
      <summary>Ruft einen Typ ab, der einen Typbeschreibungsanbieter für alle Schnittstellentypen darstellt.</summary>
      <returns>Ein <see cref="T:System.Type" />, der einen benutzerdefinierten Typbeschreibungsanbieter für alle Schnittstellentypen darstellt.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeListConverter">
      <summary>Stellt einen Typkonverter, der zum Auffüllen eines Listenfelds mit verfügbaren Typen verwendet werden kann.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.TypeListConverter" />-Klasse, unter Verwendung des Typarrays als verfügbare Typen.</summary>
      <param name="types">Das Array vom Typ <see cref="T:System.Type" />, das als verfügbare Typen verwendet werden soll.</param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob der Konverter die angegebene <see cref="T:System.Type" />-Klasse des Quellobjekts mithilfe des angegebenen Kontexts konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Die <see cref="T:System.Type" />-Klasse des Quellobjekts.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />-Klasse, die die Kultur angibt, mit der die Schriftart dargestellt wird.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse. Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Die <see cref="T:System.Type" />-Klasse, in die der Wert konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung von Standardwerten für den Datentyp ab, für den diese Bestätigung vorgesehen ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Werte enthält, oder <see langword="null" />, wenn der Datentyp einen Standardsatz von Werten nicht unterstützt.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob die von der <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Methode zurückgegebene Auflistung von Standardwerten eine exklusive Liste darstellt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, da die von der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Methode zurückgegebene <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Klasse eine vollständige Liste der möglichen Werte darstellt. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt eine Standardmenge von Werten unterstützt, die unter Verwendung des angegebenen Kontexts aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <returns>
        <see langword="true" />, weil die <see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />-Schnittstelle aufgerufen werden muss, um eine vom Objekt unterstützte Standardmenge von Werten zu ermitteln. Diese Methode gibt nie <see langword="false" /> zurück.</returns>
    </member>
    <member name="T:System.ComponentModel.UInt16Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 16-Bit-Objekten, die ganze Zahlen ohne Vorzeichen sind, in andere und aus anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt16Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.UInt16Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.UInt32Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 32-Bit-Objekten, die ganze Zahlen ohne Vorzeichen sind, in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt32Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.UInt32Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.UInt64Converter">
      <summary>Stellt einen Typkonverter für das Konvertieren von 64-Bit-Ganzzahlobjekten mit Vorzeichen in und von anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt64Converter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.UInt64Converter" />-Klasse.</summary>
    </member>
    <member name="T:System.ComponentModel.VersionConverter">
      <summary>Stellt einen Typkonverter für das Konvertieren von <see cref="T:System.Version" />-Objekten in verschiedene andere und aus verschiedenen anderen Darstellungen bereit.</summary>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.VersionConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt vom angegebenen Quelltyp in eine <see cref="T:System.Version" /> konvertieren kann.</summary>
      <param name="context">Ein Objekt, das Kontextinformationen bereitstellt.</param>
      <param name="sourceType">Der Typ des zu konvertierenden Objekts.</param>
      <returns>
        <see langword="true" />, wenn sourceType vom Konverter in <see cref="T:System.Version" /> konvertiert werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein Objekt, das Kontextinformationen bereitstellt.</param>
      <param name="destinationType">Der Zieltyp für die Konvertierung.</param>
      <returns>
        <see langword="true" />, wenn der Konverter ein Objekt in den angegebenen Zieltyp konvertieren kann; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in eine <see cref="T:System.Version" />.</summary>
      <param name="context">Ein Objekt, das Kontextinformationen bereitstellt.</param>
      <param name="culture">Die für die Konvertierung zu verwendende Kultur.</param>
      <param name="value">Der Wert, der in einen <see cref="T:System.Version" /> konvertiert werden soll.</param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> ist keine gültige <see cref="T:System.Version" />-Zeichenfolge.</exception>
      <returns>
        <paramref name="value" /> wird in einen <see cref="T:System.Version" />-Wert konvertiert.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert den angegebenen Wert mithilfe des angegebenen Kontexts und der angegebenen Argumente in den angegebenen Zieltyp.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die Kultur, die Formatierungsinformationen für die Konvertierung liefert.</param>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="destinationType">Der Typ, in den der value-Parameter konvertiert werden soll.</param>
      <returns>Ein Objekt, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.ComponentModel.VersionConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Wertobjekt für diesen Typ und den angegebenen Kontext gültig ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Das auf Gültigkeit zu prüfende Objekt.</param>
      <returns>
        <see langword="true" />, wenn der angegebene Wert für dieses Objekt gültig ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.WarningException">
      <summary>Gibt eine Ausnahme an, die nicht als Fehler, sondern als Warnung behandelt wird.</summary>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse.</summary>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse mit den angegebenen Serialisierungsdaten und dem angegebenen Kontext.</summary>
      <param name="info">Die für die Deserialisierung zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse.</param>
      <param name="context">Das für die Deserialisierung zu verwendende Ziel.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse mit der angegebenen Meldung und ohne Hilfedatei.</summary>
      <param name="message">Die Meldung, die dem Endbenutzer angezeigt wird.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse mit der angegebenen ausführlichen Beschreibung und der angegebenen Ausnahme.</summary>
      <param name="message">Eine detaillierte Beschreibung des Fehlers.</param>
      <param name="innerException">Ein Verweis auf die innere Ausnahme, die dieser Ausnahme zugrunde liegt.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse mit der angegebenen Meldung und mit Zugriff auf die angegebene Hilfedatei.</summary>
      <param name="message">Die Meldung, die dem Endbenutzer angezeigt wird.</param>
      <param name="helpUrl">Die Hilfedatei, die den Benutzern bei Anforderung von Hilfe angezeigt wird.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.WarningException" />-Klasse mit der angegebenen Meldung und mit Zugriff auf die angegebene Hilfedatei und das angegebene Hilfethema.</summary>
      <param name="message">Die Meldung, die dem Endbenutzer angezeigt wird.</param>
      <param name="helpUrl">Die Hilfedatei, die den Benutzern bei Anforderung von Hilfe angezeigt wird.</param>
      <param name="helpTopic">Das Hilfethema, das den Benutzern bei Anforderung von Hilfe angezeigt wird.</param>
    </member>
    <member name="M:System.ComponentModel.WarningException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Legt die <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit dem Parameternamen und zusätzlichen Informationen über die Ausnahme fest.</summary>
      <param name="info">Speichert die Daten, die zum Serialisieren oder Deserialisieren eines vom <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> serialisierten oder deserialisierten Objekts verwendet wurden.</param>
      <param name="context">Beschreibt Quelle und Ziel des Streams, der die Ausnahme generiert hat, und die Möglichkeit, bei der Serialisierung diesen Kontext und einen zusätzlichen, vom Aufrufer definierten Kontext beizubehalten.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.WarningException.HelpTopic">
      <summary>Ruft das der Warnung zugeordnete Hilfethema ab.</summary>
      <returns>Das der Warnung zugeordnete Hilfethema.</returns>
    </member>
    <member name="P:System.ComponentModel.WarningException.HelpUrl">
      <summary>Ruft die der Warnung zugeordnete Hilfedatei ab.</summary>
      <returns>Die der Warnung zugeordnete Hilfedatei.</returns>
    </member>
    <member name="T:System.Drawing.ColorConverter">
      <summary>Konvertiert Farben aus einem Datentyp in einen anderen. Greifen Sie auf diese Klasse über <see cref="T:System.ComponentModel.TypeDescriptor" /> zu.</summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.ColorConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt. Sie können mit diesem Objekt zusätzliche Informationen zu der Umgebung abrufen, aus der der Konverter aufgerufen wird.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter den Vorgang durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, der einen Formatierungskontext bereitstellt. Sie können mit diesem Objekt zusätzliche Informationen zu der Umgebung abrufen, aus der der Konverter aufgerufen wird.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die die Kultur angibt, in der die Farbe dargestellt werden soll.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.ArgumentException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in einen anderen Typ.</summary>
      <param name="context">Ein Formatierungskontext. Sie können mit diesem Objekt zusätzliche Informationen zu der Umgebung abrufen, aus der der Konverter aufgerufen wird. Überprüfen Sie immer, ob dieser Wert <see langword="null" /> ist. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die die Kultur angibt, in der die Farbe dargestellt werden soll.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationtype" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Ruft eine Auflistung mit einer Gruppe von Standardwerten für den Datentyp ab, für den dieses Validierungssteuerelement entworfen wurde. Dadurch wird <see langword="null" /> zurückgegeben, wenn der Datentyp keinen Standardsatz von Werten unterstützt.</summary>
      <param name="context">Ein Formatierungskontext. Sie können mit diesem Objekt zusätzliche Informationen zu der Umgebung abrufen, aus der der Konverter aufgerufen wird. Überprüfen Sie immer, ob dieser Wert <see langword="null" /> ist. Außerdem geben die Eigenschaften des Kontextobjekts möglicherweise <see langword="null" /> zurück.</param>
      <returns>Eine Auflistung, die <see langword="null" /> oder eine Standardgruppe zulässiger Werte enthält. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt eine Standardgruppe von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>
        <see langword="true" />, wenn <see cref="Overload:System.Drawing.ColorConverter.GetStandardValues" /> aufgerufen werden muss, damit eine vom Objekt unterstützte Standardgruppe von Werten ermittelt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.PointConverter">
      <summary>Konvertiert ein <see cref="T:System.Drawing.Point" />-Objekt aus einem Datentyp in einen anderen.</summary>
    </member>
    <member name="M:System.Drawing.PointConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.PointConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>
        <see langword="true" />, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />-Objekt, das den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in ein <see cref="T:System.Drawing.Point" />-Objekt.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein Objekt, das kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein Objekt, das kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt eine Instanz dieses Typs, wenn eine Gruppe von Eigenschaftswerten für das Objekt vorhanden ist.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="propertyValues">Ein Wörterbuch mit neuen Eigenschaftswerten. Das Wörterbuch enthält für jede von <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> zurückgegebene Eigenschaft jeweils ein Name-Wert-Paar.</param>
      <returns>Das neu erstellte Objekt oder <see langword="null" />, wenn das Objekt nicht erstellt werden konnte. Die Standardimplementierung gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob beim Ändern eines Werts für dieses Objekt ein Aufruf von <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts erforderlich ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />-Methode beim Ändern einer oder mehrerer Eigenschaften dieses Objekts aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft die Gruppe der Eigenschaften für diesen Typ ab. Standardmäßig gibt ein Typ keine Eigenschaften zurück.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden. Wenn keine Eigenschaften verfügbar gemacht werden, gibt diese Methode eventuell <see langword="null" /> zurück. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt Eigenschaften unterstützt. Die Standardeinstellung ist <see langword="false" />.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.RectangleConverter">
      <summary>Konvertiert Rechtecke aus einem Datentyp in einen anderen. Greifen Sie auf diese Klasse über <see cref="T:System.ComponentModel.TypeDescriptor" /> zu.</summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.RectangleConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein Formatierungskontext. Dieses Objekt kann zum Abrufen zusätzlicher Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieses Objekt die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Objekt, das einen Formatierungskontext bereitstellt. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />-Objekt, das den Zieltyp der Konvertierung darstellt.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser Konverter die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in ein <see cref="T:System.Drawing.Rectangle" />-Objekt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt eine Instanz dieses Typs, wenn eine Gruppe von Eigenschaftswerten für das Objekt vorhanden ist. Dies bietet sich für unveränderliche Objekte an, deren Eigenschaften jedoch veränderlich sein sollen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="propertyValues">Ein Wörterbuch mit neuen Eigenschaftswerten. Das Wörterbuch enthält für jede beim Aufruf der <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />-Methode zurückgegebene Eigenschaft jeweils ein Name-Wert-Paar.</param>
      <returns>Das neu erstellte Objekt oder <see langword="null" />, wenn das Objekt nicht erstellt werden konnte. Die Standardimplementierung gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob beim Ändern eines Werts für dieses Objekt ein Aufruf von <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> zum Erstellen eines neuen Werts erforderlich ist.</summary>
      <param name="context">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn <see cref="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> beim Ändern einer oder mehrerer Eigenschaften dieses Objekts aufgerufen werden soll, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft die Gruppe der Eigenschaften für diesen Typ ab. Standardmäßig gibt ein Typ keine Eigenschaften zurück.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden sollen. Wenn keine Eigenschaften verfügbar gemacht werden dürfen, wird eventuell <see langword="null" /> zurückgegeben. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt Eigenschaften unterstützt. Die Standardeinstellung ist <see langword="false" />.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn <see cref="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> aufgerufen werden soll, um die Eigenschaften dieses Objekts zu ermitteln, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.SizeConverter">
      <summary>Mit der <see cref="T:System.Drawing.SizeConverter" />-Klasse können Datentypen in andere Datentypen konvertiert werden. Greifen Sie auf diese Klasse über das <see cref="T:System.ComponentModel.TypeDescriptor" />-Objekt zu.</summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.#ctor">
      <summary>Initialisiert ein neues <see cref="T:System.Drawing.SizeConverter" />-Objekt.</summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Bestimmt, ob dieser Konverter ein Objekt des angegebenen Quelltyps in den systemeigenen Typ des Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="sourceType">Der Typ, aus dem Sie konvertieren möchten.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieses Objekt die Konvertierung ausführen kann.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Konverter ein Objekt unter Verwendung des Kontexts in den angegebenen Zieltyp konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Dieser Parameter kann <see langword="null" /> sein und muss daher immer überprüft werden. Außerdem können die Eigenschaften des Kontextobjekts <see langword="null" /> zurückgeben.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</param>
      <returns>Diese Methode gibt <see langword="true" /> zurück, wenn dieser Konverter die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den systemeigenen Typ des Konverters.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der zum Abrufen zusätzlicher Informationen über die Umgebung, aus der dieser Konverter aufgerufen wird, verwendet werden kann. Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das kulturabhängige Informationen enthält, z. B. die Sprache, den Kalender und die kulturellen Konventionen, die einer Kultur zugeordnet sind. Es beruht auf dem Standard RFC 1766.</param>
      <param name="value">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht vollständig durchgeführt werden.</exception>
      <returns>Das konvertierte Objekt.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt ein Objekt dieses Typs mithilfe eines angegebenen Satzes von Eigenschaftswerten für das Objekt. Dies bietet sich für das Erstellen unveränderlicher Objekte an, die über veränderliche Eigenschaften verfügen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="propertyValues">Ein Wörterbuch mit neuen Eigenschaftswerten. Das Wörterbuch enthält für jede von der <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />-Methode zurückgegebene Eigenschaft ein Name-Wert-Paar.</param>
      <returns>Das neu erstellte Objekt oder <see langword="null" />, wenn das Objekt nicht erstellt werden konnte. Die Standardimplementierung gibt <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob für das Ändern eines Werts dieses Objekts ein Aufruf der <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />-Methode zum Erstellen eines neuen Werts erforderlich sein soll.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />-Objekt beim Ändern einer oder mehrerer Eigenschaften dieses Objekts aufgerufen werden soll.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft die Gruppe der Eigenschaften für diesen Typ ab. In der Standardeinstellung gibt ein Typ keine Eigenschaften zurück.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden sollen. Wenn keine Eigenschaften verfügbar gemacht werden dürfen, wird eventuell <see langword="null" /> zurückgegeben. Die Standardimplementierung gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Bestimmt, ob dieses Objekt Eigenschaften unterstützt. Die Standardeinstellung ist <see langword="false" />.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.TypeDescriptor" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>
        <see langword="true" />, wenn die <see cref="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />-Methode aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln.</returns>
    </member>
    <member name="T:System.Drawing.SizeFConverter">
      <summary>Konvertiert <see cref="T:System.Drawing.SizeF" />-Objekte aus einem Typ in einen anderen.</summary>
    </member>
    <member name="M:System.Drawing.SizeFConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.SizeFConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob der Konverter mithilfe des angegebenen Kontexts aus dem angegebenen Typ in den <see cref="T:System.Drawing.SizeF" />-Typ konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, um anzugeben, dass die Konvertierung ausgeführt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob der <see cref="T:System.Drawing.SizeFConverter" /> eine<see cref="T:System.Drawing.SizeF" /> in den angegebenen Typ konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, aus dem konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung ausführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den Typ dieses Konverters mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das angegebene Wertobjekt in den angegebenen Typ mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn „Null“ übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der Wertparameter konvertiert werden soll.</param>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Erstellt eine Instanz von <see cref="T:System.Drawing.SizeF" /> mit den angegebenen Eigenschaftswerten unter Verwendung des angegebenen Kontexts.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="propertyValues">Ein <see cref="T:System.Collections.IDictionary" /> mit Eigenschaftennamen und -werten.</param>
      <returns>Ein <see cref="T:System.Object" />, das die neue <see cref="T:System.Drawing.SizeF" /> darstellt, oder <see langword="null" />, wenn das Objekt nicht erstellt werden kann.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt einen Wert zurück, der angibt, ob beim Ändern eines Werts für dieses Objekt ein Aufruf der <see cref="Overload:System.Drawing.SizeFConverter.CreateInstance" />-Methode zum Erstellen eines neuen Werts erforderlich ist.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Ruft Eigenschaften für den <see cref="T:System.Drawing.SizeF" />-Typ mit dem angegebenen Kontext und den angegebenen Attributen ab.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <param name="value">Das <see cref="T:System.Object" />, für das Eigenschaften zurückgegeben werden sollen.</param>
      <param name="attributes">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</param>
      <returns>Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaften enthält.</returns>
    </member>
    <member name="M:System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gibt zurück, ob der <see cref="T:System.Drawing.SizeF" />-Typ Eigenschaften unterstützt.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, mit dem zusätzlicher Kontext bereitgestellt werden kann.</param>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter">
      <summary>Die <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" />-Klasse stellt den Typkonverter für erweiterte Schutzrichtlinien dar, die vom Server zum Überprüfen eingehender Clientverbindungen verwendet werden.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt in den angegebenen Typ konvertieren kann.</summary>
      <param name="context">Das zu konvertierende Objekt.</param>
      <param name="destinationType">Ein <see cref="T:System.Type" />, der den Typ darstellt, in den konvertiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn dieser Konverter die Konvertierung durchführen kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert das Objekt in den angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />. Dies sollte ein <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> -Objekt sein.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der Wertparameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung konnte nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
    </member>
    <member name="T:System.Timers.ElapsedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Timers.ElapsedEventArgs.SignalTime">
      <summary>Ruft das Datum/die Uhrzeit ab, zu der das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis ausgelöst wurde.</summary>
      <returns>Die Zeit, zu der das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis ausgelöst wurde.</returns>
    </member>
    <member name="T:System.Timers.ElapsedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Timers.Timer.Elapsed" />-Ereignisses eines <see cref="T:System.Timers.Timer" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Ein <see cref="T:System.Timers.ElapsedEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Timers.Timer">
      <summary>Generiert nach Ablauf eines festgelegten Intervalls ein Ereignis. Bietet auch die Option zum Generieren wiederkehrender Ereignisse.</summary>
    </member>
    <member name="E:System.Timers.Timer.Elapsed">
      <summary>Tritt ein, wenn das Intervall abläuft.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Timers.Timer" />-Klasse und legt alle Eigenschaften auf die Anfangswerte fest.</summary>
    </member>
    <member name="M:System.Timers.Timer.#ctor(System.Double)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Timers.Timer" />-Klasse, wobei die <see cref="P:System.Timers.Timer.Interval" />-Eigenschaft auf den angegebenen Wert (in Millisekunden) festgelegt ist.</summary>
      <param name="interval">Die Zeit zwischen den Ereignissen in Millisekunden. Der Wert muss größer als 0 (null) und kleiner als oder gleich <see cref="F:System.Int32.MaxValue" /> sein.</param>
      <exception cref="T:System.ArgumentException">Der Wert des <paramref name="interval" />-Parameters muss größer oder gleich 0 (null) oder größer als <see cref="F:System.Int32.MaxValue" /> sein.</exception>
    </member>
    <member name="M:System.Timers.Timer.BeginInit">
      <summary>Beginnt die Laufzeitinitialisierung eines <see cref="T:System.Timers.Timer" />, der in einem Formular oder von einer anderen Komponente verwendet wird.</summary>
    </member>
    <member name="M:System.Timers.Timer.Close">
      <summary>Gibt die von der <see cref="T:System.Timers.Timer" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Timers.Timer.Dispose(System.Boolean)">
      <summary>Gibt alle von der aktuellen <see cref="T:System.Timers.Timer" />-Klasse verwendeten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Timers.Timer.EndInit">
      <summary>Beendet die Laufzeitinitialisierung eines <see cref="T:System.Timers.Timer" />, der in einem Formular oder von einer anderen Komponente verwendet wird.</summary>
    </member>
    <member name="M:System.Timers.Timer.Start">
      <summary>Beginnt mit dem Auslösen des <see cref="E:System.Timers.Timer.Elapsed" />-Ereignisses durch Festlegen von <see cref="P:System.Timers.Timer.Enabled" /> auf <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <see cref="T:System.Timers.Timer" /> wird mit einem Intervall erstellt, das größer gleich <see cref="F:System.Int32.MaxValue" /> + 1 ist, oder auf ein Intervall kleiner als 0 (null) festgelegt.</exception>
    </member>
    <member name="M:System.Timers.Timer.Stop">
      <summary>Unterbricht das Auslösen des <see cref="E:System.Timers.Timer.Elapsed" />-Ereignisses durch Festlegen von <see cref="P:System.Timers.Timer.Enabled" /> auf <see langword="false" />.</summary>
    </member>
    <member name="P:System.Timers.Timer.AutoReset">
      <summary>Ruft einen booleschen Wert ab, der angibt, ob der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis nur einmal (<see langword="false" />) oder wiederholt (<see langword="true" />) auslösen soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis immer auslösen soll, wenn das Intervall abläuft, <see langword="false" />, wenn das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis nur einmal nach dem ersten Ablaufen des Intervalls ausgelöst werden soll. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Timers.Timer.Enabled">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis auslösen soll, oder legt diesen fest.</summary>
      <exception cref="T:System.ObjectDisposedException">Diese Eigenschaft kann nicht festgelegt werden, da der Zeitgeber freigegeben wurde.</exception>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Timers.Timer.Interval" />-Eigenschaft wurde auf einen größeren Wert als <see cref="F:System.Int32.MaxValue" /> festgelegt, bevor der Timer aktiviert wurde.</exception>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Timers.Timer" /> das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis auslösen soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Timers.Timer.Interval">
      <summary>Ruft das Intervall in Millisekunden ab, in dem das <see cref="E:System.Timers.Timer.Elapsed" />-Ereignis ausgelöst wird, oder legt dieses fest.</summary>
      <exception cref="T:System.ArgumentException">Das Intervall ist kleiner oder gleich 0 (null).  
  
- oder - 
Das Intervall ist größer als <see cref="F:System.Int32.MaxValue" />, und der Zeitgeber ist gegenwärtig aktiviert. (Wenn der Zeitgeber nicht gerade aktiviert ist, wird keine Ausnahme ausgelöst, bis er aktiviert wird.)</exception>
      <returns>Die Zeit zwischen den <see cref="E:System.Timers.Timer.Elapsed" />-Ereignissen in Millisekunden. Der Wert muss größer als 0 (null) und kleiner als oder gleich <see cref="F:System.Int32.MaxValue" /> sein. Der Standardwert ist 100 Millisekunden.</returns>
    </member>
    <member name="P:System.Timers.Timer.Site">
      <summary>Ruft die Site ab, die die <see cref="T:System.Timers.Timer" />-Klasse im Entwurfsmodus an ihren Container bindet, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.ComponentModel.ISite" />-Schnittstelle, die die Site darstellt, die das <see cref="T:System.Timers.Timer" />-Objekt an ihren Container bindet.</returns>
    </member>
    <member name="P:System.Timers.Timer.SynchronizingObject">
      <summary>Ruft das Objekt ab, das zum Marshallen von Ereignishandleraufrufen verwendet wird, die nach Ablauf eines Intervalls ausgegeben werden, oder legt dieses fest.</summary>
      <returns>Die <see cref="T:System.ComponentModel.ISynchronizeInvoke" />-Schnittstelle, die das Objekt zum Marshallen von Ereignishandleraufrufen darstellt, die nach Ablauf eines Intervalls ausgegeben werden. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="T:System.Timers.TimersDescriptionAttribute">
      <summary>Legt die Beschreibung fest, die visuelle Designer bei Verweisen auf ein Ereignis, einen Extender oder eine Eigenschaft anzeigen können.</summary>
    </member>
    <member name="M:System.Timers.TimersDescriptionAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Timers.TimersDescriptionAttribute" />-Klasse.</summary>
      <param name="description">Die zu verwendende Beschreibung.</param>
    </member>
    <member name="P:System.Timers.TimersDescriptionAttribute.Description">
      <summary>Ruft die Beschreibung ab, die visuelle Designer bei Verweisen auf ein Ereignis, einen Extender oder eine Eigenschaft anzeigen können.</summary>
      <returns>Die Beschreibung für das Ereignis, den Extender oder die Eigenschaft.</returns>
    </member>
    <member name="T:System.UriTypeConverter">
      <summary>Konvertiert einen <see cref="T:System.String" />-Typ in einen <see cref="T:System.Uri" />-Typ und umgekehrt.</summary>
    </member>
    <member name="M:System.UriTypeConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.UriTypeConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter ein Objekt des angegebenen Typs in den Typ dieses Konverters konvertieren kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="sourceType">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung darstellt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="sourceType" />-Parameter ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn <paramref name="sourceType" /> ein <see cref="T:System.String" />-Typ ist oder wenn ein <see cref="T:System.Uri" />-Typ von <paramref name="sourceType" /> zugewiesen werden kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.UriTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gibt zurück, ob dieser Konverter das Objekt mithilfe des angegebenen Kontexts in den angegebenen Typ umwandeln kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="destinationType">Eine <see cref="T:System.Type" />-Klasse, die den Zieltyp der Konvertierung darstellt.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />, <see cref="T:System.String" /> oder <see cref="T:System.Uri" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.UriTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Konvertiert das angegebene Objekt in den Typ dieses Konverters mit dem angegebenen Kontext und Kulturinformationen.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Die <see cref="T:System.Globalization.CultureInfo" />, die als aktuelle Kultur verwendet werden sollen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Konvertiert ein angegebenes Wertobjekt unter Verwendung des angegebenen Kontexts und der angegebenen Kulturinformationen in den angegebenen Typ.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" />. Wenn <see langword="null" /> übergeben wird, wird von der aktuellen Kultur ausgegangen.</param>
      <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
      <param name="destinationType">Der <see cref="T:System.Type" />, in den der <paramref name="value" />-Parameter konvertiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="destinationType" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Konvertierung kann nicht durchgeführt werden.</exception>
      <returns>Ein <see cref="T:System.Object" />, das den konvertierten Wert darstellt.</returns>
    </member>
    <member name="M:System.UriTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Gibt zurück, ob das angegebene Wertobjekt ein <see cref="T:System.Uri" /> ist oder aus diesem ein <see cref="T:System.Uri" /> erstellt werden kann.</summary>
      <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
      <param name="value">Das auf Gültigkeit zu prüfende <see cref="T:System.Object" />.</param>
      <returns>
        <see langword="true" />, wenn <paramref name="value" /> ein <see cref="T:System.Uri" /> ist oder ein <see cref="T:System.String" /> ist, aus dem ein <see cref="T:System.Uri" /> erstellt werden kann, andernfalls <see langword="false" />.</returns>
    </member>
  </members>
</doc>