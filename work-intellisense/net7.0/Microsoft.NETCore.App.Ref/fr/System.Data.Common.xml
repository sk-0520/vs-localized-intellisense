<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Détermine l’action qui se produit quand la méthode <see cref="M:System.Data.DataSet.AcceptChanges" /> ou <see cref="M:System.Data.DataTable.RejectChanges" /> est appelée sur <see cref="T:System.Data.DataTable" /> avec un <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Les modifications sont répercutées en cascade dans la relation.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>Aucune action ne se produit (valeur par défaut).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Fournit une description des résultats de la requête et de ses effets sur la base de données.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>Lorsque la commande est exécutée, l'objet <see langword="Connection" /> associé se ferme en même temps que l'objet <see langword="DataReader" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>La requête peut retourner plusieurs jeux de résultats. L'exécution de la requête peut affecter l'état de la base de données. <see langword="Default" /> ne définit aucun indicateur <see cref="T:System.Data.CommandBehavior" />, le fait d'appeler <see langword="ExecuteReader(CommandBehavior.Default)" /> équivaut donc à appeler <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>La requête retourne des informations de colonne et de clé primaire. Le fournisseur ajoute des colonnes supplémentaires au jeu de résultats pour les colonnes clé primaire et timestamp existantes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>La requête retourne uniquement des informations sur la colonne. Lors de l'utilisation de <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, le fournisseur de données .NET Framework pour SQL Server fait précéder l'instruction en cours d'exécution par SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Fournit à <see langword="DataReader" /> un moyen de gérer les lignes qui contiennent des colonnes renfermant des valeurs binaires élevées. Plutôt que de charger la ligne entière, <see langword="SequentialAccess" /> permet à <see langword="DataReader" /> de charger les données en tant que flux. Vous pouvez ensuite utiliser la méthode <see langword="GetBytes" /> ou <see langword="GetChars" /> afin de spécifier un emplacement d'octets à partir duquel démarrer l'opération de lecture, ainsi qu'une taille de mémoire tampon limitée pour les données retournées.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>La requête retourne un seul jeu de résultats.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>La requête est supposée retourner une ligne unique du premier jeu de résultats. L'exécution de la requête peut affecter l'état de la base de données. Certains fournisseurs de données .NET Framework peuvent éventuellement utiliser ces informations pour optimiser les performances de la commande. Lorsque vous spécifiez <see cref="F:System.Data.CommandBehavior.SingleRow" /> avec la méthode <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> de l'objet <see cref="T:System.Data.OleDb.OleDbCommand" />, le fournisseur de données .NET Framework pour OLE DB effectue la liaison à l'aide de l'interface <see langword="IRow" /> OLE DB si elle est disponible. Sinon, il utilise l'interface <see langword="IRowset" />. Si votre instruction SQL doit normalement retourner une seule ligne, la spécification de <see cref="F:System.Data.CommandBehavior.SingleRow" /> peut également améliorer les performances de l'application. Il est possible de spécifier <see langword="SingleRow" /> lors de l'exécution de requêtes qui sont supposées retourner plusieurs jeux de résultats.  Dans ce cas, où une requête SQL à plusieurs jeux de résultats et une ligne unique sont spécifiés, le résultat retourné contiendra uniquement la première ligne du premier jeu de résultats. Les autres jeux de résultats de la requête ne seront pas retournés.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Spécifie la façon dont une chaîne de commande est interprétée.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>Nom d’une procédure stockée.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>Nom d'une table.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>Commande de texte SQL. (valeur par défaut).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary>Indique la position du nom de catalogue dans un nom de table qualifié dans une commande de texte.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary>Indique que la position du nom de catalogue se situe après la partie de schéma d'un nom de table qualifié complet dans une commande de texte. <c>End</c> et <c>Start</c> s’excluent mutuellement.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary>Indique que la position du nom de catalogue se situe avant la partie de schéma d'un nom de table qualifié complet dans une commande de texte. <c>End</c> et <c>Start</c> s’excluent mutuellement.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>Représente un ensemble de commandes SQL et une connexion de base de données qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour la source de données.</summary>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary>Retourné lorsqu'une erreur se produit pendant une opération de remplissage.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DataAdapter" /> à partir d'un objet existant du même type.</summary>
      <param name="from">Objet <see cref="T:System.Data.Common.DataAdapter" /> utilisé pour créer le nouveau <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>Crée une copie de cette instance de <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns>Instance clonée de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>Crée un <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns>Nouvelle collection de mappages de table.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DataAdapter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements.</param>
      <param name="srcTable">Chaîne indiquant le nom de la table source.</param>
      <param name="dataReader">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Index de base zéro de l'enregistrement initial.</param>
      <param name="maxRecords">Entier qui indique le nombre maximal d'enregistrements.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données à l'aide du nom <see cref="T:System.Data.DataTable" /> et du <see cref="T:System.Data.IDataReader" /> spécifié.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements.</param>
      <param name="dataReader">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>Ajoute ou actualise des lignes d'une plage spécifiée de la collection d'objets <see cref="T:System.Data.DataTable" /> pour qu'elles correspondent à celles de la source de données.</summary>
      <param name="dataTables">Collection d'objets <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements.</param>
      <param name="dataReader">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">Index de base zéro de l'enregistrement initial.</param>
      <param name="maxRecords">Entier qui indique le nombre maximal d'enregistrements.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur le <see cref="T:System.Data.SchemaType" /> défini.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary>Ajoute <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataTable" /> à remplir depuis <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="dataReader">
        <see cref="T:System.Data.IDataReader" /> à utiliser comme source de données lors du remplissage du <see cref="T:System.Data.DataTable" />.</param>
      <returns>Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary>Ajoute <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à remplir depuis <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader">
        <see cref="T:System.Data.IDataReader" /> à utiliser comme source de données lors du remplissage du <see cref="T:System.Data.DataTable" />.</param>
      <returns>Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary>Indique si <see cref="T:System.Data.Common.DataTableMappingCollection" /> a été créé.</summary>
      <returns>
        <see langword="true" /> en cas de création de <see cref="T:System.Data.Common.DataTableMappingCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>Appelé lorsqu'une erreur se produit pendant <see langword="Fill" />.</summary>
      <param name="value">Objet <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary>Réinitialise <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> à son état par défaut et entraîne une réponse de <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> à <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary>Détermine si la propriété <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> doit être persistante.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> est persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary>Détermine si la propriété <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> doit être persistante.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> est persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>Détermine si un ou plusieurs objets <see cref="T:System.Data.Common.DataTableMapping" /> existent et s'ils doivent être persistants.</summary>
      <returns>
        <see langword="true" /> si un ou plusieurs objets <see cref="T:System.Data.Common.DataTableMapping" /> existent ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>Appelle les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié à partir d'un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>Obtient ou définit une valeur indiquant si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé sur un <see cref="T:System.Data.DataRow" /> après son ajout à <see cref="T:System.Data.DataTable" /> au cours de l’une des opérations Fill.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé sur <see cref="T:System.Data.DataRow" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary>Obtient ou définit si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé pendant un <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé pendant un <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>Obtient ou définit une valeur qui spécifie si une exception doit être générée en cas d'erreur pendant la mise à jour d'une ligne.</summary>
      <returns>
        <see langword="true" /> pour poursuivre la mise à jour sans générer d'exception ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary>Obtient ou définit <see cref="T:System.Data.LoadOption" /> qui détermine comment l'adaptateur remplit <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Valeur <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>Détermine l'action à effectuer si les données entrantes ne possèdent pas de table ou de colonne correspondante.</summary>
      <exception cref="T:System.ArgumentException">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />. La valeur par défaut est <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</summary>
      <exception cref="T:System.ArgumentException">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />. La valeur par défaut est <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary>Obtient ou définit si la méthode <see langword="Fill" /> doit retourner des valeurs spécifiques au fournisseur ou des valeurs communes conformes CLS.</summary>
      <returns>
        <see langword="true" /> si la méthode <see langword="Fill" /> doit retourner des valeurs spécifiques au fournisseur ; sinon, <see langword="false" /> pour retourner des valeurs communes conformes CLS.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary>Indique la manière dont une table source est mappée à une table du groupe de données.</summary>
      <returns>Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>Obtient une collection qui fournit le mappage principal entre une table source et <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>Contient un mappage de colonnes générique pour un objet qui hérite de <see cref="T:System.Data.Common.DataAdapter" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataColumnMapping" /> avec le nom de colonne source spécifié et le nom de la colonne <see cref="T:System.Data.DataSet" /> à mapper.</summary>
      <param name="sourceColumn">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataSetColumn">Nom de colonne qui ne respecte pas la casse d'un <see cref="T:System.Data.DataSet" /> à mapper.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Obtient <see cref="T:System.Data.DataColumn" /> à partir du <see cref="T:System.Data.DataTable" /> donné à l'aide de <see cref="T:System.Data.MissingSchemaAction" /> et de la propriété <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> duquel obtenir la colonne.</param>
      <param name="dataType">
        <see cref="T:System.Type" /> de la colonne de données.</param>
      <param name="schemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Colonne de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>Version statique de <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> qui peut être appelée sans instancier un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataSetColumn">Nom de colonne qui ne respecte pas la casse d'un <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="dataTable">Instance de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType">Type de données pour la colonne qui est mappée.</param>
      <param name="schemaAction">Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</param>
      <returns>Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns>Copie de l'objet actuel.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>Convertit le nom <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en cours en chaîne.</summary>
      <returns>Nom <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en cours sous la forme d'une chaîne.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataSet" /> auquel effectuer le mappage.</summary>
      <returns>Nom de la colonne dans le <see cref="T:System.Data.DataSet" /> à mapper. Ce nom ne respecte pas la casse.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>Obtient ou définit le nom de la colonne dans la source de données à partir de laquelle effectuer le mappage. Le nom respecte la casse.</summary>
      <returns>Nom qui respecte la casse de la colonne de la source de données.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>Crée un <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vide.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> à la collection.</summary>
      <param name="value">Objet <see langword="DataColumnMapping" /> à ajouter à la collection.</param>
      <exception cref="T:System.InvalidCastException">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns>Index de l'objet <see langword="DataColumnMapping" /> qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> à la collection en fonction d'un nom de colonne source et d'un nom de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn">Nom qui respecte la casse de la colonne source à mapper.</param>
      <param name="dataSetColumn">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <returns>Objet <see langword="DataColumnMapping" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary>Copie les éléments du <see cref="T:System.Array" /> spécifié à la fin de la collection.</summary>
      <param name="values">Objet <see cref="T:System.Array" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié à la fin de la collection.</summary>
      <param name="values">Tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Data.Common.DataColumnMapping" /> de la collection.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>Obtient une valeur indiquant s'il existe dans la collection un objet <see cref="T:System.Data.Common.DataColumnMapping" /> avec l'<see cref="T:System.Object" /> donné.</summary>
      <param name="value">
        <see cref="T:System.Object" /> qui est <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <exception cref="T:System.InvalidCastException">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <returns>
        <see langword="true" /> si la collection contient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source donné existe dans la collection.</summary>
      <param name="value">Nom de colonne source qui respecte la casse de l'objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>
        <see langword="true" /> si la collection contient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments du <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vers le tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Index de départ du tableau.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dans le tableau <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié.</summary>
      <param name="array">Tableau <see cref="T:System.Data.Common.DataColumnMapping" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index">Index de base zéro dans <paramref name="array" /> au niveau duquel commence la copie.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="value">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>Obtient <see cref="T:System.Data.Common.DataColumnMapping" /> pour les <see cref="T:System.Data.Common.DataColumnMappingCollection" />, nom de colonne source et <see cref="T:System.Data.MissingMappingAction" /> spécifiés.</summary>
      <param name="columnMappings">L’<see cref="T:System.Data.Common.DataColumnMappingCollection" />opérateur</param>
      <param name="sourceColumn">Nom de colonne source qui respecte la casse à rechercher.</param>
      <param name="mappingAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
      <returns>Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Une méthode statique qui retourne un objet <see cref="T:System.Data.DataColumn" /> sans instancier un objet <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings">L’<see cref="T:System.Data.Common.DataColumnMappingCollection" />opérateur</param>
      <param name="sourceColumn">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataType">Type de données pour la colonne qui est mappée.</param>
      <param name="dataTable">Instance de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</param>
      <returns>Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary>Obtient un énumérateur qui peut itérer au sein de la collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>Obtient l'emplacement du <see cref="T:System.Object" /> spécifié qui est <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</summary>
      <param name="value">
        <see cref="T:System.Object" /> qui est le <see cref="T:System.Data.Common.DataColumnMapping" /> à rechercher.</param>
      <returns>Emplacement de base zéro du <see cref="T:System.Object" /> spécifié qui est un <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtient l'emplacement du <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn">Nom qui respecte la casse de la colonne source.</param>
      <returns>Emplacement de base zéro du <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source qui respecte la casse spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>Obtient l'emplacement du <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié portant le nom de colonne <see cref="T:System.Data.DataSet" /> donné.</summary>
      <param name="dataSetColumn">Nom qui ne respecte pas la casse de la colonne du groupe de données à rechercher.</param>
      <returns>Emplacement de base zéro du <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié portant le nom de colonne <see langword="DataSet" /> donné, ou -1 si l'objet <see langword="DataColumnMapping" /> n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary>Insère un objet <see cref="T:System.Data.Common.DataColumnMapping" /> dans <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> à insérer.</param>
      <param name="value">Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Insère un objet <see cref="T:System.Data.Common.DataColumnMapping" /> dans <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> à insérer.</param>
      <param name="value">Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary>Supprime l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié de la collection.</summary>
      <param name="value">
        <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>Supprime de la collection l'<see cref="T:System.Object" /> qui est un <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> qui est le <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
      <exception cref="T:System.InvalidCastException">L'objet spécifié n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException">L'objet spécifié est introuvable dans la collection.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn">Nom de colonne source qui respecte la casse.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary>Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> au <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'aide de la colonne source et noms de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Nom qui respecte la casse de la colonne source.</param>
      <param name="dataSetColumnName">Nom de la colonne <see cref="T:System.Data.DataSet" />.</param>
      <returns>Objet ColumnMapping qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetColumnName">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>Obtient le nombre d'objets <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</summary>
      <returns>Nombre d’éléments dans la collection</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à rechercher.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataColumnMapping" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn">Nom qui respecte la casse de la colonne source.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à l'objet <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur qui indique si l’objet <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</summary>
      <param name="index">Index de l'élément.</param>
      <returns>Objet <see langword="IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>Contient une description d’une relation mappée entre une table source et un <see cref="T:System.Data.DataTable" />. Cette classe est utilisée par un <see cref="T:System.Data.Common.DataAdapter" /> lors du remplissage d’un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" /> avec une source en fonction d'un nom de table source et d'un nom <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable">Nom de table source d'une source de données qui respecte la casse.</param>
      <param name="dataSetTable">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" /> en fonction d'un nom de table source, d'un nom <see cref="T:System.Data.DataTable" /> et d'un tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable">Nom de table source d'une source de données qui respecte la casse.</param>
      <param name="dataSetTable">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="columnMappings">Tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>Obtient <see cref="T:System.Data.DataColumn" /> du <see cref="T:System.Data.DataTable" /> spécifié à l'aide de la valeur <see cref="T:System.Data.MissingMappingAction" /> déterminée et du nom de <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn">Nom de l'objet <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
      <returns>Colonne de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary>Retourne un objet <see cref="T:System.Data.DataColumn" /> pour un nom de colonne donné.</summary>
      <param name="sourceColumn">Nom de l'objet <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType">Type de données pour <paramref name="sourceColumn" />.</param>
      <param name="dataTable">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="mappingAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> en cours pour le <see cref="T:System.Data.DataSet" /> spécifié à l'aide de la valeur <see cref="T:System.Data.MissingSchemaAction" /> spécifiée.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à partir de laquelle obtenir <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns>Tables de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns>Nouvel objet représentant une copie de l'instance en cours.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>Convertit le nom <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en cours en chaîne.</summary>
      <returns>Nom <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en cours sous la forme d'une chaîne.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DataColumnMappingCollection" /> pour l'objet <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>Obtient ou définit le nom de table de <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nom de table de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>Obtient ou définit le nom de table source d'une source de données qui respecte la casse.</summary>
      <returns>Nom de table source d'une source de données qui respecte la casse.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary>Obtient le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dérivé pour <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>Collection d'objets <see cref="T:System.Data.Common.DataTableMapping" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMappingCollection" />. Cette nouvelle instance est vide, c'est-à-dire qu'elle ne contient encore aucun objet <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>Ajoute un <see cref="T:System.Object" /> qui est un mappage de tables à la collection.</summary>
      <param name="value">Objet <see langword="DataTableMapping" /> à ajouter à la collection.</param>
      <exception cref="T:System.InvalidCastException">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <returns>Index de l'objet <see langword="DataTableMapping" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>Ajoute un objet <see cref="T:System.Data.Common.DataTableMapping" /> à la collection en fonction d'un nom de table source et d'un nom de table <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable">Nom qui respecte la casse de la table source à partir de laquelle effectuer le mappage.</param>
      <param name="dataSetTable">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataTableMapping" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary>Copie les éléments du <see cref="T:System.Array" /> spécifié à la fin de la collection.</summary>
      <param name="values">
        <see cref="T:System.Array" /> des valeurs à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.Common.DataTableMapping" /> spécifié à la fin de la collection.</summary>
      <param name="values">Tableau d'objets <see cref="T:System.Data.Common.DataTableMapping" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Data.Common.DataTableMapping" /> de la collection.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Data.Common.DataTableMapping" /> donné existe dans la collection.</summary>
      <param name="value">
        <see cref="T:System.Object" /> qui est <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <see langword="true" /> si la collection contient le <see cref="T:System.Data.Common.DataTableMapping" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>Obtient une valeur indiquant si un objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié existe dans la collection.</summary>
      <param name="value">Nom de table source qui respecte la casse contenant l'objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <see langword="true" /> si la collection contient un objet <see cref="T:System.Data.Common.DataTableMapping" /> portant ce nom de table source ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments du <see cref="T:System.Data.Common.DataTableMappingCollection" /> vers le tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Index de départ du tableau.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary>Copie les éléments du <see cref="T:System.Data.Common.DataTableMapping" /> vers le tableau spécifié.</summary>
      <param name="array">
        <see cref="T:System.Data.Common.DataTableMapping" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index">Index de départ du tableau.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTable">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary>Obtient un énumérateur qui peut itérer au sein de la collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>Obtient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de table source et le nom de table <see cref="T:System.Data.DataSet" /> spécifiés, à l'aide du <see cref="T:System.Data.MissingMappingAction" /> donné.</summary>
      <param name="tableMappings">Collection <see cref="T:System.Data.Common.DataTableMappingCollection" /> dans laquelle effectuer la recherche.</param>
      <param name="sourceTable">Nom qui respecte la casse de la table source mappée.</param>
      <param name="dataSetTable">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> mappée.</param>
      <param name="mappingAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <exception cref="T:System.InvalidOperationException">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
      <returns>Objet <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié dans la collection.</summary>
      <param name="value">
        <see cref="T:System.Object" /> qui est l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à rechercher.</param>
      <returns>Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable">Nom qui respecte la casse de la table source.</param>
      <returns>Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTable">Nom qui ne respecte pas la casse de la table <see langword="DataSet" /> à rechercher.</param>
      <returns>Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> donné, ou -1 si l'objet <see cref="T:System.Data.Common.DataTableMapping" /> n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary>Insère un objet <see cref="T:System.Data.Common.DataTableMapping" /> dans <see cref="T:System.Data.Common.DataTableMappingCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
      <param name="value">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>Insère un objet <see cref="T:System.Data.Common.DataTableMapping" /> dans <see cref="T:System.Data.Common.DataTableMappingCollection" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
      <param name="value">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary>Supprime l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié de la collection.</summary>
      <param name="value">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>Supprime l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié de la collection.</summary>
      <param name="value">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
      <exception cref="T:System.InvalidCastException">L'objet spécifié n'est pas un objet <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException">L'objet spécifié est introuvable dans la collection.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.Common.DataTableMapping" /> situé à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il n'existe aucun objet <see cref="T:System.Data.Common.DataTableMapping" /> à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable">Nom de table source qui respecte la casse à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il n'existe aucun objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary>Ajoute un mappage de tables à la collection.</summary>
      <param name="sourceTableName">Nom qui respecte la casse de la table source.</param>
      <param name="dataSetTableName">Nom de la table <see cref="T:System.Data.DataSet" />.</param>
      <returns>Référence au nouvel objet <see cref="T:System.Data.ITableMapping" /> mappé.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary>Obtient l'objet TableMapping portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTableName">Nom de la table <see langword="DataSet" /> au sein de la collection.</param>
      <returns>Objet TableMapping portant le nom de table <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>Obtient le nombre d'objets <see cref="T:System.Data.Common.DataTableMapping" /> dans la collection.</summary>
      <returns>Nombre d'objets <see langword="DataTableMapping" /> dans la collection.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataTableMapping" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable">Nom qui respecte la casse de la table source.</param>
      <returns>Objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit un élément de la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary>Obtient ou définit l'instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="index">Nom de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see langword="SourceTable" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary>Représente une colonne dans une source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary>Obtient une valeur booléenne nullable qui indique si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary>Obtient le nom de catalogue associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du catalogue ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de catalogue associé à la source de données , sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary>Obtient le nom de la colonne de base ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de la colonne de base ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary>Obtient le nom de schéma associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du schéma ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de schéma associé à la source de données ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary>Obtient le nom de serveur associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du serveur ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de serveur associé à la colonne . sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary>Obtient le nom de tableau dans le schéma ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du tableau ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom du tableau dans le schéma ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary>Obtient le nom de la colonne. Peut être défini sur le nom de la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de la colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary>Obtient la position de colonne (ordinale) sur la ligne de la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la position de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Valeur <see langword="Nothing" /> pour la position ordinale de la colonne ; sinon, une référence null (<see langword="int32" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary>Obtient la taille de la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la taille de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>
        <see langword="int32" />Valeur pour la taille de colonne ; sinon, référence null ( <see langword="Nothing" /> dans Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary>Obtient le type de données stockées dans la colonne. Peut être défini sur un objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns>Objet <see cref="T:System.Type" /> qui représente le type de données de la colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary>Obtient le nom du type de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du type de données ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom du type de données ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est un alias ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est un alias, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est un alias ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary>Obtient une valeur booléenne nullable qui indique si les valeurs de cette colonne sont incrémentées automatiquement ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si les valeurs de cette colonne sont incrémentées automatiquement, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si les valeurs de cette colonne sont incrémentées automatiquement ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est une expression ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une expression, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est une expression ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est masquée ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est masquée, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est masquée ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est une identité, ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une identité, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est une identité ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est une clé ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une clé, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est une clé ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne contient des données de type long ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne contient des données de type long, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne contient des données de type long ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary>Obtient une valeur booléenne nullable qui indique si cette colonne est en lecture seule ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est en lecture seule, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si cette colonne est en lecture seule ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary>Obtient une valeur booléenne nullable qui indique si une contrainte unique s’applique à cette colonne ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si une contrainte unique s’applique à cette colonne, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns>Retourne <see langword="true" /> si une contrainte unique s’applique à cette colonne ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary>Obtient l’objet basé sur le nom de la propriété de colonne.</summary>
      <param name="property">Nom de la propriété de colonne.</param>
      <returns>Objet basé sur le nom de la propriété de colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary>Obtient la précision numérique des données de la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la précision numérique des données de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>
        <see langword="int32" />Valeur qui spécifie la précision des données de la colonne, si les données sont numériques ; sinon, une référence null ( <see langword="Nothing" /> dans Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary>Obtient une valeur <see langword="int32" /> nullable qui retourne <see langword="null" /> ou l’échelle numérique des données de la colonne. Peut être définie avec <see langword="null" /> ou une valeur <see langword="int32" /> pour l’échelle numérique des données de la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns>Référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie ; sinon, valeur <see langword="int32" /> qui spécifie l’échelle numérique des données de la colonne si les données sont numériques.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary>Obtient le nom qualifié d’assembly de l’objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom qualifié d’assembly ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom qualifié d’assembly de l’objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne ; sinon, référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary>Représente une instruction SQL ou une procédure stockée à exécuter par rapport à une source de données. Fournit une classe de base pour les classes spécifiques à la base de données qui représentent des commandes. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary>Construit une instance de l'objet <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary>En cas de substitution dans une classe dérivée, essaie d’annuler l’exécution de <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary>En cas de substitution dans une classe dérivée, crée une instance d'un objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary>Crée une nouvelle instance d'un objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary>Supprime de manière asynchrone l’objet de commande.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary>En cas de substitution dans une classe dérivée, exécute la commande par rapport à la connexion.</summary>
      <param name="behavior">Instance de <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche qui représente l'opération.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Les fournisseurs doivent implémenter cette méthode pour assurer une implémentation non définie par défaut pour les surcharges <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.  
  
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé. Les exceptions levées par ExecuteReader sont communiquées via la propriété d'exception de tâche retournée.  
  
Cette méthode accepte un jeton d'annulation qui peut être utilisé pour demander l'annulation de l'opération plus tôt que prévu. Les implémentations peuvent ignorer cette demande.</summary>
      <param name="behavior">Options pour l'exécution des instructions et la récupération des données.</param>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary>En cas de substitution dans une classe dérivée, exécute l’instruction SQL par rapport à un objet de connexion.</summary>
      <returns>Nombre de lignes affectées.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary>Version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, qui exécute une instruction SQL par rapport à un objet de connexion.  
  
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être ignoré.  
  
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé.  Les exceptions levées par <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> sont communiquées via la propriété d'exception de tâche retournée.  
  
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbCommand" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary>Exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" />, et retourne un <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" />, et retourne un <see cref="T:System.Data.Common.DbDataReader" /> à l'aide d'une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary>Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />.  
  
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />.  
  
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Une des valeurs d’énumération qui spécifie le comportement de la commande.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />. Cette méthode propage une notification indiquant que des opérations doivent être annulées.  
  
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary>En cas de substitution dans une classe dérivée, exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Toutes les autres colonnes et lignes sont ignorées.</summary>
      <returns>Première colonne de la première ligne du jeu de résultats.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary>Version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, qui exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Toutes les autres colonnes et lignes sont ignorées.  
  
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être ignoré.  
  
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé. Les exceptions levées par ExecuteScalar sont communiquées via la propriété d'exception de tâche retournée.  
  
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbCommand" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary>En cas de substitution dans une classe dérivée, crée une version préparée ou compilée de la commande sur la source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary>Crée de manière asynchrone une version préparée ou compilée de la commande sur la source de données.</summary>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary>Crée une nouvelle instance d’un objet <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns>Objet <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary>Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> contre le <see cref="P:System.Data.IDbCommand.Connection" /> et génère un <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary>Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> sur le <see cref="P:System.Data.IDbCommand.Connection" />, et génère un <see cref="T:System.Data.IDataReader" /> à l’aide d’une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <returns>Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la commande de texte à exécuter sur la source de données.</summary>
      <returns>Commande de texte à exécuter. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le délai d’attente (en secondes) avant de mettre fin à la tentative d’exécution d’une commande et de générer une erreur.</summary>
      <returns>Durée en secondes d'attente de l'exécution de la commande.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la façon dont la propriété <see cref="P:System.Data.Common.DbCommand.CommandText" /> est interprétée.</summary>
      <returns>L’une des valeurs d’énumération qui spécifie la façon dont une chaîne de commande est interprétée. La valeur par défaut est <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.Common.DbConnection" /> utilisé par cette classe <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Connexion à la source de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la <see cref="T:System.Data.Common.DbConnection" /> utilisée par cette <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Connexion à la source de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary>En cas de substitution dans une classe dérivée, obtient la collection d’objets <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary>En cas de remplacement dans une classe dérivée, obtient ou définit la <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dans laquelle cet objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns>Transaction dans laquelle un objet Command d’un fournisseur de données .NET s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit une valeur indiquant si l'objet command doit être visible dans un contrôle d'interface personnalisé.</summary>
      <returns>
        <see langword="true" />, si l'objet command doit être visible dans un contrôle ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary>Obtient la collection d'objets <see cref="T:System.Data.Common.DbParameter" />. Pour plus d’informations sur les paramètres, consultez Configuration des paramètres et des types de données des paramètres.</summary>
      <returns>Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary>Obtient ou définit le <see cref="T:System.Data.IDbConnection" /> utilisé par cette instance du <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>Connexion à la source de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary>Obtient <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary>Obtient ou définit la <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dans laquelle l’objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns>La transaction dans laquelle un objet <see langword="Command" /> de fournisseur de données .NET Framework s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary>Obtient ou définit la <see cref="T:System.Data.Common.DbTransaction" /> dans laquelle l’objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns>La transaction dans laquelle un objet <see langword="Command" /> de fournisseur de données .NET Framework s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la manière dont les résultats des commandes sont appliqués à <see cref="T:System.Data.DataRow" /> lorsqu'ils sont utilisés par la méthode Update de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>L’une des valeurs d’énumération qui indique comment les résultats des commandes sont appliqués. La valeur par défaut est <see langword="Both" /> sauf si la commande est générée automatiquement. Alors, la valeur par défaut est <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary>Génère automatiquement des commandes de table simple utilisées pour harmoniser les modifications apportées à <see cref="T:System.Data.DataSet" /> avec la base de données associée. Cette classe est une classe abstraite qui peut uniquement être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary>Initialise une nouvelle instance d'une classe qui hérite de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary>Permet à l'implémentation de fournisseur de la classe <see cref="T:System.Data.Common.DbCommandBuilder" /> de gérer des propriétés de paramètre supplémentaires.</summary>
      <param name="parameter">
        <see cref="T:System.Data.Common.DbParameter" /> auquel les modifications supplémentaires sont appliquées.</param>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> de la table de schéma fournie par <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType">Type de commande est généré : INSERT, UPDATE ou DELETE.</param>
      <param name="whereClause">
        <see langword="true" /> si le paramètre fait partie de la clause WHERE de mise à jour ou de suppression, <see langword="false" /> s'il fait partie des valeurs d'insertion ou de mise à jour.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbCommandBuilder" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la source de données.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions au niveau de la source de données.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary>Retourne le nom du paramètre spécifié au format <c>@p#</c>. Utilisez-le lors de la création d'un générateur de commandes personnalisé.</summary>
      <param name="parameterOrdinal">Nombre à inclure dans le nom du paramètre.</param>
      <returns>Nom du paramètre dont le nombre spécifié est ajouté au nom du paramètre.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary>Retourne le nom de paramètre complet à partir du nom de paramètre partiel.</summary>
      <param name="parameterName">Nom partiel du paramètre.</param>
      <returns>Nom de paramètre complet correspondant au nom de paramètre partiel demandé.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary>Retourne l'espace réservé pour le paramètre dans l'instruction SQL associée.</summary>
      <param name="parameterOrdinal">Nombre à inclure dans le nom du paramètre.</param>
      <returns>Nom du paramètre avec le nombre spécifié ajouté.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary>Retourne la table de schéma pour le <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand">
        <see cref="T:System.Data.Common.DbCommand" /> pour lequel la table de schéma correspondante doit être récupérée.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui représente le schéma pour le <see cref="T:System.Data.Common.DbCommand" /> spécifique.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la source de données.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary>Réinitialise les propriétés <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> et <see cref="T:System.Data.UpdateRowSource" /> à la valeur <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command">
        <see cref="T:System.Data.Common.DbCommand" /> à utiliser par le générateur de commandes de la commande d'insertion, de mise à jour ou de suppression correspondante.</param>
      <returns>Instance de <see cref="T:System.Data.Common.DbCommand" /> à utiliser pour chaque opération d'insertion, de mise à jour ou de suppression. Le passage d'une valeur null permet à la méthode <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> de créer un objet <see cref="T:System.Data.Common.DbCommand" /> en fonction de la commande Select associée au <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary>À partir d'un identificateur sans guillemets dans le cas du catalogue correct, retourne le formulaire correct entre guillemets de cet identificateur, y compris une séquence d'échappement correcte des guillemets incorporés dans l'identificateur.</summary>
      <param name="unquotedIdentifier">Identificateur sans guillemets d'origine.</param>
      <returns>Version entre guillemets de l'identificateur. Les guillemets incorporés dans l'identificateur sont placés correctement dans une séquence d'échappement.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary>Efface les commandes associées à ce <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent">Instance de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> contenant des informations sur l'événement.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary>Enregistre le <see cref="T:System.Data.Common.DbCommandBuilder" /> pour gérer l'événement <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> d'un <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter">
        <see cref="T:System.Data.Common.DbDataAdapter" /> à utiliser pour la mise à jour.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>À partir d'un identificateur entre guillemets, retourne le formulaire correct sans guillemets de cet identificateur, y compris une séquence d'échappement correctement annulée de guillemets incorporés dans l'identificateur.</summary>
      <param name="quotedIdentifier">Identificateur dont les guillemets incorporés seront supprimés.</param>
      <returns>Identificateur sans guillemets, avec les guillemets incorporés dont la séquence d'échappement a été correctement annulée.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary>Obtient ou définit le <see cref="T:System.Data.Common.CatalogLocation" /> d’une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Objet <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary>Obtient ou définit une chaîne utilisée comme séparateur de catalogue pour une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Chaîne indiquant le séparateur de catalogue à utiliser avec une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary>Spécifie quel <see cref="T:System.Data.ConflictOption" /> doit être utilisé par le <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Retourne l'une des valeurs <see cref="T:System.Data.ConflictOption" /> décrivant le comportement de ce <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary>Obtient ou définit un objet <see cref="T:System.Data.Common.DbDataAdapter" /> pour lequel les instructions Transact-SQL sont automatiquement générées.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary>Obtient ou définit le ou les caractères de début à utiliser lors de la spécification d'objets de base de données (par exemple, des tables ou colonnes) dont les noms contiennent des caractères tels que des espaces ou des jetons réservés.</summary>
      <exception cref="T:System.InvalidOperationException">Cette propriété ne peut pas être modifiée après la génération d'une commande d'insertion, de mise à jour ou de suppression.</exception>
      <returns>Caractère(s) de début à utiliser. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary>Obtient ou définit le ou les caractères de fin à utiliser lors de la spécification d'objets de base de données (par exemple, des tables ou colonnes) dont les noms contiennent des caractères tels que des espaces ou des jetons réservés.</summary>
      <returns>Caractère(s) de fin à utiliser. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary>Obtient ou définit le caractère à utiliser pour le séparateur entre l'identificateur de schéma et tout autre identificateur.</summary>
      <returns>Caractère à utiliser comme séparateur de schéma.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary>Spécifie si toutes les valeurs de colonne d'une instruction de mise à jour sont incluses ou uniquement modifiées.</summary>
      <returns>
        <see langword="true" /> si l'instruction UPDATE générée par le <see cref="T:System.Data.Common.DbCommandBuilder" /> inclut toutes les colonnes ; <see langword="false" /> si elle inclut uniquement des colonnes modifiées.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary>Définit le comportement principal des connexions de base de données et fournit une classe de base pour les connexions spécifiques à la base de données.</summary>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary>Se produit quand l’état de la connexion change.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary>En cas de substitution dans une classe dérivée, démarre une transaction de base de données.</summary>
      <param name="isolationLevel">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns>Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Démarre de manière asynchrone une transaction de base de données.</summary>
      <param name="isolationLevel">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <returns>Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary>Commence une transaction de base de données.</summary>
      <returns>Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Commence une transaction de base de données avec le niveau d’isolement spécifié.</summary>
      <param name="isolationLevel">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns>Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary>Commence de manière asynchrone une transaction de base de données.</summary>
      <param name="isolationLevel">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary>Commence de manière asynchrone une transaction de base de données.</summary>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary>En cas de substitution dans une classe dérivée, modifie la base de données actuelle pour une connexion ouverte.</summary>
      <param name="databaseName">Le nom de la base de données de la connexion à utiliser.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Change de manière asynchrone la base de données actuelle pour une connexion ouverte.</summary>
      <param name="databaseName">Le nom de la base de données de la connexion à utiliser.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme la connexion à la base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary>Ferme de manière asynchrone la connexion à la base de données.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary>Crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion active.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary>En cas de substitution dans une classe dérivée, crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion active.</summary>
      <returns>Objet <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary>Supprime de manière asynchrone l’objet de connexion.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>S'inscrit dans la transaction spécifiée.</summary>
      <param name="transaction">Référence à un <see cref="T:System.Transactions.Transaction" /> existant dans lequel s’inscrire.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary>Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary>Retourne des informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma.</summary>
      <param name="collectionName">Indique le nom du schéma à retourner.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> est spécifié comme null.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary>Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma et du tableau de chaînes spécifié pour les valeurs de restriction.</summary>
      <param name="collectionName">Indique le nom du schéma à retourner.</param>
      <param name="restrictionValues">Spécifie un ensemble de valeurs de restriction pour le schéma demandé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> est spécifié comme null.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.String[],System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" />.
Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée.
Le <paramref name="cancellationToken" /> peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> synchrone et retourne une tâche terminée.
L'implémentation par défaut retourne une tâche annulée si un <paramref name="cancellationToken" /> déjà annulé est passé.
Les exceptions levées par <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])" /> sont communiquées via la propriété d'exception de tâche retournée.</summary>
      <param name="collectionName">Indique le nom du schéma à retourner.</param>
      <param name="restrictionValues">Spécifie un ensemble de valeurs de restriction pour le schéma demandé.</param>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.String,System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" />.
Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée.
Le <paramref name="cancellationToken" /> peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> synchrone et retourne une tâche terminée.
L'implémentation par défaut retourne une tâche annulée si un <paramref name="cancellationToken" /> déjà annulé est passé.
Les exceptions levées par <see cref="M:System.Data.Common.DbConnection.GetSchema(System.String)" /> sont communiquées via la propriété d'exception de tâche retournée.</summary>
      <param name="collectionName">Indique le nom du schéma à retourner.</param>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchemaAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit d’une version asynchrone de <see cref="M:System.Data.Common.DbConnection.GetSchema" />.
Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée.
Le <paramref name="cancellationToken" /> peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> synchrone et retourne une tâche terminée.
L'implémentation par défaut retourne une tâche annulée si un <paramref name="cancellationToken" /> déjà annulé est passé.
Les exceptions levées par <see cref="M:System.Data.Common.DbConnection.GetSchema" /> sont communiquées via la propriété d'exception de tâche retournée.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange">
        <see cref="T:System.Data.StateChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary>En cas de substitution dans une classe dérivée, ouvre une connexion de base de données avec les paramètres spécifiés par <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary>Version asynchrone de <see cref="M:System.Data.Common.DbConnection.Open" />, qui ouvre une connexion de base de données avec les paramètres spécifiés par <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Cette méthode appelle la méthode virtuelle <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbConnection.Open" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être respecté.  
  
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbConnection.Open" /> synchrone et retourne une tâche terminée. L'implémentation par défaut retourne une tâche annulée si un cancellationToken déjà annulé est passé. Les exceptions levées par Open sont communiquées via la propriété d'exception de tâche retournée.  
  
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbConnection" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary>Commence une transaction de base de données.</summary>
      <returns>Objet qui représente la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary>Commence une transaction de base de données avec le niveau d’isolement spécifié.</summary>
      <param name="isolationLevel">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns>Objet qui représente la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary>Crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion actuelle.</summary>
      <returns>Un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la chaîne utilisée pour ouvrir la connexion.</summary>
      <returns>Chaîne de connexion utilisée pour établir la connexion initiale. Le contenu exact de la chaîne de connexion dépend de la source de données spécifique de cette connexion. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary>Obtient le délai d’attente (en secondes) lors de l’établissement d’une connexion avant de mettre fin à la tentative et de générer une erreur.</summary>
      <returns>Durée d'attente (en secondes) préalable à l'établissement d'une connexion. La valeur par défaut est déterminée par le type de connexion spécifique que vous utilisez.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom de la base de données active après avoir ouvert une connexion, ou le nom de la base de données spécifié dans la chaîne de connexion avant que la connexion ne soit ouverte.</summary>
      <returns>Nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom du serveur de base de données auquel se connecter.</summary>
      <returns>Nom du serveur de base de données auquel se connecter. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary>Obtient le <see cref="T:System.Data.Common.DbProviderFactory" /> pour ce <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Jeu de méthodes permettant de créer des instances de l'implémentation d'un fournisseur des classes source de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary>En cas de substitution dans une classe dérivée, obtient une chaîne qui représente la version du serveur auquel l'objet est connecté.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> a été appelé alors que la tâche retournée n’était pas terminée et que la connexion n’a pas été ouverte après un appel à <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
      <returns>Version de la base de données. Le format de la chaîne retournée dépend du type de connexion spécifique que vous utilisez.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary>Obtient une chaîne qui décrit l'état de la connexion.</summary>
      <returns>État de la connexion. Le format de la chaîne retournée dépend du type de connexion spécifique que vous utilisez.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary>Fournit une classe de base pour les générateurs de chaînes de connexion fortement typées.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> en utilisant les règles ODBC pour citer les valeurs.</summary>
      <param name="useOdbcRules">
        <see langword="true" /> pour utiliser {} pour délimiter les champs ; <see langword="false" /> pour utiliser des guillemets.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary>Ajoute une entrée avec la clé et la valeur spécifiées dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clé à ajouter à <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value">Valeur de la clé spécifiée.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.

- ou -

<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary>Offre un moyen efficace et sûr d’ajouter une clé et une valeur à un objet <see cref="T:System.Text.StringBuilder" /> existant.</summary>
      <param name="builder">
        <see cref="T:System.Text.StringBuilder" /> auquel ajouter la paire clé/valeur.</param>
      <param name="keyword">Clé à ajouter.</param>
      <param name="value">Valeur de la clé fournie.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary>Offre un moyen efficace et sûr d’ajouter une clé et une valeur à un objet <see cref="T:System.Text.StringBuilder" /> existant.</summary>
      <param name="builder">
        <see cref="T:System.Text.StringBuilder" /> auquel ajouter la paire clé/valeur.</param>
      <param name="keyword">Clé à ajouter.</param>
      <param name="value">Valeur de la clé fournie.</param>
      <param name="useOdbcRules">
        <see langword="true" /> pour utiliser {} pour délimiter les champs ; <see langword="false" /> pour utiliser des guillemets.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary>Efface le contenu de l'instance <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary>Efface la collection d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> du <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> associé.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Détermine si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une clé spécifique.</summary>
      <param name="keyword">Clé à rechercher dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une entrée avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary>Compare les informations de connexion de cet objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> avec les informations de connexion de l’objet fourni.</summary>
      <param name="connectionStringBuilder">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> à comparer à l’objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> si les informations de connexion dans les deux objets <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> provoquent une chaîne de connexion équivalente ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary>Remplit un <see cref="T:System.Collections.Hashtable" /> fourni avec des informations sur toutes les propriétés de ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors">
        <see cref="T:System.Collections.Hashtable" /> à remplir avec des informations au sujet de ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary>Supprime l'entrée contenant la clé spécifiée dans l'instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clé de la paire clé/valeur à supprimer de la chaîne de connexion dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> a la valeur Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule ou <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</exception>
      <returns>
        <see langword="true" /> si la clé existait dans la chaîne de connexion et a été supprimée ; <see langword="false" /> si la clé n’existait pas.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Indique si la clé spécifiée existe dans cette instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clé à rechercher dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une entrée avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Ajoute un élément avec la clé et la valeur fournies à l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword">
        <see cref="T:System.Object" /> à utiliser comme clé de l'élément à ajouter.</param>
      <param name="value">
        <see cref="T:System.Object" /> à utiliser comme valeur de l'élément à ajouter.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé spécifiée.</summary>
      <param name="keyword">Clé à rechercher dans l'objet <see cref="T:System.Collections.IDictionary" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary>Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l’objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> de l'objet <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Supprime de l’objet <see cref="T:System.Collections.IDictionary" /> l’élément ayant la clé spécifiée.</summary>
      <param name="keyword">Clé de l'élément à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" /> contenant les attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns>Nom de classe de l’objet, ou <see langword="null" /> si la classe n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retourne le nom de cette instance d’un composant.</summary>
      <returns>Nom de l’objet, ou <see langword="null" /> si l’objet n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> qui est le convertisseur pour cet objet, ou <see langword="null" /> s’il n’existe aucun <see cref="T:System.ComponentModel.TypeConverter" /> pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui représente l’événement par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas d’événements.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas de propriétés.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns>
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retourne les événements pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retourne les événements pour cette instance d’un composant à l’aide du tableau d’attributs spécifié comme filtre.</summary>
      <param name="attributes">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements filtrés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retourne les propriétés de cette instance d’un composant à l’aide du tableau d’attributs comme filtre.</summary>
      <param name="attributes">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés filtrées de cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary>Retourne la chaîne de connexion associée à ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> actuelle.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Récupère une valeur correspondant à la clé fournie à partir de cet objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword">Clé de l'élément à récupérer.</param>
      <param name="value">Valeur correspondant au <paramref name="keyword" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> contient une valeur Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <returns>
        <see langword="true" /> si <paramref name="keyword" /> a été trouvé dans la chaîne de connexion ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary>Obtient ou définit une valeur qui indique si la propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> est visible dans les concepteurs Visual Studio.</summary>
      <returns>
        <see langword="true" /> si la chaîne de connexion est visible dans les concepteurs ; <see langword="false" />, sinon. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary>Obtient ou définit la chaîne de connexion associée au <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.ArgumentException">Un argument de chaîne de connexion non valide a été fourni.</exception>
      <returns>Chaîne de connexion actuelle, créée à partir des paires clé/valeur contenues dans le <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary>Obtient le nombre actuel de clés contenues dans la propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns>Nombre de clés contenues dans la chaîne de connexion gérée par l’instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary>Obtient une valeur qui indique si l’objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary>Obtient ou définit la valeur associée à la clé spécifiée.</summary>
      <param name="keyword">Clé de l'élément à obtenir ou définir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.

- ou -

La propriété est définie, <paramref name="keyword" /> n’existe pas dans la collection et <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> a une taille fixe.</exception>
      <returns>Valeur associée à la clé spécifiée. Si la clé spécifiée est introuvable, la tentative d’obtention retourne une référence null (<see langword="Nothing" /> en Visual Basic) et la tentative de définition crée un nouvel élément avec la clé spécifiée.

Le passage d’une valeur null (<see langword="Nothing" /> en Visual Basic) lève une exception <see cref="T:System.ArgumentNullException" />. L’affectation d’une valeur null supprime la paire clé/valeur.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary>Obtient un <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtient ou définit l'élément à l'aide de la clé spécifiée.</summary>
      <param name="keyword">Clé de l'élément à obtenir ou définir.</param>
      <returns>Élément correspondant à la clé spécifiée.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary>Obtient un objet <see cref="T:System.Collections.ICollection" /> qui contient les valeurs de l'objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> contenant les valeurs dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>Facilite l’implémentation de l’interface <see cref="T:System.Data.IDbDataAdapter" />. Les héritiers de <see cref="T:System.Data.Common.DbDataAdapter" /> implémentent un ensemble de fonctions pour fournir un typage fort, mais héritent de la plupart des fonctionnalités nécessaires à l’implémentation complète deDataAdapter.</summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>Nom par défaut utilisé par l'objet <see cref="T:System.Data.Common.DataAdapter" /> pour les mappages de table.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>Initialise une nouvelle instance d’une classe DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary>Initialise une nouvelle instance d'une classe <see langword="DataAdapter" /> à partir d'un objet existant du même type.</summary>
      <param name="adapter">Objet <see langword="DataAdapter" /> utilisé pour créer le nouveau <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary>Ajoute <see cref="T:System.Data.IDbCommand" /> au lot actuel.</summary>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> à ajouter au lot.</param>
      <exception cref="T:System.NotSupportedException">L'adaptateur ne prend pas en charge les lots.</exception>
      <returns>Nombre de commandes du lot avant l'ajout de <see cref="T:System.Data.IDbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary>Supprime tous les objets <see cref="T:System.Data.IDbCommand" /> du lot.</summary>
      <exception cref="T:System.NotSupportedException">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> exécuté pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Indique si la commande est une instruction UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping">Objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> qui met à jour la source de données.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Indique si la commande est une instruction UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping">Objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>Nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbDataAdapter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary>Exécute le lot actuel.</summary>
      <returns>Valeur de retour de la dernière commande du lot.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>Ajoute ou actualise des lignes dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="startRecord">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.  
  
 - ou -  
  
 La connexion n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException">La connexion est introuvable.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="startRecord" /> est inférieur à 0.  
  
- ou - 
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant <see cref="T:System.Data.DataSet" /> et les noms de tables source, la chaîne de commande et le comportement des commandes.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="startRecord">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="command">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="startRecord" /> est inférieur à 0.  
  
- ou - 
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <exception cref="T:System.SystemException">La table source n'est pas valide.</exception>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données, en utilisant le nom <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">Nom du <see cref="T:System.Data.DataTable" /> à utiliser pour le mappage de tables.</param>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Ajoute ou actualise les lignes de <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données à l'aide des <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> et <see cref="T:System.Data.CommandBehavior" /> spécifiés.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="command">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Objets <see cref="T:System.Data.DataTable" /> à remplir à partir de la source de données.</param>
      <param name="startRecord">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> exécuté pour remplir les objets <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <exception cref="T:System.SystemException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.  
  
 - ou -  
  
 La connexion n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException">La connexion est introuvable.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="startRecord" /> est inférieur à 0.  
  
- ou - 
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
      <returns>Nombre de lignes ajoutées ou actualisées dans les tables de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary>Ajoute ou actualise des lignes dans un <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données en commençant à l'enregistrement spécifié et en récupérant le nombre maximal d'enregistrements spécifié.</summary>
      <param name="startRecord">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="dataTables">Objets <see cref="T:System.Data.DataTable" /> à remplir à partir de la source de données.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cette valeur n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Ajoute un <see cref="T:System.Data.DataTable" /> nommé « Table » au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu’il corresponde à celui de la source de données en fonction du <see cref="T:System.Data.SchemaType" /> spécifié.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> pour y insérer le schéma.</param>
      <param name="schemaType">Une des valeurs de <see cref="T:System.Data.SchemaType" /> qui spécifient comment insérer le schéma.</param>
      <returns>Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur le <see cref="T:System.Data.SchemaType" /> défini.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Tableau d'objets <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu’il corresponde à celui de la source de données en fonction du <see cref="T:System.Data.SchemaType" /> et du <see cref="T:System.Data.DataTable" /> spécifiés.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> pour y insérer le schéma.</param>
      <param name="schemaType">Une des valeurs de <see cref="T:System.Data.SchemaType" /> qui spécifient comment insérer le schéma.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <exception cref="T:System.ArgumentException">Impossible de trouver une table source auprès de laquelle obtenir le schéma.</exception>
      <returns>Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>Configure le schéma du <see cref="T:System.Data.DataTable" /> spécifié en fonction du <see cref="T:System.Data.SchemaType" /> spécifié.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>Configure le schéma du <see cref="T:System.Data.DataTable" /> spécifié en fonction du <see cref="T:System.Data.SchemaType" />, de la chaîne de commande et des valeurs <see cref="T:System.Data.CommandBehavior" /> définis.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary>Retourne <see cref="T:System.Data.IDataParameter" /> à partir de l'une des commandes du lot actuel.</summary>
      <param name="commandIdentifier">Index de la commande à partir duquel récupérer le paramètre.</param>
      <param name="parameterIndex">Index du paramètre au sein de la commande.</param>
      <exception cref="T:System.NotSupportedException">L'adaptateur ne prend pas en charge les lots.</exception>
      <returns>
        <see cref="T:System.Data.IDataParameter" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary>Retourne les informations relatives à une tentative de mise à jour distincte dans le cadre plus large d'une mise à jour groupée.</summary>
      <param name="commandIdentifier">Numéro de colonne de base zéro de la commande individuelle au sein de chaque lot.</param>
      <param name="recordsAffected">Nombre de lignes affectées dans le magasin de données par la commande spécifiée au sein du lot.</param>
      <param name="error">
        <see cref="T:System.Exception" /> levée au cours de l'exécution de la commande spécifiée. Retourne <see langword="null" /> (<see langword="Nothing" /> dans Visual Basic) si aucune exception n'est levée.</param>
      <returns>Informations relatives à une tentative de mise à jour distincte dans le cadre plus large d'une mise à jour groupée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary>Initialise le mode batch pour <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>Déclenche l'événement <see langword="RowUpdated" /> d'un fournisseur de données .NET Framework.</summary>
      <param name="value">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>Déclenche l'événement <see langword="RowUpdating" /> d'un fournisseur de données .NET Framework.</summary>
      <param name="value">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary>Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns>Nouvel objet qui est une copie de cette instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary>Termine le mode batch pour <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows">Tableau d'objets <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le tableau d'objets <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataRows">Tableau d'objets <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <param name="tableMapping">Collection <see cref="P:System.Data.IDataAdapter.TableMappings" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans <see cref="T:System.Data.DataSet" /> avec le nom <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à utiliser pour mettre à jour la source de données.</param>
      <param name="srcTable">Le nom de la table source à utiliser pour le mappage de table.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> utilisé pour mettre à jour la source de données.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.  
  
- ou - 
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary>Obtient ou définit une commande permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary>Obtient ou définit le comportement de la commande utilisée pour remplir l'adaptateur de données.</summary>
      <returns>
        <see cref="T:System.Data.CommandBehavior" /> de la commande utilisée pour remplir l'adaptateur de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary>Obtient ou définit une commande utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary>Obtient ou définit une commande utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary>Obtient ou définit une valeur qui active ou désactive la prise en charge du traitement par lots et qui spécifie le nombre de commandes pouvant être exécutées dans un lot.</summary>
      <returns>Nombre de lignes à traiter par lot.  
  
 <list type="table"><listheader><term> Valeur</term><description> Effet</description></listheader><item><term> 0</term><description> Il n'y a aucune limite à la taille du lot.</description></item><item><term> 1</term><description> Désactive la mise à jour par lots.</description></item><item><term> &gt; 1,0</term><description> Les modifications sont envoyées à l'aide de lots de <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> opérations à la fois.</description></item></list>  

 Lorsque vous affectez à ce paramètre une valeur autre que 1, la propriété de toutes les commandes associées à <see cref="T:System.Data.Common.DbDataAdapter" /> doit avoir la <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> valeur None ou OutputParameters. Sinon, une exception sera levée.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary>Obtient ou définit une commande utilisée pour mettre à jour des enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary>Lit un flux avant uniquement de lignes d'une source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary>Ferme l'objet <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary>Ferme de façon asynchrone l’objet <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbDataReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary>Libère de façon asynchrone toutes les ressources utilisées par l’instance actuelle de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme booléenne.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’octet.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, lit un nombre spécifié d’octets à partir de la colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée de la mémoire tampon.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <param name="dataOffset">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length">Nombre maximal d'octets à lire.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Nombre réel d'octets lus.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de caractère unique.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, lit un nombre spécifié de caractères à partir d’une colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <param name="dataOffset">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length">Nombre maximal de caractères à lire.</param>
      <returns>Nombre réel de caractères lus.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetColumnSchemaAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" />.
Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée.
Le <paramref name="cancellationToken" /> peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> synchrone et retourne une tâche terminée.
L'implémentation par défaut retourne une tâche annulée si un <paramref name="cancellationToken" /> déjà annulé est passé.
Les exceptions levées par <see cref="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" /> sont communiquées via la propriété d'exception de tâche retournée.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary>Retourne un lecteur de données imbriqué pour la colonne demandée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>Données du lecteur.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom du type de données de la colonne spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>Nom du type de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’objet <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary>Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour l'ordinal de colonne demandé qui peut être substitué par une implémentation spécifique au fournisseur.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de nombre à virgule flottante double précision.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary>En cas de substitution dans une classe dérivée, retourne un énumérateur qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</summary>
      <returns>Énumérateur qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient le type de données de la colonne spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Type de données de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <typeparam name="T">Type de la valeur à retourner.</typeparam>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  

- ou - 
Le lecteur de données a été fermé pendant la récupération des données.  
  
- ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).  

- ou -

Le lecteur a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary>Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <typeparam name="T">Type de la valeur à retourner.</typeparam>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données a été fermé pendant la récupération des données.  

- ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

- ou -

Tentative de lecture d'une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s’applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
      <returns>Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <typeparam name="T">Type de la valeur à retourner.</typeparam>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données a été fermé pendant la récupération des données.  

- ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

- ou -

Tentative de lecture d'une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s’applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
      <returns>Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de nombre à virgule flottante simple précision.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’identificateur global unique (GUID).</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 16 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 32 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 64 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom de la colonne en fonction du numéro de colonne de base zéro.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <returns>Nom de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient le numéro de la colonne en fonction de la colonne.</summary>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Numéro de colonne de base zéro.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Obtient le type spécifique au fournisseur de la colonne spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>Type .NET spécifique au fournisseur.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous forme d’une instance d’un type spécifique au fournisseur.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Obtient toutes les colonnes d’attributs spécifiques au fournisseur figurant dans la collection de la ligne actuelle.</summary>
      <param name="values">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</param>
      <returns>Nombre d'instances des éléments du tableau.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.NotSupportedException">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTableAsync(System.Threading.CancellationToken)">
      <summary>Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.
Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée.
Le <paramref name="cancellationToken" /> peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> synchrone et retourne une tâche terminée.
L'implémentation par défaut retourne une tâche annulée si un <paramref name="cancellationToken" /> déjà annulé est passé.
Les exceptions levées par <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /> sont communiquées via la propriété d'exception de tâche retournée.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary>Obtient un flux pour récupérer les données de la colonne spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée n’est pas un type binaire qui prend en charge la lecture avec un <see cref="T:System.IO.Stream" />.</exception>
      <returns>Un flux.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.String" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary>Obtient un lecteur de texte pour récupérer les données de la colonne.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée n’est pas un type texte qui prend en charge la lecture avec un <see cref="T:System.IO.TextReader" />.</exception>
      <returns>Lecteur de texte.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary>En cas de substitution dans une classe dérivée, renseigne un tableau d’objets avec les valeurs de colonne de la ligne actuelle.</summary>
      <param name="values">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</param>
      <returns>Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur qui indique si la colonne contient des valeurs non existantes ou manquantes.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary>Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal">Colonne de base zéro à récupérer.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal">Colonne de base zéro à récupérer.</param>
      <param name="cancellationToken">Jeton pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.  

- ou - 
Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary>En cas de substitution dans une classe dérivée, avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <returns>
        <see langword="true" /> s'il existe des jeux de résultats supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary>Avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>Tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de jeux de résultats ou <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>Avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de jeux de résultats ou <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary>En cas de substitution dans une classe dérivée, avance le lecteur à l'enregistrement suivant dans un jeu de résultats.</summary>
      <returns>
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary>Avance le lecteur de manière asynchrone jusqu’à l’enregistrement suivant d’un jeu de résultats.</summary>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de lignes ou <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>Avance le lecteur de manière asynchrone jusqu’à l’enregistrement suivant d’un jeu de résultats.</summary>
      <param name="cancellationToken">Instruction d'annulation.</param>
      <exception cref="T:System.Data.Common.DbException">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de lignes ou <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <returns>Instance de <see cref="T:System.Data.IDataReader" /> à utiliser lorsque le champ pointe vers des données structurées plus distantes.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary>Obtient une valeur indiquant la profondeur d'imbrication de la ligne actuelle.</summary>
      <returns>Profondeur d'imbrication de la ligne actuelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary>En cas de substitution dans une classe dérivée, obtient le nombre de colonnes de la ligne actuelle.</summary>
      <exception cref="T:System.NotSupportedException">Il n'existe aucune connexion active à une instance de SQL Server.</exception>
      <returns>Nombre de colonnes dans la ligne actuelle.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur qui indique si ce <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</summary>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</exception>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbDataReader" /> est fermé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index de colonne est hors limites.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary>En cas de substitution dans une classe dérivée, obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns>Nombre de lignes modifiées, insérées ou supprimées. -1 pour les instructions SELECT ; 0 si aucune ligne n'a été affectée ou si l'instruction a échoué.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary>Obtient le nombre de champs dans <see cref="T:System.Data.Common.DbDataReader" /> qui ne sont pas masqués.</summary>
      <returns>Nombre de champs qui ne sont pas masqués.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary>Cette classe contient des méthodes d’extension de schéma de colonne pour <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtient une valeur qui indique si un <see cref="T:System.Data.Common.DbDataReader" /> peut obtenir un schéma de colonne.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> pour lequel vérifier la prise en charge du schéma de colonne.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> peut obtenir un schéma de colonne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary>Obtient le schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />) pour un <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.Common.DbDataReader" /> pour retourner le schéma de colonne.</param>
      <returns>Schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />) pour un <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary>Implémente <see cref="T:System.Data.IDataRecord" /> et <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, et prend en charge la liaison de données <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’un booléen.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>
        <see langword="true" /> si le booléen a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’un octet.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d’un tableau d’octets.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <param name="dataIndex">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferIndex">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length">Nombre d'octets à lire.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’un caractère.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d'un tableau de caractères.</summary>
      <param name="i">Numéro de colonne.</param>
      <param name="dataIndex">Mémoire tampon dans laquelle copier des données.</param>
      <param name="buffer">Longueur maximale à copier dans la mémoire tampon.</param>
      <param name="bufferIndex">Point de départ dans la mémoire tampon.</param>
      <param name="length">Point de départ dans la source de données.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>Actuellement non pris en charge.</summary>
      <param name="i">Actuellement non pris en charge.</param>
      <returns>Actuellement non pris en charge.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>Retourne le nom du type de données principal.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Le nom du type de données principal.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d’un objet <see cref="T:System.DateTime" />.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary>Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour l'ordinal de colonne demandé qui peut être substitué par une implémentation spécifique au fournisseur.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d’un objet <see cref="T:System.Decimal" />.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante double précision.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>Retourne le <see cref="T:System.Type" /> qui est le type de données de l’objet.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante simple précision.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>Retourne la valeur GUID du champ spécifié.</summary>
      <param name="i">L’index du champ à retourner.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur GUID du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 32 bits.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>Retourne le nom de la colonne spécifiée.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Nom de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>Renvoie le numéro de colonne, en fonction du nom de la colonne.</summary>
      <param name="name">Nom de la colonne.</param>
      <returns>Numéro de colonne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d’une chaîne.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>Renvoie la valeur à la colonne spécifiée dans son format natif.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>La valeur de retour.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>Remplit un tableau d’objets avec les valeurs de colonne de l’enregistrement actif.</summary>
      <param name="values">Un tableau de <see cref="T:System.Object" /> dans lequel pour copier les champs d’attribut.</param>
      <returns>Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>Permet d’indiquer des valeurs inexistantes.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" />, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.AttributeCollection" /> qui contient les attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns>Nom de classe de l’objet, ou <see langword="null" /> si la classe n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retourne le nom de cette instance d’un composant.</summary>
      <returns>Nom de l’objet, ou <see langword="null" /> si l’objet n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> qui est le convertisseur pour cet objet, ou <see langword="null" /> s’il n’existe aucun <see cref="T:System.ComponentModel.TypeConverter" /> pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui représente l’événement par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas d’événements.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas de propriétés.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns>
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retourne les événements pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retourne les événements pour cette instance d’un composant à l’aide du tableau d’attributs spécifié comme filtre.</summary>
      <param name="attributes">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns>
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements filtrés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retourne les propriétés de cette instance d’un composant à l’aide du tableau d’attributs comme filtre.</summary>
      <param name="attributes">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés filtrées de cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>Indique le nombre de champs dans l’enregistrement en cours. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.NotSupportedException">Pas connecté à une source de données à lire.</exception>
      <returns>Nombre de champs dans l’enregistrement en cours.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>Indique la valeur à la colonne spécifiée dans son format natif en fonction du numéro de colonne. Cette propriété est en lecture seule.</summary>
      <param name="i">Numéro de colonne.</param>
      <returns>La valeur à la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>Indique la valeur à la colonne spécifiée dans son format natif en fonction du nom de colonne. Cette propriété est en lecture seule.</summary>
      <param name="name">Nom de la colonne.</param>
      <returns>La valeur à la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary>Fournit un mécanisme d’énumération de toutes les instances disponibles des serveurs de base de données dans le réseau local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary>Récupère un <see cref="T:System.Data.DataTable" /> qui contient des informations sur toutes les instances visibles du serveur représentées par l’instance fortement typée de cette classe.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient des informations sur les instances visibles de la source de données associée.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary>Expose la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, qui prend en charge une itération simple sur une collection par un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> avec le lecteur de données spécifié.</summary>
      <param name="reader">DataReader au sein duquel itérer.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l’aide du lecteur spécifié et indique de fermer automatiquement ou non le lecteur après l’itération au sein de ses données.</summary>
      <param name="reader">DataReader au sein duquel itérer.</param>
      <param name="closeReader">
        <see langword="true" /> pour fermer automatiquement le DataReader après l’itération au sein de ses données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l'aide du <see langword="DataReader" /> spécifié.</summary>
      <param name="reader">
        <see langword="DataReader" /> au sein duquel itérer.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l’aide du <see langword="DataReader" /> spécifié, et indique si <see langword="DataReader" /> doit être fermé automatiquement après l’itération au sein de ses données.</summary>
      <param name="reader">
        <see langword="DataReader" /> au sein duquel itérer.</param>
      <param name="closeReader">
        <see langword="true" /> pour fermer automatiquement <see langword="DataReader" /> après l’itération au sein de ses données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>Avance l’énumérateur à l’élément suivant de la collection.</summary>
      <exception cref="T:System.InvalidOperationException">La collection a été modifiée après la création de l'énumérateur.</exception>
      <returns>
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
      <exception cref="T:System.InvalidOperationException">La collection a été modifiée après la création de l'énumérateur.</exception>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>Obtient l’élément actuel dans la collection.</summary>
      <exception cref="T:System.InvalidOperationException">L'énumérateur est placé avant le premier élément de la collection ou après le dernier élément.</exception>
      <returns>Élément actuel dans la collection.</returns>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary>Classe de base pour toutes les exceptions levées au nom de la source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec les informations de sérialisation et le contexte spécifiés.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Message à afficher pour cette exception.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d’erreur spécifié et une référence à l’exception interne ayant provoqué cette exception.</summary>
      <param name="message">Chaîne du message d'erreur.</param>
      <param name="innerException">La référence à l'exception interne.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d’erreur et le code d’erreur spécifiés.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="errorCode">Code d'erreur pour l'exception.</param>
    </member>
    <member name="P:System.Data.Common.DbException.IsTransient">
      <summary>Indique si l’erreur représentée par cette exception <see cref="T:System.Data.Common.DbException" /> peut être une erreur temporaire, c’est-à-dire si une nouvelle tentative d’exécution de l’opération de déclenchement peut réussir sans autre modification.</summary>
      <returns>
        <see langword="true" /> Si l’erreur représentée peut être une erreur temporaire ; <see langword="false" /> sinon,.</returns>
    </member>
    <member name="P:System.Data.Common.DbException.SqlState">
      <summary>
        <para> Pour les fournisseurs de base de données assurant sa prise en charge, contient un code de retour de caractères SQL 5 standard indiquant la réussite ou l’échec de l’opération de base de données. Les 2 premiers caractères représentent la <strong>classe</strong> du code de retour (par exemple, erreur, réussite), tandis que les 3 derniers caractères représentent la <strong>sous-classe</strong>, ce qui permet de détecter les scénarios d’erreur dans une base de données portable.</para>
        <para> Pour les fournisseurs de bases de données n’assurant pas sa prise en charge, ou pour les scénarios d’erreur inapplicables, contient <see langword="null" />.</para>
      </summary>
      <returns>Code de retour SQL 5 caractères standard, ou <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary>Fournit une liste de constantes pour la collection MetaDataCollections connue : DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords et Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary>Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary>Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary>Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary>Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary>Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary>Fournit des valeurs statiques qui sont utilisées pour les noms de colonnes dans les objets MetaDataCollection contenus dans <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTable" /> est créé par la méthode GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne CollectionName dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ColumnSize dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne CompositeIdentifierSeparatorPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne CreateFormat dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne CreateParameters dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary>Utilisé par la méthodeGetSchema pour créer la colonne DataSourceProductName dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne DataSourceProductVersion dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne DataSourceProductVersionNormalized dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne DataType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne GroupByBehavior dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IdentifierCase dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IdentifierPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsAutoIncrementable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsBestMatch dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsCaseSensitive dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsConcurrencyType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsFixedLength dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsFixedPrecisionScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsLiteralSupported dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsLong dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsNullable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsSearchable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsSearchableWithLike dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne IsUnsigned dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne LiteralPrefix dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne LiteralSuffix dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne MaximumScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne MinimumScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne NumberOfIdentifierParts dans la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne NumberOfRestrictions dans la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne OrderByColumnsInSelect dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ParameterMarkerFormat dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ParameterMarkerPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ParameterNameMaxLength dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ParameterNamePattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ProviderDbType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne QuotedIdentifierCase dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne QuotedIdentifierPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne ReservedWord dans la collection ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne StatementSeparatorPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne StringLiteralPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne SupportedJoinOperators dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary>Utilisé par la méthode GetSchema pour créer la colonne TypeName dans la collection DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary>Représente un paramètre passé à <see cref="T:System.Data.Common.DbCommand" /> et éventuellement son mappage à une colonne <see cref="T:System.Data.DataSet" />. Pour plus d’informations sur les paramètres, consultez Configuration des paramètres et des types de données des paramètres.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary>Restaure les paramètres d’origine de la propriété DbType.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary>Obtient ou définit le <see cref="T:System.Data.DbType" /> du paramètre.</summary>
      <exception cref="T:System.ArgumentException">La propriété n'a pas une valeur <see cref="T:System.Data.DbType" /> valide.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DbType" />. La valeur par défaut est <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary>Obtient ou définit une valeur qui indique si le paramètre est un paramètre d'entrée uniquement, de sortie uniquement, bidirectionnel ou de valeur de retour d'une procédure stockée.</summary>
      <exception cref="T:System.ArgumentException">La valeur de la propriété n'est pas l'une des valeurs <see cref="T:System.Data.ParameterDirection" /> valides.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.ParameterDirection" />. La valeur par défaut est <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si le paramètre accepte les valeurs Null.</summary>
      <returns>
        <see langword="true" /> si les valeurs Null sont acceptées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Data.Common.DbParameter" />. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary>Obtient ou définit le nombre maximal de chiffres utilisés pour représenter la propriété <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Nombre maximal de chiffres utilisés pour représenter la propriété <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary>Obtient ou définit le nombre de décimales appliqué à la résolution de <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Nombre de positions décimales selon lesquelles le <see cref="P:System.Data.Common.DbParameter.Value" /> est résolu.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary>Obtient ou définit la taille maximale, en octets, des données dans la colonne.</summary>
      <returns>Taille maximale, en octets, des données dans la colonne. La valeur par défaut est déduite à partir de la valeur du paramètre.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary>Obtient ou définit le nom de la colonne source mappée à <see cref="T:System.Data.DataSet" /> et utilisée pour charger et retourner <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns>Nom de la colonne source mappée à <see cref="T:System.Data.DataSet" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary>Obtient ou définit une valeur qui indique si la colonne source accepte la valeur Null. Ainsi, <see cref="T:System.Data.Common.DbCommandBuilder" /> peut générer correctement des instructions Update pour les colonnes qui acceptent la valeur Null.</summary>
      <returns>
        <see langword="true" /> si la colonne source accepte la valeur Null ; <see langword="false" /> si ce n’est pas le cas.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary>Obtient ou définit le <see cref="T:System.Data.DataRowVersion" /> à utiliser lors du chargement de <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException">La valeur de la propriété n'est pas l'une des valeurs <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />. La valeur par défaut est <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary>Indique la précision des paramètres numériques.</summary>
      <returns>Nombre maximal de chiffres utilisés pour représenter la propriété <see langword="Value" /> de l’objet <see langword="Parameter" /> du fournisseur de données. La valeur par défaut est 0. Elle indique qu’un fournisseur de données définit la précision pour <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns>Nombre de positions décimales selon lesquelles le <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> est résolu. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary>Obtient ou définit la valeur du paramètre.</summary>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur du paramètre. La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary>Classe de base pour une collection de paramètres relatifs à un <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary>Ajoute l'objet <see cref="T:System.Data.Common.DbParameter" /> spécifié au <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> du <see cref="T:System.Data.Common.DbParameter" /> à ajouter à la collection.</param>
      <returns>Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary>Ajoute un tableau d’éléments avec les valeurs spécifiées à <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values">Tableau de valeurs de type <see cref="T:System.Data.Common.DbParameter" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary>Supprime toutes les valeurs <see cref="T:System.Data.Common.DbParameter" /> de <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary>Indique si un <see cref="T:System.Data.Common.DbParameter" /> avec le <see cref="P:System.Data.Common.DbParameter.Value" /> spécifié est contenu dans la collection.</summary>
      <param name="value">
        <see cref="P:System.Data.Common.DbParameter.Value" /> du <see cref="T:System.Data.Common.DbParameter" /> à rechercher dans la collection.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbParameter" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary>Indique si un <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié existe dans la collection.</summary>
      <param name="value">Nom du <see cref="T:System.Data.Common.DbParameter" /> à rechercher dans la collection.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbParameter" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie un tableau d’éléments dans la collection, en commençant à l’index spécifié.</summary>
      <param name="array">Tableau d’éléments à copier dans la collection.</param>
      <param name="index">Index dans la collection au niveau duquel copier les éléments.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary>Expose la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, qui prend en charge une itération simple sur une collection par un fournisseur de données .NET Framework.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary>Retourne l’objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié dans la collection.</summary>
      <param name="index">Index du <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary>Retourne l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName">Nom du <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary>Retourne l’index de l’objet <see cref="T:System.Data.Common.DbParameter" /> spécifié.</summary>
      <param name="value">Objet <see cref="T:System.Data.Common.DbParameter" /> de la collection.</param>
      <returns>Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary>Retourne l’index de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns>Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Insère l’index spécifié de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié dans la collection à l’index spécifié.</summary>
      <param name="index">Index auquel insérer l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Objet <see cref="T:System.Data.Common.DbParameter" /> à insérer dans la collection.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary>Supprime l'objet <see cref="T:System.Data.Common.DbParameter" /> spécifié de la collection.</summary>
      <param name="value">Objet <see cref="T:System.Data.Common.DbParameter" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l’objet <see cref="T:System.Data.Common.DbParameter" /> à la position spécifiée.</summary>
      <param name="index">Index dans lequel se trouve l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary>Supprime de la collection l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary>Affecte une nouvelle valeur à l’objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié.</summary>
      <param name="index">Index dans lequel se trouve l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value">Nouvelle valeur <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary>Affecte une nouvelle valeur à l’objet <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</summary>
      <param name="parameterName">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <param name="value">Nouvelle valeur <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Add(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
      <param name="value">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary>Spécifie le nombre d’éléments dans la collection.</summary>
      <returns>Nombre d’éléments dans la collection</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary>Spécifie si la collection a une taille fixe.</summary>
      <returns>
        <see langword="true" /> si la collection a une taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary>Spécifie si la collection est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary>Spécifie si la collection est synchronisée.</summary>
      <returns>
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary>Obtient ou définit le <see cref="T:System.Data.Common.DbParameter" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro du paramètre.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index spécifié n'existe pas.</exception>
      <returns>
        <see cref="T:System.Data.Common.DbParameter" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary>Obtient ou définit <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</summary>
      <param name="parameterName">Le nom du paramètre.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index spécifié n'existe pas.</exception>
      <returns>Objet <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary>Spécifie le <see cref="T:System.Object" /> à utiliser pour synchroniser l’accès à la collection.</summary>
      <returns>
        <see cref="T:System.Object" /> à utiliser pour synchroniser l’accès à <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary>Récupère ou définit le paramètre au niveau de l’index spécifié.</summary>
      <param name="parameterName">Nom du paramètre à récupérer.</param>
      <returns>
        <see cref="T:System.Object" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary>Représente un jeu de méthodes statiques permettant de créer une ou plusieurs instances des classes <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary>Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection">Connexion utilisée.</param>
      <returns>Instance d'une classe <see cref="T:System.Data.Common.DbProviderFactory" /> pour une connexion spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary>Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow">
        <see cref="T:System.Data.DataRow" /> qui contient les informations de configuration du fournisseur.</param>
      <returns>Instance d'un <see cref="T:System.Data.Common.DbProviderFactory" /> pour un <see cref="T:System.Data.DataRow" />spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary>Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName">Nom invariant d'un fournisseur.</param>
      <returns>Instance de <see cref="T:System.Data.Common.DbProviderFactory" /> pour un nom de fournisseur spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary>Retourne <see cref="T:System.Data.DataTable" /> qui contient des informations à propos de tous les fournisseurs installés qui implémentent <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient des objets <see cref="T:System.Data.DataRow" /> contenant les données suivantes : 
 <list type="table"><listheader><term> Numéro de colonne</term><description> Nom de la colonne</description><description> Description</description></listheader><item><term> 0</term><description> Name</description><description> Nom explicite du fournisseur de données.</description></item><item><term> 1</term><description> Description</description><description> Description explicite du fournisseur de données.</description></item><item><term> 2</term><description> InvariantName</description><description> Nom qui peut être utilisé par programme pour faire référence au fournisseur de données.</description></item><item><term> 3</term><description> AssemblyQualifiedName</description><description> Nom qualifié complet de la classe de fabrique qui contient suffisamment d'informations pour instancier l'objet.</description></item></list></returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary>Retourne les noms invariants des fournisseurs pour toutes les instances inscrites de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns>Noms invariants des fournisseurs pour toutes les instances inscrites de <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary>Inscrit une instance de <see cref="T:System.Data.Common.DbProviderFactory" /> sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="factory">Instance de la fabrique de fournisseurs à inscrire.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary>Inscrit une <see cref="T:System.Data.Common.DbProviderFactory" /> avec le nom qualifié d’assembly donné sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="factoryTypeAssemblyQualifiedName">Nom qualifié d’assembly pour une <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary>Inscrit une <see cref="T:System.Data.Common.DbProviderFactory" /> avec le type donné sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="providerFactoryClass">Type représentant une <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary>Essaie d’obtenir la <see cref="T:System.Data.Common.DbProviderFactory" /> inscrite sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName">Nom invariant de fournisseur à rechercher.</param>
      <param name="factory">Lorsque cette méthode est retournée, contient la <see cref="T:System.Data.Common.DbProviderFactory" /> associée au nom invariant de fournisseur spécifié, si le nom est trouvé ; sinon, <see langword="null" />. Ce paramètre est passé sans être initialisé.</param>
      <returns>
        <see langword="true" /> si un fournisseur est inscrit sous le nom invariant de fournisseur spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary>Supprime une inscription de <see cref="T:System.Data.Common.DbProviderFactory" /> pour le nom invariant de fournisseur donné.</summary>
      <param name="providerInvariantName">Nom invariant de fournisseur de l’inscription à supprimer.</param>
      <returns>
        <see langword="true" /> si la recherche et la suppression de l’inscription réussissent ; sinon, <see langword="false" />. Cette méthode retourne <see langword="false" /> si une inscription pour <paramref name="providerInvariantName" /> est introuvable.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary>Représente un jeu de méthodes permettant de créer des instances de l'implémentation d'un fournisseur des classes source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary>Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary>Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns>
        <see langword="true" /> Si cette instance prend en charge la <see cref="T:System.Data.Common.DbCommandBuilder" /> classe ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary>Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns>
        <see langword="true" /> Si l’instance prend en charge la <see cref="T:System.Data.Common.DbDataAdapter" /> classe ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns>
        <see langword="true" /> Si l’instance prend en charge la <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> classe ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary>Identifie la propriété spécifique au fournisseur dans les classes de paramètres fortement typées qui doit être utilisée lors de la définition d’un type spécifique au fournisseur.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty">Spécifie si cette propriété est une propriété spécifique au fournisseur.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary>Indique si la propriété attribuée est un type spécifique au fournisseur.</summary>
      <returns>
        <see langword="true" /> si la propriété à laquelle cet attribut est appliqué est une propriété de type spécifique au fournisseur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary>Définit le comportement principal des transactions de base de données et fournit une classe de base pour les transactions spécifiques à la base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary>Initialise un nouvel objet <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary>En cas de substitution dans une classe dérivée, valide la transaction de base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary>Valide de façon asynchrone la transaction de base de données.</summary>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbTransaction" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">Si la valeur est <see langword="true" />, cette méthode libère toutes les ressources détenues par tout objet géré référencé par ce <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary>Supprime de manière asynchrone l’objet de transaction.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Release(System.String)">
      <summary>Détruit un point de sauvegarde précédemment défini dans la transaction en cours. Cela permet au système de récupérer des ressources avant la fin de la transaction.</summary>
      <param name="savepointName">Nom du point de sauvegarde à libérer.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)">
      <summary>Détruit un point de sauvegarde précédemment défini dans la transaction en cours. Cela permet au système de récupérer des ressources avant la fin de la transaction.</summary>
      <param name="savepointName">Nom du point de sauvegarde à libérer.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary>En cas de substitution dans une classe dérivée, restaure une transaction à partir d’un état d’attente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback(System.String)">
      <summary>Restaure toutes les commandes qui ont été exécutées après l’établissement du point de sauvegarde spécifié.</summary>
      <param name="savepointName">Nom du point de sauvegarde à restaurer.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)">
      <summary>Restaure toutes les commandes qui ont été exécutées après l’établissement du point de sauvegarde spécifié.</summary>
      <param name="savepointName">Nom du point de sauvegarde à restaurer.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary>Restaure de façon asynchrone une transaction à partir d’un état d’attente.</summary>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Save(System.String)">
      <summary>Crée un point de sauvegarde dans la transaction. Cela permet de restaurer toutes les commandes exécutées après l’établissement du point de sauvegarde, et de restaurer l’état de la transaction tel qu’il était au moment du point de sauvegarde.</summary>
      <param name="savepointName">Nom du point de sauvegarde à créer.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)">
      <summary>Crée un point de sauvegarde dans la transaction. Cela permet de restaurer toutes les commandes exécutées après l’établissement du point de sauvegarde, et de restaurer l’état de la transaction tel qu’il était au moment du point de sauvegarde.</summary>
      <param name="savepointName">Nom du point de sauvegarde à créer.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary>Spécifie l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</summary>
      <returns>L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary>En cas de substitution dans une classe dérivée, obtient l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</summary>
      <returns>L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary>En cas de substitution dans une classe dérivée, obtient le niveau d’isolation de cette transaction.</summary>
      <returns>Niveau d’isolation pour cette transaction.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.SupportsSavepoints">
      <summary>Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbTransaction" /> prend en charge les points de sauvegarde de base de données.
Si <see langword="false" />, les méthodes <see cref="M:System.Data.Common.DbTransaction.SaveAsync(System.String,System.Threading.CancellationToken)" />, <see cref="M:System.Data.Common.DbTransaction.RollbackAsync(System.String,System.Threading.CancellationToken)" /> et <see cref="M:System.Data.Common.DbTransaction.ReleaseAsync(System.String,System.Threading.CancellationToken)" /> ainsi que leurs homologues synchrones doivent lever <see cref="T:System.NotSupportedException" />.</summary>
      <returns>
        <see langword="true" /> Si cette <see cref="T:System.Data.Common.DbTransaction" /> instance prend en charge les points d’enregistrement de base de données ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary>Obtient l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction, ou une référence null si la transaction n’est plus valide.</summary>
      <returns>L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary>Spécifie la relation entre les colonnes dans une clause GROUP BY et les colonnes non regroupées en agrégats dans la liste de sélection d'une instruction SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary>La clause GROUP BY doit contenir toutes les colonnes non regroupées en agrégats dans la liste de sélection, et ne doit pas contenir d'autres colonnes qui ne figurent pas dans la liste de sélection.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary>La clause GROUP BY doit contenir toutes les colonnes non regroupées en agrégats dans la liste de sélection, et peut contenir d'autres colonnes qui ne figurent pas dans la liste de sélection.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary>La clause GROUP BY n'est pas prise en charge.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary>La prise en charge de la clause GROUP BY est inconnue.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary>Il n'y a aucune relation entre les colonnes dans la clause GROUP BY et les colonnes non regroupées en agrégats dans la liste SELECT. Vous pouvez grouper par n'importe quelle colonne.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary>Génère un schéma de colonne.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary>Obtient le schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns>Schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary>Spécifie comment les identificateurs sont traités par la source de données lors de la recherche du catalogue système.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary>La source de données ignore la casse de l'identificateur lors de la recherche du catalogue système. Les identificateurs "ab" et "AB" correspondront.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary>La source de données distingue la casse de l'identificateur lors de la recherche du catalogue système. Les identificateurs "ab" et "AB" ne correspondront pas.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary>La source de données a des règles ambiguës concernant la casse d'identificateur et ne peut pas identifier ces informations.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>Fournit des données pour l'événement <see langword="RowUpdated" /> d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Type de l'instruction SQL exécutée.</param>
      <param name="tableMapping">
        <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary>Copie les références vers les lignes modifiées dans le tableau fourni.</summary>
      <param name="array">Tableau de <see cref="T:System.Data.DataRow" /> où effectuer la copie.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copie les références vers les lignes modifiées dans le tableau fourni.</summary>
      <param name="array">Tableau de <see cref="T:System.Data.DataRow" /> où effectuer la copie.</param>
      <param name="arrayIndex">Index dans le tableau à partir duquel commencer à copier.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>Obtient le <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>Obtient les erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns>Le nombre de lignes modifiées, insérées ou supprimées ; 0 si aucune ligne n’a été affectée ou si l’instruction a échoué et -1 pour les instructions SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>Obtient le <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary>Obtient le nombre de lignes traitées dans un lot d'enregistrements mis à jour.</summary>
      <returns>
        <see langword="int" /> qui spécifie le nombre de lignes traitées.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>Obtient le type de l'instruction SQL exécutée.</summary>
      <returns>Type de l'instruction SQL exécutée.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>Obtient <see cref="T:System.Data.UpdateStatus" /> de la propriété <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.UpdateStatus" />. La valeur par défaut est <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>Obtient le <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>Fournit les données pour l’événement RowUpdating d’un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> faisant l'objet de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">
        <see cref="T:System.Data.IDbCommand" /> à exécuter lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Type de l'instruction SQL à exécuter.</param>
      <param name="tableMapping">
        <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.IDbCommand" /> d'une instance de cette classe.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>Obtient la <see cref="T:System.Data.IDbCommand" /> à exécuter pendant l'opération <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>Obtient les erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>Obtient <see cref="T:System.Data.DataRow" /> qui sera envoyé au serveur dans le cadre d'une opération d'insertion, de mise à jour ou de suppression.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>Obtient le type de l'instruction SQL à exécuter.</summary>
      <returns>Type de l'instruction SQL à exécuter.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>Obtient ou définit le <see cref="T:System.Data.UpdateStatus" /> de la propriété <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.UpdateStatus" />. La valeur par défaut est <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>Obtient le <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>
        <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary>Décrit les métadonnées de colonne du schéma pour une table de base de données.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary>Spécifie si la valeur <see langword="DBNull" /> est autorisée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary>Spécifie le nom de la colonne dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary>Spécifie le nom du schéma dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary>Spécifie le nom de la table dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary>Spécifie le nom de la colonne dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary>Spécifie l'ordinal de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary>Spécifie la taille de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary>Spécifie le type des données dans la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary>Spécifie si cette colonne possède un alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary>Spécifie si cette colonne est une expression.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary>Spécifie si cette colonne est une clé pour la table.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary>Spécifie si cette colonne contient des données volumineuses.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary>Spécifie si une contrainte unique s'applique à cette colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary>Spécifie le type des données sans version propres au fournisseur de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary>Spécifie la précision des données de colonne, si les données sont numériques.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary>Spécifie l'échelle des données de colonne, si les données sont numériques.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary>Spécifie le type de données propre au fournisseur de la colonne.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary>Décrit les métadonnées de colonne facultatives du schéma pour une table de base de données.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary>Spécifie la valeur à laquelle la série pour les nouvelles colonnes d'identité est assignée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary>Spécifie l'incrémentation entre des valeurs dans la colonne d'identité.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary>Nom du catalogue associé aux résultats de la requête la plus récente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary>Espace de noms de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary>Nom de serveur de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary>Espace de noms de la table qui contient la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary>Spécifie le mappage pour la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary>Valeur par défaut de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary>Expression utilisée pour calculer la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary>Spécifie si les valeurs de colonne dans la colonne sont incrémentées automatiquement.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary>Spécifie si cette colonne est masquée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary>Spécifie si cette colonne est en lecture seule.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary>Spécifie si cette colonne contient des informations de version de toutes les lignes.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary>Spécifie le type de données propre au fournisseur de la colonne.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary>Spécifie quels types d’instructions de jointure Transact-SQL sont pris en charge par la source de données.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary>La source de données prend en charge les jointures externes entières.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary>La source de données prend en charge les jointures internes.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary>La source de données prend en charge les jointures externes gauches.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary>La source de données ne prend pas en charge les requêtes de jointure.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary>La source de données prend en charge les jointures externes droites.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Spécifie comment les modifications en conflit avec la source de données seront détectées et résolues.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Les instructions de mise à jour et de suppression incluront dans la clause WHERE toutes les colonnes à inspecter dans la table. Cela équivaut à spécifier <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>Si des colonnes Timestamp existent dans la table, elles sont utilisées dans la clause WHERE pour toutes les instructions de mise à jour générées. Cela équivaut à spécifier <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>Toutes les instructions de mise à jour et de suppression incluent uniquement les colonnes <see cref="P:System.Data.DataTable.PrimaryKey" /> dans la clause WHERE. Si aucun <see cref="P:System.Data.DataTable.PrimaryKey" /> n'est défini, toutes les colonnes à inspecter sont incluses dans la clause WHERE. Cela équivaut à <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Décrit l'état actuel de la connexion à une source de données.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>La connexion à la source de données est interrompue. Cela ne peut se produire qu'après l'ouverture de la connexion. Une connexion dans cet état peut être fermée, puis rouverte. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>La connexion est fermée.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>L'objet connection se connecte à la source de données.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>L'objet connection exécute une commande. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>L'objet connection récupère des données. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>La connexion est ouverte.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Représente une contrainte qui peut être appliquée à un ou plusieurs objets <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Obtient le <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartient.</summary>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Définit le <see cref="T:System.Data.DataSet" /> de la contrainte.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartiendra.</param>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Obtient le <see cref="P:System.Data.Constraint.ConstraintName" /> éventuel sous la forme d'une chaîne.</summary>
      <returns>Valeur de chaîne de <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Obtient le <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartient.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> auquel appartient la contrainte.</returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>Nom d'une contrainte dans <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <exception cref="T:System.ArgumentException">Le nom <see cref="T:System.Data.Constraint" /> est une valeur null ou une chaîne vide.</exception>
      <exception cref="T:System.Data.DuplicateNameException">
        <see cref="T:System.Data.ConstraintCollection" /> contient déjà un <see cref="T:System.Data.Constraint" /> portant le même nom (la comparaison ne respecte pas la casse.).</exception>
      <returns>Nom de l'objet <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Obtient la collection de propriétés de contrainte définies par l'utilisateur.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> d'informations personnalisées.</returns>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> auquel la contrainte s'applique.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> auquel la contrainte s'applique.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Représente une collection de contraintes pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Se produit chaque fois que <see cref="T:System.Data.ConstraintCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Ajoute l'objet <see cref="T:System.Data.Constraint" /> spécifié à la collection.</summary>
      <param name="constraint">
        <see langword="Constraint" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">L’argument <paramref name="constraint" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">La contrainte appartient déjà à cette collection, ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une contrainte portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Construit un nouveau <see cref="T:System.Data.UniqueConstraint" /> portant le nom spécifié, <see cref="T:System.Data.DataColumn" />, ainsi qu'une valeur qui indique si la colonne est une clé primaire et l'ajoute à la collection.</summary>
      <param name="name">Nom de l'objet <see langword="UniqueConstraint" />.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> auquel la contrainte s'applique.</param>
      <param name="primaryKey">Spécifie si la colonne doit être la clé primaire. Si <see langword="true" />, la colonne sera une colonne de clé primaire.</param>
      <exception cref="T:System.ArgumentException">La contrainte appartient déjà à cette collection.  
  
 -Ou-  
  
 La contrainte appartient à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une contrainte portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <returns>Nouveau <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Construit un nouveau <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom, la colonne parente et la colonne enfant spécifiés, puis ajoute la contrainte à la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">Clé primaire (parente) <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn">Clé étrangère (enfant) <see cref="T:System.Data.DataColumn" />.</param>
      <returns>Nouveau <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Construit un nouveau <see cref="T:System.Data.UniqueConstraint" /> avec le nom, le tableau d'objets <see cref="T:System.Data.DataColumn" /> et la valeur spécifiés, qui indique s'il s'agit d'une colonne de clé primaire, et l'ajoute à la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> auxquels s'applique la contrainte.</param>
      <param name="primaryKey">Spécifie si la colonne doit être la clé primaire. Si <see langword="true" />, la colonne sera une colonne de clé primaire.</param>
      <exception cref="T:System.ArgumentException">La contrainte appartient déjà à cette collection.  
  
 -Ou-  
  
 La contrainte appartient à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une contrainte portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <returns>Nouveau <see langword="UniqueConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Construit un nouveau <see cref="T:System.Data.ForeignKeyConstraint" /> avec les tableaux de colonnes enfants et parentes spécifiés, puis ajoute la contrainte à la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes clés primaires ou parentes.</param>
      <param name="foreignKeyColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes clés étrangères ou enfants.</param>
      <returns>Nouveau <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.ConstraintCollection" /> spécifié à la fin de la collection.</summary>
      <param name="constraints">Tableau d'objets <see cref="T:System.Data.ConstraintCollection" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Indique si <see cref="T:System.Data.Constraint" /> peut être supprimé.</summary>
      <param name="constraint">
        <see cref="T:System.Data.Constraint" /> dont la suppression de la collection doit être testée.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.Constraint" /> peut être supprimé de la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Efface de la collection tout objet <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Indique si l'objet <see cref="T:System.Data.Constraint" /> spécifié par son nom existe dans la collection.</summary>
      <param name="name">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la contrainte.</param>
      <returns>
        <see langword="true" /> si la collection contient la contrainte spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Obtient l'index du <see cref="T:System.Data.Constraint" /> spécifié.</summary>
      <param name="constraint">
        <see cref="T:System.Data.Constraint" /> à rechercher.</param>
      <returns>Index de base zéro de <see cref="T:System.Data.Constraint" /> s'il existe dans la collection ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Obtient l'index du <see cref="T:System.Data.Constraint" /> spécifié par son nom.</summary>
      <param name="constraintName">Nom de l'objet <see cref="T:System.Data.Constraint" />.</param>
      <returns>Index de <see cref="T:System.Data.Constraint" /> s'il existe dans la collection ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Supprime l’objet <see cref="T:System.Data.Constraint" /> spécifié de la collection.</summary>
      <param name="constraint">
        <see cref="T:System.Data.Constraint" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">L'argument <paramref name="constraint" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La contrainte n'appartient pas à la collection.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.Constraint" /> spécifié par son nom.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Data.Constraint" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Supprime l’objet <see cref="T:System.Data.Constraint" /> de la collection, à l’index spécifié.</summary>
      <param name="index">Index du <see cref="T:System.Data.Constraint" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException">La collection ne possède pas de contrainte à cet index.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Obtient <see cref="T:System.Data.Constraint" /> à partir de la collection, à l'index spécifié.</summary>
      <param name="index">Index de la contrainte à retourner.</param>
      <exception cref="T:System.IndexOutOfRangeException">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
      <returns>
        <see cref="T:System.Data.Constraint" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Obtient de la collection le <see cref="T:System.Data.Constraint" /> portant le nom spécifié.</summary>
      <param name="name">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la contrainte à retourner.</param>
      <returns>
        <see cref="T:System.Data.Constraint" /> portant le nom spécifié ; sinon, une valeur null si <see cref="T:System.Data.Constraint" /> n'existe pas.</returns>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Représente l’exception qui est levée en tentant une action qui viole une contrainte.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" />. Il s’agit du constructeur sans paramètre.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> à l'aide de la sérialisation et du contexte d'accès en continu spécifiés.</summary>
      <param name="info">Données nécessaires à la sérialisation et à la désérialisation d'un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException">Obtient l'instance <see langword="Exception" /> qui a provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Représente le schéma d'une colonne dans un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataColumn" /> comme chaîne de type.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" />, comme chaîne de type, à l'aide du nom de colonne spécifié.</summary>
      <param name="columnName">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom de colonne et du type de données spécifiés.</summary>
      <param name="columnName">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <exception cref="T:System.ArgumentNullException">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom, du type de données et de l'expression spécifiés.</summary>
      <param name="columnName">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <param name="expr">Expression utilisée pour créer cette colonne. Pour plus d'informations, consultez la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom, du type de données et de l'expression spécifiés, ainsi que d'une valeur qui détermine si la colonne est un attribut.</summary>
      <param name="columnName">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <param name="expr">Expression utilisée pour créer cette colonne. Pour plus d'informations, consultez la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type">Une des valeurs de l'objet <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="pcevent">Référence de paramètre.</param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="name">Référence de paramètre.</param>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Remplace l'ordinal ou la position du <see cref="T:System.Data.DataColumn" /> par l'ordinal ou la position spécifié(e).</summary>
      <param name="ordinal">Ordinal spécifié.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Obtient le <see cref="P:System.Data.DataColumn.Expression" /> éventuel de la colonne.</summary>
      <returns>Valeur <see cref="P:System.Data.DataColumn.Expression" /> si la propriété est définie ; sinon, la propriété <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Obtient ou définit une valeur qui indique si les valeurs null sont autorisées dans cette colonne pour les lignes qui appartiennent à la table.</summary>
      <returns>
        <see langword="true" /> Si les valeurs NULL sont autorisées ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Obtient ou définit une valeur qui indique si la colonne incrémente automatiquement la valeur de la colonne pour les nouvelles lignes ajoutées à la table.</summary>
      <exception cref="T:System.ArgumentException">La colonne est une colonne calculée.</exception>
      <returns>
        <see langword="true" /> si la valeur de la colonne est automatiquement incrémentée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Obtient ou définit la valeur de départ d'une colonne ayant la valeur <see langword="true" /> affectée à sa propriété <see cref="P:System.Data.DataColumn.AutoIncrement" />. La valeur par défaut est 0.</summary>
      <returns>Valeur de départ de la fonctionnalité <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Obtient ou définit l'incrément utilisé par une colonne ayant la valeur <see langword="true" /> affectée à sa propriété <see cref="P:System.Data.DataColumn.AutoIncrement" />.</summary>
      <exception cref="T:System.ArgumentException">La valeur définie est zéro.</exception>
      <returns>Nombre duquel la valeur de la colonne est automatiquement incrémentée. La valeur par défaut est 1.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Obtient ou définit la légende de la colonne.</summary>
      <returns>Légende de la colonne. Si elle n'est pas définie, la valeur <see cref="P:System.Data.DataColumn.ColumnName" /> est retournée.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.MappingType" /> de la colonne.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <exception cref="T:System.ArgumentException">La valeur <see langword="null" /> ou une chaîne vide est affectée à la propriété et la colonne appartient à une collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Une colonne portant le même nom existe déjà dans la collection. La comparaison des noms ne respecte pas la casse.</exception>
      <returns>Nom de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Obtient ou définit le type des données stockées dans la colonne.</summary>
      <exception cref="T:System.ArgumentException">La colonne contient déjà des données stockées.</exception>
      <returns>Objet <see cref="T:System.Type" /> qui représente le type de données de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Obtient ou définit le <see langword="DateTimeMode" /> de la colonne.</summary>
      <returns>
        <see cref="T:System.Data.DataSetDateTime" /> de la colonne spécifiée.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de la colonne lorsque vous créez de nouvelles lignes.</summary>
      <exception cref="T:System.InvalidCastException">Lorsque vous ajoutez une ligne, la valeur par défaut n'est pas une instance du type de données de la colonne.</exception>
      <returns>Valeur appropriée pour le <see cref="P:System.Data.DataColumn.DataType" /> de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Obtient ou définit l'expression utilisée pour filtrer des lignes, calculer les valeurs d'une colonne ou créer une colonne agrégat.</summary>
      <exception cref="T:System.ArgumentException">La valeur <see langword="true" /> est affectée à la propriété <see cref="P:System.Data.DataColumn.AutoIncrement" /> ou <see cref="P:System.Data.DataColumn.Unique" />.</exception>
      <exception cref="T:System.FormatException">Si vous utilisez la fonction CONVERT, le résultat de l'évaluation de l'expression est une chaîne, mais la chaîne ne contient pas de représentation pouvant être convertie en paramètre de type.</exception>
      <exception cref="T:System.InvalidCastException">Lorsque vous utilisez la fonction CONVERT, le cast demandé est impossible. Consultez la fonction Conversion dans la section suivante pour obtenir des informations détaillées sur les casts possibles.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Lorsque vous utilisez la fonction SUBSTRING, l'argument de départ est hors limites.  
  
 -Ou-  
  
 Lorsque vous utilisez la fonction SUBSTRING, l'argument de longueur est hors limites.</exception>
      <exception cref="T:System.Exception">Lorsque vous utilisez la fonction LEN ou la fonction TRIM, le résultat de l'évaluation de l'expression n'est pas une chaîne. Cela comprend les expressions dont le résultat de l'évaluation est <see cref="T:System.Char" />.</exception>
      <returns>Expression permettant de calculer la valeur d'une colonne ou de créer une colonne agrégat. Le type de retour d'une expression est déterminé par le <see cref="P:System.Data.DataColumn.DataType" /> de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Obtient la collection d'informations utilisateur personnalisées associée à <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> d'informations personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Obtient ou définit la longueur maximale d'une colonne de texte.</summary>
      <returns>Longueur maximale de la colonne en caractères. Si la colonne n’a pas de longueur maximale, la valeur est-1 (valeur par défaut).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Obtient ou définit l'espace de noms de <see cref="T:System.Data.DataColumn" />.</summary>
      <exception cref="T:System.ArgumentException">L'espace de noms contient déjà des données.</exception>
      <returns>L’espace de noms du <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Obtient la position (de base zéro) de la colonne dans la collection <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Position de la colonne. Obtient -1 si la colonne n'est pas un membre d'une collection.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Obtient ou définit un préfixe XML qui associe un alias à l'espace de noms de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Préfixe XML de l'espace de noms de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Obtient ou définit une valeur qui indique si la colonne autorise les modifications dès qu'une ligne a été ajoutée à la table.</summary>
      <exception cref="T:System.ArgumentException">La valeur de la propriété est <see langword="false" /> sur une colonne calculée.</exception>
      <returns>
        <see langword="true" /> si la colonne est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> auquel la colonne appartient.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> auquel appartient <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Obtient ou définit une valeur qui indique si les valeurs de chaque ligne de la colonne doivent être uniques.</summary>
      <exception cref="T:System.ArgumentException">La colonne est une colonne calculée.</exception>
      <returns>
        <see langword="true" /> si la valeur doit être unique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> de la colonne contenant la valeur modifiée.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> contenant la valeur modifiée.</param>
      <param name="value">Nouvelle valeur.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Obtient le <see cref="T:System.Data.DataColumn" /> contenant une valeur modifiée.</summary>
      <returns>
        <see cref="T:System.Data.DataColumn" /> contenant une valeur modifiée.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Obtient ou définit la nouvelle valeur proposée pour la colonne.</summary>
      <returns>Valeur proposée, de type <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Obtient le <see cref="T:System.Data.DataRow" /> de la colonne contenant une valeur modifiée.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> de la colonne contenant une valeur modifiée.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Data.DataColumn" /> pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Se produit lorsque la collection columns est modifiée, suite à l'ajout ou à la suppression d'une colonne.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Crée et ajoute l'objet <see cref="T:System.Data.DataColumn" /> spécifié à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La colonne appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom spécifié à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <returns>Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom et le type spécifiés à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">
        <see cref="P:System.Data.DataColumn.ColumnName" /> à utiliser lors de la création de la colonne.</param>
      <param name="type">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nouvelle colonne.</param>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
      <returns>Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom, le type et l'expression spécifiés à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName">Nom à utiliser lors de la création de la colonne.</param>
      <param name="type">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nouvelle colonne.</param>
      <param name="expression">Expression à assigner à la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
      <returns>Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.DataColumn" /> spécifié à la fin de la collection.</summary>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Vérifie si une colonne spécifique peut être supprimée de la collection.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> de la collection.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="column" /> est null.</exception>
      <exception cref="T:System.ArgumentException">La colonne n'appartient pas à cette collection.
        
- ou -

La colonne fait partie d'une relation.

- ou -

Une expression d'une autre colonne dépend de cette colonne.</exception>
      <returns>
        <see langword="true" /> si la colonne peut être supprimée. <see langword="false" /> si, 
- Le paramètre <paramref name="column" /> est <see langword="null" />.  
  
- La colonne n’appartient pas à cette collection.  
  
- La colonne fait partie d’une relation.  
  
- Une expression d’une autre colonne dépend de cette colonne.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Efface toutes les colonnes de la collection.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Vérifie si la collection contient une colonne portant le nom spécifié.</summary>
      <param name="name">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la colonne à rechercher.</param>
      <returns>
        <see langword="true" /> si une colonne portant ce nom existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Copie l'intégralité de la collection dans un tableau existant, en commençant à un index spécifié dans le tableau.</summary>
      <param name="array">Tableau d'objets <see cref="T:System.Data.DataColumn" /> dans lequel copier la collection.</param>
      <param name="index">Index à partir duquel commencer.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Obtient l'index d'une colonne spécifiée par son nom.</summary>
      <param name="column">Nom de la colonne à retourner.</param>
      <returns>Index de la colonne spécifiée par <paramref name="column" /> (s'il existe) ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Obtient l'index de la colonne portant le nom spécifique (le nom ne respecte pas la casse).</summary>
      <param name="columnName">Le nom de la colonne à rechercher.</param>
      <returns>Index de base zéro de la colonne portant le nom spécifié, ou -1 si la colonne n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Supprime l'objet <see cref="T:System.Data.DataColumn" /> spécifié de la collection.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La colonne n'appartient pas à cette collection.  
  
 -Ou-  
  
 La colonne fait partie d'une relation.  
  
 -Ou-  
  
 Une expression d'une autre colonne dépend de cette colonne.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.DataColumn" /> portant le nom spécifié.</summary>
      <param name="name">Nom de la colonne à supprimer.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de colonne portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Supprime la colonne de la collection à l'index spécifié.</summary>
      <param name="index">Index de la colonne à supprimer.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de colonne à l'index spécifié.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Obtient <see cref="T:System.Data.DataColumn" /> à partir de la collection, à l'index spécifié.</summary>
      <param name="index">Index de base zéro de la colonne à retourner.</param>
      <exception cref="T:System.IndexOutOfRangeException">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
      <returns>
        <see cref="T:System.Data.DataColumn" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Obtient de la collection le <see cref="T:System.Data.DataColumn" /> portant le nom spécifié.</summary>
      <param name="name">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la colonne à retourner.</param>
      <returns>
        <see cref="T:System.Data.DataColumn" /> de la collection portant le <see cref="P:System.Data.DataColumn.ColumnName" /> spécifié ; sinon, une valeur null si <see cref="T:System.Data.DataColumn" /> n'existe pas.</returns>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Représente l'exception levée lorsque des erreurs sont générées à l'aide de composants ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" />. Il s’agit du constructeur sans paramètre.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec les informations de sérialisation et le contexte spécifiés.</summary>
      <param name="info">Données nécessaires à la sérialisation et à la désérialisation d'un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary>Fournit des méthodes d'extension pour <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lit un nombre spécifié d’octets à partir de la colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée de la mémoire tampon.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <param name="dataOffset">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length">Nombre maximal de caractères à lire.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Nombre réel d'octets lus.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous forme de caractère unique.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lit un nombre spécifié de caractères à partir d’une colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <param name="dataOffset">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length">Nombre maximal de caractères à lire.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Nombre réel de caractères lus.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary>Retourne un lecteur de données imbriqué pour la colonne demandée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Données du lecteur.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient le nom du type de données de la colonne spécifiée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir le nom du type de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Nom du type de données.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Decimal" />.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous forme de nombre à virgule flottante double précision.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient le type de données de la colonne spécifiée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir le type de champ.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Type de données de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <typeparam name="T">Type de la valeur à retourner.</typeparam>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  

- ou - 
Le lecteur de données a été fermé pendant la récupération des données.  
  
- ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).  

- ou -

Le lecteur a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone.</param>
      <typeparam name="T">Type de la valeur à retourner.</typeparam>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données a été fermé pendant la récupération des données.  

- ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

- ou -

Tentative de lecture d'une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s’applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
      <returns>Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous forme d’identificateur global unique (GUID).</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient le type spécifique au fournisseur de la colonne spécifiée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Type .NET spécifique au fournisseur.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous forme d’une instance d’un type spécifique au fournisseur.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient un flux pour récupérer les données de la colonne spécifiée.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée n’est pas un type binaire qui prend en charge la lecture avec un <see cref="T:System.IO.Stream" />.</exception>
      <returns>Un flux.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une instance de l'objet <see cref="T:System.String" />.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">Le cast spécifié n'est pas valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient un lecteur de texte pour récupérer les données de la colonne.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.  

- ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée n’est pas un type texte qui prend en charge la lecture avec un <see cref="T:System.IO.TextReader" />.</exception>
      <returns>Lecteur de texte.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary>Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary>Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="reader">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name">Nom de la colonne.</param>
      <param name="cancellationToken">Jeton facultatif pour annuler l’opération asynchrone.</param>
      <exception cref="T:System.InvalidOperationException">La connexion a été supprimée ou fermée pendant la récupération des données.  
  
- ou -

Le lecteur de données est fermé pendant la récupération des données.  

- ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).  

- ou -

Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.  

- ou - 
Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Représente une relation de parent/enfant entre deux objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom <see cref="T:System.Data.DataRelation" /> spécifié, ainsi que les objets <see cref="T:System.Data.DataColumn" /> parent et enfant.</summary>
      <param name="relationName">Nom de l'objet <see cref="T:System.Data.DataRelation" />. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> parent dans la relation.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> enfant dans la relation.</param>
      <exception cref="T:System.ArgumentNullException">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents. 
-Ou- 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les objets <see cref="T:System.Data.DataColumn" /> parent et enfant, ainsi qu'une valeur qui indique s'il convient de créer des contraintes.</summary>
      <param name="relationName">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> parent dans la relation.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> enfant dans la relation.</param>
      <param name="createConstraints">Valeur qui indique si des contraintes sont créées. <see langword="true" />, si des contraintes sont créées. Sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents. 
-Ou- 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom <see cref="T:System.Data.DataRelation" /> spécifié, ainsi que les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant correspondants.</summary>
      <param name="relationName">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants.</param>
      <exception cref="T:System.ArgumentNullException">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les objets <see cref="T:System.Data.DataColumn" /> possèdent des types de données différents. 
-Ou- 
Un des tableaux ou aucun des deux tableaux n'est composé de colonnes distinctes provenant de la même table.  
  
-Ou- 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant correspondants, ainsi qu'une valeur qui indique s'il convient de créer des contraintes.</summary>
      <param name="relationName">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants.</param>
      <param name="createConstraints">Valeur indiquant si des contraintes doivent être créées. <see langword="true" />, si des contraintes sont créées. Sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux ont la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents. 
-Ou- 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l'environnement Visual Studio.</summary>
      <param name="relationName">Nom de l'objet <see cref="T:System.Data.DataRelation" />. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">Nom du <see cref="T:System.Data.DataTable" /> qui est la table parente de la relation.</param>
      <param name="parentTableNamespace">Nom de l'espace de noms de la table parente.</param>
      <param name="childTableName">Nom du <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</param>
      <param name="childTableNamespace">Nom de l'espace de noms de la table enfant.</param>
      <param name="parentColumnNames">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> parent de la relation.</param>
      <param name="childColumnNames">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> enfant de la relation.</param>
      <param name="nested">Valeur qui indique si les relations sont imbriquées.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l'environnement Visual Studio.</summary>
      <param name="relationName">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName">Nom du <see cref="T:System.Data.DataTable" /> qui est la table parente de la relation.</param>
      <param name="childTableName">Nom du <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</param>
      <param name="parentColumnNames">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> parent de la relation.</param>
      <param name="childColumnNames">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> enfant de la relation.</param>
      <param name="nested">Valeur qui indique si les relations sont imbriquées.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <exception cref="T:System.Data.DataException">Les tables parente et enfant appartiennent à des objets <see cref="T:System.Data.DataSet" /> différents.  
  
-Ou- 
Une ou plusieurs paires d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant possèdent des types de données incompatibles.  
  
-Ou- 
Les objets <see cref="T:System.Data.DataColumn" /> parent et enfant sont identiques.</exception>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="pcevent">Référence de paramètre.</param>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="name">Référence de paramètre.</param>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Obtient le <see cref="P:System.Data.DataRelation.RelationName" /> éventuel.</summary>
      <returns>La valeur de la propriété <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Obtient les objets <see cref="T:System.Data.DataColumn" /> enfants de cette relation.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Obtient le <see cref="T:System.Data.ForeignKeyConstraint" /> de la relation.</summary>
      <returns>
        <see langword="ForeignKeyConstraint" />
      </returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Obtient la table enfant de cette relation.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Obtient le <see cref="T:System.Data.DataSet" /> auquel <see cref="T:System.Data.DataRelation" /> appartient.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> auquel <see cref="T:System.Data.DataRelation" /> appartient.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Obtient la collection qui stocke des propriétés personnalisées.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> qui contient les propriétés personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Obtient ou définit une valeur qui indique si les objets <see cref="T:System.Data.DataRelation" /> sont imbriqués.</summary>
      <returns>
        <see langword="true" /> si les objets <see cref="T:System.Data.DataRelation" /> sont imbriqués ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Obtient un tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de ce <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de ce <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Obtient le <see cref="T:System.Data.UniqueConstraint" /> qui garantit l'unicité des valeurs de la colonne parente d'un <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.UniqueConstraint" /> qui garantit l'unicité des valeurs d'une colonne parente.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> parent de ce <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui est la table parente de cette relation.</returns>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Obtient ou définit le nom utilisé pour récupérer un <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> ou une chaîne vide ("") a été passée dans un <see cref="T:System.Data.DataColumn" /> qui est <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException">
        <see cref="T:System.Data.DataRelation" /> appartient à une collection qui contient déjà un <see cref="T:System.Data.DataRelation" /> portant le même nom.</exception>
      <returns>Nom de <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Représente la collection d'objets <see cref="T:System.Data.DataRelation" /> de ce <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Se produit lorsque la collection a été modifiée.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec une colonne parent et enfant spécifiée, puis l'ajoute à la collection.</summary>
      <param name="parentColumn">Colonne parente de la relation.</param>
      <param name="childColumn">Colonne enfant de la relation.</param>
      <returns>Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec les colonnes parentes et enfants spécifiées, puis l'ajoute à la collection.</summary>
      <param name="parentColumns">Colonnes parentes de la relation.</param>
      <param name="childColumns">Colonnes enfants de la relation.</param>
      <exception cref="T:System.ArgumentNullException">L'argument <paramref name="relation" /> est une valeur null.</exception>
      <exception cref="T:System.ArgumentException">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relation est dans un état non valide depuis sa création.</exception>
      <returns>Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Ajoute un objet <see cref="T:System.Data.DataRelation" /> à <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">Objet <see langword="DataRelation" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="relation" /> est une valeur null.</exception>
      <exception cref="T:System.ArgumentException">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une relation portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relation est dans un état non valide depuis sa création.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié ainsi que les colonnes parentes et enfants, puis l'ajoute à la collection.</summary>
      <param name="name">Nom de la relation.</param>
      <param name="parentColumn">Colonne parente de la relation.</param>
      <param name="childColumn">Colonne enfant de la relation.</param>
      <returns>Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les colonnes parentes et enfants, avec des contraintes facultatives selon la valeur du paramètre <paramref name="createConstraints" />, puis l'ajoute à la collection.</summary>
      <param name="name">Nom de la relation.</param>
      <param name="parentColumn">Colonne parente de la relation.</param>
      <param name="childColumn">Colonne enfant de la relation.</param>
      <param name="createConstraints">
        <see langword="true" /> pour créer des contraintes ; sinon, <see langword="false" />. (La valeur par défaut est <see langword="true" />.)</param>
      <returns>Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, ainsi que les tableaux de colonnes parentes et enfants, puis l'ajoute à la collection.</summary>
      <param name="name">Nom du <see langword="DataRelation" /> à créer.</param>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns">Tableau d'objets <see langword="DataColumn" /> enfants.</param>
      <exception cref="T:System.ArgumentNullException">Le nom de la relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relation est dans un état non valide depuis sa création.</exception>
      <returns>Élément <see langword="DataRelation" /> créé.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les tableaux de colonnes parentes et enfants, ainsi qu'une valeur spécifiant si une contrainte doit être créée, puis l'ajoute à la collection.</summary>
      <param name="name">Nom du <see langword="DataRelation" /> à créer.</param>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns">Tableau d'objets <see langword="DataColumn" /> enfants.</param>
      <param name="createConstraints">
        <see langword="true" /> pour créer une contrainte ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">Le nom de la relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La relation est dans un état non valide depuis sa création.</exception>
      <returns>Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Effectue la vérification de la table.</summary>
      <param name="relation">Relation à vérifier.</param>
      <exception cref="T:System.ArgumentNullException">La relation est null.</exception>
      <exception cref="T:System.ArgumentException">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.DataRelation" /> spécifié à la fin de la collection.</summary>
      <param name="relations">Tableau d'objets <see cref="T:System.Data.DataRelation" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Vérifie si le <see cref="T:System.Data.DataRelation" /> spécifié peut être supprimé de la collection.</summary>
      <param name="relation">Relation par rapport à laquelle effectuer la vérification.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataRelation" /> peut être supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Efface toutes les relations de la collection.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Vérifie si un <see cref="T:System.Data.DataRelation" /> portant le nom spécifique (indépendamment de la casse) existe dans la collection.</summary>
      <param name="name">Nom de la relation à rechercher.</param>
      <returns>
        <see langword="true" /> si une relation portant le nom spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Copie la collection d'objets <see cref="T:System.Data.DataRelation" /> en commençant à l'index spécifié.</summary>
      <param name="array">Tableau d'objets <see cref="T:System.Data.DataRelation" /> dans lequel copier la collection.</param>
      <param name="index">Index à partir duquel commencer.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <returns>DataSet référencé.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Obtient l'index de l'objet <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation">Relation à rechercher.</param>
      <returns>Index de base 0 de la relation, ou -1 si la relation est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Obtient l'index du <see cref="T:System.Data.DataRelation" /> spécifié par son nom.</summary>
      <param name="relationName">Nom de la relation à rechercher.</param>
      <returns>Index de base zéro de la relation portant le nom spécifié, ou -1 si la relation n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Supprime de la collection la relation spécifiée.</summary>
      <param name="relation">Relation à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">La relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException">La relation n'appartient pas à la collection.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Supprime de la collection la relation portant le nom spécifié.</summary>
      <param name="name">Nom de la relation à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException">La collection ne possède pas de relation portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection la relation à l'index spécifié.</summary>
      <param name="index">Index de la relation à supprimer.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de relation à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Effectue une vérification sur l'objet <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation">Objet <see langword="DataRelation" /> à vérifier.</param>
      <exception cref="T:System.ArgumentNullException">La collection ne possède pas de relation à l'index spécifié.</exception>
      <exception cref="T:System.ArgumentException">La relation spécifiée n'appartient pas à cette collection ou appartient à une autre collection.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Obtient l’objet <see cref="T:System.Data.DataRelation" /> à l’index spécifié.</summary>
      <param name="index">Index de base zéro à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
      <returns>
        <see cref="T:System.Data.DataRelation" />, ou une valeur null si le <see cref="T:System.Data.DataRelation" /> spécifié n'existe pas.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.DataRelation" /> spécifié par son nom.</summary>
      <param name="name">Nom de la relation à rechercher.</param>
      <returns>
        <see cref="T:System.Data.DataRelation" /> nommé ou une valeur null si le <see cref="T:System.Data.DataRelation" /> spécifié n'existe pas.</returns>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Représente une ligne de données dans un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Initialise une nouvelle instance de DataRow. Construit une ligne à partir du générateur. Uniquement pour un usage interne.</summary>
      <param name="builder">générateur</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Valide toutes les modifications apportées à cette ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Commence une opération de modification d'un objet <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">La méthode a été appelée sur une ligne supprimée.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Annule la modification de la ligne en cours.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Efface les erreurs pour la ligne. Cela inclut <see cref="P:System.Data.DataRow.RowError" /> et les erreurs définies avec <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Supprime <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">
        <see cref="T:System.Data.DataRow" /> a déjà été supprimé.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Termine la modification de la ligne en cours.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException">La modification a interrompu une contrainte.</exception>
      <exception cref="T:System.Data.ReadOnlyException">La ligne appartient à la table et la modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">La modification a tenté d'insérer une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Obtient les lignes enfants de ce <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException">La relation est <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Obtient la description d'erreur du <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <returns>Texte de description de l'erreur.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Obtient la description d'erreur de la colonne spécifiée par l'index.</summary>
      <param name="columnIndex">Index de base zéro de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
      <returns>Texte de description de l'erreur.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Obtient la description d'erreur d'une colonne, spécifiée par son nom.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <returns>Texte de description de l'erreur.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Obtient un tableau de colonnes contenant des erreurs.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui contiennent des erreurs.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> n'appartient pas à <see cref="T:System.Data.DataTable" />.  
  
- ou -

La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Cette ligne n'appartient pas à la table enfant de l'objet <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à une table.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
      <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.  
  
- ou -

<paramref name="relation" /> n'appartient pas aux relations parentes de cette table.</exception>
      <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à une table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
      <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
      <exception cref="T:System.ArgumentNullException">La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Obtient une valeur qui indique si une version spécifiée existe.</summary>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne.</param>
      <returns>
        <see langword="true" /> si la version existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> spécifié contient une valeur null.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> et le <see cref="T:System.Data.DataRowVersion" /> spécifiés contiennent une valeur null.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne contient pas le <paramref name="version" /> demandé.</exception>
      <returns>
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Obtient une valeur qui indique si la colonne à l'index spécifié contient une valeur null.</summary>
      <param name="columnIndex">Index de base zéro de la colonne.</param>
      <exception cref="T:System.IndexOutOfRangeException">Aucune colonne ne correspond à l'index spécifié par <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>Obtient une valeur qui indique si la colonne nommée contient une valeur null.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
      <returns>
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>Refuse toutes les modifications apportées à la ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary>Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>Définit la description d'erreur d'une colonne, spécifiée en tant que <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> pour lequel définir la description d'erreur.</param>
      <param name="error">Description de l'erreur.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>Définit la description d'erreur d'une colonne spécifiée par l'index.</summary>
      <param name="columnIndex">Index de base zéro de la colonne.</param>
      <param name="error">Description de l'erreur.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>Définit la description d'erreur d'une colonne spécifiée par son nom.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <param name="error">Description de l'erreur.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary>Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>Affecte une valeur null au <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" />
      </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec le nouveau <see cref="T:System.Data.DataRow" /> parent spécifié.</summary>
      <param name="parentRow">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec les nouveaux <see cref="T:System.Data.DataRow" /> et <see cref="T:System.Data.DataRelation" /> parents spécifiés.</summary>
      <param name="parentRow">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
      <param name="relation">Relation <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.Data.RowNotInTableException">Une des lignes n'appartient pas à une table</exception>
      <exception cref="T:System.ArgumentNullException">Une des lignes est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La relation n'appartient pas au <see cref="T:System.Data.DataRelationCollection" /> de l'objet <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Le <see cref="T:System.Data.DataTable" /> enfant de la relation ne correspond pas à la table à laquelle appartient cette ligne.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Obtient une valeur qui indique s'il existe des erreurs dans une ligne.</summary>
      <returns>
        <see langword="true" /> si la ligne contient une erreur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>Obtient ou définit les données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> qui contient les données.</param>
      <exception cref="T:System.ArgumentException">La colonne n'appartient pas à cette table.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> a la valeur null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Obtient la version spécifiée des données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> qui contient des informations sur la colonne.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La colonne n'appartient pas à la table.</exception>
      <exception cref="T:System.ArgumentNullException">L'argument <paramref name="column" /> contient une valeur null.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>Obtient ou définit les données stockées dans la colonne spécifiée par l'index.</summary>
      <param name="columnIndex">Index de base zéro de la colonne.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Se produit lorsque vous définissez la valeur et que le <see cref="T:System.Type" /> de la nouvelle valeur ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>Obtient les données stockées dans la colonne, spécifiées par l'index et la version des données à récupérer.</summary>
      <param name="columnIndex">Index de base zéro de la colonne.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>Obtient ou définit les données stockées dans la colonne spécifiée par son nom.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException">Se produit lorsque vous définissez une valeur et que son <see cref="T:System.Type" /> ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Se produit lorsque vous tentez d'insérer une valeur NULL dans une colonne où <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur <see langword="false" />.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>Obtient la version spécifiée des données stockées dans la colonne nommée.</summary>
      <param name="columnName">Nom de la colonne.</param>
      <param name="version">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.InvalidCastException">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      <exception cref="T:System.Data.VersionNotFoundException">La ligne ne possède pas cette version des données.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">La ligne a été supprimée.</exception>
      <returns>Objet <see cref="T:System.Object" /> qui contient les données.</returns>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>Obtient ou définit toutes les valeurs de cette ligne à l'aide d'un tableau.</summary>
      <exception cref="T:System.ArgumentException">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException">Une valeur du tableau ne correspond pas à son <see cref="P:System.Data.DataColumn.DataType" /> dans son <see cref="T:System.Data.DataColumn" /> respectif.</exception>
      <exception cref="T:System.Data.ConstraintException">Une modification a interrompu une contrainte.</exception>
      <exception cref="T:System.Data.ReadOnlyException">Une modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Une modification a tenté d'insérer une valeur null dans une colonne où le <see cref="P:System.Data.DataColumn.AllowDBNull" /> de l'objet <see cref="T:System.Data.DataColumn" /> est <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">La ligne a été supprimée.</exception>
      <returns>Tableau de type <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>Obtient ou définit la description d'erreur personnalisée pour une ligne.</summary>
      <returns>Texte décrivant une erreur.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>Obtient l'état actuel de la ligne par rapport à sa relation avec <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> pour lequel cette ligne possède un schéma.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> auquel cette ligne appartient.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>Décrit une action exécutée sur <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>La ligne a été ajoutée à la table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>La ligne a été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary>Les versions d'origine et actuelles de la ligne ont été modifiées.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary>La version d'origine de la ligne a été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>Les modifications de la ligne ont été validées.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>La ligne a été supprimée de la table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>La ligne n'a pas été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>La dernière modification de la ligne a été annulée.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary>Le type <see langword="DataRowBuilder" /> prend en charge l’infrastructure .NET Framework et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>Fournit les données des événements <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> et <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> sur lequel une action se produit.</param>
      <param name="action">Une des valeurs de l'objet <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>Obtient l’action qui s’est produite sur un <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>Obtient la ligne sur laquelle une action s’est produite.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> sur lequel une action s'est produite.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>Représente la méthode qui gérera les événements <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> et <see cref="E:System.Data.DataTable.RowDeleted" /> d’un <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>Représente une collection de lignes pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>Ajoute le <see cref="T:System.Data.DataRow" /> spécifié à l'objet <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">La ligne a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">La ligne appartient à une autre table ou appartient déjà à cette table.</exception>
      <exception cref="T:System.Data.ConstraintException">L'ajout rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">L'ajout tente d'insérer une valeur null dans un <see cref="T:System.Data.DataColumn" /> dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>Crée une ligne à l'aide des valeurs spécifiées et l'ajoute à <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <exception cref="T:System.ArgumentException">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException">Une valeur ne correspond pas à son type de colonne respectif.</exception>
      <exception cref="T:System.Data.ConstraintException">L'ajout de la ligne rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Tentative d'insertion d'une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
      <returns>Aucun.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>Efface toutes les lignes de la collection.</summary>
      <exception cref="T:System.Data.InvalidConstraintException">
        <see cref="T:System.Data.ForeignKeyConstraint" /> est appliqué à <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>Obtient une valeur qui indique si la clé primaire d'une ligne quelconque de la collection contient la valeur spécifiée.</summary>
      <param name="key">Valeur de la clé primaire à tester.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La table ne possède pas de clé primaire.</exception>
      <returns>
        <see langword="true" /> si la collection contient <see cref="T:System.Data.DataRow" /> avec la valeur de clé primaire spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>Obtient une valeur qui indique si les colonnes clés primaires d'une ligne quelconque de la collection contiennent les valeurs spécifiées dans le tableau d'objets.</summary>
      <param name="keys">Tableau de valeurs de clés primaires à tester.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La table ne possède pas de clé primaire.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataRowCollection" /> contient <see cref="T:System.Data.DataRow" /> avec les valeurs de clés spécifiées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les objets <see cref="T:System.Data.DataRow" /> de la collection dans le tableau donné, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="ar">Le tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see langword="DataRowCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary>Copie tous les objets <see cref="T:System.Data.DataRow" /> de la collection dans le tableau donné, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array">Le tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see langword="DataRowCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>Obtient la ligne spécifiée par la valeur de clé primaire.</summary>
      <param name="key">Valeur de clé primaire du <see cref="T:System.Data.DataRow" /> à rechercher.</param>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La table ne possède pas de clé primaire.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> qui contient la valeur de clé primaire spécifiée, ou une valeur null si la valeur de clé primaire n'existe pas dans le <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>Obtient la ligne qui contient les valeurs de clés primaires spécifiées.</summary>
      <param name="keys">Tableau de valeurs de clés primaires à rechercher. Le tableau est de type <see langword="Object" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">Aucune ligne ne correspond à cette valeur d'index.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException">La table ne possède pas de clé primaire.</exception>
      <returns>Objet <see cref="T:System.Data.DataRow" /> qui contient les valeurs de clés primaires spécifiées ; sinon, la valeur null si la valeur de clé primaire n'existe pas dans <see cref="T:System.Data.DataRowCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary>Obtient un <see cref="T:System.Collections.IEnumerator" /> de cette collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour cette collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary>Obtient l'index de l'objet <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="row">
        <see langword="DataRow" /> à rechercher.</param>
      <returns>Index de base zéro de la ligne ou -1 si la ligne est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>Insère une nouvelle ligne dans la collection à l'emplacement spécifié.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> à ajouter.</param>
      <param name="pos">Emplacement (base zéro) dans la collection où vous souhaitez ajouter le <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="pos" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>Supprime l’objet <see cref="T:System.Data.DataRow" /> spécifié de la collection.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>Supprime la ligne de la collection à l'index spécifié.</summary>
      <param name="index">Index de la ligne à supprimer.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary>Obtient le nombre total d'objets <see cref="T:System.Data.DataRow" /> dans cette collection.</summary>
      <returns>Nombre total d'objets <see cref="T:System.Data.DataRow" /> dans cette collection.</returns>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>Obtient la ligne à l'index spécifié.</summary>
      <param name="index">Index de base zéro de la ligne à retourner.</param>
      <exception cref="T:System.IndexOutOfRangeException">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
      <returns>
        <see cref="T:System.Data.DataRow" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary>Retourne une instance singleton de la classe <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary>Obtient une instance singleton de <see cref="T:System.Data.DataRowComparer`1" />. Cette propriété est en lecture seule.</summary>
      <returns>Instance de <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary>Compare deux objets <see cref="T:System.Data.DataRow" /> pour vérifier leur équivalence à l'aide de la comparaison basée sur les valeurs.</summary>
      <typeparam name="TRow">Type des objets à comparer, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary>Compare deux objets <see cref="T:System.Data.DataRow" /> en utilisant une comparaison colonne par colonne, basée sur les valeurs.</summary>
      <param name="leftRow">Premier objet <see cref="T:System.Data.DataRow" /> à comparer.</param>
      <param name="rightRow">Deuxième <see cref="T:System.Data.DataRow" /> objet à comparer.</param>
      <exception cref="T:System.ArgumentNullException">L'un des objets <see cref="T:System.Data.DataRow" /> source ou les deux ont la valeur <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si les deux objets <see cref="T:System.Data.DataRow" /> ont des jeux ordonnés de valeurs de colonne qui sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary>Retourne un code de hachage pour l'objet <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> à partir duquel le code de hachage doit être calculé.</param>
      <exception cref="T:System.ArgumentException">Les objets <see cref="T:System.Data.DataRow" /> source n'appartiennent pas à un <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException">Les objets <see cref="T:System.Data.DataRow" /> source ont la valeur <see langword="null" />.</exception>
      <returns>Valeur <see cref="T:System.Int32" /> représentant le code de hachage de la ligne.</returns>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary>Obtient une instance singleton de <see cref="T:System.Data.DataRowComparer`1" />. Cette propriété est en lecture seule.</summary>
      <returns>Instance de <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary>Définit les méthodes d'extension à la classe <see cref="T:System.Data.DataRow" />. C'est une classe statique.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="column" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
      <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="column" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" /> et <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex">Index de la colonne.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnIndex" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex">Numéro de colonne de base zéro dont la valeur est à retourner.</param>
      <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="ordinal" /> et <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName">Nom de la colonne dont la valeur est à retourner.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="columnName" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur <see langword="null" /> a été assignée à un type non Nullable.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary>Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName">Nom de la colonne dont la valeur est à retourner.</param>
      <param name="version">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">La colonne spécifiée par <paramref name="columnName" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
      <returns>Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" /> et <paramref name="version" />.</returns>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column">La <see cref="T:System.Data.DataColumn" /> d'entrée spécifie quelle valeur de ligne récupérer.</param>
      <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="column" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> a la valeur null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" /> sur laquelle la méthode est appelée. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex">Numéro de colonne de base zéro dont la valeur est à définir.</param>
      <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.IndexOutOfRangeException">L'argument <paramref name="ordinal" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary>Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName">Nom de la colonne dont la valeur est à définir.</param>
      <param name="value">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.ArgumentException">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>Obtient l'état d'un objet <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>La ligne a été ajoutée à <see cref="T:System.Data.DataRowCollection" /> et <see cref="M:System.Data.DataRow.AcceptChanges" /> n'a pas été appelé.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>La ligne a été supprimée à l'aide de la méthode <see cref="M:System.Data.DataRow.Delete" /> de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>La ligne a été créée, mais n'appartient à aucun <see cref="T:System.Data.DataRowCollection" />. <see cref="T:System.Data.DataRow" /> est dans cet état immédiatement après sa création et avant son ajout à une collection, ou s'il a été supprimé d'une collection.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>La ligne a été modifiée et <see cref="M:System.Data.DataRow.AcceptChanges" /> n'a pas été appelé.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>La ligne n'a pas été modifiée depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>Décrit la version d’une <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>La ligne contient les valeurs actuelles.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>La version par défaut de <see cref="T:System.Data.DataRowState" />. Pour une valeur <see langword="DataRowState" /> de <see langword="Added" />, <see langword="Modified" /> ou <see langword="Deleted" />, la version par défaut est <see langword="Current" />. Pour une valeur <see cref="T:System.Data.DataRowState" /> de <see langword="Detached" />, la version est <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>La ligne contient ses valeurs d’origine.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>La ligne contient une valeur proposée.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>Représente une vue personnalisée d’un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary>Événement qui est déclenché lorsqu'une propriété <see cref="T:System.Data.DataRowView" /> est modifiée.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>Commence une procédure de modification.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>Annule une procédure de modification.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>Retourne <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec la <see cref="T:System.Data.DataRelation" /> enfant spécifiée.</summary>
      <param name="relation">Objet <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary>Retourne un <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le <see cref="T:System.Data.DataRelation" /> et le parent spécifiés.</summary>
      <param name="relation">Objet <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">Objet parent.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>Retourne <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le nom <see cref="T:System.Data.DataRelation" /> enfant spécifié.</summary>
      <param name="relationName">Chaîne contenant le nom <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary>Retourne une <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le nom <see cref="T:System.Data.DataRelation" /> et le parent spécifiés.</summary>
      <param name="relationName">Chaîne contenant le nom <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent">
        <see langword="true" /> pour maintenir la synchronisation de la vue enfant créée avec le parent ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>Supprime une ligne.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>Valide les modifications apportées à la <see cref="T:System.Data.DataRow" /> sous-jacente et met fin à la session d'édition qui a été démarrée avec <see cref="M:System.Data.DataRowView.BeginEdit" />.  Utilise <see cref="M:System.Data.DataRowView.CancelEdit" /> pour supprimer les modifications apportées à <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Data.DataRowView" /> actuel est identique à l'objet spécifié.</summary>
      <param name="other">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si <paramref name="object" /> est un <see cref="T:System.Data.DataRowView" /> et qu'il retourne la même ligne que le <see cref="T:System.Data.DataRowView" /> en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>Retourne le code de hachage de l'objet <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Code de hachage entier signé 32 bits 1, qui représente la valeur booléenne <see langword="true" /> si la valeur de cette instance est différente de zéro ; sinon, l'entier zéro, qui représente la valeur booléenne <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary>Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns>AttributeCollection contenant des attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary>Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns>Nom de la classe de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary>Retourne le nom de cette instance d’un composant.</summary>
      <returns>Nom de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary>Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns>Convertisseur de type de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary>Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns>Événement par défaut pour cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary>Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns>Propriété par défaut pour cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary>Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns>
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary>Retourne les événements pour cette instance d’un composant.</summary>
      <returns>Événements correspondant à cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary>Retourne les événements pour cette instance d'un composant avec des attributs spécifiés.</summary>
      <param name="attributes">Attributs.</param>
      <returns>Événements correspondant à cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary>Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns>Propriétés de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary>Retourne les propriétés pour cette instance d'un composant avec des attributs spécifiés.</summary>
      <param name="attributes">Attributs.</param>
      <returns>Propriétés de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>Obtient le <see cref="T:System.Data.DataView" /> auquel cette ligne appartient.</summary>
      <returns>
        <see langword="DataView" /> auquel cette ligne appartient.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>Indique si la ligne est en mode édition.</summary>
      <returns>
        <see langword="true" /> si la ligne est en mode édition ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>Indique si <see cref="T:System.Data.DataRowView" /> est nouveau.</summary>
      <returns>
        <see langword="true" /> si la ligne est nouvelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>Obtient ou définit une valeur dans une colonne spécifiée.</summary>
      <param name="ndx">Index de la colonne.</param>
      <exception cref="T:System.Data.DataException">
        <see cref="P:System.Data.DataRowView.DataView" /> n’autorise pas les modifications et <see cref="T:System.Data.DataRowView" /> n’est pas nouveau.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Aucune colonne ne correspond à cette valeur d’index.</exception>
      <returns>La valeur de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>Obtient ou définit une valeur dans une colonne spécifiée.</summary>
      <param name="property">Chaîne qui contient la colonne spécifiée.</param>
      <exception cref="T:System.ArgumentException">Une colonne avec le nom ou la relation spécifiés est introuvable.
        
- ou -

<see cref="P:System.Data.DataRowView.DataView" /> n’autorise pas les modifications et <see cref="T:System.Data.DataRowView" /> n’est pas nouveau.</exception>
      <exception cref="T:System.Data.DataException">
        <paramref name="property" /> sans correspondance pendant la définition d’une valeur.</exception>
      <returns>La valeur de la colonne.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>Obtient le <see cref="T:System.Data.DataRow" /> actuellement affiché.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> actuellement affiché par <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>Obtient la description de la version actuelle de <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />. Les valeurs possibles pour la propriété <see cref="P:System.Data.DataRowView.RowVersion" /> sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Obtient un message qui décrit les erreurs de validation pour l'objet.</summary>
      <returns>Erreur de validation de l'objet.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Obtient le message d'erreur pour la propriété portant le nom donné.</summary>
      <param name="colName">Nom de la propriété pour laquelle obtenir le message d'erreur.</param>
      <returns>Message d'erreur pour la propriété. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>Représente un cache en mémoire des données.</summary>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary>Se produit une fois que le <see cref="T:System.Data.DataSet" /> est initialisé.</summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>Se produit lorsque des <see cref="T:System.Data.DataRow" /> cible et source possèdent la même valeur de clé primaire et que <see cref="P:System.Data.DataSet.EnforceConstraints" /> a la valeur true.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataSet" /> qui contient les informations de sérialisation et le contexte donnés.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema">Valeur booléenne.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataSet" /> portant le nom donné.</summary>
      <param name="dataSetName">Nom de l'objet <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>Valide toutes les modifications apportées à ce <see cref="T:System.Data.DataSet" /> depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>Commence l'initialisation d'un <see cref="T:System.Data.DataSet" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>Efface toutes les données de <see cref="T:System.Data.DataSet" /> en supprimant toutes les lignes de l'ensemble des tables.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>Copie la structure de <see cref="T:System.Data.DataSet" />, y compris tous les schémas, relations et contraintes <see cref="T:System.Data.DataTable" />. Ne copie aucune donnée.</summary>
      <returns>Nouveau <see cref="T:System.Data.DataSet" /> avec le même schéma que le <see cref="T:System.Data.DataSet" /> en cours, mais aucune donnée.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>Copie à la fois la structure et les données de ce <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.DataSet" /> possédant la même structure (contraintes, relations et schémas de table) et les mêmes données que ce <see cref="T:System.Data.DataSet" />.  
  
 <block subset="none" type="note"><para>  
 Si ces classes ont été sous-classées, la copie appartient également aux mêmes sous-classes.</para></block></returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary>Retourne un <see cref="T:System.Data.DataTableReader" /> avec un jeu de résultats par <see cref="T:System.Data.DataTable" />, dans la même séquence que les tables dans la collection <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTableReader" /> contenant un ou plusieurs jeux de résultats, correspondant aux instances de <see cref="T:System.Data.DataTable" />, contenues dans le <see cref="T:System.Data.DataSet" /> source.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary>Retourne un <see cref="T:System.Data.DataTableReader" /> avec un jeu de résultats par <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables">Tableau de DataTables qui fournit l'ordre des jeux de résultats à retourner dans le <see cref="T:System.Data.DataTableReader" />.</param>
      <returns>
        <see cref="T:System.Data.DataTableReader" /> contenant un ou plusieurs jeux de résultats, correspondant aux instances de <see cref="T:System.Data.DataTable" />, contenues dans le <see cref="T:System.Data.DataSet" /> source. Les jeux de résultats retournés sont dans l'ordre spécifié par le paramètre <paramref name="dataTables" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Détermine le <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec lequel le <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> du constructeur protégé d’un <see langword="DataSet" /> est appelé durant la désérialisation, dans les scénarios de communication à distance.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> avec lequel le <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> du constructeur protégé d’un <see langword="DataSet" /> est appelé durant la désérialisation, dans les scénarios de communication à distance.</param>
      <returns>Énumération <see cref="T:System.Data.SchemaSerializationMode" /> qui indique si des informations de schéma ont été omises de la charge utile.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary>Détermine le <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">Instance de <see cref="T:System.Xml.XmlReader" /> qui est passée pendant la désérialisation du <see cref="T:System.Data.DataSet" />.</param>
      <returns>Énumération <see cref="T:System.Data.SchemaSerializationMode" /> qui indique si des informations de schéma ont été omises de la charge utile.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>Termine l'initialisation d'un <see cref="T:System.Data.DataSet" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>Obtient une copie du <see cref="T:System.Data.DataSet" /> qui contient l'ensemble des modifications qui lui ont été apportées depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
      <returns>Copie des modifications de ce <see cref="T:System.Data.DataSet" /> sur lequel des actions peuvent être exécutées, et ensuite refusionnées à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne modifiée n'est trouvée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>Obtient une copie du <see cref="T:System.Data.DataSet" /> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <see cref="M:System.Data.DataSet.AcceptChanges" />, filtrée par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Copie filtrée du <see cref="T:System.Data.DataSet" /> sur lequel des actions peuvent être exécutées, puis refusionnées à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne du <see cref="T:System.Data.DataRowState" /> souhaité n'est détectée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Obtient une copie de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> pour le DataSet.</summary>
      <param name="schemaSet">Jeu de schémas spécifié.</param>
      <returns>Copie de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à l'<see cref="T:System.Data.DataSet" />.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'<see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>Retourne une instance sérialisable de <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Instance <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Désérialise les données de table du flux binaire ou de données XML.</summary>
      <param name="info">Instance <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Contexte de diffusion en continu.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>Retourne la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Chaîne qui est une représentation des données stockées dans le <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>Retourne le schéma XML de la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Chaîne qui est le schéma XML de la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Data.DataSet" /> contient des modifications, notamment des lignes nouvelles, supprimées ou modifiées.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> contient des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Data.DataSet" /> contient des modifications, notamment des lignes nouvelles, supprimées ou modifiées, filtrées par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> contient des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>Applique le schéma XML à partir du <see cref="T:System.IO.Stream" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">
        <see langword="Stream" /> à partir duquel lire le schéma.</param>
      <param name="nsArray">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>Applique le schéma XML à partir du <see cref="T:System.IO.TextReader" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">
        <see langword="TextReader" /> à partir duquel lire le schéma.</param>
      <param name="nsArray">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>Applique le schéma XML à partir du fichier spécifié du <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) à partir duquel lire le schéma.</param>
      <param name="nsArray">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>Applique le schéma XML à partir du <see cref="T:System.Xml.XmlReader" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">
        <see langword="XMLReader" /> à partir duquel lire le schéma.</param>
      <param name="nsArray">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary>Désérialisez toutes les données de tables du DataSet du flux binaire ou de données XML.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inspecte le format de la représentation sérialisée de <see langword="DataSet" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié représente un <see langword="DataSet" /> sérialisé dans son format binaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary>Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau d'instances de <see cref="T:System.Data.DataTable" /> pour fournir les informations de schéma et d'espace de noms.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="tables">Tableau d'instances de <see cref="T:System.Data.DataTable" /> à partir desquelles la méthode <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> récupère les informations de nom et d'espace de noms. Chacune de ces tables doit être membre du <see cref="T:System.Data.DataTableCollection" /> contenu par ce <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary>Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau d'instances de <see cref="T:System.Data.DataTable" /> pour fournir les informations de schéma et d'espace de noms.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="errorHandler">Un délégué <see cref="T:System.Data.FillErrorEventHandler" /> à appeler lorsqu'une erreur se produit en chargeant des données.</param>
      <param name="tables">Tableau d'instances de <see cref="T:System.Data.DataTable" /> à partir desquelles la méthode <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> récupère les informations de nom et d'espace de noms.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary>Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau de chaînes pour fournir les noms des tables dans le <see langword="DataSet" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see langword="DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="tables">Tableau de chaînes à partir duquel la méthode <see langword="Load" /> récupère les informations de nom de table.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>Fusionne un tableau d'objets <see cref="T:System.Data.DataRow" /> dans le <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <param name="rows">Tableau d'objets <see langword="DataRow" /> à fusionner dans le <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Fusionne un tableau d'objets <see cref="T:System.Data.DataRow" /> dans le <see cref="T:System.Data.DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> et en traitant tout schéma incompatible conformément aux arguments donnés.</summary>
      <param name="rows">Tableau d'objets <see cref="T:System.Data.DataRow" /> à fusionner dans le <see langword="DataSet" />.</param>
      <param name="preserveChanges">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <exception cref="T:System.Data.ConstraintException">Une ou plusieurs contraintes ne peuvent pas être activées.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications effectuées dans ce <see langword="DataSet" /> conformément à l'argument donné.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> actuel ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma avec le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> en cours, et en traitant un schéma incompatible conformément aux arguments donnés.</summary>
      <param name="dataSet">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> actuel ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>Fusionne un <see cref="T:System.Data.DataTable" /> spécifié et son schéma dans le <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> dont les données et le schéma doivent être fusionnés.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Fusionne un <see cref="T:System.Data.DataTable" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> et en traitant un schéma incompatible conformément aux arguments donnés.</summary>
      <param name="table">
        <see langword="DataTable" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>Se produit lorsqu'un objet <see cref="T:System.Data.DataRelation" /> est supprimé de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation">
        <see cref="T:System.Data.DataRelation" /> en cours de suppression.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>Se produit lorsqu'un <see cref="T:System.Data.DataTable" /> est supprimé de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> en cours de suppression.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>Envoie une notification indiquant que la propriété <see cref="T:System.Data.DataSet" /> spécifiée est sur le point d'être modifiée.</summary>
      <param name="name">Nom de la propriété sur le point d'être modifiée.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Objet qui dérive de <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.Stream" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> dans lequel effectuer la lecture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader">
        <see langword="TextReader" /> à partir duquel lire le schéma et les données.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.TextReader" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" /> dans lequel effectuer la lecture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du fichier spécifié.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) à partir duquel effectuer la lecture.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du fichier et du <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) à partir duquel effectuer la lecture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.Xml.XmlReader" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns>
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>Lit le schéma XML à partir du <see cref="T:System.IO.Stream" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lit le schéma XML à partir du <see cref="T:System.IO.TextReader" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>Lit le schéma XML à partir du fichier spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) dans lequel effectuer la lecture.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lit le schéma XML à partir du <see cref="T:System.Xml.XmlReader" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Ignore les attributs et retourne un DataSet vide.</summary>
      <param name="reader">Lecteur XML spécifié.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>Restaure toutes les modifications apportées à <see cref="T:System.Data.DataSet" /> depuis sa création ou le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>Efface toutes les tables et supprime toutes les relations, contraintes étrangères et tables du <see cref="T:System.Data.DataSet" />. Les sous-classes doivent substituer <see cref="M:System.Data.DataSet.Reset" /> pour rétablir l'état d'origine de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>Obtient une valeur indiquant si la propriété <see cref="P:System.Data.DataSet.Relations" /> doit être rendue persistante.</summary>
      <returns>
        <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>Obtient une valeur indiquant si la propriété <see cref="P:System.Data.DataSet.Tables" /> doit être rendue persistante.</summary>
      <returns>
        <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>Écrit les données en cours de <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.Stream" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>Écrit les données en cours de <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">Objet<see cref="T:System.IO.TextWriter" /> avec lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer">Objet <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>Écrit les données en cours de <see cref="T:System.Data.DataSet" /> dans le fichier spécifié.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>Écrit les données en cours de <see cref="T:System.Data.DataSet" /> dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel effectuer l'écriture.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel effectuer l'écriture.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Objet <see cref="T:System.IO.Stream" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">Objet<see cref="T:System.IO.TextWriter" /> avec lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary>Écrit la structure de <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans le <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">Objet <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un fichier.</summary>
      <param name="fileName">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un fichier.</summary>
      <param name="fileName">Nom du fichier dans lequel écrire.</param>
      <param name="multipleTargetConverter">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un objet <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary>Écrit la structure de <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">Objet <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>Obtient ou définit une valeur indiquant si les comparaisons de chaînes au sein d'objets <see cref="T:System.Data.DataTable" /> respectent la casse.</summary>
      <returns>
        <see langword="true" /> Si les comparaisons de chaînes respectent la casse ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>Obtient ou définit le nom du <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <returns>Nom de l'objet <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>Obtient une vue personnalisée des données contenues dans le <see cref="T:System.Data.DataSet" />, permettant de filtrer, rechercher et naviguer à l'aide d'un <see cref="T:System.Data.DataViewManager" /> personnalisé.</summary>
      <returns>Objet <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>Obtient ou définit une valeur indiquant si les règles de contrainte doivent être respectées lorsque vous tentez une opération de mise à jour.</summary>
      <exception cref="T:System.Data.ConstraintException">Une ou plusieurs contraintes ne peuvent pas être appliquées.</exception>
      <returns>
        <see langword="true" /> Si les règles sont appliquées ; Sinon, <see langword="false" /> . La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>Obtient la collection d'informations utilisateur personnalisées associée au <see langword="DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> contenant toutes les informations utilisateur personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>Obtient une valeur indiquant s'il existe des erreurs dans les objets <see cref="T:System.Data.DataTable" /> de ce <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see langword="true" /> Si une table contient une erreur ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Data.DataSet" /> est initialisé.</summary>
      <returns>
        <see langword="true" /> pour indiquer que le composant a terminé l’initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>Obtient ou définit les paramètres régionaux utilisés pour comparer des chaînes dans la table.</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> qui contient les données relatives aux paramètres régionaux de l'ordinateur de l'utilisateur. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>Obtient ou définit l'espace de noms de <see cref="T:System.Data.DataSet" />.</summary>
      <exception cref="T:System.ArgumentException">L'espace de noms contient déjà des données.</exception>
      <returns>L’espace de noms du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>Obtient ou définit un préfixe XML qui associe un alias à l'espace de noms de <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Préfixe XML de l'espace de noms de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>Obtient la collection des relations qui relient les tables et permettent de naviguer des tables parentes aux tables enfants.</summary>
      <returns>
        <see cref="T:System.Data.DataRelationCollection" /> qui contient une collection d'objets <see cref="T:System.Data.DataRelation" />. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary>Obtient ou définit un <see cref="T:System.Data.SerializationFormat" /> pour le <see cref="T:System.Data.DataSet" /> utilisé pendant la communication à distance.</summary>
      <returns>Objet <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary>Obtient ou définit un <see cref="T:System.Data.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.SchemaSerializationMode" /> pour <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>Obtient ou définit un élément <see cref="T:System.ComponentModel.ISite" /> pour l'élément <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>Obtient la collection des tables contenues dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTableCollection" /> contenu dans ce <see cref="T:System.Data.DataSet" />. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataTable" /> n'existe.</returns>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary>Décrit le format de sérialisation pour les colonnes <see cref="T:System.DateTime" /> dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary>
        <see langword="DateTime" /> est toujours stocké dans Local. Si <see cref="F:System.Data.DataSetDateTime.Utc" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> est assigné à une colonne dans ce mode, il est converti au préalable dans Local. La sérialisation dans ce mode s'effectue toujours dans Local. Il y a un offset pendant la sérialisation.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary>
        <see langword="DateTime" /> est toujours stocké dans Unspecified. Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> est assigné à une colonne dans ce mode, il est converti au préalable dans <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La sérialisation dans ce mode ne provoque pas d'offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary>
        <see langword="DateTime" /> est stocké dans Unspecified. Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> est assigné à une colonne dans ce mode, il est converti au préalable dans <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La sérialisation dans ce mode provoque un offset. Ceci représente le comportement par défaut et il est à compatibilité descendante. Cette option doit être considérée comme Non spécifiée dans le stockage, mais comme appliquant un offset similaire à <see cref="F:System.Data.DataSetDateTime.Local" /> pendant la sérialisation.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary>
        <see langword="DateTime" /> est stocké comme temps universel UTC (Universal Coordinated Time). Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> est assigné à une colonne dans ce mode, il est converti au préalable au format <see langword="Utc" />. La sérialisation dans ce mode s'effectue toujours dans <see langword="Utc" />. Il n'y a pas d'offset pendant la sérialisation.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>Marque une propriété, un événement ou un extendeur avec une description. Les concepteurs visuels peuvent afficher cette description quand ils référencent le membre.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSysDescriptionAttribute" /> à l’aide de la chaîne de description spécifiée.</summary>
      <param name="description">Chaîne de description.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>Obtient le texte de la description.</summary>
      <returns>Chaîne de description.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>Représente une table de données en mémoire.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>Se produit après la modification d'une valeur du <see cref="T:System.Data.DataColumn" /> spécifié dans un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>Se produit lors de la modification d'une valeur du <see cref="T:System.Data.DataColumn" /> spécifié dans un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary>Se produit une fois que le <see cref="T:System.Data.DataTable" /> est initialisé.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>Se produit après la modification réussie de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>Se produit lorsque <see cref="T:System.Data.DataRow" /> est en cours de modification.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>Se produit lorsqu'une ligne de la table a été supprimée.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>Se produit avant qu'une ligne de la table soit sur le point d'être supprimée.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary>Se produit une fois <see cref="T:System.Data.DataTable" /> effacé.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary>Se produit lorsque <see cref="T:System.Data.DataTable" /> est effacé.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary>Se produit lorsqu'un nouveau <see cref="T:System.Data.DataRow" /> est inséré.</summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>Vérifie si l'initialisation est en cours. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> sans argument.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec le nom de table spécifié.</summary>
      <param name="tableName">Nom à attribuer à la table. Si <paramref name="tableName" /> est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de son ajout à <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec le nom de table et l'espace de noms spécifiés.</summary>
      <param name="tableName">Nom à attribuer à la table. Si <paramref name="tableName" /> est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de son ajout à <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace">Espace de noms de la représentation XML des données stockées dans le <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>Valide toutes les modifications apportées à cette table depuis le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>Commence l'initialisation d'un <see cref="T:System.Data.DataTable" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>Désactive les notifications, la gestion d'index et les contraintes lors du chargement de données.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>Efface toutes les données de <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>Clone la structure de <see cref="T:System.Data.DataTable" />, y compris tous les schémas et contraintes <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.DataTable" /> possédant le même schéma que le <see cref="T:System.Data.DataTable" /> en cours.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>Calcule l'expression donnée sur les lignes en cours qui passent les critères du filtre.</summary>
      <param name="expression">Expression à calculer.</param>
      <param name="filter">Filtre permettant de limiter le nombre de lignes dont le résultat de l'évaluation est contenu dans l'expression.</param>
      <returns>
        <see cref="T:System.Object" /> ayant pour valeur le résultat du calcul. Si l'expression prend la valeur Null, la valeur de retour est <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>Copie à la fois la structure et les données de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.DataTable" /> possédant la même structure (schémas et contraintes de table) et les mêmes données que ce <see cref="T:System.Data.DataTable" />.  
  
Si ces classes ont été dérivées, la copie appartient également aux mêmes classes dérivées.  
  
 <see cref="M:System.Data.DataTable.Copy" /> crée un nouveau <see cref="T:System.Data.DataTable" /> avec la même structure et les mêmes données que le <see cref="T:System.Data.DataTable" />d'origine. Pour copier la structure dans un nouveau <see cref="T:System.Data.DataTable" /> sans les données, utilisez <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary>Retourne un <see cref="T:System.Data.DataTableReader" /> correspondant aux données dans ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTableReader" /> contenant un jeu de résultats, correspondant à l'instance de <see cref="T:System.Data.DataTable" /> source.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary>Crée une instance de <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Nouvelle expression.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>Termine l'initialisation d'un <see cref="T:System.Data.DataTable" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>Active les notifications, la gestion d'index et les contraintes après le chargement de données.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>Obtient une copie du <see cref="T:System.Data.DataTable" /> qui contient l'ensemble des modifications qui lui ont été apportées depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Copie des modifications de ce <see cref="T:System.Data.DataTable" /> ou <see langword="null" /> si aucune modification n'est repérée.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>Obtient une copie du <see cref="T:System.Data.DataTable" /> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <see cref="M:System.Data.DataTable.AcceptChanges" />, filtrée par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates">Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</param>
      <returns>Copie filtrée du <see cref="T:System.Data.DataTable" /> sur lequel des actions peuvent être exécutées, et ensuite refusionnées dans <see cref="T:System.Data.DataTable" /> à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne du <see cref="T:System.Data.DataRowState" /> souhaité n'est détectée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Cette méthode retourne une instance de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant WSDL (Web Services Description Language), lequel décrit <see cref="T:System.Data.DataTable" /> pour les services Web.</summary>
      <param name="schemaSet">Instance de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Instance <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>Obtient un tableau d'objets <see cref="T:System.Data.DataRow" /> qui contiennent des erreurs.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> qui contiennent des erreurs.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à <see cref="T:System.Data.DataTable" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="info" /> est une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>Obtient le type de ligne.</summary>
      <returns>Type de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l'objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et consommé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>Copie <see cref="T:System.Data.DataRow" /> dans un <see cref="T:System.Data.DataTable" /> en préservant tous les paramètres de propriété, ainsi que les valeurs d'origine et actuelles.</summary>
      <param name="row">
        <see cref="T:System.Data.DataRow" /> à importer.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary>Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni. Si <see cref="T:System.Data.DataTable" /> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> qui fournit un jeu de résultats.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary>Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni. Si <see langword="DataTable" /> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes en fonction de la valeur du paramètre <paramref name="loadOption" />.</summary>
      <param name="reader">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans le <see cref="T:System.Data.DataTable" /> sont associées aux lignes entrantes qui partagent la même clé primaire.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni et d'un délégué de gestion d'erreur.</summary>
      <param name="reader">Un <see cref="T:System.Data.IDataReader" /> qui fournit un jeu de résultats.</param>
      <param name="loadOption">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans le <see cref="T:System.Data.DataTable" /> sont associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="errorHandler">Un délégué <see cref="T:System.Data.FillErrorEventHandler" /> à appeler lorsqu'une erreur se produit en chargeant des données.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>Recherche et met à jour une ligne spécifique. Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</summary>
      <param name="values">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <param name="fAcceptChanges">
        <see langword="true" /> pour accepter les modifications ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException">Une valeur ne correspond pas à son type de colonne respectif.</exception>
      <exception cref="T:System.Data.ConstraintException">L'ajout de la ligne rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException">Tentative d'insertion d'une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
      <returns>Nouvelle <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary>Recherche et met à jour une ligne spécifique. Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</summary>
      <param name="values">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <param name="loadOption">Utilisé pour déterminer comment les valeurs de tableau sont appliquées aux valeurs correspondantes dans une ligne existante.</param>
      <returns>Nouvelle <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary>Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see cref="T:System.Data.DataTable" /> actuel.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> à fusionner avec le <see cref="T:System.Data.DataTable" /> actuel.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary>Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see langword="DataTable" /> actuel, en indiquant s'il faut conserver les modifications dans le <see langword="DataTable" /> actuel.</summary>
      <param name="table">
        <see langword="DataTable" /> à fusionner avec le <see langword="DataTable" /> actuel.</param>
      <param name="preserveChanges">
        <see langword="true" /> pour préserver les modifications apportées au <see langword="DataTable" /> en cours ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see langword="DataTable" /> actuel, en indiquant s'il faut conserver les modifications et comment gérer le schéma manquant dans le <see langword="DataTable" /> actuel.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> à fusionner avec le <see cref="T:System.Data.DataTable" /> actuel.</param>
      <param name="preserveChanges">
        <see langword="true" /> pour préserver les modifications apportées au <see cref="T:System.Data.DataTable" /> en cours ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>Crée un nouveau <see cref="T:System.Data.DataRow" /> possédant le même schéma que la table.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> possédant le même schéma que <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary>Retourne un tableau de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size">Valeur <see cref="T:System.Int32" /> qui décrit la taille du tableau.</param>
      <returns>Nouveau tableau.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>Crée une nouvelle ligne à partir d'une ligne existante.</summary>
      <param name="builder">Objet <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns>Classe dérivée <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>Avertit <see cref="T:System.Data.DataTable" /> que <see cref="T:System.Data.DataColumn" /> est en cours de suppression.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> en cours de suppression.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Objet qui dérive de <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" /> qui sera utilisé pour lire les données.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à partir du fichier spécifié.</summary>
      <param name="fileName">Nom du fichier à partir duquel lire les données.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary>Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> qui sera utilisé pour lire les données.</param>
      <returns>
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary>Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du flux de données spécifié.</summary>
      <param name="stream">Flux de données utilisé pour lire le schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary>Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" /> utilisé pour lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary>Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à partir du fichier spécifié.</summary>
      <param name="fileName">Nom du fichier à partir duquel lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>Lectures d'un flux de données XML.</summary>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>Restaure toutes les modifications apportées à la table depuis son chargement ou le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>Rétablit l'état d'origine de <see cref="T:System.Data.DataTable" />. La réinitialisation supprime toutes les données, relations et colonnes de la table. Si un DataSet inclut un DataTable, la table fera partie du DataSet après sa réinitialisation.</summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" />.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent aux critères de filtre.</summary>
      <param name="filterExpression">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent aux critères de filtre, dans l'ordre de tri spécifié.</summary>
      <param name="filterExpression">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <param name="sort">Chaîne spécifiant la colonne et le sens du tri.</param>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" /> correspondant à l'expression de filtre.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent au filtre et à l'état spécifié, dans l'ordre de tri.</summary>
      <param name="filterExpression">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <param name="sort">Chaîne spécifiant la colonne et le sens du tri.</param>
      <param name="recordStates">Une des valeurs de l'objet <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns>Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> pouvant être lié à une source de données à partir de l'objet.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l'objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et consommé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">Un XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Un XmlWriter.</param>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>Obtient le <see cref="P:System.Data.DataTable.TableName" /> et le <see cref="P:System.Data.DataTable.DisplayExpression" /> éventuels sous la forme d'une chaîne concaténée.</summary>
      <returns>Chaîne constituée des valeurs <see cref="P:System.Data.DataTable.TableName" /> et <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">Flux de données dans lequel les données seront écrites.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.Stream" /> spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream">Flux de données dans lequel les données seront écrites.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="stream">Flux de données dans lequel les données seront écrites.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream">Flux de données dans lequel les données seront écrites.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> avec lequel écrire le contenu.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.TextWriter" /> spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> avec lequel écrire le contenu.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary>Écrit le contenu actuel du <see cref="T:System.Data.DataTable" /> au format XML à l'aide du fichier spécifié.</summary>
      <param name="fileName">Fichier dans lequel écrire les données XML.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary>Écrit le contenu actuel du <see cref="T:System.Data.DataTable" /> au format XML à l'aide du fichier spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName">Fichier dans lequel écrire les données XML.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide du fichier et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="fileName">Nom du fichier dans lequel les données seront écrites.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide du fichier et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName">Nom du fichier dans lequel les données seront écrites.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel écrire le contenu.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary>Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel écrire le contenu.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary>Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="mode">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le flux de données spécifié.</summary>
      <param name="stream">Flux de données dans lequel le schéma XML sera écrit.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le flux de données spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream">Flux de données dans lequel le schéma XML sera écrit.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> à l'aide duquel effectuer l'écriture.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> à l'aide duquel effectuer l'écriture.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le fichier spécifié.</summary>
      <param name="fileName">Nom du fichier à utiliser.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le fichier spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName">Nom du fichier à utiliser.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> à utiliser.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary>Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="writeHierarchy">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>Indique si les comparaisons de chaînes au sein de la table respectent la casse.</summary>
      <returns>
        <see langword="true" /> si la comparaison respecte la casse ; sinon, <see langword="false" />. La valeur par défaut est celle de la propriété <see cref="T:System.Data.DataSet" /> de l'objet <see cref="P:System.Data.DataSet.CaseSensitive" /> parent, ou <see langword="false" /> si <see cref="T:System.Data.DataTable" /> a été créé indépendamment de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>Obtient la collection des relations enfants de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see cref="T:System.Data.DataRelationCollection" /> qui contient les relations enfants pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>Obtient la collection des colonnes qui appartiennent à cette table.</summary>
      <returns>
        <see cref="T:System.Data.DataColumnCollection" /> qui contient la collection des objets <see cref="T:System.Data.DataColumn" /> pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataColumn" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>Obtient la collection de contraintes gérée par cette table.</summary>
      <returns>
        <see cref="T:System.Data.ConstraintCollection" /> qui contient la collection des objets <see cref="T:System.Data.Constraint" /> pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.Constraint" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>Obtient le <see cref="T:System.Data.DataSet" /> auquel cette table appartient.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> auquel cette table appartient.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>Obtient une vue personnalisée de la table qui peut comprendre une vue filtrée ou une position de curseur.</summary>
      <returns>Objet <see cref="T:System.Data.DataView" /> associé au <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>Obtient ou définit l'expression qui retourne une valeur utilisée pour représenter cette table dans l'interface utilisateur. La propriété <see langword="DisplayExpression" /> vous permet d'afficher le nom de cette table dans une interface utilisateur.</summary>
      <returns>Chaîne d'affichage.</returns>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>Obtient la collection d'informations utilisateur personnalisées.</summary>
      <returns>
        <see cref="T:System.Data.PropertyCollection" /> qui contient les informations utilisateur personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>Obtient une valeur indiquant s'il existe des erreurs dans une des lignes d'une table du <see cref="T:System.Data.DataSet" /> auquel appartient la table.</summary>
      <returns>
        <see langword="true" /> s'il existe des erreurs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Data.DataTable" /> est initialisé.</summary>
      <returns>
        <see langword="true" /> pour indiquer que le composant a terminé l'initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>Obtient ou définit les paramètres régionaux utilisés pour comparer des chaînes dans la table.</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> qui contient les données relatives aux paramètres régionaux de l'ordinateur de l'utilisateur. La valeur par défaut est le <see cref="T:System.Data.DataSet" /> de l'objet <see cref="T:System.Globalization.CultureInfo" /> (retourné par la propriété <see cref="P:System.Data.DataSet.Locale" />) auquel appartient <see cref="T:System.Data.DataTable" />. Si la table n'appartient pas à <see cref="T:System.Data.DataSet" />, la valeur par défaut est le <see cref="T:System.Globalization.CultureInfo" /> du système en cours.</returns>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>Obtient ou définit la taille de départ initiale pour cette table.</summary>
      <returns>Taille de départ initiale des lignes de cette table. La valeur par défaut est de 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <see cref="T:System.Data.DataTable" />.</summary>
      <returns>L’espace de noms du <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>Obtient la collection des relations parentes de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see cref="T:System.Data.DataRelationCollection" /> qui contient les relations parentes pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Préfixe de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>Obtient ou définit un tableau de colonnes qui fonctionnent comme des clés primaires pour la table de données.</summary>
      <exception cref="T:System.Data.DataException">Il s'agit d'une clé étrangère.</exception>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary>Obtient ou définit le format de sérialisation.</summary>
      <returns>Énumération <see cref="T:System.Data.SerializationFormat" /> spécifiant la sérialisation <see langword="Binary" /> ou <see langword="Xml" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>Obtient la collection des lignes qui appartiennent à cette table.</summary>
      <returns>
        <see cref="T:System.Data.DataRowCollection" /> qui contient des objets <see cref="T:System.Data.DataRow" />, ou une valeur null s'il n'existe aucun objet <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>Obtient ou définit un élément <see cref="T:System.ComponentModel.ISite" /> pour l'élément <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns>
        <see langword="true" /> si la collection est une collection d'objets <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Data.DataTable" />.</summary>
      <exception cref="T:System.ArgumentException">Une chaîne vide ("") ou <see langword="null" /> est passé et cette table appartient à une collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">La table appartient à une collection qui contient déjà une table portant le même nom. (La comparaison respecte la casse).</exception>
      <returns>Nom de l'objet <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary>Fournit des données pour la méthode <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> dont les lignes sont effacées.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary>Obtient la table dont les lignes sont effacées.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> dont les lignes sont effacées.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary>Obtient le nom de la table dont les lignes sont effacées.</summary>
      <returns>
        <see cref="T:System.String" /> indiquant le nom de la table.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary>Obtient l’espace de noms de la table dont les lignes sont effacées.</summary>
      <returns>
        <see cref="T:System.String" /> indiquant le nom de l'espace de noms.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary>Représente la méthode qui gère la méthode <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>Représente la collection de tables de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>Se produit une fois que <see cref="T:System.Data.DataTableCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>Se produit lorsque <see cref="T:System.Data.DataTableCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>Crée un nouvel objet <see cref="T:System.Data.DataTable" /> avec un nom par défaut et l'ajoute à la collection.</summary>
      <returns>Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>Ajoute l'objet <see langword="DataTable" /> spécifié à la collection.</summary>
      <param name="table">Objet <see langword="DataTable" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour la table est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La table appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException">Une table de la collection porte le même nom. La comparaison ne respecte pas la casse.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>Crée un objet <see cref="T:System.Data.DataTable" /> en utilisant le nom spécifié et l'ajoute à la collection.</summary>
      <param name="name">Nom à attribuer au <see cref="T:System.Data.DataTable" /> créé.</param>
      <exception cref="T:System.Data.DuplicateNameException">Une table de la collection porte le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <returns>Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Data.DataTable" /> en utilisant le nom spécifié et l'ajoute à la collection.</summary>
      <param name="name">Nom à attribuer au <see cref="T:System.Data.DataTable" /> créé.</param>
      <param name="tableNamespace">Espace de noms auquel attribuer le <see cref="T:System.Data.DataTable" /> créé.</param>
      <exception cref="T:System.Data.DuplicateNameException">Une table de la collection porte le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <returns>Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>Copie les éléments du tableau <see cref="T:System.Data.DataTable" /> spécifié à la fin de la collection.</summary>
      <param name="tables">Tableau d'objets <see cref="T:System.Data.DataTable" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>Vérifie si l'objet <see cref="T:System.Data.DataTable" /> spécifié peut être supprimé de la collection.</summary>
      <param name="table">
        <see langword="DataTable" /> de la collection par rapport auquel effectuer la vérification.</param>
      <returns>
        <see langword="true" /> si la table peut être supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>Efface tous les objets <see cref="T:System.Data.DataTable" /> de la collection.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>Obtient une valeur qui indique si un objet <see cref="T:System.Data.DataTable" /> portant le nom spécifié existe dans la collection.</summary>
      <param name="name">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si la table spécifiée existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary>Obtient une valeur qui indique si un objet <see cref="T:System.Data.DataTable" /> portant le nom et l'espace de noms spécifié existe dans la collection.</summary>
      <param name="name">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <param name="tableNamespace">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns>
        <see langword="true" /> si la table spécifiée existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary>Copie tous les éléments du <see cref="T:System.Data.DataTableCollection" /> en cours dans un <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel dans lequel copier les éléments de l'objet <see cref="T:System.Data.DataTableCollection" /> en cours.</param>
      <param name="index">Index <see cref="T:System.Array" /> de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table">
        <see langword="DataTable" /> à rechercher.</param>
      <returns>Index de base zéro de la table ou -1 si la table est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> portant le nom spécifié dans la collection.</summary>
      <param name="tableName">Nom de l'objet <see langword="DataTable" /> à rechercher.</param>
      <returns>Index de base zéro du <see langword="DataTable" /> portant le nom spécifié, ou -1 si la table n'existe pas dans la collection.  
  
 <block subset="none" type="note"><para>  
 Retourne -1 lorsque deux tables ou plus ont le même nom mais des espaces de noms différents. L'appel ne réussit pas en cas d'ambiguïté lors de la mise en correspondance d'un nom de table avec exactement une table.</para></block></returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary>Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> spécifié dans la collection.</summary>
      <param name="tableName">Nom de l'objet <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <param name="tableNamespace">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns>Index de base zéro du <see cref="T:System.Data.DataTable" /> portant le nom spécifié, ou -1 si la table n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>Supprime l'objet <see cref="T:System.Data.DataTable" /> spécifié de la collection.</summary>
      <param name="table">
        <see langword="DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour la table est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La table n'appartient pas à cette collection.  
  
 - ou -  
  
 La table fait partie d'une relation.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>Supprime de la collection l’objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié.</summary>
      <param name="name">Nom de l’objet <see cref="T:System.Data.DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de table portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary>Supprime de la collection l’objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié.</summary>
      <param name="name">Nom de l’objet <see cref="T:System.Data.DataTable" /> à supprimer.</param>
      <param name="tableNamespace">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de table portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>Supprime l’objet <see cref="T:System.Data.DataTable" /> de la collection, à l’index spécifié.</summary>
      <param name="index">Index du <see langword="DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentException">La collection ne possède pas de table à l'index spécifié.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>Obtient l’objet <see cref="T:System.Data.DataTable" /> à l’index spécifié.</summary>
      <param name="index">Index de base zéro du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" />Avec l’index spécifié ; sinon, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> n’existe pas.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié.</summary>
      <param name="name">Nom du <see langword="DataTable" /> à rechercher.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> portant le nom spécifié ; sinon, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> n'existe pas.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary>Obtient l'objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié dans l'espace de noms spécifié.</summary>
      <param name="name">Nom du <see langword="DataTable" /> à rechercher.</param>
      <param name="tableNamespace">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns>
        <see cref="T:System.Data.DataTable" /> portant le nom spécifié ; sinon, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> n'existe pas.</returns>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary>Définit les méthodes d'extension à la classe <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> est une classe statique.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary>Crée et retourne un objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> source à partir duquel l'objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ est créé.</param>
      <returns>Objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary>Crée et retourne un objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ qui représente la requête LINQ to DataSet.</summary>
      <param name="source">Requête LINQ to DataSet source à partir de laquelle l'objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ est créé.</param>
      <typeparam name="T">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>Objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary>Retourne un objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />. Cet objet peut être utilisé dans une expression LINQ ou une requête de méthode.</summary>
      <param name="source">
        <see cref="T:System.Data.DataTable" /> source à rendre énumérable.</param>
      <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Data.DataTable" /> source est <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui contient des copies des objets <see cref="T:System.Data.DataRow" />, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <typeparam name="T">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">La séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source est <see langword="null" /> et une nouvelle table ne peut pas être créée.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.  
  
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.  
  
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui contient la séquence d'entrée comme type d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary>Copie les objets <see cref="T:System.Data.DataRow" /> vers le <see cref="T:System.Data.DataTable" /> spécifié, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> de destination.</param>
      <param name="options">Énumération <see cref="T:System.Data.LoadOption" /> qui spécifie les options de chargement du <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Les objets <see cref="T:System.Data.DataRow" /> copiés ne correspondent pas au schéma du <see cref="T:System.Data.DataTable" /> de destination.</exception>
      <exception cref="T:System.ArgumentNullException">La séquence source <see cref="T:System.Collections.Generic.IEnumerable`1" /> est <see langword="null" /> ou le <see cref="T:System.Data.DataTable" /> de destination est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.  
  
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.  
  
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary>Copie les objets <see cref="T:System.Data.DataRow" /> vers le <see cref="T:System.Data.DataTable" /> spécifié, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> de destination.</param>
      <param name="options">Énumération <see cref="T:System.Data.LoadOption" /> qui spécifie les options de chargement du <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler">Délégué <see cref="T:System.Data.FillErrorEventHandler" /> qui représente la méthode qui gérera une erreur.</param>
      <typeparam name="T">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException">Les objets <see cref="T:System.Data.DataRow" /> copiés ne correspondent pas au schéma du <see cref="T:System.Data.DataTable" /> de destination.</exception>
      <exception cref="T:System.ArgumentNullException">La séquence source <see cref="T:System.Collections.Generic.IEnumerable`1" /> est <see langword="null" /> ou le <see cref="T:System.Data.DataTable" /> de destination est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.  
  
- ou - 
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.  
  
- ou - 
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary>Fournit des données pour la méthode <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow">
        <see cref="T:System.Data.DataRow" /> ajouté.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary>Obtient la ligne qui est ajoutée.</summary>
      <returns>
        <see cref="T:System.Data.DataRow" /> qui est ajoutée.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary>Représente la méthode qui gère la méthode <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary>L'objet <see cref="T:System.Data.DataTableReader" /> obtient le contenu d'un ou plusieurs objets <see cref="T:System.Data.DataTable" /> sous la forme d'un ou plusieurs jeux de résultats en lecture seule et en avant uniquement.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> en utilisant des données provenant du <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> à partir duquel le nouveau <see cref="T:System.Data.DataTableReader" /> obtient son jeu de résultats.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> avec le tableau d'objets <see cref="T:System.Data.DataTable" /> fourni.</summary>
      <param name="dataTables">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui fournit les résultats pour le nouvel objet <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary>Ferme le <see cref="T:System.Data.DataTableReader" /> en cours.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de <see langword="Boolean" />.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas d'octet.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lit un flux d'octets à partir de l'offset de colonne spécifié dans la mémoire tampon, sous la forme d'un tableau en commençant à l'offset de mémoire tampon spécifié.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <param name="dataIndex">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferIndex">Index de la mémoire tampon à partir duquel commencer à placer les données.</param>
      <param name="length">Longueur maximale à copier dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de tableau d'octets.</exception>
      <returns>Nombre réel d'octets lus.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un caractère.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">Le champ spécifié ne contient pas de caractère.</exception>
      <returns>La valeur de la colonne.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Retourne la valeur de la colonne spécifiée sous la forme d'un tableau de caractères.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <param name="dataIndex">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer">Mémoire tampon dans laquelle lire le flux de caractères.</param>
      <param name="bufferIndex">Index de la mémoire tampon à partir duquel commencer à placer les données.</param>
      <param name="length">Longueur maximale à copier dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de tableau de caractères.</exception>
      <returns>Nombre réel de caractères lus.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary>Obtient une chaîne qui représente le type de données de la colonne spécifiée.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>Chaîne représentant le type de données de la colonne.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de valeur DateTime.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de valeur <see langword="Decimal" />.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary>Obtient la valeur de la colonne sous la forme d'un nombre à virgule flottante double précision.</summary>
      <param name="ordinal">Numéro en base zéro de la colonne.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de nombre à virgule flottante double précision.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection d'éléments.</summary>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> représentant la collection d'éléments.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary>Obtient le <see cref="T:System.Type" /> qui correspond au type de données de l'objet.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <returns>Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de nombre à virgule flottante simple précision.</exception>
      <returns>La valeur de la colonne.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un identificateur global unique (GUID, Globally Unique IDentifier).</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de GUID.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas d'entier signé 16 bits.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de valeur entière signée 32 bits.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de valeur entière signée 64 bits.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.String" />.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>Nom de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary>Obtient le numéro de la colonne, en fonction du nom de la colonne.</summary>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.ArgumentException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <returns>Numéro de colonne de base zéro.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Obtient le type de la colonne spécifiée dans le format spécifique au fournisseur.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée dans le format spécifique au fournisseur.</summary>
      <param name="ordinal">Numéro de base zéro de la colonne dont la valeur est récupérée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé</exception>
      <returns>Valeur de la colonne spécifiée dans le format spécifique au fournisseur.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary>Remplit le tableau fourni avec les informations de type spécifiques au fournisseur pour toutes les colonnes du <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values">Tableau d'objets à remplir avec les informations de type des colonnes du <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>Nombre de valeurs de colonne copiées dans le tableau.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.DataTableReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.DataTableReader" /> est fermé.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une chaîne.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException">La colonne spécifiée ne contient pas de chaîne.</exception>
      <returns>Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée dans son format natif.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture de colonnes ou d’accès à des colonnes dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <returns>Valeur de la colonne spécifiée. Cette méthode retourne <see langword="DBNull" /> pour les colonnes ayant la valeur null.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary>Remplit un tableau d'objets avec les valeurs de colonne de la ligne en cours.</summary>
      <param name="values">Tableau de <see cref="T:System.Object" /> dans lequel copier les valeurs des colonnes à partir du <see cref="T:System.Data.DataTableReader" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <returns>Nombre de valeurs de colonne copiées dans le tableau.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary>Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal">Numéro de colonne de base zéro</param>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <returns>
        <see langword="true" /> si la valeur de colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary>Avance le <see cref="T:System.Data.DataTableReader" /> jusqu'au jeu de résultats suivant, s'il existe.</summary>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour naviguer dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>
        <see langword="true" /> s'il existe un autre jeu de résultats ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary>Fait passer le <see cref="T:System.Data.DataTableReader" /> à l’enregistrement suivant.</summary>
      <exception cref="T:System.InvalidOperationException">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <returns>
        <see langword="true" /> s'il y avait une autre ligne à lire; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary>Profondeur d'imbrication de la ligne en cours du <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns>Profondeur d'imbrication de la ligne en cours ; toujours zéro.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary>Retourne le nombre de colonnes figurant dans la ligne en cours.</summary>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour récupérer le nombre de champs dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>0 en l'absence de positionnement dans un jeu de résultats valide ; sinon, le nombre de colonnes figurant dans la ligne en cours.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes.</summary>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour récupérer des informations sur un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary>Obtient une valeur qui indique si le <see cref="T:System.Data.DataTableReader" /> est fermé.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Data.DataTableReader" /> est fermé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction du numéro de la colonne.</summary>
      <param name="ordinal">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <returns>Valeur de la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary>Obtient la valeur de la colonne spécifiée dans son format natif en fonction du nom de la colonne.</summary>
      <param name="name">Nom de la colonne.</param>
      <exception cref="T:System.ArgumentException">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <returns>Valeur de la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary>Obtient le nombre de lignes insérées, modifiées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns>Le <see cref="T:System.Data.DataTableReader" /> ne prend pas en charge cette propriété et retourne toujours 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary>Représente une vue personnalisée et pouvant être liée à des données de <see cref="T:System.Data.DataTable" />. Cette vue autorise le tri, le filtrage, la recherche, les modifications et la navigation. <see cref="T:System.Data.DataView" /> ne stocke pas de données. Au lieu de cela, il offre une vue connectée de son <see cref="T:System.Data.DataTable" /> correspondant. Les changements apportés aux données de <see cref="T:System.Data.DataView" /> affectent <see cref="T:System.Data.DataTable" />. Les changements apportés aux données de <see cref="T:System.Data.DataTable" /> affectent l’ensemble des <see cref="T:System.Data.DataView" /> associés.</summary>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary>Se produit lorsque l’initialisation du <see cref="T:System.Data.DataView" /> est terminée.</summary>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>Se produit quand la liste gérée par <see cref="T:System.Data.DataView" /> change.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" /> avec le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> à ajouter à <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" /> avec les <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> et <see cref="T:System.Data.DataViewRowState" /> spécifiés.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> à ajouter à <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">
        <see cref="P:System.Data.DataView.RowFilter" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">
        <see cref="P:System.Data.DataView.Sort" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">
        <see cref="T:System.Data.DataViewRowState" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>Ajoute une nouvelle ligne au <see cref="T:System.Data.DataView" />.</summary>
      <returns>Nouvel objet <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>Commence l’initialisation d’un <see cref="T:System.Data.DataView" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>Ferme le <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Se produit après la modification réussie de <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>Copie des éléments dans un tableau. Uniquement pour les interfaces Web Forms.</summary>
      <param name="array">Tableau dans lequel effectuer la copie.</param>
      <param name="index">Index auquel commencer.</param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>Supprime une ligne à l’index spécifié.</summary>
      <param name="index">Index de la ligne à supprimer.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>Libère les ressources (autres que la mémoire) utilisées par l’objet <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>Termine l'initialisation d'un <see cref="T:System.Data.DataView" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary>Détermine si les instances <see cref="T:System.Data.DataView" /> spécifiées sont considérées comme égales.</summary>
      <param name="view">
        <see cref="T:System.Data.DataView" /> à comparer.</param>
      <returns>
        <see langword="true" /> si les deux instances <see cref="T:System.Data.DataView" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>Recherche une ligne dans le <see cref="T:System.Data.DataView" /> en fonction de la valeur de clé de tri spécifiée.</summary>
      <param name="key">Objet à rechercher.</param>
      <returns>Index de la ligne dans la <see cref="T:System.Data.DataView" /> qui contient la valeur de clé de tri spécifiée ; sinon, -1 si la valeur de clé de tri n’existe pas.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>Recherche une ligne dans la <see cref="T:System.Data.DataView" /> en fonction des valeurs de clé de tri spécifiées.</summary>
      <param name="key">Tableau de valeurs, de type <see cref="T:System.Object" />.</param>
      <returns>Index de la position de la première ligne dans <see cref="T:System.Data.DataView" /> qui correspond aux valeurs de clé de tri spécifiées ; sinon -1 s’il n’y a aucune valeur de clé de tri correspondante.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>Retourne un tableau d’objets <see cref="T:System.Data.DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée.</summary>
      <param name="key">Valeur de colonne, typée comme <see cref="T:System.Object" />, à rechercher.</param>
      <returns>Un tableau d’objets <see langword="DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée ou, si aucune ligne ne contient les valeurs de clé de tri spécifiée, un tableau <see langword="DataRowView" /> vide.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>Retourne un tableau d’objets <see cref="T:System.Data.DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée.</summary>
      <param name="key">Un tableau de valeurs de colonne, typé comme <see cref="T:System.Object" />, à rechercher.</param>
      <returns>Un tableau d’objets <see langword="DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée ou, si aucune ligne ne contient les valeurs de clé de tri spécifiée, un tableau <see langword="DataRowView" /> vide.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>Obtient un énumérateur pour ce <see cref="T:System.Data.DataView" />.</summary>
      <returns>Un <see cref="T:System.Collections.IEnumerator" /> pour naviguer dans la liste.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>Se produit après la modification réussie de <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>Ouvre un <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>Réservé à un usage interne uniquement.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value">Valeur <see cref="T:System.Object" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value">Valeur <see cref="T:System.Object" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value">Valeur <see cref="T:System.Object" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">Valeur <see cref="T:System.Int32" />.</param>
      <param name="value">Valeur <see cref="T:System.Object" /> à insérer.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">Valeur <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">Valeur <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Élément ajouté à la liste.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction">Objet <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key">Valeur <see cref="T:System.Object" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts">Objet <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection. Il peut s’agir de <see langword="null" />.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary>Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary>Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="distinct">Si <see langword="true" />, le <see cref="T:System.Data.DataTable" /> retourné contient des lignes dont les valeurs sont distinctes pour toutes ses colonnes. La valeur par défaut est <see langword="false" />.</param>
      <param name="columnNames">Tableau de chaînes qui contient une liste de noms de colonne à inclure dans le <see cref="T:System.Data.DataTable" /> renvoyé. Le <see cref="T:System.Data.DataTable" /> contient les colonnes spécifiées, dans l’ordre de leur apparition dans le tableau.</param>
      <returns>Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary>Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="tableName">Nom du <see cref="T:System.Data.DataTable" /> retourné.</param>
      <returns>Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary>Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="tableName">Nom du <see cref="T:System.Data.DataTable" /> retourné.</param>
      <param name="distinct">Si <see langword="true" />, le <see cref="T:System.Data.DataTable" /> retourné contient des lignes dont les valeurs sont distinctes pour toutes ses colonnes. La valeur par défaut est <see langword="false" />.</param>
      <param name="columnNames">Tableau de chaînes qui contient une liste de noms de colonne à inclure dans le <see cref="T:System.Data.DataTable" /> renvoyé. Le <see langword="DataTable" /> contient les colonnes spécifiées, dans l’ordre de leur apparition dans le tableau.</param>
      <returns>Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>Réservé à un usage interne uniquement.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>Réservé à un usage interne uniquement.</summary>
      <param name="force">Réservé à un usage interne uniquement.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>Obtient ou définit une valeur qui indique si les suppressions sont autorisées.</summary>
      <returns>
        <see langword="true" /> si les suppressions sont autorisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>Obtient ou définit une valeur qui indique si les modifications sont autorisées.</summary>
      <returns>
        <see langword="true" />, si les modifications sont autorisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>Obtient ou définit une valeur qui indique si les nouvelles lignes peuvent être ajoutées à l’aide de la méthode <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns>
        <see langword="true" />, si les nouvelles lignes peuvent être ajoutées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>Obtient ou définit une valeur qui indique si le tri par défaut doit être utilisé. Le tri par défaut est un tri croissant de toutes les clés primaires, comme spécifié par <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns>
        <see langword="true" />, si le tri par défaut est utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>Obtient le nombre d’enregistrements dans <see cref="T:System.Data.DataView" /> après l’application de <see cref="P:System.Data.DataView.RowFilter" /> et de <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns>Nombre d’enregistrements dans <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>Obtient le <see cref="T:System.Data.DataViewManager" /> associé à cette vue.</summary>
      <returns>
        <see langword="DataViewManager" /> qui a créé cette vue. S’il s’agit du <see cref="T:System.Data.DataView" /> par défaut pour un <see cref="T:System.Data.DataTable" />, la propriété <see langword="DataViewManager" /> retourne le <see langword="DataViewManager" /> par défaut pour le <see langword="DataSet" />. Sinon, si le <see langword="DataView" /> a été créé sans un <see langword="DataViewManager" />, cette propriété est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary>Obtient une valeur qui indique si le composant a été initialisé.</summary>
      <returns>
        <see langword="true" /> pour indiquer que le composant a terminé l’initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>Obtient une valeur qui indique si la source de données est actuellement ouverte et si elle projette des vues de données sur le <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see langword="true" /> si la source est ouverte ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>Obtient une ligne de données à partir d’une table spécifiée.</summary>
      <param name="recordIndex">Index d’un enregistrement dans le <see cref="T:System.Data.DataTable" />.</param>
      <returns>
        <see cref="T:System.Data.DataRowView" /> de la ligne voulue.</returns>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>Obtient ou définit l’expression utilisée pour filtrer les lignes qui s’affichent dans <see cref="T:System.Data.DataView" />.</summary>
      <returns>Chaîne qui spécifie la manière dont les lignes sont filtrées.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>Obtient ou définit le filtre d’état de ligne utilisé dans <see cref="T:System.Data.DataView" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>Obtient ou définit la ou les colonnes de tri, ainsi que l’ordre de tri pour la <see cref="T:System.Data.DataView" />.</summary>
      <returns>Chaîne qui contient le nom de colonne suivi de « ASC » (ordre croissant) ou « DESC » (ordre décroissant). Les colonnes sont triées par ordre croissant par défaut. Les colonnes multiples peuvent être séparées par des virgules.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex">Valeur <see cref="T:System.Int32" />.</param>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>Obtient ou définit la source <see cref="T:System.Data.DataTable" />.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui fournit les données de cette vue.</returns>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>Contient un <see cref="T:System.Data.DataViewSettingCollection" /> par défaut pour chaque <see cref="T:System.Data.DataTable" /> dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>Se produit lorsqu'une ligne a été ajoutée ou supprimée de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataViewManager" /> pour le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet">Nom de l'élément <see cref="T:System.Data.DataSet" /> à utiliser.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>Crée un <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table">Nom du <see cref="T:System.Data.DataTable" /> à utiliser dans <see cref="T:System.Data.DataView" />.</param>
      <returns>Objet <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Déclenche un événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> lorsqu'un <see cref="T:System.Data.DataRelation" /> est ajouté ou supprimé de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un élément à <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à ajouter à <see cref="T:System.Collections.IList" />.</param>
      <returns>Position à laquelle le nouvel élément est inséré.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <returns>Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un élément dans <see cref="T:System.Collections.IList" /> à l’index spécifié.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value">Le <see cref="T:System.Object" /> à insérer dans le <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime la première occurrence d’un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à supprimer.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Ajoute <see cref="T:System.ComponentModel.PropertyDescriptor" /> aux index utilisés pour la recherche.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à ajouter aux index utilisés pour la recherche.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary>Trie la liste en fonction d'un <see cref="T:System.ComponentModel.PropertyDescriptor" /> et d'un <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> selon lequel le tri doit s'effectuer.</param>
      <param name="direction">Une des valeurs de l'objet <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Retourne l'index de la ligne possédant le <see cref="T:System.ComponentModel.PropertyDescriptor" /> donné.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> dans lequel effectuer la recherche.</param>
      <param name="key">Valeur du paramètre property à rechercher.</param>
      <returns>Index de la ligne possédant le <see cref="T:System.ComponentModel.PropertyDescriptor" /> donné.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary>Supprime <see cref="T:System.ComponentModel.PropertyDescriptor" /> des index utilisés pour la recherche.</summary>
      <param name="property">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à supprimer des index utilisés pour la recherche.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary>Supprime tout tri appliqué à l'aide de <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Retourne l’objet <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</summary>
      <param name="listAccessors">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection. Il peut s’agir de <see langword="null" />.</param>
      <returns>
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Retourne le nom de la liste.</summary>
      <param name="listAccessors">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour lequel le nom de la liste est retourné. Il peut s’agir de <see langword="null" />.</param>
      <returns>Nom de la liste.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Déclenche un événement <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> lorsqu'un <see cref="T:System.Data.DataTable" /> est ajouté ou supprimé de <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>Obtient ou définit le <see cref="T:System.Data.DataSet" /> à utiliser avec <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> à utiliser.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>Obtient ou définit la valeur utilisée pour la persistance du code.</summary>
      <returns>Valeur utilisée pour la persistance du code.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>Obtient le <see cref="T:System.Data.DataViewSettingCollection" /> de chaque <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
      <returns>
        <see cref="T:System.Data.DataViewSettingCollection" /> de chaque <see langword="DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns>Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>Décrit la version des données de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>Nouvelle ligne.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>Lignes en cours, y compris les lignes non modifiées, les nouvelles lignes et les lignes modifiées. Par défaut, <see cref="T:System.Data.DataViewRowState" /> a la valeur CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>Ligne supprimée.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>Version actuelle des données d'origine qui ont été modifiées (consultez <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>Version d'origine des données qui ont été modifiées. (Même si les données ont été modifiées, elles sont disponibles en tant que <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>Aucun.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>Lignes d'origine, y compris les lignes non modifiées et les lignes supprimées.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>Ligne non modifiée.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>Représente les paramètres par défaut pour <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> et <see cref="P:System.Data.DataView.Table" /> pour les DataViews créés à partir de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>Obtient ou définit une valeur indiquant si l'ordre de tri par défaut doit être utilisé.</summary>
      <returns>
        <see langword="true" /> si l'ordre de tri par défaut est utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>Obtient le <see cref="T:System.Data.DataViewManager" /> qui contient ce <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Objet <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>Obtient ou définit le filtre à appliquer dans <see cref="T:System.Data.DataView" />. Consultez <see cref="P:System.Data.DataView.RowFilter" /> pour obtenir un exemple de code qui utilise RowFilter.</summary>
      <returns>Chaîne qui contient le filtre à appliquer.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>Obtient ou définit une valeur indiquant s'il faut afficher les lignes Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged ou aucune ligne dans <see cref="T:System.Data.DataView" />.</summary>
      <returns>Valeur qui indique les lignes à afficher.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>Obtient ou définit une valeur indiquant l'ordre de tri à appliquer dans <see cref="T:System.Data.DataView" />.</summary>
      <returns>Ordre de tri à appliquer dans <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> auquel s'appliquent les propriétés <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns>Objet <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>Contient une collection en lecture seule d'objets <see cref="T:System.Data.DataViewSetting" /> pour chaque <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary>Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>Obtient un <see cref="T:System.Collections.IEnumerator" /> de la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>Obtient le nombre d'objets <see cref="T:System.Data.DataViewSetting" /> dans la <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Nombre d'objets <see cref="T:System.Data.DataViewSetting" /> dans la collection.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si l’objet <see cref="T:System.Data.DataViewSettingCollection" /> est en lecture seule.</summary>
      <returns>Retourne toujours <see langword="true" /> pour indiquer que la collection est en lecture seule.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l’accès à <see cref="T:System.Data.DataViewSettingCollection" /> est synchronisé (thread-safe).</summary>
      <returns>Cette propriété est toujours <see langword="false" />, à moins qu'elle soit substituée par une classe dérivée.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>Obtient les objets <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié à partir de la collection.</summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns>Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>Obtient les objets <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié par son index.</summary>
      <param name="index">Index de base zéro du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns>Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>Obtient le <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié par son nom.</summary>
      <param name="tableName">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns>Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>Exception levée par <see cref="T:System.Data.Common.DataAdapter" /> pendant une opération d'insertion, de mise à jour ou de suppression si le nombre de lignes affectées est égal à zéro.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Chaîne de texte décrivant les détails de l'exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Chaîne de texte décrivant les détails de l'exception.</param>
      <param name="inner">Référence à une exception interne.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message">Message d'erreur expliquant la raison de cette exception.</param>
      <param name="inner">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
      <param name="dataRows">Tableau contenant les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary>Copie les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception dans le tableau spécifié d'objets <see cref="T:System.Data.DataRow" />.</summary>
      <param name="array">Tableau unidimensionnel d'objets <see cref="T:System.Data.DataRow" /> dans lequel copier les objets <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary>Copie les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception dans le tableau spécifié d'objets <see cref="T:System.Data.DataRow" />, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array">Tableau unidimensionnel d'objets <see cref="T:System.Data.DataRow" /> dans lequel copier les objets <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex">Index de tableau de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit l’objet d’informations de sérialisation spécifié avec les données nécessaires pour sérialiser <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à l'<see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'<see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="info" /> est une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>Obtient ou définit la valeur de <see cref="T:System.Data.DataRow" /> qui a généré <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns>Valeur du <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary>Obtient le nombre de lignes dont la mise à jour a échoué, générant ainsi cette exception.</summary>
      <returns>Entier contenant un compte du nombre de lignes dont la mise à jour a échoué.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary>Spécifie le type de données d'un champ, d'une propriété ou d'un objet <see langword="Parameter" /> d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>Flux de caractères non-Unicode de longueur variable comptant entre 1 et 8 000 caractères.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>Flux de longueur fixe de caractères non-Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>Flux de données binaires de longueur variable comptant entre 1 et 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>Type simple représentant les valeurs booléennes de <see langword="true" /> ou <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>Entier non signé 8 bits dont la valeur est comprise entre 0 et 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>Valeur monétaire comprise entre -263 (ou -922 337 203 685 477,5808) et 263 -1 (ou +922 337 203 685 477,5807), avec une précision d’un dix millième d’unité monétaire.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>Type représentant une valeur de date.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>Type représentant une valeur de date et d'heure.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary>Données de date et d'heure. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary>Données de date et d'heure avec prise en compte du fuseau horaire. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. La plage des valeurs de fuseau horaire s'étend de -14:00 à +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>Type simple représentant des valeurs comprises entre 1,0 x 10-28 et environ 7,9 x 1028, avec 28 à 29 chiffres significatifs.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>Type en virgule flottante représentant des valeurs comprises entre 5,0 x 10-324 et 1,7 x 10308 environ, avec une précision de 15 à 16 chiffres.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>GUID (Identificateur global unique).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>Type intégral représentant des entiers 16 bits signés dont la valeur est comprise entre -32768 et 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>Type intégral représentant des entiers 32 bits signés dont la valeur est comprise entre -2147483648 et 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>Type intégral représentant des entiers 64 bits signés dont la valeur est comprise entre -9223372036854775808 et 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>Type général représentant un type référence ou valeur non explicitement représenté par une autre valeur <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>Type intégral représentant des entiers 8 bits signés dont la valeur est comprise entre -128 et 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>Type en virgule flottante représentant des valeurs comprises entre 1,5 x 10-45 et 3,4 x 1038 environ, avec une précision de 7 chiffres.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>Type représentant des chaînes de caractères Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>Chaîne de longueur fixe de caractères Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>Type représentant une valeur <see langword="DateTime" /> SQL Server. Si vous voulez utiliser une valeur <see langword="time" /> SQL Server, utilisez <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>Type intégral représentant des entiers 16 bits non signés dont la valeur est comprise entre 0 et 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>Type intégral représentant des entiers 32 bits non signés dont la valeur est comprise entre 0 et 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>Type intégral représentant des entiers 64 bits non signés dont la valeur est comprise entre 0 et 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>Valeur numérique de longueur variable.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary>Représentation analysée d'un document ou d'un fragment XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>Représente l'exception levée lorsqu'une action est tentée sur un <see cref="T:System.Data.DataRow" /> qui a été supprimé.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>Représente l'exception levée lorsqu'un nom d'objet de base de données dupliqué est détecté pendant une opération d'ajout dans un objet lié à <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec la chaîne et l'exception spécifiées.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary>Représente une collection d’objets <see cref="T:System.Data.DataRow" /> retournée par une requête LINQ to DataSet. Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur pour la collection d’objets <see cref="T:System.Data.DataRow" />. Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour parcourir la collection d’objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary>Représente une collection d’objets <see cref="T:System.Data.DataRow" /> retournée par une requête.</summary>
      <typeparam name="TRow">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary>Retourne un énumérateur pour la collection d’objets de ligne contenus.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> fortement typé qui peut être utilisé pour parcourir la collection d’objets <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur pour la collection d’objets <see cref="T:System.Data.DataRow" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour parcourir la collection d’objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary>Contient les méthodes d'extension pour les classes de collection de ligne de données.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary>Convertit les éléments d’un objet <see cref="T:System.Data.EnumerableRowCollection" /> vers le type spécifié.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments à convertir.</param>
      <typeparam name="TResult">Type vers lequel convertir les éléments de la source.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Impossible de caster un élément de la séquence en type <paramref name="TResult" />.</exception>
      <returns>Objet <see cref="T:System.Data.EnumerableRowCollection" /> qui contient chaque élément de la séquence source convertie vers le type spécifié.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Projette chaque élément d'un <see cref="T:System.Data.EnumerableRowCollection`1" /> dans un nouveau formulaire.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> sur lesquels appeler une fonction de transformation.</param>
      <param name="selector">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S">Type dans lequel <paramref name="TRow" /> sera traduit.</typeparam>
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection`1" /> dont les éléments résultent d'un appel de la fonction de transformation sur chaque élément de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary>Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary>Filtre une séquence de lignes en fonction du prédicat spécifié.</summary>
      <param name="source">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à filtrer.</param>
      <param name="predicate">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> qui contient les lignes de la séquence d'entrée qui satisfont la condition.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>Représente l'exception levée lorsque la propriété <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> ne peut pas être évaluée.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d'un flux sérialisé particulier.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Data.Common.DataAdapter.FillError" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable">
        <see cref="T:System.Data.DataTable" /> en cours de mise à jour.</param>
      <param name="values">Valeurs de la ligne en cours de mise à jour.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>Obtient ou définit une valeur indiquant s'il faut poursuivre l'opération de remplissage malgré l'erreur.</summary>
      <returns>
        <see langword="true" /> si l'opération de remplissage doit être poursuivie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>Obtient le <see cref="T:System.Data.DataTable" /> en cours de mise à jour au moment où l'erreur s'est produite.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> en cours de mise à jour.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>Obtient les erreurs gérées actuellement.</summary>
      <returns>Erreurs gérées actuellement.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>Obtient les valeurs de la ligne en cours de mise à jour au moment où l'erreur s'est produite.</summary>
      <returns>Valeurs de la ligne en cours de mise à jour.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.FillErrorEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>Représente une restriction d'action appliquée à un jeu de colonnes dans une relation de clé primaire/clé étrangère lorsqu'une valeur ou une ligne est supprimée ou mise à jour.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec les objets <see cref="T:System.Data.DataColumn" /> parent et enfant spécifiés.</summary>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> parent de la contrainte.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> enfant de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant spécifiés.</summary>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom spécifié ainsi que les objets <see cref="T:System.Data.DataColumn" /> parent et enfant déterminés.</summary>
      <param name="constraintName">Nom de la contrainte.</param>
      <param name="parentColumn">
        <see cref="T:System.Data.DataColumn" /> parent de la contrainte.</param>
      <param name="childColumn">
        <see cref="T:System.Data.DataColumn" /> enfant de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom spécifié ainsi que les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant déterminés.</summary>
      <param name="constraintName">Nom de l'objet <see cref="T:System.Data.ForeignKeyConstraint" />. Si sa valeur est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de l'ajout à la collection constraints.</param>
      <param name="parentColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l’environnement Visual Studio. Les objets <see cref="T:System.Data.ForeignKeyConstraint" /> créés à l'aide de ce constructeur doivent ensuite être ajoutés à la collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à la méthode, ou, si <see cref="M:System.Data.DataTable.BeginInit" /> est appelé avant ce constructeur, les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Nom de la contrainte.</param>
      <param name="parentTableName">Nom du <see cref="T:System.Data.DataTable" /> parent qui contient les objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="parentTableNamespace">Nom de l'objet <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumnNames">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <param name="acceptRejectRule">Une des valeurs de l'objet <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" /> et <see langword="Default" />.</param>
      <param name="deleteRule">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est supprimée. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <param name="updateRule">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est mise à jour. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l’environnement Visual Studio. Les objets <see cref="T:System.Data.ForeignKeyConstraint" /> créés à l'aide de ce constructeur doivent ensuite être ajoutés à la collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à la méthode, ou, si <see cref="M:System.Data.DataTable.BeginInit" /> est appelé avant ce constructeur, les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName">Nom de la contrainte.</param>
      <param name="parentTableName">Nom du <see cref="T:System.Data.DataTable" /> parent qui contient les objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="parentColumnNames">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumnNames">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <param name="acceptRejectRule">Une des valeurs de l'objet <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" /> et <see langword="Default" />.</param>
      <param name="deleteRule">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est supprimée. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <param name="updateRule">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est mise à jour. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException">Les colonnes possèdent des types de données différents.  
  
- Ou - 
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Data.ForeignKeyConstraint" /> actuel est identique à l'objet spécifié.</summary>
      <param name="key">Objet avec lequel ce <see cref="T:System.Data.ForeignKeyConstraint" /> est comparé. Deux <see cref="T:System.Data.ForeignKeyConstraint" /> sont égaux s'ils imposent une contrainte aux mêmes colonnes.</param>
      <returns>
        <see langword="true" /> si les objets sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>Obtient le code de hachage de cette instance de l'objet <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>Indique l'action qui doit être effectuée dans cette contrainte en cas d'appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" /> et <see langword="Cascade" />. La valeur par défaut est <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>Obtient les colonnes enfants de cette contrainte.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes enfants de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>Obtient ou définit l'action qui se produit dans cette contrainte lorsqu'une ligne est supprimée.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.Rule" />. La valeur par défaut est <see langword="Cascade" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>Colonnes parentes de cette contrainte.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>Obtient la table parente de cette contrainte.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> parente de cette contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>Obtient la table enfant de cette contrainte.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui est la table enfant de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>Obtient ou définit l'action qui se produit dans cette contrainte lorsqu'une ligne est mise à jour.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.Rule" />. La valeur par défaut est <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>Associe une colonne source de données à une colonne <see cref="T:System.Data.DataSet" /> et est implémenté par la classe <see cref="T:System.Data.Common.DataColumnMapping" />, qui est utilisée en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataSet" /> auquel effectuer le mappage.</summary>
      <returns>Nom de la colonne dans le <see cref="T:System.Data.DataSet" /> à mapper. Ce nom ne respecte pas la casse.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>Obtient ou définit le nom de la colonne dans la source de données à partir de laquelle effectuer le mappage. Le nom respecte la casse.</summary>
      <returns>Nom qui respecte la casse de la colonne de la source de données.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>Contient une collection d'objets DataColumnMapping et est implémenté par le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> qui est utilisé en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>Ajoute un objet ColumnMapping à la collection ColumnMapping à l'aide des noms de colonne source et de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName">Nom qui respecte la casse de la colonne source.</param>
      <param name="dataSetColumnName">Nom de la colonne <see cref="T:System.Data.DataSet" />.</param>
      <returns>Objet ColumnMapping qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>Obtient une valeur indiquant si <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumnName">Nom qui respecte la casse de la colonne source.</param>
      <returns>
        <see langword="true" /> s'il existe un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>Obtient l'objet ColumnMapping portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetColumnName">Nom de la colonne <see cref="T:System.Data.DataSet" /> au sein de la collection.</param>
      <returns>Objet ColumnMapping portant le nom de colonne <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié. Le nom respecte la casse.</summary>
      <param name="sourceColumnName">Nom qui respecte la casse de la colonne source.</param>
      <returns>Emplacement de base zéro de l'objet <see langword="DataColumnMapping" /> portant le nom de colonne source spécifié.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see cref="P:System.Data.IColumnMapping.SourceColumn" /> spécifié.</summary>
      <param name="sourceColumnName">Nom <see langword="SourceColumn" /> qui respecte la casse.</param>
      <exception cref="T:System.IndexOutOfRangeException">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</exception>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</summary>
      <param name="index">Nom <see langword="SourceColumn" /> de l'objet <see langword="IColumnMapping" /> à rechercher.</param>
      <returns>Objet <see langword="IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>Permet à un objet d'implémenter DataAdapter et représente un jeu de méthodes ainsi que de propriétés liées au mappage servant à remplir et à mettre à jour <see cref="T:System.Data.DataSet" /> ainsi qu'à mettre à jour une source de données.  
  
 Les instances <see cref="T:System.Data.IDbDataAdapter" /> sont destinées aux sources de données qui sont (ou ressemblent à) des bases de données relationnelles avec des commandes textuelles (comme Transact-SQL) alors que les instances <see cref="T:System.Data.IDataAdapter" /> peuvent utiliser n’importe quel type de source de données.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>Ajoute ou met à jour les lignes de <see cref="T:System.Data.DataSet" /> pour correspondre à celles de la source de données à l'aide du nom <see cref="T:System.Data.DataSet" /> et crée un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns>Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>Ajoute un <see cref="T:System.Data.DataTable" /> nommé « Table » au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu’il corresponde à celui de la source de données en fonction du <see cref="T:System.Data.SchemaType" /> spécifié.</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <returns>Tableau d'objets <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>Appelle les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié à partir d'un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <exception cref="T:System.Data.DBConcurrencyException">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
      <returns>Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>Indique ou spécifie si les tables ou colonnes source non mappées sont passées avec leurs noms source afin d'être filtrées ou de déclencher une erreur.</summary>
      <exception cref="T:System.ArgumentException">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingMappingAction" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />. La valeur par défaut est <see langword="Passthrough" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>Indique ou spécifie si les tables et les colonnes source absentes, ainsi que leurs relations, sont ajoutées au schéma du groupe de données, sont ignorées ou déclenchent une erreur.</summary>
      <exception cref="T:System.ArgumentException">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingSchemaAction" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />. La valeur par défaut est <see langword="Add" />.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>Indique la manière dont une table source est mappée à une table du groupe de données.</summary>
      <returns>Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>Représente un paramètre associé à un objet de commande et éventuellement son mappage sur des colonnes <see cref="T:System.Data.DataSet" /> et qui est implémenté par les fournisseurs de données .NET Framework qui accèdent aux sources de données.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>Obtient ou définit le <see cref="T:System.Data.DbType" /> du paramètre.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La propriété n’a pas été définie sur un <see cref="T:System.Data.DbType" /> valide.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DbType" />. La valeur par défaut est <see cref="F:System.Data.DbType.String" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>Obtient ou définit une valeur qui indique si le paramètre est un paramètre d'entrée uniquement, de sortie uniquement, bidirectionnel ou une valeur de retour d'une procédure stockée.</summary>
      <exception cref="T:System.ArgumentException">La valeur de la propriété n'est pas une des valeurs <see cref="T:System.Data.ParameterDirection" /> valides.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.ParameterDirection" />. La valeur par défaut est <see langword="Input" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>Obtient une valeur qui indique si le paramètre accepte les valeurs Null.</summary>
      <returns>
        <see langword="true" /> si les valeurs Null sont acceptées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Data.IDataParameter" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>Obtient ou définit le nom de la colonne source mappée sur <see cref="T:System.Data.DataSet" /> et utilisée pour charger et retourner <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns>Nom de la colonne source mappée sur <see cref="T:System.Data.DataSet" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>Récupère ou définit le <see cref="T:System.Data.DataRowVersion" /> à utiliser au chargement de <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <exception cref="T:System.ArgumentException">La propriété n’a pas été définie sur l’une des valeurs <see cref="T:System.Data.DataRowVersion" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />. La valeur par défaut est <see langword="Current" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>Obtient ou définit la valeur du paramètre.</summary>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur du paramètre. La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>Recueille tous les paramètres relatifs à un objet de commande et leurs mappages sur <see cref="T:System.Data.DataSet" /> colonnes et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux sources de données.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>Récupère une valeur indiquant si un des paramètres de la collection porte le nom spécifié.</summary>
      <param name="parameterName">Nom du paramètre.</param>
      <returns>
        <see langword="true" /> si la collection contient le paramètre ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>Obtient l’emplacement de l’objet <see cref="T:System.Data.IDataParameter" /> dans la collection.</summary>
      <param name="parameterName">Nom du paramètre.</param>
      <returns>Emplacement de base zéro de l’objet <see cref="T:System.Data.IDataParameter" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>Supprime le <see cref="T:System.Data.IDataParameter" /> de la collection.</summary>
      <param name="parameterName">Nom du paramètre.</param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>Récupère ou définit le paramètre au niveau de l’index spécifié.</summary>
      <param name="parameterName">Nom du paramètre à récupérer.</param>
      <returns>
        <see cref="T:System.Object" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>Fournit un moyen de lire un ou plusieurs flux avant uniquement de jeux de résultats obtenus par l’exécution d’une commande sur une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>Ferme l'objet <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.IDataReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Data.IDataReader" /> est fermé.</exception>
      <returns>
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>Avance le lecteur de données jusqu’au résultat suivant lors de la lecture des résultats d’instructions SQL par lots.</summary>
      <returns>
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>Fait passer le <see cref="T:System.Data.IDataReader" /> à l’enregistrement suivant.</summary>
      <returns>
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>Obtient une valeur indiquant la profondeur d'imbrication de la ligne actuelle.</summary>
      <returns>Niveau d’imbrication.</returns>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>Obtient une valeur indiquant si le lecteur de données est fermé.</summary>
      <returns>
        <see langword="true" /> si le lecteur de données est fermé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns>Le nombre de lignes modifiées, insérées ou supprimées ; 0 si aucune ligne n’a été affectée ou si l’instruction a échoué et -1 pour les instructions SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>Fournit l’accès aux valeurs de colonnes dans chaque ligne pour <see langword="DataReader" />, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur de la colonne.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>Récupère la valeur de l’entier signé 8 bits de la colonne spécifiée.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur de l’entier signé 8 bits de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Lit un flux d’octets à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon donné.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <param name="fieldOffset">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferoffset">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length">Nombre d'octets à lire.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Nombre réel d'octets lus.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>Obtient la valeur de caractère de la colonne spécifiée.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valeur de caractère de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Lit un flux de caractères à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon donné.</summary>
      <param name="i">Numéro de colonne de base zéro.</param>
      <param name="fieldoffset">Index figurant dans la ligne à partir de laquelle lancer l'opération de lecture.</param>
      <param name="buffer">La mémoire tampon dans laquelle lire le flux d’octets.</param>
      <param name="bufferoffset">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length">Nombre d'octets à lire.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Nombre réel de caractères lus.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>Retourne un <see cref="T:System.Data.IDataReader" /> pour le numéro de colonne spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Le <see cref="T:System.Data.IDataReader" /> du numéro de colonne spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>Obtient les informations sur le type de données pour le champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Informations sur le type de données pour le champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>Obtient la valeur des données de date et d’heure du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur des données de date et d’heure du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>Obtient la valeur numérique à position fixe du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur numérique à position fixe du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>Obtient le nombre à virgule flottante double précision du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Le nombre à virgule flottante double précision du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>Obtient les informations <see cref="T:System.Type" /> correspondant au type de <see cref="T:System.Object" /> qui doit être retourné à partir de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Informations <see cref="T:System.Type" /> correspondant au type de <see cref="T:System.Object" /> qui doit être retourné à partir de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>Obtient le nombre à virgule flottante simple précision du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Le nombre à virgule flottante simple précision du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>Retourne la valeur GUID du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur GUID du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>Obtient la valeur de l’entier signé 16 bits du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Valeur de l’entier signé 16 bits du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>Obtient la valeur de l’entier signé 32 bits du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur de l’entier signé 32 bits du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>Récupère la valeur de l’entier signé 64 bits du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur de l’entier signé 64 bits du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>Obtient le nom du champs à rechercher.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>Nom du champ ou chaîne vide (“”), s’il n’y a aucune valeur à retourner.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>Retourne l’index du champ nommé.</summary>
      <param name="name">Le nom du champ à trouver.</param>
      <returns>L’index du champ nommé.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>Obtient la valeur de chaîne du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La valeur de chaîne du champ spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>Retourne la valeur du champ spécifié.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see cref="T:System.Object" /> contenant la valeur du champ au retour.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>Remplit un tableau d’objets avec les valeurs de colonne de l’enregistrement actif.</summary>
      <param name="values">Un tableau de <see cref="T:System.Object" /> dans lequel pour copier les champs d’attribut.</param>
      <returns>Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>Retourne une valeur indiquant si le champ spécifié a la valeur null.</summary>
      <param name="i">Index du champ à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>
        <see langword="true" /> si le champ spécifié a la valeur null, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>Obtient le nombre de colonnes figurant dans la ligne actuelle.</summary>
      <returns>En cas de non positionnement dans un jeu d’enregistrements valide, 0 ; sinon, le nombre de colonnes dans l’enregistrement actif. La valeur par défaut est -1.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>Obtient la colonne située à l'index spécifié.</summary>
      <param name="i">Index de base zéro de la colonne à obtenir.</param>
      <exception cref="T:System.IndexOutOfRangeException">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
      <returns>La colonne située à l'index spécifié comme <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>Récupère la colonne portant le nom spécifié.</summary>
      <param name="name">Le nom de la colonne à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
      <returns>La colonne portant le nom spécifié comme <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>Représente une instruction SQL qui est exécutée alors qu’elle est connectée à une source de données, et qui est implémentée par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>Tente d'annuler l'exécution d'une activité <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>Crée une nouvelle instance d’un objet <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns>Objet <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>Exécute une instruction SQL sur l’objet <see langword="Connection" /> d’un fournisseur de données .NET Framework et retourne le nombre de lignes affectées.</summary>
      <exception cref="T:System.InvalidOperationException">La connexion n’existe pas.  
  
 - ou -  
  
 La connexion n'est pas ouverte.</exception>
      <returns>Nombre de lignes affectées.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> contre le <see cref="P:System.Data.IDbCommand.Connection" /> et génère un <see cref="T:System.Data.IDataReader" />.</summary>
      <returns>Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> sur le <see cref="P:System.Data.IDbCommand.Connection" />, et génère un <see cref="T:System.Data.IDataReader" /> à l’aide d’une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns>Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Les colonnes ou lignes supplémentaires sont ignorées.</summary>
      <returns>Première colonne de la première ligne du jeu de résultats.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>Crée une version préparée ou compilée de la commande sur la source de données.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> n’est pas défini.  
  
- ou - 
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ne correspond pas à <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>Obtient ou définit la commande de texte à exécuter sur la source de données.</summary>
      <returns>Commande de texte à exécuter. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>Obtient ou définit le délai d’attente (en secondes) avant de mettre fin à la tentative d’exécution d’une commande et de générer une erreur.</summary>
      <exception cref="T:System.ArgumentException">La valeur de propriété assignée est inférieure à 0.</exception>
      <returns>Durée d'attente (en secondes) pour l'exécution de la commande. La valeur par défaut est de 30 secondes.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>Indique ou spécifie comment la propriété <see cref="P:System.Data.IDbCommand.CommandText" /> est interprétée.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.CommandType" />. La valeur par défaut est <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>Obtient ou définit le <see cref="T:System.Data.IDbConnection" /> utilisé par cette instance du <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns>Connexion à la source de données.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>Obtient <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns>Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>Récupère ou définit la transaction dans laquelle s’exécute l’objet <see langword="Command" /> d’un fournisseur de données .NET Framework.</summary>
      <returns>l’objet <see langword="Command" /> d’un fournisseur de données .NET Framework s’exécute. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>Obtient ou définit la manière dont les résultats des commandes sont appliqués à <see cref="T:System.Data.DataRow" /> quand ils sont utilisés par la méthode <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.ArgumentException">La valeur entrée ne faisait pas partie des valeurs <see cref="T:System.Data.UpdateRowSource" />.</exception>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.UpdateRowSource" />. La valeur par défaut est <see langword="Both" /> sauf si la commande est générée automatiquement. Alors, la valeur par défaut est <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>Représente une connexion ouverte vers une source de données et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>Commence une transaction de base de données.</summary>
      <returns>Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Commence une transaction de base de données avec la valeur de champ <see cref="T:System.Data.IsolationLevel" /> spécifiée.</summary>
      <param name="il">Une des valeurs de l'objet <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns>Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>Modifie la base de données actuelle pour un objet <see langword="Connection" /> ouvert.</summary>
      <param name="databaseName">Le nom de la base de données à utiliser à la place de la base de données actuelle.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>Ferme la connexion à la base de données.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>Crée et retourne un objet Command associé à la connexion.</summary>
      <returns>Objet Command associé à la connexion.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>Ouvre une connexion de base de données avec les paramètres spécifiés par la propriété <see langword="ConnectionString" /> de l’objet de connexion spécifique au fournisseur.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>Obtient ou définit la chaîne utilisée pour ouvrir une base de données.</summary>
      <returns>Chaîne contenant les paramètres de connexion.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>Obtient le délai d’attente (en secondes) lors de la tentative d’établissement d’une connexion avant de mettre fin à la tentative et de générer une erreur.</summary>
      <returns>Durée d'attente (en secondes) préalable à l'établissement d'une connexion. La valeur par défaut est 15 secondes.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>Obtient le nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte.</summary>
      <returns>Le nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>Obtient l’état actuel de la connexion.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>Représente un jeu de propriétés liées à des commandes qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent à des bases de données relationnelles.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
      <returns>
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>Utilisé par les concepteurs de données Visual Basic .NET pour représenter un paramètre d’un objet Command et éventuellement son mappage aux colonnes <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>Indique la précision des paramètres numériques.</summary>
      <returns>Nombre maximal de chiffres utilisés pour représenter la propriété Value d'un objet Parameter du fournisseur de données. La valeur par défaut est 0. Elle indique qu’un fournisseur de données définit la précision pour la valeur.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>Indique l’échelle des paramètres numériques.</summary>
      <returns>Nombre de positions décimales selon lesquelles le <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> est résolu. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>Taille du paramètre.</summary>
      <returns>Taille maximale, en octets, des données dans la colonne. La valeur par défaut est déduite à partir de la valeur du paramètre.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>Représente une transaction à appliquer à une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>Valide la transaction de base de données.</summary>
      <exception cref="T:System.Exception">Une erreur s’est produite lors de la tentative de validation de la transaction.</exception>
      <exception cref="T:System.InvalidOperationException">La transaction a déjà été validée ou annulée.  
  
 - ou -  
  
 La connexion est interrompue.</exception>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>Annule une transaction à partir d’un état d’attente.</summary>
      <exception cref="T:System.Exception">Une erreur s’est produite lors de la tentative de validation de la transaction.</exception>
      <exception cref="T:System.InvalidOperationException">La transaction a déjà été validée ou annulée.  
  
 - ou -  
  
 La connexion est interrompue.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>Spécifie l’objet Connection à associer à la transaction.</summary>
      <returns>L’objet Connection à associer à la transaction.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>Spécifie <see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</summary>
      <returns>
        <see cref="T:System.Data.IsolationLevel" /> pour cette transaction. La valeur par défaut est <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>Représente l'exception qui est levée lorsque vous appelez la méthode <see cref="M:System.Data.DataRow.EndEdit" /> au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>Fournit les fonctionnalités de base pour la création de collections.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les éléments du <see cref="T:System.Data.InternalDataCollectionBase" /> en cours dans un <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index <see cref="T:System.Data.InternalDataCollectionBase" /> spécifié.</summary>
      <param name="ar">
        <see cref="T:System.Array" /> unidimensionnel dans lequel copier les éléments de l'objet <see cref="T:System.Data.InternalDataCollectionBase" /> en cours.</param>
      <param name="index">Index <see cref="T:System.Array" /> de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>Obtient un <see cref="T:System.Collections.IEnumerator" /> de la collection.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pour la collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>Obtient le nombre total d'éléments dans une collection.</summary>
      <returns>Nombre total d'éléments dans une collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>Obtient une valeur qui indique si l’objet <see cref="T:System.Data.InternalDataCollectionBase" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>Obtient une valeur qui indique si l’objet <see cref="T:System.Data.InternalDataCollectionBase" /> est synchronisé.</summary>
      <returns>
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>Obtient les éléments de la collection sous la forme d'une liste.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> qui contient la collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser la collection.</summary>
      <returns>
        <see cref="T:System.Object" /> utilisé pour synchroniser la collection.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>Représente l'exception levée lorsque vous essayez de créer une relation ou d'y accéder de manière incorrecte.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>Représente l'exception qui est levée lorsque vous tentez d'ajouter un <see cref="T:System.Data.DataColumn" /> qui contient un <see cref="P:System.Data.DataColumn.Expression" /> non valide à un <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>Spécifie le comportement de verrouillage des transactions pour la connexion.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>Les modifications en attente, provenant des transactions les plus isolées, ne peuvent pas être remplacées.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>Les verrous partagés sont conservés pendant la lecture des données afin d'éviter tout défaut de lecture, mais les données peuvent être modifiées avant la fin de la transaction, entraînant ainsi des données fantômes ou des lectures qui ne peuvent pas être répétées.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>Un défaut de lecture est possible, ce qui signifie qu'aucun verrou partagé n'est émis et qu'aucun verrou exclusif n'est respecté.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>Des verrous sont placés sur toutes les données utilisées dans une requête afin d’empêcher d’autres utilisateurs de mettre à jour les données. Empêche les lectures qui ne peuvent pas être répétées, mais des lignes fantômes peuvent toujours exister.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>Un verrou de plage est placé sur <see cref="T:System.Data.DataSet" /> afin d'empêcher les autres utilisateurs de mettre à jour ou de modifier les lignes du groupe de données avant la fin de la transaction.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary>Réduit le blocage en stockant une version des données qu'une application pourra lire pendant qu'une autre les modifiera. Indique qu'il n'est pas possible de voir les modifications apportées dans une transaction à partir d'une autre transaction, même si vous réexécutez la requête.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>Un niveau d'isolement différent de celui spécifié est utilisé actuellement, mais il est impossible de le déterminer.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>Associe une table source à une table d’un <see cref="T:System.Data.DataSet" /> et est implémenté par la classe <see cref="T:System.Data.Common.DataTableMapping" />, qui est utilisée en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>Obtient le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dérivé pour <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>Obtient ou définit le nom ne respectant pas la casse de la table dans <see cref="T:System.Data.DataSet" />.</summary>
      <returns>Nom qui ne respecte pas la casse de la table dans <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>Obtient ou définit le nom respectant la casse de la table source.</summary>
      <returns>Nom qui respecte la casse de la table source.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>Contient une collection d'objets TableMapping et est implémenté par le <see cref="T:System.Data.Common.DataTableMappingCollection" /> qui est utilisé en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>Ajoute un mappage de tables à la collection.</summary>
      <param name="sourceTableName">Nom qui respecte la casse de la table source.</param>
      <param name="dataSetTableName">Nom de la table <see cref="T:System.Data.DataSet" />.</param>
      <returns>Référence au nouvel objet <see cref="T:System.Data.ITableMapping" /> mappé.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>Obtient une valeur indiquant si la collection contient un mappage de tables portant le nom de table source spécifié.</summary>
      <param name="sourceTableName">Nom qui respecte la casse de la table source.</param>
      <returns>
        <see langword="true" /> s'il existe un mappage de tables portant le nom de table source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>Obtient l'objet TableMapping portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTableName">Nom de la table <see langword="DataSet" /> au sein de la collection.</param>
      <returns>Objet TableMapping portant le nom de table <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>Obtient l'emplacement de l'objet <see cref="T:System.Data.ITableMapping" /> dans la collection.</summary>
      <param name="sourceTableName">Nom qui respecte la casse de la table source.</param>
      <returns>Emplacement de base zéro de l'objet <see cref="T:System.Data.ITableMapping" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="sourceTableName">Nom qui respecte la casse de <see langword="SourceTable" />.</param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>Obtient ou définit l'instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="index">Nom de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns>Instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see langword="SourceTable" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary>Identifie une liste des paramètres de chaîne de connexion identifiés par la propriété <see langword="KeyRestrictions" /> qui sont autorisés ou pas.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary>Par défaut. Identifie les seuls paramètres de chaîne de connexion supplémentaires qui sont autorisés.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary>Identifie les paramètres de chaîne de connexion supplémentaires qui ne sont pas autorisés.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary>Contrôle la façon dont les valeurs de la source de données seront appliquées aux lignes existantes lors de l'utilisation de la méthode <see cref="Overload:System.Data.DataTable.Load" /> ou <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary>Les valeurs entrantes pour cette ligne écraseront les données actuelles et celles d'origine sur l'ensemble des colonnes.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary>Les valeurs entrantes pour cette ligne écraseront les données d'origine sur l'ensemble des colonnes. Les données actuelles, sur l'ensemble des colonnes, ne seront pas modifiées.  Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary>Les valeurs entrantes pour cette ligne écraseront les données actuelles sur l'ensemble des colonnes. Les données d'origine, sur l'ensemble des colonnes, ne seront pas modifiées.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>Spécifie la façon dont un <see cref="T:System.Data.DataColumn" /> est mappé.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>La colonne est mappée à un attribut XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>La colonne est mappée à un élément XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>La colonne est mappée à une structure interne.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>La colonne est mappée à un nœud <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>Se produit quand des <see langword="DataRow" /> cible et source ont la même valeur de clé primaire et que la propriété <see cref="P:System.Data.DataSet.EnforceConstraints" /> est définie sur true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.MergeFailedEventArgs" /> avec <see cref="T:System.Data.DataTable" /> et une description du conflit de fusion.</summary>
      <param name="table">Objet <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict">Description du conflit de fusion.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>Retourne une description du conflit de fusion.</summary>
      <returns>Description du conflit de fusion.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>Retourne l’objet <see cref="T:System.Data.DataTable" />.</summary>
      <returns>Objet <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données de l'événement.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>Détermine l’action qui se produit quand un mappage est manquant dans une table source ou une colonne source.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>Un <see cref="T:System.InvalidOperationException" /> est généré si le mappage de colonne spécifié est manquant.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>La colonne ou la table ne possédant pas de mappage est ignorée. Retourne <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>La colonne source ou la table source est créée et ajoutée à <see cref="T:System.Data.DataSet" /> en utilisant son nom d’origine.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>Représente l'exception levée lorsque vous essayez d'accéder à une ligne d'une table qui ne possède aucune clé primaire.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>Spécifie l'action à effectuer lors de l'ajout de données à <see cref="T:System.Data.DataSet" /> si le <see cref="T:System.Data.DataTable" /> ou le <see cref="T:System.Data.DataColumn" /> requis est absent.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>Ajoute les colonnes nécessaires pour terminer le schéma.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>Ajoute les colonnes et les informations de clé primaire nécessaires pour terminer le schéma. Pour plus d'informations sur l'ajout des informations de clé primaire à <see cref="T:System.Data.DataTable" />, consultez <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Pour fonctionner correctement avec le fournisseur de données .NET Framework pour OLE DB, <see langword="AddWithKey" /> requiert que le fournisseur OLE DB natif obtienne les informations de clé primaire nécessaires en définissant la propriété DBPROP_UNIQUEROWS, puis détermine les colonnes qui sont des colonnes de clés primaires en examinant DBCOLUMN_KEYCOLUMN dans IColumnsRowset. L'utilisateur peut également définir de manière explicite les contraintes de clé primaire sur chaque <see cref="T:System.Data.DataTable" />. De cette façon, les enregistrements entrants qui correspondent à des enregistrements existants sont mis à jour plutôt que d'être ajoutés. Si vous utilisez <see langword="AddWithKey" />, le fournisseur de données .NET Framework pour SQL Server ajoute une clause FOR BROWSE à l'instruction en cours d'exécution. L'utilisateur doit connaître les effets secondaires potentiels, tels que les interférences avec l'utilisation d'instructions SET FMTONLY ON. Pour plus d’informations, consultez SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>Un <see cref="T:System.InvalidOperationException" /> est généré si le mappage de colonne spécifié est manquant.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>Ignore les colonnes supplémentaires.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>Représente l’exception qui est levée lors d’une tentative d’insertion d’une valeur Null dans une colonne où <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary>Représente une collection d’objets <see cref="T:System.Data.DataRow" /> ordonnés renvoyés par une requête.</summary>
      <typeparam name="TRow">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>Spécifie le type d’un paramètre dans une requête par rapport à <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>Le paramètre est un paramètre d'entrée.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>Le paramètre est à la fois un paramètre d’entrée et un paramètre de sortie.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>Le paramètre est un paramètre de sortie.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>Le paramètre représente une valeur de retour d'une opération telle qu'une procédure stockée, une fonction intégrée ou une fonction définie par l'utilisateur.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>Représente une collection de propriétés qui peuvent être ajoutées à <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" />, ou <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary>Crée une copie superficielle de l’objet <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns>Retourne <see cref="T:System.Object" />, une copie superficielle de l’objet <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>Représente l'exception qui est levée lorsque vous essayez de modifier la valeur d'une colonne en lecture seule.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>Représente l'exception levée lorsque vous essayez d'effectuer une opération sur un <see cref="T:System.Data.DataRow" /> qui ne se trouve pas dans <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary>Indique l’action qui se produit lors de l’application de <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>Supprime ou met à jour les lignes connexes. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>Aucune action n’est effectuée sur les lignes connexes.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>Affecte la valeur des lignes connexes à valeur contenue dans la propriété <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>Définit les valeurs des lignes connexes sur <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary>Indique le mode de sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary>Ignore la sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary>Inclut la sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé. Valeur par défaut.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>Spécifie la façon dont les mappages de schémas existants sont gérés lors de l’exécution d’une opération <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>Appliquez tous les mappages de table existants au schéma entrant. Configurez <see cref="T:System.Data.DataSet" /> avec le schéma transformé.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>Ignorez tous les mappages de tables sur DataAdapter. Configurez <see cref="T:System.Data.DataSet" /> à l’aide du schéma entrant sans appliquer de transformations.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary>Détermine le format de sérialisation pour un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary>Sérialiser comme contenu binaire. Disponible dans ADO.NET 2.0 uniquement.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary>Sérialiser comme contenu XML. Valeur par défaut.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>Spécifie le type de données spécifique à SQL Server d'un champ ou d'une propriété, à utiliser dans <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />. Entier signé 64 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur fixe comptant entre 1 et 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />. Valeur numérique non signée pouvant être égale à 0, 1 ou <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />. Flux de caractères non Unicode de longueur fixe comptant entre 1 et 8 000 caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>Données de date dont la valeur est comprise entre le 1er janvier de l'an 1 AD et le 31 décembre 9999 AD.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />. Données de date et d'heure dont la valeur est comprise entre le 1er janvier 1753 et le 31 décembre 9999, avec une précision de 3,33 millisecondes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>Données de date et d'heure. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>Données de date et d'heure avec prise en compte du fuseau horaire. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. La plage des valeurs de fuseau horaire s'étend de -14:00 à +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />. Valeur numérique fixe de précision et d’échelle comprise entre -1038 -1 et 1038 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />. Nombre à virgule flottante compris entre -1,79E +308 et 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur variable dont la valeur est comprise entre 0 et 231 -1 (ou 2 147 483 647) octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />. Entier signé 32 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />. Valeur monétaire comprise entre -263 (ou -9 223 372 036 854 775 808) et 263 -1 (ou +9 223 372 036 854 775 807), avec une précision d’un dix millième d’unité monétaire.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />. Flux de caractères Unicode de longueur fixe comptant entre 1 et 4 000 caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />. Flux de données Unicode de longueur variable dont la longueur maximale est égale à 230 - 1 (ou 1 073 741 823) caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />. Flux de caractères Unicode de longueur variable comptant entre 1 et 4 000 caractères. La conversion implicite échoue si une chaîne compte plus de 4 000 caractères. Définissez l'objet de manière explicite lorsque vous utilisez des chaînes comptant plus de 4 000 caractères. Utilisez <see cref="F:System.Data.SqlDbType.NVarChar" /> lorsque la colonne de base de données est <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />. Nombre à virgule flottante compris entre -3,40E +38 et 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />. Données de date et d'heure dont la valeur est comprise entre le 1er janvier 1900 et le 6 juin 2079, avec une précision d'une minute.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />. Entier signé 16 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />. Valeur monétaire comprise entre -214 748,3648 et +214 748,3647, avec une précision d'un dix millième d'unité monétaire.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>Type de données spécial pour la spécification des données structurées contenues dans des paramètres table.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />. Flux de données non Unicode de longueur variable dont la longueur maximale est égale à 231 -1 (ou 2 147 483 647) caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>Données d'heure basées sur une horloge de 24 heures. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. Correspond à une valeur <see langword="time" /> SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Nombres binaires générés automatiquement dont le caractère unique est garanti dans une base de données. <see langword="timestamp" /> sert généralement de mécanisme d'insertion d'informations de version dans les lignes de tables. La taille de stockage est égale à 8 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />. Entier non signé 8 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>Type SQL Server défini par l’utilisateur.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />. GUID (Identificateur global unique).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur variable comptant entre 1 et 8 000 octets. La conversion implicite échoue si un tableau d'octets compte plus de 8 000 octets. Définissez l'objet de manière explicite lorsque vous utilisez des tableaux d'octets comptant plus de 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />. Flux de caractères non-Unicode de longueur variable comptant entre 1 et 8 000 caractères. Utilisez <see cref="F:System.Data.SqlDbType.VarChar" /> lorsque la colonne de base de données est <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />. Type de données spécial pouvant contenir des données numériques, de chaîne, binaires ou de date, ainsi que les valeurs SQL Server Empty et Null. Il s'agit du type supposé lorsqu'aucun autre type n'est déclaré.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>Valeur XML. Vous pouvez obtenir le code XML sous forme de chaîne à l'aide de la méthode <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> ou de la propriété <see cref="P:System.Data.SqlTypes.SqlXml.Value" />, ou encore sous forme de <see cref="T:System.Xml.XmlReader" /> en appelant la méthode <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>Tous les objets et structures <see cref="N:System.Data.SqlTypes" /> implémentent l'interface <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>Indique si une structure est null. Cette propriété est en lecture seule.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" /> Si la valeur de cet objet est null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary>La classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant que classe à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="e">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>Représente un flux de données binaires de longueur variable à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en assignant le contenu du tableau d'octets fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</summary>
      <param name="value">Tableau d'octets à enregistrer ou à récupérer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatène deux valeurs <see cref="T:System.Data.SqlTypes.SqlBinary" /> spécifiées pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> qui est la valeur concaténée de x et y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à comparer à cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Nombre signé qui indique les valeurs relatives de cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> La valeur de cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est égal à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cet <see cref="T:System.Data.SqlTypes.SqlBinary" /> objet est supérieur à l’objet ou l’objet est une référence null.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à l'objet fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Objet à comparer à cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Nombre signé qui indique les valeurs relatives de cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> La valeur de cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est égal à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cet <see cref="T:System.Data.SqlTypes.SqlBinary" /> objet est supérieur à l’objet ou l’objet est une référence null.</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatène deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlBinary" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>Retourne le code de hachage pour cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont inégales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Concatène les deux paramètres <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>Valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en tableau <see cref="T:System.Byte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> à convertir.</param>
      <returns>Tableau <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>Convertit un tableau d'octets en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x">Tableau d'octets à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> qui représente le tableau d'octets converti.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont inégales.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>Instance de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>Convertit cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> en chaîne.</summary>
      <returns>Chaîne contenant le <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBinary" />. Si <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> est null, la chaîne contient "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> a la valeur Null. Cette propriété est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si <see langword="null" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>Obtient l'octet unique de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> se trouvant à l'emplacement spécifié par le paramètre de type Entier <paramref name="index" />. Si <paramref name="index" /> indique un emplacement situé au-delà de la fin du tableau d'octets, cela provoque la levée de <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Cette propriété est en lecture seule.</summary>
      <param name="index">Emplacement de l'octet à récupérer.</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété est lue lorsque la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.  
  
- ou - 
Le paramètre <paramref name="index" /> indique un emplacement qui se trouve au-delà de la longueur du tableau d’octets, tel qu’indiqué par la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
      <returns>Octet se trouvant à l'emplacement indiqué par le paramètre de type Entier.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>Obtient la longueur en octets de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> est lue lorsque la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns>Longueur des données binaires de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> est lue lorsqu'elle contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
      <returns>Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>Représente une valeur entière égale à 1 ou 0 à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>Représente une valeur false pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>Représente une valeur un pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>Représente une valeur true pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'aide de la valeur booléenne fournie.</summary>
      <param name="value">Valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />, à savoir <see langword="true" /> ou <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'aide de la valeur entière spécifiée.</summary>
      <param name="value">Entier dont la valeur doit être utilisée pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcule l'opération de bits AND de deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Résultat de l'opération AND logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> à comparer ou référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de la valeur.  
  
 <list type="table"><listheader><term> Valeur</term><description> Description</description></listheader><item><term> Entier négatif</term><description> Cette instance est inférieure à <paramref name="value" />.</description></item><item><term> Zéro</term><description> Cette instance est égale à <paramref name="value" />.</description></item><item><term> Entier positif</term><description> Cette instance est supérieure à <paramref name="value" /> ou <paramref name="value" /> est une référence null ( <see langword="Nothing" /> dans Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>Compare cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à un objet spécifié et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Objet à comparer ou référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de la valeur.  
  
 <list type="table"><listheader><term> Valeur</term><description> Description</description></listheader><item><term> Entier négatif</term><description> Cette instance est inférieure à <paramref name="value" />.</description></item><item><term> Zéro</term><description> Cette instance est égale à <paramref name="value" />.</description></item><item><term> Entier positif</term><description> Cette instance est supérieure à <paramref name="value" /> ou <paramref name="value" /> est une référence null ( <see langword="Nothing" /> dans Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare l'égalité de deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération de complément à 1 sur les structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournies.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Complément à 1 du <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcule l'opération de bits AND de deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Résultat de l'opération AND logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Calcule l'opération de bits OR de ses opérandes.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Résultat de l'opération OR logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare l'égalité de deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération de bits OR exclusive (XOR) sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Résultat de l'opération XOR logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>Convertit <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en Boolean.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Boolean ayant pour valeur <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>L'opérateur false peut être utilisé pour tester <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> afin déterminer s'il est false.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à tester.</param>
      <returns>
        <see langword="true" /> si le paramètre fourni <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see langword="false" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>Convertit la valeur d'octet fournie en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">Valeur d'octet à convertir en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Valeur <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui contient 0 ou 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération NOT sur <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> sur lequel effectuer l'opération NOT.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> avec <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si l’argument est true, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si l’argument est null ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération de complément à 1 sur les structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournies.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Complément à 1 du <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>L'opérateur true peut être utilisé pour tester <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> afin de déterminer s'il est true.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à tester.</param>
      <returns>
        <see langword="true" /> si le paramètre fourni <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération de bits OR sur les deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont Value constitue le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> spécifiée d'une valeur logique en son équivalent <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="s">
        <see cref="T:System.String" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui contient la valeur analysée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouvelle structure <see langword="SqlInt16" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt16" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouvelle structure <see langword="SqlInt32" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt32" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouvelle structure <see langword="SqlInt64" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt64" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" />, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est 1. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="false" />, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> n'est ni 1 ni 0, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la valeur est 1 ou 0.  
  
Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à true, la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est 1 ; sinon, la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" />, alors la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en chaîne.</summary>
      <returns>Chaîne contenant la valeur de <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si la valeur est null, la chaîne contient "null".</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Résultat de l'opération XOR logique.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> sous la forme d'un octet.</summary>
      <returns>Octet représentant la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>Indique si <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> en cours a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns>
        <see langword="true" /> si <see langword="Value" /> a la valeur <see langword="False" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" /> Si la <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure est NULL ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>Obtient une valeur qui indique si la <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actuelle est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns>
        <see langword="true" /> si <see langword="Value" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété a la valeur null.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>Représente un entier non signé 8 bits, compris entre 0 et 255, à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à l'aide de la valeur d'octet spécifiée.</summary>
      <param name="value">Valeur d'octet à enregistrer dans la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> contient le résultat de l'addition.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>Compare cette instance à l'objet <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Objet <see cref="T:System.Data.SqlTypes.SqlByte" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>Compare cette instance à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlByte" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>Compare le paramètre <see cref="T:System.Object" /> fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlByte" /> et retourne le reste.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <returns>Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>L'opérateur de complément à 1 effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient la somme des deux opérandes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en octet.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir en octet.</param>
      <returns>Octet dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see langword="SqlMoney" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Instance de la classe <see langword="SqlString" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale à la valeur numérique représentée par <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see langword="SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>Convertit la valeur d'octet fournie en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Valeur d'octet à convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au paramètre fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>L'opérateur de complément à 1 effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d'un nombre en son équivalent entier non signé 8 bits.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> qui contient le nombre 8 bits représenté par le paramètre <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Structure <see langword="SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Structure <see langword="SqlDouble" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Structure <see langword="SqlInt16" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>Convertit ce <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Structure <see langword="SqlInt32" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Structure <see langword="SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Structure <see langword="SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Structure <see langword="SqlSingle" /> ayant la même propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> que cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see langword="SqlString" /> qui contient la représentation sous forme de chaîne de la propriété <see cref="T:System.Data.SqlTypes.SqlByte" /> de la structure <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.String" />.</summary>
      <returns>Chaîne contenant le <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see langword="Value" /> est null, <see langword="String" /> est une chaîne null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Résultat de l'opération XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />. Cette propriété est en lecture seule.</summary>
      <returns>Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>Représente un type référence mutable qui encapsule un <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> ou un <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> en fonction du tableau d'octets spécifié.</summary>
      <param name="buffer">Tableau d'octets non signés.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> basée sur la valeur <see cref="T:System.Data.SqlTypes.SqlBinary" /> spécifiée.</summary>
      <param name="value">Valeur <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> basée sur la valeur <see cref="T:System.IO.Stream" /> spécifiée.</summary>
      <param name="s">
        <see cref="T:System.IO.Stream" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>
        <see langword="string" /> qui indique le langage XSD du <see langword="XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en structure <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBytes" /> en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value">Structure <see cref="T:System.Data.SqlTypes.SqlBytes" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copie les octets de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> dans la mémoire tampon passée et retourne le nombre d'octets copiés.</summary>
      <param name="offset">Offset de valeur Long <see cref="T:System.Int64" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Mémoire tampon du tableau d'octets dans laquelle effectuer la copie.</param>
      <param name="offsetInBuffer">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count">Entier <see cref="T:System.Int32" /> représentant le nombre d'octets à copier.</param>
      <returns>Valeur Long <see cref="T:System.Int64" /> représentant le nombre d'octets copiés.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>Définit la longueur de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value">Valeur Long <see cref="T:System.Int64" /> représentant la longueur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>Affecte à cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> la valeur null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info">Objet à remplir à l'aide des informations de sérialisation.</param>
      <param name="context">Contexte de destination de la sérialisation.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>Construit et retourne un <see cref="T:System.Data.SqlTypes.SqlBinary" /> à partir de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> de cette instance.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Copie les octets de la mémoire tampon passée à cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset">Offset de valeur Long <see cref="T:System.Int64" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer">Mémoire tampon du tableau d'octets dans laquelle effectuer la copie.</param>
      <param name="offsetInBuffer">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count">Entier <see cref="T:System.Int32" /> représentant le nombre d'octets à copier.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>Retourne une référence à la mémoire tampon interne.</summary>
      <returns>Référence à la mémoire tampon interne. Pour les instances de <see cref="T:System.Data.SqlTypes.SqlBytes" /> qui reposent sur des pointeurs non managés, il retourne une copie managée de la mémoire tampon interne.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>Obtient une valeur booléenne qui indique si ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlBytes" /> a la valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>Obtient ou définit l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> à l'index spécifié.</summary>
      <param name="offset">Valeur <see cref="T:System.Int64" />.</param>
      <returns>Valeur <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>Obtient la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> représentant la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.  
  
Retourne -1 si aucune mémoire tampon n'est disponible pour l'instance ou si la valeur est null.  
  
Retourne un <see cref="P:System.IO.Stream.Length" /> pour une instance encapsulée dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>Obtient la longueur maximale de la valeur de la mémoire tampon interne de ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Valeur Long représentant la longueur maximale de la valeur de la mémoire tampon interne. Retourne -1 pour un <see cref="T:System.Data.SqlTypes.SqlBytes" /> encapsulé dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>Obtient une instance null de ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Instance de dont la <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> propriété retourne <see langword="true" /> .</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary>Retourne des informations sur l'état de stockage de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Énumération <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>Obtient ou définit les données de ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> en tant que flux.</summary>
      <returns>Flux contenant les données SqlBytes.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>Retourne une copie managée de la valeur stockée par ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>Valeur de ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> en tant que tableau d'octets.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> est un type référence mutable qui encapsule un tableau <see cref="T:System.Char" /> ou une instance de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" /> en fonction du tableau de caractères spécifié.</summary>
      <param name="buffer">Tableau <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" /> basée sur la valeur <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiée.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlChars" /> en structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Structure <see cref="T:System.Data.SqlTypes.SqlChars" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlString" /> en structure <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Structure <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copie les caractères de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> dans la mémoire tampon passée et retourne le nombre de caractères copiés.</summary>
      <param name="offset">Décalage de valeur <see cref="T:System.Int64" /><see langword="long" /> dans la valeur qui est contenue dans l’instance <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Tableau de caractères mis en mémoire tampon dans lequel effectuer la copie.</param>
      <param name="offsetInBuffer">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count">Valeur entière <see cref="T:System.Int32" /> représentant le nombre de caractères à copier.</param>
      <returns>Valeur <see cref="T:System.Int64" /><see langword="long" /> représentant le nombre d’octets copiés.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>Définit la longueur de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value">Valeur <see cref="T:System.Int64" /><see langword="long" /> représentant la longueur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>Affecte à cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> la valeur null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info">Objet à remplir à l'aide des informations de sérialisation.</param>
      <param name="context">Contexte de destination de la sérialisation.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="r">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> en sa représentation <see cref="T:System.Data.SqlTypes.SqlString" /> équivalente.</summary>
      <returns>Représentation <see cref="T:System.Data.SqlTypes.SqlString" /> de ce type.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Copie les caractères de la mémoire tampon passée à cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset">Offset de valeur <see langword="long" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer">Tableau de caractères mis en mémoire tampon dans lequel effectuer la copie.</param>
      <param name="offsetInBuffer">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count">Entier <see cref="T:System.Int32" /> représentant le nombre de caractères à copier.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>Retourne une référence à la mémoire tampon interne.</summary>
      <returns>Référence à la mémoire tampon interne. Pour les instances de <see cref="T:System.Data.SqlTypes.SqlChars" /> qui reposent sur des pointeurs non managés, il retourne une copie managée de la mémoire tampon interne.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>Obtient une valeur booléenne qui indique si ce <see cref="T:System.Data.SqlTypes.SqlChars" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlChars" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>Obtient ou définit l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> à l'index spécifié.</summary>
      <param name="offset">Valeur <see cref="T:System.Int64" />.</param>
      <returns>Valeur <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>Obtient la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui indique la longueur en caractères de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.  
  
Retourne -1 si aucune mémoire tampon n'est disponible pour l'instance ou si la valeur est null.  
  
Retourne un <see cref="P:System.IO.Stream.Length" /> pour une instance encapsulée dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>Obtient la longueur maximale en caractères à deux octets de la valeur que peut contenir la mémoire tampon interne.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> représentant la longueur maximale en caractères à deux octets de la valeur de la mémoire tampon interne.  
  
Retourne -1 pour un <see cref="T:System.Data.SqlTypes.SqlChars" /> encapsulé dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>Retourne une instance null de ce <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Instance de dont la <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> propriété retourne <see langword="true" /> . Pour plus d’informations, consultez gestion des valeurs NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary>Retourne des informations sur l'état de stockage de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Énumération <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>Retourne une copie managée de la valeur stockée par ce <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>Valeur de ce <see cref="T:System.Data.SqlTypes.SqlChars" /> en tant que tableau de caractères.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>Spécifie les valeurs des options de comparaison pour une structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>Spécifie que les opérations de tri doivent être basées sur la valeur numérique des caractères plutôt que leur valeur alphabétique.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>Effectue un tri binaire.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la casse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer le type Kana. Le type Kana fait référence aux caractères japonais hiragana et katakana représentant des sons phonétiques de la langue japonaise. Le caractère hiragana est utilisé pour des expressions et des mots natifs japonais, tandis que le caractère katakana est utilisé pour des mots empruntés à d’autres langues, par exemple « computer » ou « Internet ». Un son phonétique peut être exprimé à la fois avec un caractère hiragana et katakana. Quand cette valeur est sélectionnée, le caractère hiragana représentant un son est considéré comme identique au caractère katakana correspondant à ce même son.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer les caractères d'association sans espace, par exemple les signes diacritiques. La norme Unicode définit un caractère d'association comme un caractère combiné avec un caractère de base pour produire un nouveau caractère. Lors du rendu, les caractères d'association sans espace n'utilisent pas un espace de caractère proprement dit. Pour plus d’informations sur les caractères combinables autres que les espaces, consultez le standard Unicode à l’adresse https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la largeur des caractères. Par exemple, les caractères katakana japonais peuvent être écrits sous la forme de caractères à demi-chasse ou à pleine chasse. Lorsque cette valeur est sélectionnée, les caractères katakana à pleine chasse sont considérés comme identiques aux mêmes caractères à demi-chasse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>Spécifie les paramètres des options par défaut pour les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>Représente des données de date et d'heure à stocker dans une base de données ou à récupérer de celle-ci, dont la valeur est comprise entre le 1er janvier 1753 et le 31 décembre 9999, avec une précision de 3,33 millisecondes. La structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> possède une structure de données sous-jacente différente de son type .NET Framework correspondant, <see cref="T:System.DateTime" />, qui peut représenter n'importe quelles dates et heures entre le 1/1/0001 à 12:00:00 et le 31/12/9999 à 23:59:59, avec une précision de 100 nanosecondes. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> stocke en réalité la différence relative au 1/1/1900 à 00:00:00. Par conséquent, une conversion de « 00:00:00 1/1/1900  » à un entier retournera 0.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>Représente la valeur de date valide maximale pour une structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>Représente la valeur de date valide minimale pour une structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>Constante dont la valeur est égale au nombre de graduations équivalant à une heure.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>Constante dont la valeur est égale au nombre de graduations équivalant à une minute.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>Constante dont la valeur est égale au nombre de graduations équivalant à une seconde.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en utilisant la valeur <see cref="T:System.DateTime" /> spécifiée.</summary>
      <param name="value">Structure <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis.</summary>
      <param name="dayTicks">Valeur entière qui représente la date sous la forme de graduations.</param>
      <param name="timeTicks">Valeur entière qui représente l'heure sous la forme de graduations.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois et le jour.</summary>
      <param name="year">Entier représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valeur entière représentant le nombre de jours de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois, le jour, l'heure, la minute et la seconde de la nouvelle structure.</summary>
      <param name="year">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valeur entière représentant le jour du mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois, le jour, l'heure, la minute, la seconde et la milliseconde de la nouvelle structure.</summary>
      <param name="year">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valeur entière représentant le jour du mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond">Valeur de type Double représentant la milliseconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l’aide des paramètres fournis pour initialiser l’année, le mois, le jour, l’heure, la minute, la seconde et la microseconde de la nouvelle structure.</summary>
      <param name="year">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day">Valeur entière représentant le jour de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond">Valeur entière représentant la microseconde (millièmes de milliseconde) de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Ajoute <see cref="T:System.Data.SqlTypes.SqlDateTime" /> au <see langword="TimeSpan" /> spécifié.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Valeur <see langword="Timespan" />.</param>
      <returns>Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> avec la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Zéro</term><description> Cette instance est la même que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
- ou - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est une référence Null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>Compare cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> avec le <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>Obtient le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont inégales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Ajoute la période indiquée par le paramètre <see cref="T:System.TimeSpan" /> fourni, <paramref name="t" />, à la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Structure <see cref="T:System.TimeSpan" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Si l'un ou l'autre argument a la valeur <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, le nouveau <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en structure <see cref="T:System.DateTime" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>Objet <see cref="T:System.DateTime" /> dont les propriétés <see cref="P:System.DateTime.Date" /> et <see cref="P:System.DateTime.TimeOfDay" /> contiennent les mêmes valeurs de date et d'heure que la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dont <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> est égal à la date et à l'heure représentées par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur null, le <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> nouvellement créée a la valeur null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>Convertit une structure <see cref="T:System.DateTime" /> en structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value">Structure <see langword="DateTime" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dont <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> est égal aux propriétés <see cref="P:System.DateTime.Date" /> et <see cref="P:System.DateTime.TimeOfDay" /> combinées de la structure <see cref="T:System.DateTime" /> fournie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont inégales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Soustrait la structure <see cref="T:System.TimeSpan" /> fournie, <paramref name="t" />, de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Structure <see cref="T:System.TimeSpan" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> représentant le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s">
        <see langword="string" /> à analyser.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> égale à la date et à l'heure représentées par le <see langword="string" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>Soustrait le <see langword="Timespan" /> spécifié de cette instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t">Valeur <see langword="Timespan" />.</param>
      <returns>Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Structure <see langword="SqlString" /> dont la valeur est une chaîne représentant la date et l'heure contenues dans cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.String" />.</summary>
      <returns>
        <see langword="String" /> représentant la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>Obtient le nombre de graduations représentant la date de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</exception>
      <returns>Nombre de graduations représentant la date qui est contenue dans la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>Obtient le nombre de graduations représentant l'heure de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Nombre de graduations représentant l'heure de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</exception>
      <returns>Valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>Représente une valeur numérique comprise entre -10^38 +1 et 10^38 - 1, avec précision et échelle fixes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>Constante représentant la plus grande valeur possible pour la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>Constante représentant la valeur maximale pour la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>Constante représentant la valeur maximale d'une structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>Constante représentant la valeur minimale d'une structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide des paramètres fournis.</summary>
      <param name="bPrecision">Nombre maximal de chiffres pouvant être utilisés pour représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Nombre de décimales utilisées pour résoudre la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Valeur booléenne qui indique si la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représente un nombre positif ou négatif.</param>
      <param name="data1">Entier non signé 32 bits à combiner avec données2, données3 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2">Entier non signé 32 bits à combiner avec données1, données3 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3">Entier non signé 32 bits à combiner avec données1, données2 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4">Entier non signé 32 bits à combiner avec données1, données2 et données3 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide des paramètres fournis.</summary>
      <param name="bPrecision">Nombre maximal de chiffres pouvant être utilisés pour représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale">Nombre de décimales utilisées pour résoudre la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive">Valeur booléenne qui indique si la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représente un nombre positif ou négatif.</param>
      <param name="bits">Entier non signé 128 bits qui fournit la valeur du nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur <see cref="T:System.Decimal" /> fournie.</summary>
      <param name="value">Valeur <see cref="T:System.Decimal" /> à enregistrer en tant que structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide du paramètre de type Double fourni.</summary>
      <param name="dVal">Paramètre de type Double représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur entière fournie.</summary>
      <param name="value">Valeur entière fournie à utiliser comme valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur de type Entier long fournie.</summary>
      <param name="value">Valeur de type Entier long fournie à utiliser comme valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>La méthode Abs obtient la valeur absolue du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le nombre non signé représentant la valeur absolue du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcule la somme des deux opérateurs <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient la somme.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>L'échelle de l'opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sera ajustée en fonction du nombre de chiffres indiqué par le paramètre correspondant. Selon la valeur du paramètre fRound, la valeur sera arrondie au nombre de chiffres approprié ou tronquée.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à ajuster.</param>
      <param name="digits">Nombre de chiffres de la structure ajustée.</param>
      <param name="fRound">Si ce paramètre est <see langword="true" />, la nouvelle propriété Value est arrondie ; si le paramètre est <see langword="false" />, la valeur est tronquée.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le nombre ajusté.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>Retourne le plus petit nombre entier supérieur ou égal à la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour laquelle une valeur plafond doit être calculée.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représentant le plus petit nombre entier supérieur ou égal à la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>Ajuste la valeur de l'opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en fonction de la précision et de l'échelle indiquées.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur doit être ajustée.</param>
      <param name="precision">Précision de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale">Échelle de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value a été ajustée en fonction de la précision et de l'échelle indiquées dans les paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>L'opérateur de division calcule le produit de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, la valeur de <see langword="SqlDecimal" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>Compare le paramètre <see cref="T:System.Object" /> fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de l'instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> et s'ils sont égaux. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>Arrondit un nombre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifié au nombre entier inférieur suivant.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour laquelle la valeur minimale doit être calculée.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient la partie entière du nombre de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>L'opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcule la somme des deux opérateurs <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient la somme.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>L'opérateur de division calcule le produit de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns>Nouvelle structure <see langword="Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit le paramètre <see cref="T:System.Double" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Double" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur est égale à la valeur du paramètre <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> fournie en SqlDecimal.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit l'opérande <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la valeur <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Valeur <see cref="T:System.Decimal" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur du paramètre <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>Convertit la structure <see cref="T:System.Int64" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Int64" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur du paramètre <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>L'opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcule le produit de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>L'opérateur moins unaire rend le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à rendre négative.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur contient le résultat de la négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d'un nombre en équivalent <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>Élève la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à la puissance spécifiée.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à élever à une puissance.</param>
      <param name="exp">Valeur de type Double qui indique la puissance à laquelle le nombre doit être élevé.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient le résultat.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Obtient le nombre le plus proche de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à l'aide de la précision spécifiée.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à arrondir.</param>
      <param name="position">Nombre de chiffres fractionnaires significatifs (précision) dans la valeur de retour.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient le résultat de l'opération d'arrondi.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>Obtient une valeur qui indique le signe de la propriété <see cref="T:System.Data.SqlTypes.SqlDecimal" /> d'une structure <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont le signe doit être évalué.</param>
      <returns>Nombre qui indique le signe de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>Calcule le produit de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>Retourne une valeur de type Double égale au contenu de la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de cette instance.</summary>
      <returns>Représentation décimale de la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est <see langword="true" />, la <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> sera 1. sinon, <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égal à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est une chaîne représentant la valeur contenue dans cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.String" />.</summary>
      <returns>Nouvel objet <see cref="T:System.String" /> qui contient la représentation sous forme de chaîne de la propriété <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de la structure <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>Tronque la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à l'emplacement voulu.</summary>
      <param name="n">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à tronquer.</param>
      <param name="position">Position décimale à laquelle le nombre sera tronqué.</param>
      <returns>Fournissez une valeur négative pour le paramètre <paramref name="position" /> afin de tronquer la valeur à l'emplacement correspondant à gauche du séparateur décimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>Obtient la représentation binaire de la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sous forme de tableau d’octets.</summary>
      <returns>Tableau d'octets qui contient la représentation binaire de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>Obtient la représentation binaire de la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sous forme d'un tableau d'entiers.</summary>
      <returns>Tableau d'entiers qui contient la représentation binaire de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" /> si cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>Indique si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est supérieur à zéro.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>Obtient le nombre maximal de chiffres permettant de représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns>Nombre maximal de chiffres utilisés pour représenter la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>Obtient le nombre de décimales selon lequel <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est résolu.</summary>
      <returns>Nombre de décimales utilisées pour la résolution de la propriété <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Cette propriété est en lecture seule.</summary>
      <returns>Nombre compris entre -79 228 162 514 264 337 593 543 950 335 et 79 228 162 514 162 514 264 337 593 543 950 335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>Représente un nombre à virgule flottante compris entre -1,79E +308 et 1,79E +308 à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>Constante représentant la valeur maximale pour une structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>Constante représentant la valeur minimale possible pour <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'aide du paramètre de type Double fourni pour définir la propriété <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la nouvelle structure <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value">Double dont la valeur est utilisée pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur d'addition calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de division divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient le résultat de l'opération de division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>Retourne le code de hachage pour cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de multiplication calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur d'addition calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de division divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient le résultat de l'opération de division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à 0 ou 1, selon la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en Double.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Double équivalent à la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à la valeur du nombre représenté par <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlString.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see cref="T:System.Data.SqlTypes.SqlByte" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si <see cref="T:System.Data.SqlTypes.SqlInt16" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si <see cref="T:System.Data.SqlTypes.SqlInt32" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />. Si <see cref="T:System.Data.SqlTypes.SqlInt64" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />. Si <see cref="T:System.Data.SqlTypes.SqlMoney" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si <see cref="T:System.Data.SqlTypes.SqlSingle" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>Convertit la valeur de type Double fournie en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Valeur de type Double à convertir.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> ayant la même valeur que le paramètre de type Double spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de multiplication calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de soustraction soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Résultat de l'opération de soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>Retourne la valeur de négation de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifiée.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d'un nombre en nombre à virgule flottante double précision équivalent.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient la valeur représentée par <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>L'opérateur de soustraction soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Résultat de l'opération de soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Un schéma XML consommé par .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Structure <see langword="SqlBoolean" /> dont <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est différent de zéro, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si <see cref="T:System.Data.SqlTypes.SqlDouble" /> est égal à zéro et <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see langword="SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouvelle structure <see langword="SqlDecimal" /> dont la valeur convertie est égale à la valeur arrondie de ce <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouvelle structure <see langword="SqlMoney" /> dont <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouvelle structure <see langword="SqlSingle" /> dont <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égal au <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see langword="SqlString" /> représentant la <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en chaîne.</summary>
      <returns>Chaîne représentant <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>Retourne une valeur booléenne qui indique si cette instance <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />. Cette propriété est en lecture seule.</summary>
      <returns>Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>Représente un GUID à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre de tableau d'octets fourni.</summary>
      <param name="value">Tableau d'octets.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre <see cref="T:System.Guid" /> spécifié.</summary>
      <param name="g">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide des valeurs spécifiées.</summary>
      <param name="a">Quatre premiers octets de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b">Deux octets suivants de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c">Deux octets suivants de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre <see cref="T:System.String" /> spécifié.</summary>
      <param name="s">Objet <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>Compare cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> avec le <see cref="T:System.Data.SqlTypes.SqlGuid" /> fourni et retourne une indication de leurs valeurs relatives. Ne se limite pas à comparer les 6 derniers octets, mais traite les 6 derniers octets comme les plus significatifs dans les comparaisons.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>Compare cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'objet fourni et retourne une indication de leurs valeurs relatives. Ne se limite pas à comparer les 6 derniers octets, mais traite les 6 derniers octets comme les plus significatifs dans les comparaisons.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" />).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlGuid" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>Retourne le code de hachage de cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Objet <see langword="SqlBinary" />.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> fourni en <see cref="T:System.Guid" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>Nouveau <see cref="T:System.Guid" /> égal à la propriété <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>Convertit le paramètre <see cref="T:System.Guid" /> fourni en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x">
        <see cref="T:System.Guid" />
      </param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal au paramètre <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>Convertit la structure <see cref="T:System.String" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en tableau d'octets.</summary>
      <returns>Tableau d'octets représentant <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>Structure <see langword="SqlBinary" /> qui contient les octets de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient la représentation sous forme de chaîne de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si <see langword="null" />. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />. Cette propriété est en lecture seule.</summary>
      <returns>Structure <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>Représente un entier signé 16 bits à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'aide du paramètre de type Entier court fourni.</summary>
      <param name="value">Entier court.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet ou l'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt16" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>Compare l'objet spécifié à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Valeur <see cref="T:System.String" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt16" /> et retourne le reste.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Valeur <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>L'opérateur ~ effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le complément de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles sont égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> fournie en entier court.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Entier court dont la valeur est égale à la propriété Value du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la valeur représentée par le paramètre d'objet <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>Convertit l'entier court fourni en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Valeur de type Entier court.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> ayant la même valeur que l'entier court spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>L'opérateur ~ effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le complément de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>L'opérateur moins unaire rend le <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d’un nombre en entier signé 16 bits équivalent.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>Entier signé 16 bits équivalant à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Un schéma XML consommé par .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si la valeur de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est inférieure à 0 ou supérieure à 255, <see cref="T:System.OverflowException" /> se produit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.String" />.</summary>
      <returns>Objet <see cref="T:System.String" /> représentant la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> qui contient le résultat de l'opération XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />. Pour plus d’informations, consultez gestion des valeurs NULL.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>Obtient la valeur de cette instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" />. Cette propriété est en lecture seule.</summary>
      <returns>Entier court représentant la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>Représente un entier signé 32 bits à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'aide de la valeur entière fournie.</summary>
      <param name="value">Entier à convertir.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient la somme des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule l'opération de bits OR des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt32" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt32" /> et retourne le reste.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Valeur <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une opération de bits de complément à 1 sur la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiée.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de complément à 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient la somme des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule l'opération de bits OR des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une opération de bits OR exclusive sur les structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en entier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Valeur entière convertie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit la propriété <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit le <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>Convertit l'entier fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Valeur entière.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété Value est égale au paramètre de type Entier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une opération de bits de complément à 1 sur la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiée.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de complément à 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>Rend le <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt32" /> négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d'un nombre en entier signé 32 bits équivalent.</summary>
      <param name="s">
        <see cref="T:System.String" /> à analyser.</param>
      <returns>Entier signé 32 bits équivalant à la valeur qui figure dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si la valeur de <see langword="SqlInt32" /> est inférieure à 0 ou supérieure à 255, <see cref="T:System.OverflowException" /> se produit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>Convertit une structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.String" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.String" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>Effectue une opération de bits OR exclusive sur les structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> a la valeur Null.</summary>
      <returns>Cette propriété a la valeur <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété contient <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
      <returns>Entier représentant la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>Représente un entier signé 64 bits à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'aide de l'entier long fourni.</summary>
      <param name="value">Entier long.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt64" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt64" /> et retourne le reste.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Valeur <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres SqlInt64 pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> en entier long.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle valeur de type Entier long égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Convertit le paramètre de type Entier long en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Valeur de type Entier long.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la valeur du paramètre de type Entier long.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres SqlInt64 pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>L'opérateur moins unaire rend le <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt64" /> négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> négative du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d’un nombre en entier signé 64 bits équivalent.</summary>
      <param name="s">
        <see cref="T:System.String" /> à analyser.</param>
      <returns>Entier signé 64 bits équivalant à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.String" />.</summary>
      <returns>
        <see cref="T:System.String" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" />. Cette propriété est en lecture seule.</summary>
      <returns>Entier long représentant la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>Représente une valeur monétaire comprise entre -2 63 (ou -922 337 203 685 477,5808) et 2 63 -1 (ou +922 337 203 685 477,5807), avec une précision d’un dix millième d’unité monétaire, à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>Représente la valeur maximale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>Représente la valeur minimale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>Représente la valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur <see cref="T:System.Decimal" /> spécifiée.</summary>
      <param name="value">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur de type Double spécifiée.</summary>
      <param name="value">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur entière spécifiée.</summary>
      <param name="value">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur de type Entier long spécifiée.</summary>
      <param name="value">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L'opérateur de division divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlMoney" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l’objet est une instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> et s’ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>Obtient le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L’opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L'opérateur de division divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> par le second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> spécifiée en <see cref="T:System.Decimal" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>Convertit le paramètre <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Valeur <see cref="T:System.Decimal" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur du paramètre <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Int64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Int64" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur du paramètre <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L’opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L'opérateur de soustraction soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>L'opérateur moins unaire rend le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à rendre négative.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>Convertit la représentation <see cref="T:System.String" /> d'un nombre en équivalent <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="s">
        <see langword="String" /> à analyser.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>L'opérateur de soustraction soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> du premier.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>Convertit la propriété Value de cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en structure <see cref="T:System.Decimal" />.</summary>
      <returns>Structure <see cref="T:System.Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Double" />.</summary>
      <returns>Valeur de type Double égale à cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int32" />.</summary>
      <returns>Entier 32 bits dont la valeur est égale à la partie entière de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>Convertit la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />  en <see cref="T:System.Int64" />.</summary>
      <returns>Entier 64 bits dont la valeur est égale à la partie entière de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> est égale à zéro, la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est une chaîne représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en chaîne.</summary>
      <returns>Chaîne dont la valeur est une représentation de chaîne de la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>Retourne une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> a la valeur null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>Obtient la valeur monétaire d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La propriété a la valeur null.</exception>
      <returns>Valeur monétaire d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary>La classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant que classe à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="e">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="e">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>Représente un nombre à virgule flottante compris entre -3,40E +38 et 3,40E +38 à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>Représente la valeur maximale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>Représente la valeur minimale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>Représente la valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'aide du paramètre de type Double fourni.</summary>
      <param name="value">Valeur de type Double à utiliser en tant que <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Nombre à virgule flottante à utiliser en tant que <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divise la première structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> par la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see langword="SqlInt64" /> qui contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlSingle" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> et s'ils sont égaux. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>Obtient le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcule le produit des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Divise la première structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> par la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres SqlSingle pour déterminer s'ils sont égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>Cet opérateur implicite convertit le <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiée en valeur float.</summary>
      <param name="x">Valeur <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir en valeur float.</param>
      <returns>Valeur float qui contient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>Convertit la valeur à virgule flottante spécifiée en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x">Valeur float à convertir en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la valeur float spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Calcule le produit des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Soustrait la seconde structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la première.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>Rend le <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiée négatif.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> spécifié en structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s">
        <see cref="T:System.String" /> à analyser.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>Soustrait la seconde structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la première.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est <see langword="true" />, la <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> sera 1. sinon, <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égal à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouveau <see langword="SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouveau <see langword="SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouveau <see langword="SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.String" />.</summary>
      <returns>Objet <see langword="String" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" />. Cette propriété est en lecture seule.</summary>
      <returns>Valeur à virgule flottante comprise entre -3,40E+38 et 3,40E+38.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>Représente un flux de caractères de longueur variable à enregistrer dans une base de données ou à récupérer de celle-ci. <see cref="T:System.Data.SqlTypes.SqlString" /> possède une structure de données sous-jacentes différente de son type de données du .NET Framework <see cref="T:System.String" /> correspondant.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>Spécifie que les opérations de tri doivent être basées sur la valeur numérique des caractères plutôt que leur valeur alphabétique.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>Spécifie que les opérations de tri doivent être basées sur la valeur numérique du caractère plutôt que sa valeur alphabétique.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la casse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>Spécifie que le type Kana doit être ignoré durant la comparaison des chaînes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>Spécifie que les comparaisons de chaînes doivent ignorer les caractères d'association sans espace, par exemple les signes diacritiques.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>Spécifie que la largeur des caractères doit être ignorée durant la comparaison des chaînes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de l'identificateur de paramètres régionaux, des options de comparaison et des données spécifiés.</summary>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Tableau de données à enregistrer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Tableau de données à enregistrer.</param>
      <param name="fUnicode">
        <see langword="true" /> s'il est encodé en Unicode. Sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Tableau de données à enregistrer.</param>
      <param name="index">Index de début du tableau.</param>
      <param name="count">Nombre de caractères à copier à partir de l'index.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data">Tableau de données à enregistrer.</param>
      <param name="index">Index de début du tableau.</param>
      <param name="count">Nombre de caractères à copier à partir de l'index.</param>
      <param name="fUnicode">
        <see langword="true" /> s'il est encodé en Unicode. Sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne spécifiée.</summary>
      <param name="data">Chaîne à enregistrer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne et de l'identificateur de paramètres régionaux spécifiés.</summary>
      <param name="data">Chaîne à enregistrer.</param>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne, de l'identificateur de paramètres régionaux et des valeurs d'options de comparaison spécifiés.</summary>
      <param name="data">Chaîne à enregistrer.</param>
      <param name="lcid">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatène deux valeurs <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui correspond à la valeur concaténée de <paramref name="x" /> et de <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>Crée une copie de cet objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> dans lequel toutes les valeurs de propriétés sont identiques à celles d'origine.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Obtient l’énumération <see cref="T:System.Globalization.CompareOptions" /> équivalant à la valeur <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> spécifiée.</summary>
      <param name="compareOptions">Valeur <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> décrivant les options de comparaison de cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>Valeur <see langword="CompareOptions" /> correspondant à la valeur <see langword="SqlCompareOptions" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlString" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>Compare cet objet <see cref="T:System.Data.SqlTypes.SqlString" /> au <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns>Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.  
  
 <list type="table"><listheader><term> Valeur de retour</term><description> Condition</description></listheader><item><term> Inférieure à zéro</term><description> Cette instance est inférieure à l'objet.</description></item><item><term> Zéro</term><description> Cette instance est égale à l'objet.</description></item><item><term> Supérieure à zéro</term><description> Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</description></item></list></returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatène les deux structures <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur ainsi concaténée, représentant le contenu des deux paramètres <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlString" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l’objet est une instance de <see cref="T:System.Data.SqlTypes.SqlString" /> et s’ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>Obtient le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>Obtient un tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format ANSI.</summary>
      <returns>Tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>Obtient un tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format Unicode.</summary>
      <returns>Tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns>Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Concatène les deux structures <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur ainsi concaténée, représentant le contenu des deux paramètres <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns>Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDateTime" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see langword="SqlDecimal" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</param>
      <returns>Paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns>Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure SqlInt32 à convertir.</param>
      <returns>Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns>Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>Convertit un <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns>
        <see langword="String" /> dont le contenu est identique à celui de la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>Convertit le paramètre <see cref="T:System.String" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x">
        <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur du <see langword="String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns>Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>Nouvelle structure <see langword="SqlByte" /> dont <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égal au nombre représenté par cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>Nouvelle structure <see langword="SqlDateTime" /> qui contient la valeur de date représentée par ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient la valeur de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est le <see langword="Guid" /> représenté par cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>Convertit un objet <see cref="T:System.Data.SqlTypes.SqlString" /> en un <see cref="T:System.String" /></summary>
      <returns>
        <see cref="T:System.String" /> ayant la même valeur que cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>Obtient l'objet <see cref="T:System.Globalization.CompareInfo" /> qui définit les options de comparaison de chaînes pour cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Objet <see langword="CompareInfo" /> qui définit les options de comparaison de chaînes pour cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>Obtient la structure <see cref="T:System.Globalization.CultureInfo" /> qui représente les informations sur la culture de cet objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Structure <see cref="T:System.Globalization.CultureInfo" /> qui décrit des informations sur la culture de cette structure SqlString, notamment les noms de la culture, le système d'écriture, le calendrier utilisé, et donne accès à des objets spécifiques à la culture fournissant des méthodes pour des opérations courantes telles que le formatage des dates et le tri des chaînes.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur Null.</summary>
      <returns>
        <see langword="true" />, si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlString.Null" />. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>Spécifie les paramètres régionaux géographiques et la langue de la structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Identificateur de paramètres régionaux de la chaîne enregistrée dans la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>Combinaison d'une ou de plusieurs valeurs d'énumération <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> qui représente la façon dont ce <see cref="T:System.Data.SqlTypes.SqlString" /> doit être comparé à d'autres structures <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>Valeur spécifiant comment ce <see cref="T:System.Data.SqlTypes.SqlString" /> doit être comparé à d'autres structures <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>Obtient la chaîne enregistrée dans cette structure <see cref="T:System.Data.SqlTypes.SqlString" />. Cette propriété est en lecture seule.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">La valeur de cette chaîne est <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
      <returns>Chaîne enregistrée.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>Exception levée si la définition d'une valeur de structure <see cref="N:System.Data.SqlTypes" /> entraîne la troncation de cette valeur.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> avec un message d'erreur spécifié et une référence à <see cref="T:System.Exception" />.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="e">Référence à un <see cref="T:System.Exception" /> interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>Classe d'exceptions de base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec des données sérialisées.</summary>
      <param name="si">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="sc">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
      <param name="e">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>Représente des données XML stockées dans un serveur ou récupérées de celui-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>Crée une instance <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" />, en fournissant la valeur XML à partir de l'instance dérivée de <see cref="T:System.IO.Stream" />.</summary>
      <param name="value">Instance dérivée de <see cref="T:System.IO.Stream" /> (telle que <see cref="T:System.IO.FileStream" />) à partir de laquelle le contenu XML de l'instance de <see cref="T:System.Data.SqlTypes.SqlXml" /> doit être chargé.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>Crée une nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" /> et l'associe au contenu du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="value">Instance de classe dérivée de <see cref="T:System.Xml.XmlReader" /> à utiliser comme valeur de la nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>Obtient la valeur du contenu XML de ce <see cref="T:System.Data.SqlTypes.SqlXml" /> en tant que <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">Une tentative d'accès à cette propriété sur une instance null de <see cref="T:System.Data.SqlTypes.SqlXml" /> a été effectuée.</exception>
      <returns>Instance dérivée de <see cref="T:System.Xml.XmlReader" /> qui contient le contenu XML. Le type réel peut varier (par exemple, la valeur de retour peut être <see cref="T:System.Xml.XmlTextReader" />) en fonction de la représentation interne des informations, sur le serveur.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary>Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns>Chaîne qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l'objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et consommé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r">Un XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer">Un XmlWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>Indique si cette instance représente une valeur <see cref="T:System.Data.SqlTypes.SqlXml" /> null.</summary>
      <returns>
        <see langword="true" /> si <see langword="Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>Représente une instance null du type <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Instance Null du type <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>Obtient la représentation sous forme de chaîne du contenu XML de cette instance de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>Représentation sous forme de chaîne du contenu XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary>L'énumération <see cref="T:System.Data.SqlTypes.StorageState" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant qu'énumération à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary>Taille de la mémoire tampon.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary>Flux.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary>Mémoire tampon non managée.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>Fournit des données destinées à l'événement de changement d'état d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.StateChangeEventArgs" /> quand l’état actuel et l’état d’origine de l’objet ont été fournis.</summary>
      <param name="originalState">Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState">Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>Obtient le nouvel état de la connexion. L’objet de connexion est déjà dans le nouvel état quand l’événement est déclenché.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>Obtient l’état d’origine de la connexion.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Data.StateChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>Fournit des informations supplémentaires pour l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>Crée une instance de la classe <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount">Indique le nombre de lignes affectées par l’instruction qui a provoqué l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>Indique le nombre de lignes affectées par l’instruction qui a provoqué l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns>Nombre de lignes affectées.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>Type délégué pour les gestionnaires d’événements de l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Données de l'événement.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>Spécifie le type de requête SQL à utiliser par la classe <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> ou <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary>Requête SQL qui est une instruction par lots.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>Requête SQL qui est une instruction DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>Requête SQL qui est une instruction INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>Requête SQL qui est une instruction SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>Requête SQL qui est une instruction UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>Exception levée par un <see cref="T:System.Data.DataSet" /> fortement typé lorsque l'utilisateur accède à une valeur <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec les informations de sérialisation et le contexte de diffusion en continu spécifiés.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec la chaîne spécifiée.</summary>
      <param name="message">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>Représente l'exception levée lorsque la propriété <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> contient une erreur de syntaxe.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Données nécessaires pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Source et destination d'un flux sérialisé spécifique.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary>Ce type est utilisé comme classe de base pour la génération d’objets <see cref="T:System.Data.DataTable" /> typés par Visual Studio et l’outil .NET Framework XSD.exe. Il n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <typeparam name="T">Type d’objets dans la séquence source représentée par la table, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary>Initialise un nouveau <see cref="T:System.Data.TypedTableBase`1" />. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Ce type n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise un nouveau <see cref="T:System.Data.TypedTableBase`1" />. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient des données pour construire l'objet.</param>
      <param name="context">Contexte de transmission de l’objet en cours de désérialisation.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary>Convertit les éléments d’un objet <see cref="T:System.Data.TypedTableBase`1" /> vers le type spécifié. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <typeparam name="TResult">Type dans lequel convertir les éléments.</typeparam>
      <returns>Objet <see cref="T:System.Data.EnumerableRowCollection" /> qui contient chaque élément de la séquence source convertie vers le type spécifié.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary>Retourne un énumérateur pour la <see cref="T:System.Data.DataRow" /> typée. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur pour la <see cref="T:System.Data.DataRow" /> typée. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary>Contient les méthodes d'extension pour la classe <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary>Énumère les éléments de ligne de données du <see cref="T:System.Data.TypedTableBase`1" /> et retourne un objet <see cref="T:System.Data.EnumerableRowCollection`1" />, où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />. Cet objet peut être utilisé dans une expression LINQ ou une requête de méthode.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> source à rendre énumérable.</param>
      <typeparam name="TRow">Type vers lequel convertir les éléments de la source.</typeparam>
      <returns>Objet <see cref="T:System.Data.EnumerableRowCollection`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary>Retourne l'élément situé à une ligne spécifiée dans une séquence ou une valeur par défaut si la ligne est hors limites.</summary>
      <param name="source">Objet énumérable à partir duquel retourner un élément.</param>
      <param name="index">Index de base zéro de l'élément à récupérer.</param>
      <typeparam name="TRow">Type des éléments ou de la ligne.</typeparam>
      <returns>Élément situé sur une ligne spécifique d'une séquence.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary>Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary>Projette chaque élément d'un <see cref="T:System.Data.TypedTableBase`1" /> dans un nouveau formulaire.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> sur lesquels appeler une fonction de transformation.</param>
      <param name="selector">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" />
      <returns>
        <see cref="T:System.Data.EnumerableRowCollection`1" /> dont les éléments résultent d'un appel de la fonction de transformation sur chaque élément de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary>Filtre une séquence de lignes en fonction du prédicat spécifié.</summary>
      <param name="source">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à filtrer.</param>
      <param name="predicate">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TRow">Type des éléments de ligne dans <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns>
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> qui contient les lignes de la séquence d'entrée qui satisfont la condition.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>Représente une restriction sur un ensemble de colonnes dans lesquelles toutes les valeurs doivent être uniques.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le tableau d'objets <see cref="T:System.Data.DataColumn" /> donné.</summary>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom et le <see cref="T:System.Data.DataColumn" /> spécifiés.</summary>
      <param name="name">Nom de la contrainte.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, le <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name">Nom de la contrainte.</param>
      <param name="column">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom et le tableau d'objets <see cref="T:System.Data.DataColumn" /> spécifiés.</summary>
      <param name="name">Nom de la contrainte.</param>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name">Nom de la contrainte.</param>
      <param name="columns">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name">Nom de la contrainte.</param>
      <param name="columnNames">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>Compare cette contrainte à une seconde contrainte pour déterminer si elles sont identiques.</summary>
      <param name="key2">Objet avec lequel ce <see cref="T:System.Data.UniqueConstraint" /> est comparé.</param>
      <returns>
        <see langword="true" /> si les contraintes sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>Obtient le code de hachage de cette instance de l'objet <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>Obtient le tableau des colonnes affectées par cette contrainte.</summary>
      <returns>Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>Obtient une valeur indiquant si la contrainte est sur une clé primaire.</summary>
      <returns>
        <see langword="true" /> si la contrainte affecte une clé primaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>Obtient le tableau auquel appartient cette contrainte.</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> auquel appartient la contrainte.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>Spécifie la façon dont les résultats des commandes de requêtes sont appliqués à la ligne en cours de mise à jour.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>Les paramètres de sortie et la première ligne retournée sont mappés à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>Les données de la première ligne retournée sont mappées à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>Tous les paramètres et toutes les lignes retournés sont ignorés.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>Les paramètres de sortie sont mappés à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>Spécifie l’action à effectuer concernant la ligne en cours et les lignes restantes au cours d’un <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>
        <see cref="T:System.Data.Common.DataAdapter" /> doit continuer à traiter les lignes.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>Le gestionnaire d’événements indique que la mise à jour doit être traitée comme une erreur.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>La ligne actuelle et toutes les lignes restantes ne doivent pas être mises à jour.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>La ligne actuelle ne doit pas être mise à jour.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>Représente l'exception qui est levée lorsque vous essayez de retourner une version d'un <see cref="T:System.Data.DataRow" /> déjà supprimé.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec les informations de sérialisation.</summary>
      <param name="info">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec la chaîne spécifiée.</summary>
      <param name="s">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>Spécifie la façon de lire les données XML et un schéma relationnel dans un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>Mode lecture par défaut.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>Lit un DiffGram en affectant les modifications du DiffGram au <see cref="T:System.Data.DataSet" />. La sémantique est identique à celle d'une opération <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Comme lors de l'opération <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, les valeurs <see cref="P:System.Data.DataRow.RowState" /> sont conservées. L'entrée pour <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> à l'aide de DiffGrams doit uniquement être obtenue en utilisant la sortie de <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> en tant que DiffGram.
        
Le <see cref="T:System.Data.DataSet" /> cible doit avoir le même schéma que le <see cref="T:System.Data.DataSet" /> sur lequel est appelé <see cref="Overload:System.Data.DataSet.WriteXml" /> en tant que DiffGram. Sinon, l’opération de fusion du DiffGram échoue et une exception est levée.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>Lit des fragements XML, tels ceux qui sont générés suite à l'exécution de requêtes FOR XML, sur une instance de SQL Server. Lorsque la valeur de <see cref="T:System.Data.XmlReadMode" /> est <see langword="Fragment" />, l'espace de noms par défaut est lu en tant que schéma inline.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>Ignore tout schéma inline et lit les données dans le schéma <see cref="T:System.Data.DataSet" /> existant. Si des données ne correspondent pas au schéma existant, elles sont ignorées (y compris les données d'espaces de noms différents définis pour le <see cref="T:System.Data.DataSet" />). Si les données sont un DiffGram, <see langword="IgnoreSchema" /> fonctionne comme <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>Ignore tout schéma inline, déduit le schéma à partir des données et charge ces dernières. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, le schéma en cours est étendu par l'ajout de nouveaux tableaux ou l'ajout de colonnes aux tableaux existants. Une exception est levée si le tableau déduit existe déjà avec un espace de noms différent, ou si une ou plusieurs des colonnes obtenues entrent en conflit avec des colonnes existantes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary>Ignore tout schéma inline, déduit un schéma fortement typé à partir des données et charge ces dernières. Si le type ne peut pas être déduit à partir des données, il est interprété en tant que données de type chaîne. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, le schéma en cours est étendu par l'ajout de nouveaux tableaux ou l'ajout de colonnes aux tableaux existants. Une exception est levée si le tableau déduit existe déjà avec un espace de noms différent, ou si une ou plusieurs des colonnes obtenues entrent en conflit avec des colonnes existantes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>Lit tout schéma inline et charge les données. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, de nouveaux tableaux peuvent être ajoutés à ce dernier, mais une exception est levée si un tableau du schéma inline existe déjà dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>Spécifie la façon de lire des données XML et un schéma relationnel à partir de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>Écrit l'ensemble de l'objet <see cref="T:System.Data.DataSet" /> en tant que DiffGram, y compris les valeurs d'origine et actuelle. Pour générer un DiffGram contenant uniquement les valeurs modifiées, appelez <see cref="M:System.Data.DataSet.GetChanges" />, puis appelez <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> en tant que DiffGram sur le <see cref="T:System.Data.DataSet" /> retourné.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>Écrit le contenu actuel de <see cref="T:System.Data.DataSet" /> en tant que données XML, sans schéma XSD. Si aucune donnée n'est chargée dans <see cref="T:System.Data.DataSet" />, aucun élément n'est écrit.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>Écrit le contenu actuel de <see cref="T:System.Data.DataSet" /> en tant que données XML, avec la structure relationnelle comme schéma XSD inline. Si <see cref="T:System.Data.DataSet" /> comporte uniquement un schéma sans données, seul le schéma inline est écrit. Si <see cref="T:System.Data.DataSet" /> n'a pas de schéma en cours, aucun élément n'est écrit.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>Permet le stockage, la récupération et la manipulation de données structurées par l'entremise d'un <see cref="T:System.Data.DataSet" /> relationnel.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDataDocument" /> avec le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataset">
        <see langword="DataSet" /> à charger dans <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>Crée un doublon du nœud en cours.</summary>
      <param name="deep">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns>Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crée un élément avec les <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix">Préfixe du nouvel élément. Dans le cas de String.Empty ou de <see langword="null" />, il n'y a aucun préfixe.</param>
      <param name="localName">Le nom local du nouvel élément.</param>
      <param name="namespaceURI">URI (Uniform Resource Identifier) de l'espace de noms du nouvel élément. Dans le cas de String.Empty ou de <see langword="null" />, il n'y a aucun namespaceURI.</param>
      <returns>Nouveau <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>Crée un élément <see cref="T:System.Xml.XmlEntityReference" /> avec le nom spécifié.</summary>
      <param name="name">Nom de la référence d'entité.</param>
      <exception cref="T:System.NotSupportedException">Appel de cette méthode.</exception>
      <returns>
        <see cref="T:System.Xml.XmlEntityReference" /> portant le nom spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document. <see langword="XPathNavigator" /> est placé sur le nœud spécifié dans le paramètre <paramref name="node" />.</summary>
      <param name="node">Élément <see cref="T:System.Xml.XmlNode" /> sur lequel vous voulez que le navigateur soit initialement positionné.</param>
      <returns>
        <see langword="XPathNavigator" /> permettant de naviguer dans le document.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>Obtient l'élément <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié. Cette méthode n'est pas prise en charge par la classe <see cref="T:System.Xml.XmlDataDocument" />. L'appel de cette méthode lève une exception.</summary>
      <param name="elemId">ID d'attribut avec lequel établir une correspondance.</param>
      <exception cref="T:System.NotSupportedException">Appel de cette méthode.</exception>
      <returns>
        <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>Récupère le <see cref="T:System.Xml.XmlElement" /> associé au <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="r">
        <see langword="DataRow" /> dont vous voulez récupérer le <see langword="XmlElement" /> associé.</param>
      <returns>
        <see langword="XmlElement" /> contenant une représentation du <see langword="DataRow" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary>Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlDocument.Name" /> spécifié.</summary>
      <param name="name">Nom qualifié à trouver. Il est comparé à la propriété <see cref="P:System.Xml.XmlDocument.Name" /> du nœud correspondant. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <returns>Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>Récupère le <see cref="T:System.Data.DataRow" /> associé au <see cref="T:System.Xml.XmlElement" /> spécifié.</summary>
      <param name="e">
        <see langword="XmlElement" /> dont vous voulez récupérer le <see langword="DataRow" /> associé.</param>
      <returns>
        <see langword="DataRow" /> contenant une représentation de <see langword="XmlElement" /> ; <see langword="null" /> s'il n'y a pas de <see langword="DataRow" /> associé à <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>Charge le <see langword="XmlDataDocument" /> à partir du flux spécifié.</summary>
      <param name="inStream">Flux contenant le document XML à charger.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>Charge le <see langword="XmlDataDocument" /> à partir du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="txtReader">L'élément <see langword="TextReader" /> utilisé pour introduire les données XML dans le document.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>Charge le <see langword="XmlDataDocument" /> à partir de l'URL spécifiée.</summary>
      <param name="filename">URL du fichier contenant le document XML à charger.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>Charge le <see langword="XmlDataDocument" /> à partir du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader">
        <see langword="XmlReader" /> contenant le document XML à charger.</param>
      <exception cref="T:System.NotSupportedException">Le XML en cours de chargement contient des références d'entités et le lecteur ne peut pas résoudre les entités.</exception>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>Obtient un <see cref="T:System.Data.DataSet" /> qui fournit une représentation relationnelle des données dans <see langword="XmlDataDocument" />.</summary>
      <returns>
        <see langword="DataSet" /> pouvant être utilisé pour accéder aux données contenues dans le <see langword="XmlDataDocument" /> à l'aide d'un modèle relationnel.</returns>
    </member>
  </members>
</doc>