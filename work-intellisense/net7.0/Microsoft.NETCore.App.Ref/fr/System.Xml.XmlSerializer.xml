<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Spécifie différentes options à utiliser lors de la génération de types .NET pour une utilisation avec un service web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Active la liaison de données.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Crée des événements pour l'appel asynchrone de méthodes Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Crée des méthodes Begin et End pour l'appel asynchrone de méthodes Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Génère un code de sérialisation classé explicitement comme spécifié par le biais de la propriété <see langword="Order" /> des attributs <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> et <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Représente les types primitifs par propriétés.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Représente les types primitifs par champs et les types primitifs par types d'espaces de noms <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Fournit des méthodes statiques pour convertir le texte d'entrée en noms pour les entités de code.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Produit une chaîne de casse mixte à partir d'une chaîne d'entrée.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Version de casse mixte de la chaîne de paramètre.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Produit une chaîne de casse Pascal à partir d'une chaîne d'entrée.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Version de casse Pascal de la chaîne de paramètre.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Produit un nom d'entité de code valide à partir d'une chaîne d'entrée.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Chaîne qui peut être utilisée comme un identificateur de code, tel que le nom d'un paramètre de méthode.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Gère un groupe de noms pour les entités de code connexes ou mappages de type qui sont générés par l'infrastructure de sérialisation XML du .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> et détermine si les identificateurs de code respectent la casse.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les identificateurs respectent la casse ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Ajoute une entité de code nommée ou un mappage de type à la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Nom qui est utilisé pour indexer l'entité de code.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Informations sur l'entité de code ou le mappage de type.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Empêche un nom spécifié d'être utilisé dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nom qui ne sera pas disponible dans la portée de l’instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Ajoute une entité de code nommée ou un mappage de type à la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, ce qui permet de garantir que le nom est unique dans la portée.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Nom de candidat qui est utilisé pour indexer l'entité de code.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Informations sur l'entité de code ou le mappage de type.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Valeur de paramètre d'identificateur ou chaîne modifiée en cas de conflit d'attribution de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Supprime l'ensemble des entités de code ou mappages de type, y compris leurs noms, de la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Détermine si un nom spécifié est déjà utilisé dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nom à vérifier pour une utilisation dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom est déjà utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Garantit que la casse de l'entrée est correcte en modifiant le nom d'après la valeur de la propriété <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">Nom à modifier éventuellement.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Chaîne qui est identique à l'identificateur d'entrée ou dont la casse de la première lettre a été modifiée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Détermine si le nom d'entrée est en conflit avec un autre nom dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> et, le cas échéant, génère une chaîne modifiée.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">Nom à modifier s'il n'est pas déjà unique.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Valeur de paramètre d'identificateur ou chaîne modifiée en cas de conflit d'attribution de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Supprime de la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> l'entité de code ou le mappage de type identifié par le nom d'entrée.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">Nom des informations sur l'entité de code ou le mappage de type à supprimer.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Supprime le nom d'entrée des noms réservés de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nom qui sera rendu disponible dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Retourne un tableau d'entités de code ou de mappages de type dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">Type de l'ensemble des entités de code ou mappages de type pour l'instance.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Tableau des entités de code ou mappages de type qui sont stockés par l'objet <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Obtient ou définit une valeur qui indique si l'instance utilise la casse mixte.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" /> pour indiquer que l'instance utilise la casse mixte ; <see langword="false" /> pour indiquer que l'instance utilise la casse Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Décrit le contexte dans lequel un jeu de schéma est lié aux entités de code .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.ImportContext" /> pour les identificateurs de code donnés, avec l'option de partage de type donnée.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">Entités de code auxquelles le contexte s'applique.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Valeur <see cref="T:System.Boolean" /> qui détermine si les types personnalisés sont partagés parmi les schémas.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Obtient une valeur qui détermine si les types personnalisés sont partagés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les types personnalisés sont partagés parmi les schémas ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Obtient un jeu d'entités de code auxquelles le contexte s'applique.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> qui spécifie les entités de code auxquelles le contexte s'applique.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Obtient une collection d'avertissements qui sont générés lors de l'importation des descriptions des entités de code.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">
        <see cref="T:System.Collections.Specialized.StringCollection" /> qui contient les avertissements qui ont été générés lors de l'importation des descriptions des entités de code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Crée une propriété <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> qui est utilisée par l'infrastructure .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Obtient ou définit si l'espace blanc et les valeurs d'attribut sont normalisés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'espace blanc et les valeurs d'attribut sont normalisés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Obtient ou définit le mode de gestion de l'espace blanc lors de l'analyse XML.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Membre de l'énumération <see cref="T:System.Xml.WhitespaceHandling" /> qui décrit le mode de gestion de l'espace blanc lors de l'analyse XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Décrit un importateur de schéma.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser le membre de la classe comme un attribut encodé par SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> en utilisant la valeur spécifiée en tant que nom de l'attribut XML généré.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">Nom de l'attribut XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtient ou définit le nom de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">Nom de l'attribut XML. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtient ou définit le type de données XSD (XML Schema Definition) de l'attribut SOAP généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
      <returns vsli:raw="An XML Schema data type.">Type de données de schéma XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Obtient ou définit l'espace de noms XML de l'attribut XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Espace de noms XML de l'attribut XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Permet de substituer des attributs appliqués à des propriétés, des champs et des classes lorsque vous utilisez <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour sérialiser ou désérialiser un objet encodé par SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Ajoute <see cref="T:System.Xml.Serialization.SoapAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.SoapAttributes" /> contenue dans <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera <see cref="T:System.Xml.Serialization.SoapAttributes" />. Le paramètre <paramref name="member" /> spécifie le nom du membre à substituer.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nom du membre à substituer.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> représentant les attributs de substitution.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Ajoute <see cref="T:System.Xml.Serialization.SoapAttributes" /> à une collection d'objets <see cref="T:System.Xml.Serialization.SoapAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> représentant les attributs de substitution.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Obtient l'objet associé au type spécifié de classe de base.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à récupérer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui représente la collection des attributs de substitution.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Obtient l'objet associé au type spécifié de classe de base. Le paramètre <paramref name="member" /> indique le membre de la classe de base qui est substitué.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à substituer.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">Nom du membre substitué qui spécifie les <see cref="T:System.Xml.Serialization.SoapAttributes" /> à retourner.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui représente la collection des attributs de substitution.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Représente une collection d'objets attributs qui contrôlent la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise les méthodes SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> avec le type personnalisé spécifié.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Objet qui implémente l'interface <see cref="T:System.Reflection.ICustomAttributeProvider" />, tel que la classe <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Obtient ou définit le <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> à substituer.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> qui substitue le comportement de <see cref="T:System.Xml.Serialization.XmlSerializer" /> lorsque le membre est sérialisé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtient ou définit la valeur par défaut d'un élément XML ou d'un attribut XML.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Objet qui représente la valeur par défaut d'un élément XML ou d'un attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Obtient ou définit un <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> à substituer.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> à substituer.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération SOAP.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Objet qui spécifie la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre d'énumération.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Obtient ou définit une valeur spécifiant si <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou non un champ public ou une propriété comme du XML SOAP encodé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> ne doit pas sérialiser le champ ou la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Obtient ou définit un objet qui commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> la façon de sérialiser un type d'objet en XML SOAP encodé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> qui substitue un <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> appliqué à une déclaration de classe, ou est appliqué à une déclaration de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Spécifie que la valeur du membre public doit être sérialisée par <see cref="T:System.Xml.Serialization.XmlSerializer" /> comme un élément XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> et spécifie le nom de l'élément XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nom de l'élément XML du membre sérialisé.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Un des types de données de schéma XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre dont l'attribut <see langword="xsi:null" /> a la valeur "1."</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:null" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> en utilisant le nom d'élément spécifié.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Le nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Obtient ou définit la valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre d'énumération.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">Valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de ne pas sérialiser la valeur du champ public ou de la propriété en lecture/écriture publique.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Permet à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de reconnaître un type lorsqu'il sérialise ou désérialise un objet comme du XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> à l'aide du type spécifié.</summary>
      <param name="type" vsli:raw="The type of the object to include.">Type de l'objet à inclure.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Obtient ou définit le type de l'objet à utiliser lors de la sérialisation ou de la désérialisation d'un objet.</summary>
      <returns vsli:raw="The type of the object to include.">Type de l'objet à inclure.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Génère des mappages aux messages encodés selon le protocole SOAP d'informations de types .NET Framework ou de méthodes de service Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant un espace de noms XML par défaut pour les mappages de types importés.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions pour la sérialisation XML.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions de sérialisation XML et un espace de noms XML par défaut.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <paramref name="hasWrapperElement" /> est <see langword="true" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <paramref name="hasWrapperElement" /> est <see langword="true" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Espace de noms XML par défaut à utiliser.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Place des mappages pour un type dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">Type .NET Framework pour lequel des informations de mappage de type doivent être enregistrées.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Place des mappages pour des types dérivés dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Objet de réflexion <see cref="T:System.Reflection.ICustomAttributeProvider" /> qui contient des attributs personnalisés qui sont dérivés de l'attribut <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Représente certains attributs d’un élément XSD &lt;<see langword="part" />&gt; dans un document WSDL pour la génération de classes à partir du document.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Obtient ou définit une valeur qui correspond à l'attribut de nom de l'élément WSDL.</summary>
      <returns vsli:raw="The element name.">Nom de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Obtient ou définit une valeur qui correspond à l'attribut de type de l'élément WSDL.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui correspond au type XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Contrôle le schéma généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> lorsqu'une instance de classe est sérialisée comme du XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> et spécifie le nom du type XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> et spécifie le nom et l'espace de noms XML du type.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">Espace de noms XML du type.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Obtient ou définit une valeur qui indique si le type doit être inclus dans des documents de schéma XML encodés en SOAP.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour inclure le type dans les documents de schéma XML encodés en SOAP, sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtient ou définit l'espace de noms du type XML.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">Espace de noms du type XML. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtient ou définit le nom du type XML.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">Nom du type XML. La valeur par défaut est le nom de la classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Fournit des données pour l'objet connu, mais non référencé, trouvé dans un flux encodé XML SOAP lors de la désérialisation.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o" vsli:raw="The unreferenced object.">Objet non référencé.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Une chaîne unique permettant d’identifier l’objet non référencé.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Obtient l'ID de l'objet.</summary>
      <returns vsli:raw="The ID of the object.">ID de l'objet.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Obtient l'objet désérialisé mais non référencé.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">Objet désérialisé mais non référencé.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Ajoute un <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à ajouter.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> nouvellement ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Obtient une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié existe dans la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> qui vous intéresse.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Copie l'ensemble de la collection dans un tableau à une dimension des objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, en démarrant dans l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> unidimensionnel, qui constitue la destination des éléments copiés à partir de la collection. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Obtient l'index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> dont vous souhaitez obtenir l'index.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Insère un <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> dans la collection, à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">Index auquel <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> sera inséré.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à insérer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Supprime l’objet <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié de la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à supprimer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Index de <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre de classe particulier en tant que tableau d'éléments XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Obtient ou définit le nom d'élément XML donné au tableau sérialisé.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">Nom d'élément XML du tableau sérialisé. Par défaut, il s'agit du nom du membre auquel <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> est assigné.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Obtient ou définit une valeur qui indique si le nom d'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié ou non.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre comme balise XML vide lorsque l'attribut <see langword="xsi:nil" /> a la valeur <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Obtient ou définit l'espace de noms de l'élément XML.</summary>
      <returns vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns vsli:raw="The order of the code generation.">Ordre de la génération du code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Représente un attribut qui spécifie les types dérivés que le <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut placer dans un tableau sérialisé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Nom de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML et le <see cref="T:System.Type" /> qui peut être inséré dans le document XML généré.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Nom de l'élément XML.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> de l'objet à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le <see cref="T:System.Type" /> qui peut être inséré dans le tableau sérialisé.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> de l'objet à sérialiser.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Obtient ou définit le type de données XML de l'élément XML généré.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Type de données XSD (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Obtient ou définit une valeur qui indique si le nom de l'élément XML généré est qualifié.</summary>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">La propriété <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> est définie avec la valeur <see langword="XmlSchemaForm.Unqualified" /> et une valeur <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> est spécifiée.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre comme balise XML vide lorsque l'attribut <see langword="xsi:nil" /> a la valeur <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; sinon, <see langword="false" /> et aucune instance n'est générée. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Obtient ou définit l'espace de noms de l'élément XML généré.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">Espace de noms de l'élément XML généré.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Obtient ou définit le niveau dans une hiérarchie d'éléments XML affectés par <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">Index de base zéro d'un ensemble d'index dans un tableau de tableaux.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Obtient ou définit le type autorisé dans un tableau.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">
        <see cref="T:System.Type" /> autorisé dans le tableau.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Ajoute un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">Objet <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à ajouter à la collection.</param>
      <returns vsli:raw="The index of the added item.">Index de l'élément ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Détermine si la collection contient le <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient le <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Copie un tableau <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />  dans la collection, en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à copier dans la collection.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">Index à partir duquel les attributs commencent.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Retourne l'index de base zéro de la première occurrence du <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié dans la collection ou -1 si l'attribut n'est pas trouvé dans la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à rechercher dans la collection.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Premier index du <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dans la collection ou -1 si l'attribut n'est pas trouvé dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Insère un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dans la collection, à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">L'index dans lequel l'attribut est inséré.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à insérer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Supprime un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> de la collection, s'il en existe.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à supprimer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">Index de base zéro du membre de la collection à obtenir ou définir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Obtient un objet qui représente l'attribut XML inconnu.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Obtient une liste délimitée par des virgules de noms d'attributs XML supposés appartenir à une instance de document XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Liste délimitée par des virgules de noms d'attributs XML. Chaque nom est au format suivant: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Obtient le numéro de ligne de l'attribut XML inconnu.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">Numéro de ligne de l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Obtient la position sur la ligne de l'attribut XML inconnu.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">Numéro de position de l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtient l'objet en cours de désérialisation.</summary>
      <returns vsli:raw="The object being deserialized.">Objet désérialisé.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Représente la méthode qui gère <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Permet de substituer des attributs de propriété, de champ et de classe lorsque vous utilisez <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour sérialiser ou désérialiser un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Ajoute un objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.XmlAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet qui sera substitué. Le paramètre <paramref name="member" /> spécifie le nom du membre à substituer.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nom du membre à substituer.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs de substitution.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Ajoute un objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.XmlAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera l'objet <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs de substitution.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Obtient l'objet associé au type spécifié de classe de base.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente la collection d'attributs de substitution.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Obtient l'objet associé au type spécifié de classe de base. Le paramètre relatif au membre indique le membre de la classe de base qui est substitué.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">
        <see cref="T:System.Type" /> de la classe de base associé à la collection d'attributs souhaitée.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">Nom du membre substitué qui spécifie les <see cref="T:System.Xml.Serialization.XmlAttributes" /> à retourner.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente la collection d'attributs de substitution.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Représente une collection d'objets attributs qui contrôlent la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> et personnalise la manière dont le <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise un objet.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Classe qui peut fournir d'autres implémentations des attributs qui contrôlent la sérialisation XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> à substituer.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> à substituer.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Obtient la collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à substituer.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Objet <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> représentant la collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique retournant un tableau.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" />  sérialise un champ public ou une propriété en lecture/écriture publique qui retourne un tableau.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Obtient ou définit une collection d'objets qui spécifient comment <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les éléments qui sont insérés dans un tableau retourné par un champ public ou une propriété en lecture/écriture publique.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Objet <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> qui contient une collection d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique comme un attribut XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> qui contrôle la sérialisation d'un champ public ou d'une propriété en lecture/écriture publique en tant qu'attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Obtient ou définit un objet qui vous permet de faire la différence entre plusieurs options.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> pouvant être appliqué à un membre de la classe sérialisé en tant qu'élément <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtient ou définit la valeur par défaut d'un élément XML ou d'un attribut XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">
        <see cref="T:System.Object" /> qui représente la valeur par défaut d'un élément XML ou d'un attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Obtient une collection d'objets qui spécifient comment <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique en tant qu'élément XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> qui contient une collection d'objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Obtient ou définit une valeur qui spécifie si <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou non un champ public ou une propriété en lecture/écriture publique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> ne doit pas sérialiser le champ ou la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Obtient ou définit une valeur spécifiant si toutes les déclarations d'espace de noms doivent être conservées lors de substitution d'un objet qui contient un membre retournant un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les déclarations d'espace de noms doivent être conservées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une classe comme élément racine XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui substitue une classe attribuée comme élément racine XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Obtient ou définit un objet qui commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de sérialiser un champ public ou une propriété en lecture/écriture publique comme texte XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> qui substitue la sérialisation par défaut d'une propriété publique ou d'un champ public.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une classe à laquelle <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> a été appliqué.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> qui substitue un attribut <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> appliqué à une déclaration de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Spécifie que le membre peut être détecté à l'aide d'une énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">Nom du membre qui retourne l'énumération utilisée pour détecter un choix.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Obtient ou définit le nom du champ qui retourne l'énumération à utiliser lors de la détection des types.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">Le nom d'un champ qui retourne une énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Contient des champs qui peuvent être utilisés pour passer des délégués d'événement à une méthode <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> thread-safe de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Représente une collection d’objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> utilisée par <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour substituer la sérialisation par défaut d’une classe.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Ajoute un <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à ajouter.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">Index de base zéro du nouvel élément ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Détermine si la collection contient l'objet spécifié.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet existe dans la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Copie <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> ou une partie de celui-ci dans un tableau unidimensionnel.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">Tableau <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> pour contenir les éléments copiés.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Obtient l'index du <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> spécifié.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">Objet <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dont l'index est en cours de récupération.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Index de base zéro de <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Insère un <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dans la collection.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">Index de base zéro au niveau duquel le membre est inséré.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à insérer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Supprime l'objet spécifié de la collection.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à supprimer de la collection.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> n’est pas un index valide dans <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">La propriété est définie et <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> est en lecture seule.</exception>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Obtient l'objet qui représente l'élément XML inconnu.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">Objet qui représente l'élément XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Obtient une liste délimitée par des virgules de noms d'éléments XML supposés appartenir à une instance de document XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Liste délimitée par des virgules de noms d'éléments XML. Chaque nom est au format suivant: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtient le numéro de la ligne où l'élément inconnu a été trouvé si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Numéro de la ligne où l'élément inconnu a été trouvé si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtient l'emplacement dans la ligne auquel l'élément inconnu s'est produit si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Numéro dans la ligne auquel l'élément inconnu s'est produit si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Obtient l'objet en cours de désérialisation par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Objet en cours de désérialisation par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Permet à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de reconnaître un type lorsqu'il sérialise ou désérialise un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> de l'objet à inclure.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Obtient ou définit le type de l'objet à inclure.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> de l'objet à inclure.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Prend en charge les mappages entre les types .NET Framework et les types de données de schéma XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Définit la clé utilisée pour rechercher le mappage.</summary>
      <param name="key" vsli:raw="The lookup key.">La clé de recherche.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Obtient le nom de l’élément mappé.</summary>
      <returns vsli:raw="The name of the mapped element.">Nom de l'élément mappé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Obtient l'espace de noms de l'élément mappé.</summary>
      <returns vsli:raw="The namespace of the mapped element.">Espace de noms de l'élément mappé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Obtient le nom de l'élément XSD du mappage.</summary>
      <returns vsli:raw="The XSD element name.">Nom de l'élément XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Spécifie si un mappage est accessible en lecture, en écriture, ou les deux.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Les méthodes en lecture et en écriture sont toutes deux générées.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Les méthodes en lecture sont générées.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Les méthodes en écriture sont générées.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Mappe une entité de code dans une méthode de service Web .NET Framework à un élément dans un message WSDL (Web Services Description Language).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Obtient ou définit une valeur qui indique si le type .NET Framework correspond à un élément XML ou un attribut de tout type.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type correspond à un élément XML ou un attribut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Obtient une valeur qui indique si le champ associé dans le type .NET Framework a une valeur spécifiée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le champ associé a une valeur spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Obtient le nom non qualifié de la déclaration d'élément XML qui s'applique à ce mappage.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">Nom non qualifié de la déclaration d'élément XML qui s'applique à ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Obtient le nom du membre de méthode de service Web qui est représenté par ce mappage.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">Nom du membre de méthode de service Web représenté par ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Obtient l'espace de noms XML qui s'applique à ce mappage.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">Espace de noms XML qui s'applique à ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Obtient le nom de type qualifié complet du type .NET Framework pour ce mappage.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">Nom de type qualifié complet du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Obtient le nom du type .NET Framework pour ce mappage.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">Nom du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Obtient l'espace de noms du type .NET Framework pour ce mappage.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">Espace de noms du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Obtient le nom de l'élément XML comme il apparaît dans le document de description du service.</summary>
      <returns vsli:raw="The XML element name.">Nom d'élément XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fournit des mappages entre les méthodes de service Web .NET Framework et les messages WSDL qui sont définis pour les services Web SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Obtient le nombre d'entités de code .NET Framework qui appartiennent à une méthode de service Web à laquelle un message SOAP est mappé.</summary>
      <returns vsli:raw="The number of mappings in the collection.">Nombre de mappages dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Obtient un élément qui contient des informations de mappage de type interne pour une entité de code .NET Framework qui appartient à une méthode de service Web mappée à un message SOAP.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">Index du mappage à retourner.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">Objet <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> demandé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtient le nom du type .NET Framework qui est mappé au type de données d'un élément de schéma XML qui représente un message SOAP.</summary>
      <returns vsli:raw="The name of the .NET type.">Nom du type .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtient l'espace de noms du type .NET Framework qui est mappé au type de données d'un élément de schéma XML qui représente un message SOAP.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">Espace de noms .NET Framework du mappage.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Obtient le numéro de ligne du nœud XML inconnu.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">Numéro de ligne du nœud XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Obtient la position du nœud XML inconnu sur la ligne.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">Numéro de position du nœud XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Obtient le nom local XML du nœud XML en cours de désérialisation.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">Nom local XML du nœud en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Obtient le nom du nœud XML en cours de désérialisation.</summary>
      <returns vsli:raw="The name of the node being deserialized.">Nom du nœud en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Obtient l'URI d'espace de noms qui est associé au nœud XML en cours de désérialisation.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">URI d'espace de noms qui est associé au nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Obtient le type du nœud XML en cours de désérialisation.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">
        <see cref="T:System.Xml.XmlNodeType" /> qui représente le nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtient l'objet en cours de désérialisation.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Obtient le texte du nœud XML en cours de désérialisation.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">Texte du nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Génère des mappages aux déclarations d'élément de schéma XML, y compris des parties de messages XSD littérales dans un document WSDL, pour les types .NET Framework ou les informations de méthode de service Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> avec l'espace de noms XML par défaut spécifié.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> à l'aide des substitutions de sérialisation XML spécifiées.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Objet qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les types mappés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> à l'aide des substitutions de sérialisation XML spécifiées et de l'espace de noms XML par défaut.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Objet qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les types mappés.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Génère des mappages de types internes pour les informations rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> avec des mappages aux éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Retourne les mappages de types internes à l'aide des informations d'une méthode de service Web et vous permet de spécifier un nom d'élément XML, un espace de noms XML et d'autres options.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Retourne les mappages de types internes à l'aide des informations d'une méthode de service Web et vous permet de spécifier un nom d'élément XML, un espace de noms XML et d'autres options.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que le type de schéma généré sera marqué avec l’élément <see langword="&lt;xs:anyAttribute&gt;" /> ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Génère des mappages de types internes pour les informations rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier que le type de schéma généré sera marqué avec l’élément <see langword="&lt;xs:anyAttribute&gt;" /> ; sinon, <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. La valeur par défaut est <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Génère un mappage à un élément de schéma XML pour un type .NET Framework spécifié.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Génère un mappage à un élément de schéma XML pour un type .NET Framework, à l'aide du type et de l'espace de noms spécifiés.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Espace de noms XML par défaut à utiliser.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Génère un mappage à un élément de schéma XML pour un type .NET Framework, à l'aide du type et de l'attribut spécifiés.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Attribut <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui s'applique au type.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui représente un mappage d'un type .NET Framework à un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Génère un mappage à un élément de schéma XML pour un type .NET Framework à l'aide du type, de l'attribut et de l'espace de noms spécifiés.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Attribut <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui s'applique au type.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Espace de noms XML par défaut à utiliser.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui contient le mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Inclut des mappages pour un type pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">Type .NET Framework pour lequel des informations de mappage de type doivent être enregistrées.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Inclut des mappages pour des types dérivés pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Instance de la classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> qui contient des attributs personnalisés dérivés de l'attribut <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fournit des mappages entre les entités de code des méthodes de service Web .NET Framework et le contenu des messages WSDL qui sont définis pour les services Web SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> représente une valeur de retour de méthode de service Web, par opposition à un paramètre de sortie.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le membre représente une valeur de retour de service Web ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Obtient ou définit le nom du membre de méthode de service Web pour ce mappage.</summary>
      <returns vsli:raw="The name of the Web service method.">Nom de la méthode de service Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Obtient ou définit le type de l'entité de code du membre de méthode de service Web qui est représentée par ce mappage.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">
        <see cref="T:System.Type" /> de l'entité de code du membre de méthode de service Web qui est représentée par ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Obtient ou définit une valeur qui indique que la valeur de l’attribut <c>isNullable</c> de la définition de l’élément XML correspondant est <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour substituer la propriété <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Obtient ou définit <see cref="T:System.Xml.Serialization.SoapAttributes" /> avec la collection d'attributs associés à SOAP qui ont été appliqués à l'entité de code du membre.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui contient les objets qui représentent les attributs SOAP appliqués au membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Obtient ou définit <see cref="T:System.Xml.Serialization.XmlAttributes" /> avec la collection d'attributs associés à <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui ont été appliqués à l'entité de code du membre.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs XML qui ont été appliqués au code du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Permet d’effectuer une itération au sein d’une collection d’objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" /> que vous souhaitez parcourir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Avance l'énumérateur jusqu'à l'élément suivant de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le déplacement aboutit ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtient l’élément actuel dans la collection.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> actuel dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Obtient l'élément en cours dans la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Élément en cours dans la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Remplit des objets <see cref="T:System.Xml.Schema.XmlSchema" /> avec les déclarations d'élément de schéma XML qui se trouvent dans les objets de mappage de type.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> à laquelle les déclarations d'élément obtenues à partir de mappages de type sont ajoutées.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Exporte un élément <c>&lt;any&gt;</c> vers l’objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui est identifié par l’espace de noms spécifié.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">Espace de noms de document de schéma XML auquel ajouter un élément <c>&lt;any&gt;</c>.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Nom arbitraire assigné à la déclaration de l’élément <c>&lt;any&gt;</c>.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Ajoute une déclaration d'élément pour un objet ou type à un message SOAP ou à un objet <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient des mappages à exporter.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">Chaîne "any" avec un entier ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Ajoute une déclaration d'élément au <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour chacune des parties de l'élément d'une définition de message SOAP littérale.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Mappages de types .NET Framework internes pour les parties de l'élément d'une définition de message WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Ajoute une déclaration d'élément au <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour chacune des parties de l'élément d'une définition de message SOAP littérale, et spécifie si les éléments englobants sont inclus.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">Mappage interne entre un type .NET Framework et un élément de schéma XML.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments de schéma qui entourent le schéma doivent être inclus ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Ajoute une déclaration d'élément à l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour une seule partie de l'élément d'une définition de message SOAP littérale.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Mappages de types .NET Framework internes pour les parties de l'élément d'une définition de message WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom XML qualifié de la déclaration d'élément exportée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Ajoute une déclaration d'élément pour un type .NET Framework à l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> applicable.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">Mappage interne entre un type .NET Framework et un élément de schéma XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Génère des mappages internes aux types .NET Framework pour les déclarations d'élément de schéma XML, y compris des parties de messages XSD littérales dans un document WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> en prenant une collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui représentent les schémas XML utilisés par les messages littéraux SOAP définis dans un document WSDL.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> en prenant une collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui représentent les schémas XML utilisés par les messages littéraux SOAP, outre des classes générées pour les liaisons définies dans un document WSDL.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Objet <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> qui spécifie une collection de classes générées pour les liaisons définies dans un document WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Génère des informations de mappage de type interne pour une seule partie d'élément littérale (SOAP) définie dans un document WSDL.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom du type d'un élément pour lequel un type .NET Framework est généré.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">Nom de l'élément dans le document WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> représentant le mappage du type .NET Framework pour une seule partie d'élément d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Type de base pour le type .NET Framework qui est généré pour correspondre au type d'un élément XSD.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> représentant les informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML ou comme une partie dans un document WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Type de base pour le type .NET Framework qui est généré pour correspondre au type d'un élément XSD.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le type qui correspond à un élément XSD peut hériter indirectement du type de base ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">Nom de l'élément pour lequel un mappage doit être généré.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">Espace de noms de l'élément pour lequel un mappage doit être généré.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Tableau d'instances de <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> qui spécifie les membres de l'élément pour lequel un mappage doit être généré.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les informations de mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Génère des informations de mappage de type interne pour une seule partie d'élément d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom de la partie du message.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">Mappage du type .NET Framework pour une définition de message WSDL qui contient une seule partie d'élément.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Tableau de type <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie les noms des parties du message.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui représente les mappages de type .NET Framework pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Tableau de type <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie les noms des parties du message.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Type de base pour tous les types .NET Framework qui sont générés pour correspondre aux parties de message.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que les types qui correspondent aux parties de message peuvent hériter indirectement du type de base ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Mappages de type .NET Framework pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Objet <see cref="T:System.Type" /> qui spécifie un type de base.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Objet <see cref="T:System.Type" /> qui spécifie un type de base.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">Valeur <see cref="T:System.Boolean" /> qui spécifie si le type généré peut hériter indirectement de <paramref name="baseType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Représente la collection de schémas XL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Ajoute un objet à la fin de la collection.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter à la collection d'objets.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Index auquel <see cref="T:System.Xml.Schema.XmlSchema" /> est ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Ajoute un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui représente une référence d'assembly à la collection.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">
        <see cref="T:System.Uri" /> de l'objet de schéma.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Index auquel <see cref="T:System.Xml.Schema.XmlSchema" /> est ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Ajoute une instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> à la fin de la collection.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Ajoute un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui représente une référence d'assembly à la collection.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Traite l'élément et les noms d'attributs dans les schémas XML et valide les schémas XML (facultatif).</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui spécifie la méthode de rappel qui gère les erreurs et les avertissements pendant la validation du schéma XML, si le paramètre strict est <see langword="true" />.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour valider les schémas XML dans la collection à l'aide de la méthode <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Retourne une valeur qui indique si la collection contient un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui appartient à l'espace de noms spécifié.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">Espace de noms de l'élément à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément est trouvé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Détermine si <see cref="T:System.Xml.Serialization.XmlSchemas" /> contient un schéma spécifique.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient l'élément spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Copie l'ensemble du <see cref="T:System.Xml.Serialization.XmlSchemas" /> dans un <see cref="T:System.Array" /> unidimensionnel compatible en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> à une dimension qui est la destination des éléments copiés à partir de <see cref="T:System.Xml.Serialization.XmlSchemas" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">Entier 32 bits qui représente l'index du tableau à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Localise dans l'un des schémas XML un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> du nom et du type spécifiés.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un nom qualifié complet avec un espace de noms utilisé pour localiser un objet <see cref="T:System.Xml.Schema.XmlSchema" /> dans la collection.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">
        <see cref="T:System.Type" /> de l'objet à rechercher. Les types possibles sont notamment <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Instance de <see cref="T:System.Xml.Schema.XmlSchemaObject" />, telle que <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Obtient une collection des schémas qui appartiennent au même espace de noms.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">Espace de noms des schémas à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Implémentation de <see cref="T:System.Collections.IList" /> qui contient les schémas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Recherche le schéma spécifié et retourne l'index de base zéro de la première occurrence dans l'ensemble du <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à rechercher.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">Index de base zéro de la première occurrence de la valeur dans le <see cref="T:System.Xml.Serialization.XmlSchemas" /> entier, si cette occurrence existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Insère un schéma dans <see cref="T:System.Xml.Serialization.XmlSchemas" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="schema" /> doit être inséré.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à insérer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Méthode statique qui détermine si le schéma XML spécifié contient un attribut personnalisé <see langword="IsDataSet" /> qui a la valeur de <see langword="true" />, ou son équivalent.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">Schéma XML à vérifier pour un attribut <see langword="IsDataSet" /> qui a la valeur de <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le schéma spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Effectue des traitements personnalisés supplémentaires pendant l’effacement du contenu de l’instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires lors de la suppression d'un élément de l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">Valeur de l'élément à supprimer dans <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Supprime la première occurrence d'un schéma spécifique de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Retourne un énumérateur qui itère dans la collection de schémas XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Obtient une valeur qui indique si les schémas ont été compilés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des schémas ont été compilés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">Index de l'élément à récupérer.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Obtient un objet <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié qui représente le schéma XML associé à l'espace de noms spécifié.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">Espace de noms de l'objet.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation des types de données XML encodées selon le protocole SOAP qui correspondent aux collections ou énumérations.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">Collection dans laquelle le tableau des éléments de la collection est copié.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Tableau d'éléments à copier dans la <c>collection d’objets</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation de données XML encodées selon le protocole SOAP.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> qui contient l'objet à corriger et le tableau d'identificateurs de chaîne pour les éléments à remplir.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Classe abstraite qui est la classe de base pour <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> et <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> et contient des méthodes communes aux deux types.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation de types de données encodées selon le protocole SOAP ou de données XML qui ne sont pas situées à la racine.</summary>
      <returns vsli:raw="The object returned by the callback.">Objet retourné par le rappel.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Contrôle la désérialisation par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Stocke un objet qui contient une méthode de rappel qui sera appelée, si nécessaire, pour remplir les collections ou énumérations .NET Framework qui mappent aux tableaux encodés selon le protocole SOAP ou aux éléments référencés plusieurs fois et encodés selon le protocole SOAP.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> et données d'entrée de la méthode de rappel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Stocke un objet qui contient une instance de méthode de rappel qui sera appelée, si nécessaire, pour remplir des objets dans un tableau encodé selon le protocole SOAP.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> et données d'entrée de la méthode de rappel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Stocke une implémentation du délégué <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> et ses données d'entrée pour un appel ultérieur.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">Nom du type .NET Framework qui est désérialisé.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">Espace de noms du type .NET Framework qui est désérialisé.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">
        <see cref="T:System.Type" /> à désérialiser.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Stocke un objet qui est désérialisé à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP pour y accéder ultérieurement par le biais de la méthode <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Valeur de l'attribut <see langword="id" /> d'un élément <see langword="multiRef" /> qui identifie l'élément.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">Objet qui est désérialisé à partir de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Vérifie si le désérialiseur a avancé.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">
        <see langword="count" /> en cours dans une boucle while.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> actuel.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> n'a pas avancé.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Supprime toutes les occurrences d'espaces blancs à partir du début et de la fin de la chaîne spécifiée.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">Chaîne dont l'espace blanc sera tronqué.</param>
      <returns vsli:raw="The trimmed string.">Chaîne découpée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé doit être abstrait.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">Nom du type abstrait.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">Espace de noms .NET Framework du type abstrait.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Remplit un objet à partir de sa représentation XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />, avec la possibilité de lire l'élément interne.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">Nom local du type de données de schéma XML dérivé.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">Espace de noms du type de données de schéma XML dérivé.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">Nom local du type de données de schéma XML de base.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">Espace de noms du type de données de schéma XML de base.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">Espace de noms du type .NET Framework dérivé.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">Nom du type .NET Framework de base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé ne peut pas être instancié, car le constructeur lève une exception de sécurité.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nom du type.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé ne peut pas être instancié, car aucun constructeur n'est disponible.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nom du type.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crée un <see cref="T:System.InvalidCastException" /> qui indique qu'une conversion de référence explicite a échoué.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Impossible d'effectuer un cast d'objet en <see cref="T:System.Type" />. Ce type est incorporé dans le message d'exception.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Objet qui ne peut pas faire l'objet d'un cast. Cet objet est incorporé dans le message d'exception.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crée un <see cref="T:System.InvalidCastException" /> qui indique qu'une conversion de référence explicite a échoué.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Impossible d'effectuer un cast d'objet en <see cref="T:System.Type" />. Ce type est incorporé dans le message d'exception.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Objet qui ne peut pas faire l'objet d'un cast. Cet objet est incorporé dans le message d'exception.</param>
      <param name="id" vsli:raw="A string identifier.">Identificateur de chaîne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type dérivé qui est mappé à un type de données de schéma XML ne peut pas être localisé.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">Nom local du type de données de schéma XML qui est mappé au type dérivé non disponible.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">Espace de noms du type de données de schéma XML qui est mappé au type dérivé non disponible.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">Nom complet du type de base .NET Framework pour lequel un type dérivé ne peut pas être localisé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type de collection encodé selon le protocole SOAP ne peut pas être modifié et ses valeurs ne peuvent pas être remplies.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">Nom qualifié complet du type .NET Framework pour lequel il existe un mappage.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'une valeur d'énumération n'est pas valide.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">Valeur d'énumération qui n'est pas valide.</param>
      <param name="enumType" vsli:raw="The enumeration type.">Type d'énumération.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique que la position actuelle de <see cref="T:System.Xml.XmlReader" /> représente un nœud XML inconnu.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type est inconnu.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom du type inconnu.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Garantit qu'un tableau donné, ou une copie, est assez grand pour contenir un index spécifié.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">
        <see cref="T:System.Array" /> en cours de vérification.</param>
      <param name="index" vsli:raw="The required index.">Index requis.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> des éléments du tableau.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">
        <see cref="T:System.Array" /> existant, si sa taille est suffisante ; sinon, un nouveau tableau plus grand qui contient les éléments du tableau d'origine.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Remplit les valeurs d'un tableau encodé selon le protocole SOAP dont le type de données mappe à un type référence .NET Framework.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Objet qui contient le tableau dont les valeurs sont remplies.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtient la longueur du tableau encodé selon le protocole SOAP où <see cref="T:System.Xml.XmlReader" /> est actuellement positionné.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">Nom local que le tableau doit porter.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">Espace de noms que le tableau doit avoir.</param>
      <returns vsli:raw="The length of the SOAP array.">Longueur du tableau SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Détermine si l'élément XML où le <see cref="T:System.Xml.XmlReader" /> est actuellement positionné a un attribut Null dont la valeur est <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> est actuellement positionné sur un attribut Null avec la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Obtient un objet qui est désérialisé à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP et était stocké précédemment par <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Valeur de l'attribut <see langword="id" /> d'un élément <see langword="multiRef" /> qui identifie l'élément.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Objet à désérialiser à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtient la valeur de l'attribut <see langword="xsi:type" /> pour l'élément XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Nom qualifié XML qui indique le type de données d'un élément XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Initialise des méthodes de rappel qui remplissent des objets qui mappent aux données XML encodées selon le protocole SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Stocke des noms d'éléments et d'attributs dans un objet <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Détermine si le nom d'un attribut XML indique un espace de noms XML.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">Nom d'un attribut XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom de l’attribut XML indique un espace de noms XML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Définit la valeur de l'attribut XML si son type est <see langword="arrayType" /> dans l'espace de noms WSDL.</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">
        <see cref="T:System.Xml.XmlAttribute" /> dont le type peut être <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Fait en sorte que <see cref="T:System.Xml.XmlReader" /> lise le nom qualifié complet de l'élément où il est actuellement positionné.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">Nom qualifié complet de l'élément XML actuel.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Fait en sorte que <see cref="T:System.Xml.XmlReader" /> lise une balise de fin XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire l'élément XML actuel si l'élément a un attribut Null avec la valeur true.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’élément a une valeur d’attribut <c>null="true"</c> et a été lu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire le nom qualifié complet de l'élément où il est actuellement positionné.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom qualifié complet de l’élément XML actuel ; sinon, <see langword="null" /> si une valeur d’attribut <c>null="true"</c> est présente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire un élément XML texte simple qui pourrait avoir la valeur <see langword="null" />.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valeur de la chaîne ; sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Lit la valeur de l'attribut <see langword="href" /> (attribut <see langword="ref" /> pour SOAP 1.2) qui est utilisé pour faire référence à un élément XML dans l'encodage SOAP.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur a été lue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Désérialise un objet d'un élément XML <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">Valeur de l'élément référencé dans le document.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Désérialise un objet d'un élément XML <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Espace de noms du type de données de schéma XML de l'élément.</param>
      <returns vsli:raw="The value of the referenced element in the document.">Valeur de l'élément référencé dans le document.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Désérialise des objets des éléments <see langword="multiRef" /> encodés selon le protocole SOAP dans un message SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Espace de noms du type de données de schéma XML de l'élément.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom d'élément est également le nom de type de données de schéma XML ; sinon, <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Chaîne de sortie dans laquelle la valeur de l'attribut <see langword="href" /> est lue.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Espace de noms du type de données de schéma XML de l'élément.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Remplit un objet à partir de sa représentation XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui correspond à la position actuelle de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> avec ses membres remplis à partir de l'emplacement de <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Objet IXmlSerializable qui correspond à la position actuelle du XMLReader.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Spécifie si l'objet sérialisable est inclus dans un wrapper.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Objet qui implémente l'interface IXmlSerializable avec ses membres remplis à partir de l'emplacement de XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Produit le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> ajouté à la valeur d'entrée.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Chaîne qui précède le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> ajouté à la valeur d'entrée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Retourne le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> de la classe <see cref="T:System.Xml.XmlReader" />, l'espace blanc étant tronqué si nécessaire, ajouté à la valeur d'entrée.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Chaîne qui sera ajoutée.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le résultat de l'opération de lecture doit être tronqué ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">Résultat de l'opération de lecture ajouté à la valeur d'entrée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Lit un élément XML qui autorise des valeurs Null (<see langword="xsi:nil = 'true'" />) et retourne une valeur <see cref="T:System.Nullable`1" /> générique.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le type de données simple pour l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">
        <see cref="T:System.Nullable`1" /> générique qui représente une valeur XML Null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtient la valeur du nœud XML auquel <see cref="T:System.Xml.XmlReader" /> est actuellement positionné.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le type de données simple pour l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">Valeur du nœud en tant que type valeur du .NET Framework, si la valeur est un type de données de schéma XML simple.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire un élément racine de document XML à sa position actuelle.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode doit lire le contenu uniquement après avoir lu l'élément de début de l'élément ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">
        <see cref="T:System.Xml.XmlDocument" /> qui contient l'élément racine qui a été lu.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire le nœud XML à sa position actuelle.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour lire le contenu uniquement après avoir lu l'élément de début de l'élément ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">
        <see cref="T:System.Xml.XmlNode" /> qui représente le nœud XML qui a été lu.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Stocke un objet à désérialiser à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">Objet à désérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtient un assembly généré dynamiquement par nom.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nom complet de l'assembly.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">
        <see cref="T:System.Reflection.Assembly" /> généré dynamiquement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Garantit qu'un tableau donné, ou une copie, ne dépasse pas une longueur spécifiée.</summary>
      <param name="a" vsli:raw="The array that is being checked.">Tableau en cours de vérification.</param>
      <param name="length" vsli:raw="The maximum length of the array.">Longueur maximale du tableau.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> des éléments du tableau.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" /> si <see langword="null" /> pour le tableau, si présent pour le tableau d'entrée, peut être retourné ; sinon, un nouveau tableau plus petit.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">
        <see cref="T:System.Array" /> existant, si sa taille est assez petite ; sinon, un nouveau tableau plus petit qui contient les éléments du tableau d’origine jusqu’à une taille de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire la valeur de chaîne à sa position actuelle et de la retourner sous la forme d'un tableau d'octets en base 64.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> pour retourner <see langword="null" /> ; <see langword="false" /> pour retourner un tableau d'octets en base 64.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Tableau d'octets en base 64 ; sinon, <see langword="null" /> si la valeur du paramètre <paramref name="isNull" /> est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Produit un tableau d'octets en base 64 d'une chaîne d'entrée.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Chaîne à traduire en tableau d'octets en base 64.</param>
      <returns vsli:raw="A base-64 byte array.">Tableau d'octets en base 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Demande à <see cref="T:System.Xml.XmlReader" /> de lire la valeur de chaîne à sa position actuelle et de la retourner sous la forme d'un tableau d'octets hexadécimal.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> pour retourner <see langword="null" /> ; <see langword="false" /> pour retourner un tableau d'octets hexadécimal.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Tableau d’octets hexadécimal ; sinon, <see langword="null" /> si la valeur du paramètre <paramref name="isNull" /> est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Produit un tableau d’octets hexadécimal à partir d’une chaîne d’entrée.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Chaîne à convertir en tableau d’octets hexadécimal.</param>
      <returns vsli:raw="A hexadecimal byte array.">Tableau d’octets hexadécimal.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Produit un objet <see cref="T:System.Char" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Chaîne à traduire en objet <see cref="T:System.Char" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Objet <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produit un objet <see cref="T:System.DateTime" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Chaîne à traduire en objet de classe <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produit un objet <see cref="T:System.DateTime" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Chaîne à traduire en objet <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Produit une valeur d'énumération numérique à partir d'une chaîne qui se compose d'identificateurs délimités qui représentent des constantes de la liste des énumérateurs.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Chaîne qui se compose d'identificateurs délimités, où chaque identificateur représente une constante dans la liste des énumérateurs définie.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">
        <see cref="T:System.Collections.Hashtable" /> qui se compose d'identificateurs en tant que clés et de constantes en tant que nombres intégraux.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">Nom du type énumération.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valeur longue qui se compose de la valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Produit <see cref="T:System.DateTime" /> à partir d'une chaîne qui représente l'heure.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Chaîne à traduire en objet <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Décode un nom XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nom XML à décoder.</param>
      <returns vsli:raw="A decoded string.">Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Décode un nom XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nom XML à décoder.</param>
      <returns vsli:raw="A decoded string.">Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Décode un nom XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nom XML à décoder.</param>
      <returns vsli:raw="A decoded string.">Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Décode un nom XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nom XML à décoder.</param>
      <returns vsli:raw="A decoded string.">Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Obtient <see cref="T:System.Xml.XmlQualifiedName" /> d'un nom qui peut contenir un préfixe.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Nom qui peut contenir un préfixe.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente un nom XML qualifié par un espace de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut en question.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut en question.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">
        <see cref="T:System.Object" /> qui est désérialisé.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" /> pour lequel un événement est déclenché.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" /> pour lequel un événement est déclenché.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">Objet qui est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object being deserialized.">Objet désérialisé.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Chaîne unique qui est utilisée pour identifier l'objet non référencé, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Obtient ou définit une valeur qui détermine si les chaînes XML sont traduites en noms de types .NET Framework valides.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les chaînes XML sont décodées en noms de types .NET Framework valides ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Obtient l'objet de document XML dans lequel le document XML est désérialisé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">
        <see cref="T:System.Xml.XmlDocument" /> qui représente les données <see cref="T:System.Xml.XmlDocument" /> désérialisées.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Obtient ou définit une valeur qui doit être <see langword="true" /> pour une valeur de retour SOAP 1.1.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" />, si la valeur est une valeur de retour.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Obtient l'objet <see cref="T:System.Xml.XmlReader" /> utilisé par <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" /> utilisé par <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtient le compte actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Compte actuel d'un <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Contient une instance de délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, plus les entrées de la méthode ; fournit également les paramètres de la méthode.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> avec des paramètres pour une méthode de rappel.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Collection dans laquelle la méthode de rappel copie le tableau des éléments de la collection.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Tableau dans lequel la méthode de rappel copie une collection.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Obtient la méthode de rappel qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> qui pointe vers la méthode de rappel.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Obtient la valeur <paramref name="object collection" /> pour la méthode de rappel.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">Collection qui est utilisée pour la correction.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Obtient le tableau dans lequel la méthode de rappel copie une collection.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">Tableau dans lequel la méthode de rappel copie une collection.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Stocke une instance de délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, ainsi que les entrées de la méthode ; est également utilisé comme paramètre pour la méthode.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Taille du tableau de chaînes obtenu par la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Tableau de chaînes obtenu par la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Obtient la méthode de rappel qui crée une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Méthode de rappel qui crée une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Obtient ou définit un tableau de clés pour les objets qui appartiennent à la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> dont les valeurs sont incluses par l'implémentation de rappel.</summary>
      <returns vsli:raw="The array of keys.">Tableau de clés.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Obtient ou définit l'objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">Source contenant des objets avec les valeurs à remplir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la sérialisation de types de données encodées selon le protocole SOAP ou de données XML qui ne sont pas situées à la racine.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objet sérialisé.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Représente une classe abstraite utilisée pour le contrôle de la sérialisation par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Stocke une implémentation du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> et du type auquel il s'applique, pour un appel ultérieur.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">
        <see cref="T:System.Type" /> des objets qui sont sérialisés.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">Nom du type des objets qui sont sérialisés.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">Espace de noms du type des objets qui sont sérialisés.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique un nom inattendu pour un élément qui adhère à une déclaration d'élément <see langword="choice" /> de schéma XML.</summary>
      <param name="value" vsli:raw="The name that is not valid.">Nom qui n'est pas valide.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">Déclaration d'élément <see langword="choice" /> à laquelle le nom appartient.</param>
      <param name="name" vsli:raw="The expected local name of an element.">Nom local attendu d'un élément.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">Espace de noms attendu d'un élément.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a été appliqué de façon incorrecte à un membre ; seuls les membres qui sont de type <see cref="T:System.Xml.XmlNode" /> ou dérivés de <see cref="T:System.Xml.XmlNode" /> sont valides.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">Objet qui représente le membre non valide.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a été appliqué de façon incorrecte à un membre ; seuls les membres qui sont de type <see cref="T:System.Xml.XmlNode" /> ou dérivés de <see cref="T:System.Xml.XmlNode" /> sont valides.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">
        <see cref="T:System.Type" /> qui est non valide.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique un échec lors de l'écriture d'un tableau auquel une déclaration d'élément <see langword="choice" /> de schéma XML est appliquée.</summary>
      <param name="type" vsli:raw="The type being serialized.">Type sérialisé.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Nom pour la déclaration d'élément <see langword="choice" />.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Crée <see cref="T:System.InvalidOperationException" /> pour une valeur d'énumération non valide.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Objet qui représente l'énumération non valide.</param>
      <param name="typeName" vsli:raw="The XML type name.">Nom de type XML.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'une valeur pour un élément XML ne correspond pas à un type énumération.</summary>
      <param name="value" vsli:raw="The value that is not valid.">Valeur qui n'est pas valide.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">Nom de l'élément XML avec une valeur non valide.</param>
      <param name="enumValue" vsli:raw="The valid value.">Valeur valide.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un élément XML qui doit adhérer à la déclaration d'élément <see langword="any" /> de schéma XML ne peut pas être traité.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">Élément XML qui ne peut pas être traité.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type qui est sérialisé n'est pas utilisé de façon valide ou est rencontré de façon inattendue.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">Objet dont le type ne peut pas être sérialisé.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type qui est sérialisé n'est pas utilisé de façon valide ou est rencontré de façon inattendue.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">Type qui ne peut pas être sérialisé.</param>
      <returns vsli:raw="The newly created exception.">Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Traite un tableau d'octets en base 64.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Tableau <see cref="T:System.Byte" /> en base 64.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">Même tableau d'octets qui a été passé comme un argument.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Produit une chaîne à partir d'un tableau d'octets hexadécimal d'entrée.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Tableau d'octets hexadécimal à traduire en une chaîne.</param>
      <returns vsli:raw="The byte array value converted to a string.">Valeur du tableau d'octets convertie en une chaîne.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Produit une chaîne à partir d'un <see cref="T:System.Char" /> d'entrée.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">
        <see cref="T:System.Char" /> à traduire en une chaîne.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">Valeur <see cref="T:System.Char" /> convertie en une chaîne.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produit une chaîne à partir d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">
        <see cref="T:System.DateTime" /> à traduire en une chaîne.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> qui affiche la date, mais pas l'heure.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Produit une chaîne à partir d'un <see cref="T:System.DateTime" /> d'entrée.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">
        <see cref="T:System.DateTime" /> à traduire en une chaîne.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> qui affiche la date et l'heure.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Produit une chaîne qui se compose d'identificateurs délimités qui représentent les membres de l'énumération qui ont été définis.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Valeurs de nom de l'énumération.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Valeurs de constante de l'énumération.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Chaîne qui se compose d'identificateurs délimités, où chacun représente un membre dans la liste des énumérateurs définie.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Prend une valeur d'énumération numérique ainsi que les noms et constantes de la liste des énumérateurs pour l'énumération et retourne une chaîne qui se compose d'identificateurs délimités qui représentent les membres de l'énumération qui ont été définis.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Valeurs de l'énumération.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">Constantes de l'énumération.</param>
      <param name="typeName" vsli:raw="The name of the type.">Nom du type</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Chaîne qui se compose d'identificateurs délimités, où chaque élément est l'une des valeurs définies par l'opération de bits.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produit une chaîne à partir d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">
        <see cref="T:System.DateTime" /> qui est traduit en une chaîne.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Représentation sous forme de chaîne de l'objet <see cref="T:System.DateTime" /> qui affiche l'heure, mais pas la date.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Encode un nom XML valide en remplaçant les caractères qui ne sont pas valides par des séquences d'échappement.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Chaîne à utiliser en tant que nom XML.</param>
      <returns vsli:raw="An encoded string.">Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Encode un nom local XML valide en remplaçant les caractères qui ne sont pas valides par des séquences d'échappement.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Chaîne à utiliser en tant que nom XML local (non qualifié).</param>
      <returns vsli:raw="An encoded string.">Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Encode un nom XML.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Nom XML à encoder.</param>
      <returns vsli:raw="An encoded string.">Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Encode une séquence de noms XML délimitée par des espaces dans un seul nom XML.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Séquence de noms XML délimitée par des espaces à encoder.</param>
      <returns vsli:raw="An encoded string.">Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Retourne un nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente les données XML à écrire.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Produit une chaîne qui peut être écrite comme un nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente les données XML à écrire.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ignorer les espaces vides dans la chaîne ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Initialise une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> pour sérialiser des données XML encodées selon le protocole SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtient un assembly généré dynamiquement par nom.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nom complet de l'assembly.</param>
      <returns vsli:raw="A dynamically generated assembly.">Assembly généré dynamiquement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Initialise des références d'objet uniquement lors de la sérialisation de message SOAP encodé selon le protocole SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML qui n'a aucun espace de noms spécifié pour son nom.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nom local de l'attribut XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Valeur de l'attribut XML sous la forme d'un tableau d'octets.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Demande à <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML qui n'a aucun espace de noms spécifié pour son nom.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nom local de l'attribut XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nom local de l'attribut XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Espace de noms de l'attribut XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Valeur de l'attribut XML sous la forme d'un tableau d'octets.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Écrit un attribut XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nom local de l'attribut XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Espace de noms de l'attribut XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Écrit un attribut XML où le préfixe d'espace de noms est fourni manuellement.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">Préfixe d'espace de noms à écrire.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nom local de l'attribut XML.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">Espace de noms représenté par le préfixe.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Écrit un objet nœud XML dans le corps d'un élément XML nommé.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nœud XML écrire, peut-être un élément XML enfant.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nom local de l'élément XML parent à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Espace de noms de l'élément XML parent à écrire.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le nœud, s'il s'agit d'un élément XML, adhère à une déclaration d'élément <see langword="any" /> de schéma XML ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un objet <see cref="T:System.Xml.XmlNode" /> dans le corps d'un élément XML nommé.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nœud XML écrire, peut-être un élément XML enfant.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nom local de l'élément XML parent à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Espace de noms de l'élément XML parent à écrire.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le nœud, s'il s'agit d'un élément XML, adhère à une déclaration d'élément <see langword="any" /> de schéma XML ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">Nom local de l'élément XML à écrire sans qualification d'espace de noms.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espace de noms de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nom local de l'élément XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valeur texte de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Écrit un élément XML dont le corps est vide.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Écrit un élément XML dont le corps est vide.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Écrit une balise d'élément <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Écrit une balise d'élément <see langword="&lt;closing&gt;" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Écrit un attribut <see langword="id" /> qui apparaît dans un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Écrit les attributs de déclaration d'espace de noms.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Espaces de noms XML à déclarer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML dont le corps contient un nom qualifié XML valide. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nom qualifié XML à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML dont le corps contient un nom qualifié XML valide. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nom qualifié XML à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Chaîne à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un tableau d'octets comme corps d'un élément XML. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Tableau d'octets à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Chaîne à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Chaîne à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un tableau d'octets comme corps d'un élément XML. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Tableau d'octets à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Chaîne à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser directement l'objet dans l'élément XML plutôt que de faire en sorte que l'élément fasse référence à un autre élément qui contient les données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser directement l'objet dans l'élément XML plutôt que de faire en sorte que l'élément fasse référence à un autre élément qui contient les données ; sinon, <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Sérialise des objets dans des éléments XML <see langword="multiRef" /> encodés selon le protocole SOAP dans un message SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Écrit un élément XML de message SOAP qui contient une référence à un élément <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nom local de l'élément de référence en cours d'écriture.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Espace de noms de l'élément de référence en cours d'écriture.</param>
      <param name="o" vsli:raw="The object being serialized.">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Écrit un élément XML de message SOAP qui contient une référence à un élément <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nom local de l'élément de référence en cours d'écriture.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Espace de noms de l'élément de référence en cours d'écriture.</param>
      <param name="o" vsli:raw="The object being serialized.">Objet sérialisé.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Écrit un élément de résultat RPC SOAP 1.2 avec un nom qualifié spécifié dans son corps.</summary>
      <param name="name" vsli:raw="The local name of the result body.">Nom local du corps du résultat.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">Espace de noms du corps du résultat.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Écrit un objet qui utilise la mise en forme XML personnalisée comme un élément XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui utilise la mise en forme XML personnalisée.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet de la classe <see cref="T:System.Xml.Serialization.IXmlSerializable" /> a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Demande à <see cref="T:System.Xml.XmlNode" /> d'écrire un objet qui utilise la mise en forme XML personnalisée comme un élément XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui utilise la mise en forme XML personnalisée.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet <see cref="T:System.Xml.Serialization.IXmlSerializable" /> a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> pour ignorer l'écriture de la balise d'élément d'ouverture ; <see langword="false" /> pour écrire la balise d'élément d'ouverture.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Écrit la déclaration XML si le writer est positionné au début d'un document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Objet qui est sérialisé comme un élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Objet qui est sérialisé comme un élément XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nom local de l'élément XML à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Espace de noms de l'élément XML à écrire.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Objet qui est sérialisé comme un élément XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> qui contient des paires espace de noms-préfixe à utiliser dans le XML généré.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Écrit un élément XML dont le corps de texte est une valeur d'un type de données de schéma XML simple.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">Nom local de l'élément à écrire.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">Espace de noms de l'élément à écrire.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">Objet à sérialiser dans le corps de l'élément.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément XML spécifie explicitement le type de la valeur du texte à l'aide de l'attribut <see langword="xsi:type" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Écrit un tableau d'octets en base 64.</summary>
      <param name="value" vsli:raw="The byte array to write.">Tableau d'octets à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Écrit une valeur de chaîne spécifiée.</summary>
      <param name="value" vsli:raw="The value of the string to write.">Valeur de la chaîne à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Écrit le <see cref="T:System.Xml.XmlNode" /> spécifié comme un attribut XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nœud XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Écrit l'objet <see cref="T:System.Xml.XmlNode" /> spécifié comme un attribut XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nœud XML à écrire.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Objet <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (ou <see langword="null" />) utilisé pour générer une valeur de nom qualifié pour un attribut <see langword="arrayType" /> de l’espace de noms WSDL (« http://schemas.xmlsoap.org/wsdl/ »).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Écrit un attribut <see langword="xsi:type" /> pour un élément XML qui est sérialisé dans un document.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">Nom local d'un type de données de schéma XML.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">Espace de noms d'un type de données de schéma XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> est utilisée pour écrire un code XML valide.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la méthode <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> retourne un nom encodé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Obtient ou définit une liste d'objets de nom qualifié XML qui contiennent les espaces de noms et préfixes utilisés pour produire des noms qualifiés dans les documents XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">
        <see cref="T:System.Collections.ArrayList" /> qui contient les paires espaces de noms et préfixes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Xml.XmlWriter" /> utilisé par le <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé par l'instance de la classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Sérialise et désérialise des objets vers et depuis des documents XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permet de contrôler le mode d'encodage des objets en langage XML.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un attribut XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un élément XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un nœud XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Se produit lors de la désérialisation d'un flux XML encodé à l'aide de SOAP, lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un type reconnu mais non utilisé ou non référencé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie l'espace de noms par défaut de tous les éléments XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Espace de noms par défaut à utiliser pour tous les éléments XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Si une propriété ou un champ retourne un tableau, le paramètre <paramref name="extraTypes" /> spécifie les objets pouvant être insérés dans ce tableau.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">Type de l'objet à sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">Élément <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <param name="location" vsli:raw="The location of the types.">Emplacement des types.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie également la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Initialise une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à l'aide d'un objet qui établit une correspondance entre les types.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Obtient une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser un document XML spécifié.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> qui pointe vers le document à désérialiser.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser l'objet vers lequel <see cref="T:System.Xml.XmlReader" /> pointe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Retourne un objet utilisé pour lire le document XML à sérialiser.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilisé pour lire le document XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">En cas de substitution dans une classe dérivée, retourne un writer utilisé pour sérialiser l'objet.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Instance qui implémente la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Désérialise le document XML qui figure dans le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.Stream" /> qui contient le document XML à désérialiser.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Désérialise le document XML qui figure dans le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.TextReader" /> qui contient le document XML à désérialiser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Désérialise le document XML qui figure dans le <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> qui contient le document XML à désérialiser.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Désérialise le document XML qui figure dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Désérialise le document XML figurant dans le <see cref="T:System.Xml.XmlReader" /> spécifié et le style d'encodage.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Style d'encodage du XML sérialisé.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Désérialise l'objet à l'aide des données contenues dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Instance de la classe <see cref="T:System.Xml.XmlReader" /> utilisée pour lire le document.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">Encodage utilisé.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The object being deserialized.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Désérialise un document XML contenu par le <see cref="T:System.Xml.XmlReader" /> spécifié et autorise la substitution des événements qui se produisent pendant désérialisation.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document à désérialiser.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau d'objets <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Tableau de <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Retourne une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à partir des mappages spécifiés.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">
        <see cref="T:System.Type" /> de l'objet désérialisé.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau de types.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Retourne le nom de l'assembly qui contient une ou plusieurs versions du <see cref="T:System.Xml.Serialization.XmlSerializer" /> créé spécialement pour sérialiser ou désérialiser le type spécifié.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">
        <see cref="T:System.Type" /> que vous désérialisez.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">Le nom de l'assembly qui contient un <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour le type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Retourne le nom de l'assembly qui contient le sérialiseur pour le type spécifié dans l'espace de noms indiqué.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">
        <see cref="T:System.Type" /> qui vous intéresse.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">Espace de noms du type.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">Nom de l'assembly qui contient des sérialiseurs spécialement créés.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Sérialise l’objet <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l’aide du <see cref="T:System.IO.Stream" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> qui contient les espaces de noms du document XML généré.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> spécifié.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> qui permet d'écrire le document XML.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Sérialise l'objet spécifié et écrit le document XML dans un fichier à l'aide du  <see cref="T:System.Xml.XmlWriter" /> et référence les espaces de noms spécifiés et le style d'encodage.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Style d'encodage du XML sérialisé.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" />, des espaces de noms et de l'encodage spécifiés.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Instance du <see langword="XmlSerializerNamespaces" /> qui contient les espaces de noms et les préfixes à utiliser.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">Encodage utilisé dans le document.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Pour les messages encodés par SOAP, la base utilisée pour générer des attributs d'id.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Appliqué à un proxy client de service Web, vous permet de spécifier un assembly qui contient des sérialiseurs personnalisés.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> avec le nom d'assembly spécifié.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nom simple et non chiffré de l'assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> avec le nom d'assembly spécifié et l'emplacement de l'assembly.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nom simple et non chiffré de l'assembly.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Une chaîne correspondant à l'URL de l'assembly.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Obtient ou définit le nom de l'assembly qui contient des sérialiseurs pour un jeu spécifique de types.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">Nom simple et non chiffré de l'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Obtient ou définit l'emplacement de l'assembly qui contient des sérialiseurs.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Emplacement, tel qu'un chemin d'accès ou URI, qui pointe vers l'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Crée des versions typées de <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour une sérialisation plus efficace.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type spécifié.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type et l'espace de noms spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Espace de noms par défaut à utiliser pour tous les éléments XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type spécifié. Si une propriété ou un champ retourne un tableau, le paramètre <paramref name="extraTypes" /> spécifie les objets pouvant être insérés dans ce tableau.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui contient des champs qui substituent le comportement de sérialisation par défaut.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en instances de documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui contient des champs qui substituent le comportement de sérialisation par défaut.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en instances de documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">
        <see cref="T:System.Type" /> de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre de type.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">Chemin d'accès qui spécifie l'emplacement des types.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et vice versa. Spécifie l'objet qui représente l'élément racine XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à l'aide d'un objet qui établit une correspondance entre les types.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type mappé.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Définit le lecteur, le writer et les méthodes pour les sérialiseurs typés déjà générés.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Obtient une valeur qui détermine si un type peut être sérialisé.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Le type à sérialiser.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Retourne un sérialiseur pour le type spécifié.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Le type à sérialiser.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Instance d'un type dérivé de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Obtient l'objet de lecteur XML qui est utilisé par le sérialiseur.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> qui est utilisé pour lire un document XML ou un flux de données.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Obtient la collection de méthodes qui est utilisée pour lire un flux de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" /> qui contient les méthodes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Obtient la collection de sérialiseurs typés qui se trouve dans l'assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">
        <see cref="T:System.Collections.Hashtable" /> qui contient les sérialiseurs typés.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Obtient la collection de méthodes qui est utilisée pour écrire dans un flux de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" /> qui contient les méthodes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Obtient l'objet writer XML pour le sérialiseur.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> qui est utilisé pour écrire dans un document ou flux de données XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Signifie que le code a été généré par l'infrastructure de sérialisation et peut être réutilisé pour de meilleures performances, lorsque cet attribut est appliqué à un assembly.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> pour le type spécifié.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">Type sérialisé.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Obtient ou définit l'espace de noms du Common Language Runtime (CLR) de l'assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">
        <see cref="T:System.String" /> contenant l'espace de noms du Common Language Runtime (CLR) de l'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Obtient ou définit l'identité de l'assembly parent.</summary>
      <returns vsli:raw="The version of the parent assembly.">Version de l'assembly parent.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Obtient ou définit le type sur lequel le sérialiseur fonctionne.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">Objet <see cref="T:System.Type" /> à sérialiser.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Obtient ou définit le numéro de version de l'assembly.</summary>
      <returns vsli:raw="The version of the assembly.">Version de l'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Contrôle le schéma XML qui est généré lorsque la cible de l'attribut est sérialisée par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> et spécifie le nom du type XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Obtient ou définit une valeur qui détermine si le type de schéma résultant est un type anonyme XSD.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si le type de schéma résultant est un type anonyme XSD ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Obtient ou définit une valeur qui indique si le type doit être inclus dans les documents du schéma XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour inclure le type dans les documents de schéma XML, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtient ou définit l'espace de noms du type XML.</summary>
      <returns vsli:raw="The namespace of the XML type.">Espace de noms du type XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtient ou définit le nom du type XML.</summary>
      <returns vsli:raw="The name of the XML type.">Nom du type XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">Contient un mappage d'un type à l'autre.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">Nom de type qualifié complet, y compris l'espace (ou les espaces) de noms et le type.</summary>
      <returns vsli:raw="The fully qualified type name.">Nom complet du type.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Obtient le nom de type de l'objet mappé.</summary>
      <returns vsli:raw="The type name of the mapped object.">Nom de type de l'objet mappé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Obtient le nom de l'élément XML de l'objet mappé.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">Nom de l'élément XML de l'objet mappé. Par défaut, il s'agit du nom de la classe de l'objet.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Obtient l'espace de noms XML de l'objet mappé.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">Espace de noms XML de l'objet mappé. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
  </members>
</doc>