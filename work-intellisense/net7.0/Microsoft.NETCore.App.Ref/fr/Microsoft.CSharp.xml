<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.CSharp</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.RuntimeBinder.Binder">
      <summary vsli:raw="Contains factory methods to create dynamic call site binders for CSharp.">Contient des méthodes de fabrique pour créer des classeurs de sites d'appel dynamiques pour CSharp.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp binary operation binder.">Initialise un nouveau classeur d'opérations binaires CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="operation" vsli:raw="The binary operation kind.">Type d'opération binaire.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp binary operation binder.">Nouveau classeur d’opérations binaires CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
      <summary vsli:raw="Initializes a new CSharp convert binder.">Initialise un nouveau classeur de conversion CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="type" vsli:raw="The type to convert to.">Type vers lequel effectuer la conversion.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <returns vsli:raw="A new CSharp convert binder.">Nouveau classeur de conversions CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get index binder.">Initialise un nouveau classeur d'obtention d'index CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp get index binder.">Nouveau classeur d’obtention d’index CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp get member binder.">Initialise un nouveau classeur d'obtention de membre CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="name" vsli:raw="The name of the member to get.">Nom du membre à obtenir.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp get member binder.">Nouveau classeur d’obtention de membre CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke binder.">Initialise un nouveau classeur d'appel CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp invoke binder.">Nouveau classeur d’appels CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke constructor binder.">Initialise un nouveau classeur de constructeurs appelés CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp invoke constructor binder.">Nouveau classeur de constructeurs appelés CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp invoke member binder.">Initialise un nouveau classeur de membres appelés CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="name" vsli:raw="The name of the member to invoke.">Nom du membre à appeler.</param>
      <param name="typeArguments" vsli:raw="The list of type arguments specified for this invoke.">Liste d'arguments de type spécifiés pour cet appel.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp invoke member binder.">Nouveau classeur d’appels de membres appelés CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
      <summary vsli:raw="Initializes a new CSharp is event binder.">Initialise un nouveau classeur d'événements CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="name" vsli:raw="The name of the event to look for.">Nom de l'événement à rechercher.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <returns vsli:raw="A new CSharp is event binder.">Nouveau classeur d’événements CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set index binder.">Initialise un nouveau classeur de définition d'index CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp set index binder.">Nouveau classeur de définition d’index CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp set member binder.">Initialise un nouveau classeur de définition de membre CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="name" vsli:raw="The name of the member to set.">Nom du membre à définir.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp set member binder.">Nouveau classeur de définition de membre CSharp.</returns>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary vsli:raw="Initializes a new CSharp unary operation binder.">Initialise un nouveau classeur d'opérations unaires CSharp.</summary>
      <param name="flags" vsli:raw="The flags with which to initialize the binder.">Indicateurs avec lesquels initialiser le classeur.</param>
      <param name="operation" vsli:raw="The unary operation kind.">Type d'opération unaire.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates where this operation is used.">
        <see cref="T:System.Type" /> qui indique où cette opération est utilisée.</param>
      <param name="argumentInfo" vsli:raw="The sequence of &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; instances for the arguments to this operation.">Séquence d'instances <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> pour les arguments de cette opération.</param>
      <returns vsli:raw="A new CSharp unary operation binder.">Nouveau classeur d'opérations unaires CSharp.</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">Représente des informations relatives aux opérations dynamiques en C# qui sont spécifiques à des arguments particuliers sur un site d’appel. Les instances de cette classe sont générées par le compilateur C#.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" />.</summary>
      <param name="flags" vsli:raw="The flags for the argument.">Indicateurs de l'argument.</param>
      <param name="name" vsli:raw="The name of the argument, if named; otherwise null.">Nom de l'argument, s'il est nommé ; sinon, null.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot; /&gt; class.">Nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" />.</returns>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">Représente des informations relatives aux opérations dynamiques en C# qui sont spécifiques à des arguments particuliers sur un site d’appel. Les instances de cette classe sont générées par le compilateur C#.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.Constant">
      <summary vsli:raw="The argument is a constant.">L'argument est une constante.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsOut">
      <summary vsli:raw="The argument is passed to an out parameter.">L'argument est passé à un paramètre de sortie (out).</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsRef">
      <summary vsli:raw="The argument is passed to a ref parameter.">L'argument est passé à un paramètre de référence (ref).</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsStaticType">
      <summary vsli:raw="The argument is a &lt;see cref=&quot;T:System.Type&quot; /&gt; indicating an actual type name used in source. Used only for target objects in static calls.">L'argument est un <see cref="T:System.Type" /> qui indique un nom de type réel utilisé dans la source. Utilisé uniquement pour les objets cible dans les appels statiques.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.NamedArgument">
      <summary vsli:raw="The argument is a named argument.">L'argument est un argument nommé.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.None">
      <summary vsli:raw="No additional information to represent.">Aucune information supplémentaire à représenter.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.UseCompileTimeType">
      <summary vsli:raw="The argument's compile-time type should be considered during binding.">Le type de l'argument au moment de la compilation doit être considéré pendant la liaison.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
      <summary vsli:raw="Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.">Représente des informations relatives aux opérations dynamiques en C# qui ne sont pas spécifiques à des arguments particuliers sur un site d’appel. Les instances de cette classe sont générées par le compilateur C#.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical">
      <summary vsli:raw="The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.">Le classeur représente un AND logique ou un OR logique faisant partie d'une évaluation d'opérateur logique conditionnelle.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext">
      <summary vsli:raw="The evaluation of this binder happens in a checked context.">L'évaluation de ce classeur s'effectue dans un contexte vérifié (checked).</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex">
      <summary vsli:raw="The binder represents an implicit conversion for use in an array creation expression.">Le classeur représente une conversion implicite pour une utilisation dans une expression de création de tableau.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit">
      <summary vsli:raw="The binder represents an explicit conversion.">Le classeur représente une conversion explicite.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName">
      <summary vsli:raw="The binder represents an invoke on a simple name.">Le classeur représente un appel sur un nom simple.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName">
      <summary vsli:raw="The binder represents an invoke on a specialname.">Le classeur représente un appel sur un nom spécial.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None">
      <summary vsli:raw="There is no additional information required for this binder.">Aucune information supplémentaire n'est requise pour ce classeur.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded">
      <summary vsli:raw="The binder is used in a position that does not require a result, and can therefore bind to a void returning method.">Le classeur est utilisé à un emplacement qui ne requiert pas de résultat et peut par conséquent créer une liaison avec une méthode retournant void.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed">
      <summary vsli:raw="The result of any bind is going to be indexed get a set index or get index binder.">Le résultat de n'importe quel lien sera un classeur indexé d'obtention d'index ou de membre défini.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment">
      <summary vsli:raw="The value in this set index or set member comes a compound assignment operator.">La valeur dans cet index défini ou membre défini provient d'un opérateur d'assignation composée.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">Représente une erreur qui se produit quand une liaison dynamique dans le classeur d'exécution C# est traitée.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" />.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has serialized data.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> qui comporte des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data about the exception being thrown.">Objet qui contient les données d'objet sérialisées relatives à l'exception levée.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> qui comporte un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> qui comporte un message d'erreur spécifié et une référence à l'exception interne à l'origine de cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">Exception qui est la cause de l'exception actuelle, ou référence null si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException">
      <summary vsli:raw="Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.">Représente une erreur qui se produit quand une liaison dynamique dans le classeur d'exécution C# est traitée.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> avec un message fourni par le système qui décrit l'erreur.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> avec un message spécifié qui décrit l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur est requis pour vérifier que cette chaîne a été localisée pour la culture système actuelle.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException&quot; /&gt; class that has a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> qui comporte un message d'erreur spécifié et une référence à l'exception interne à l'origine de cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference if no inner exception is specified.">Exception qui est la cause de l'exception actuelle, ou référence null si aucune exception interne n'est spécifiée.</param>
    </member>
  </members>
</doc>