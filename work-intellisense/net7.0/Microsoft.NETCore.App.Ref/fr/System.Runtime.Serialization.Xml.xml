<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Fournit un mécanisme pour mapper dynamiquement des types vers et à partir de représentations <see langword="xsi:type" /> pendant la sérialisation et la désérialisation.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Remplacez cette méthode pour mapper le nom et l'espace de noms <see langword="xsi:type" /> spécifiés à un type de contrat de données pendant la désérialisation.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">Nom <see langword="xsi:type" /> à mapper.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">Espace de noms <see langword="xsi:type" /> à mapper.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Type déclaré dans le contrat de données.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Programme de résolution de type connu.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">Type auquel le nom et l'espace de noms <see langword="xsi:type" /> sont mappés.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Remplacez cette méthode pour mapper un type de contrat de données à un nom et un espace de noms <see langword="xsi:type" /> pendant la sérialisation.</summary>
      <param name="type" vsli:raw="The type to map.">Type à mapper.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Type déclaré dans le contrat de données.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Programme de résolution de type connu.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">Nom xsi:type.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">Espace de noms xsi:type.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le mappage a réussi ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Sérialise et désérialise une instance d'un type dans un flux ou un document XML à l'aide d'un contrat de données fourni. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié, et une collection de types connus pouvant être présents dans le graphique d'objets.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> qui contient les types pouvant être présents dans le graphique d'objets.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet avec le type et les paramètres spécifiés.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">Type d'instance à sérialiser ou désérialiser.</param>
      <param name="settings" vsli:raw="The serializer settings.">Paramètres du sérialiseur.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié à l'aide de l'élément racine et de l'espace de noms XML fournis.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Nom de l'élément XML renfermant le contenu à sérialiser ou désérialiser.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">Espace de noms de l'élément XML renfermant le contenu à sérialiser ou désérialiser.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié. Cette méthode spécifie également l'élément XML racine et l'espace de noms dans deux paramètres de chaîne ainsi qu'une liste des types connus pouvant être présents dans le graphique d'objets.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">Nom d'élément racine du contenu.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">Espace de noms de l'élément racine.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> qui contient les types pouvant être présents dans le graphique d'objets.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié à l'aide de l'élément racine et de l'espace de noms XML spécifiés dans les paramètres de type <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> qui contient le nom de l'élément racine du contenu.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> qui contient l'espace de nom de l'élément racine.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> pour sérialiser ou désérialiser un objet du type spécifié. Cette méthode spécifie également l'élément XML racine et l'espace de noms dans deux paramètres <see cref="T:System.Xml.XmlDictionaryString" /> ainsi qu'une liste de types connus pouvant être présents dans le graphique d'objets.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Type des instances sérialisées ou désérialisées.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> qui contient le nom de l'élément racine du contenu.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> qui contient l'espace de nom de l'élément racine.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> qui contient les types connus pouvant être présents dans le graphique d'objets.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Détermine si la classe <see cref="T:System.Xml.XmlDictionaryReader" /> est positionnée sur un objet pouvant être désérialisé.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilisé pour lire le flux XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est sur l'élément de départ du flux à lire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Détermine si la classe <see cref="T:System.Xml.XmlReader" /> est positionnée sur un objet pouvant être désérialisé.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le flux XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est sur l'élément de départ du flux à lire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lit le flux XML avec une classe <see cref="T:System.Xml.XmlDictionaryReader" /> et retourne l'objet désérialisé. Il spécifie également si un contrôle doit être effectué pour vérifier le nom de l'objet avant de lire sa valeur.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilisé pour lire le flux XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour vérifier si le nom de l'objet correspond à la valeur de nom racine fournie dans le constructeur ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Le paramètre <paramref name="verifyObjectName" /> a la valeur <see langword="true" />, et le nom et l'espace de noms de l'élément ne correspondent pas aux valeurs définies dans le constructeur.</exception>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Lit un document XML ou un flux de document et retourne l'objet désérialisé.  La méthode contient un paramètre pour spécifier si le nom d'objet est vérifié et validé, et un programme de résolution pour le mappage de déclarations <see langword="xsi:type" /> au moment de l'exécution.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">Lecteur XML utilisé pour lire le contenu.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour vérifier le nom d'objet ; sinon, <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Implémentation de la classe <see cref="T:System.Runtime.Serialization.DataContractResolver" /> pour mapper des déclarations <see langword="xsi:type" /> à des types de contrat de données.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lit le flux XML avec une classe <see cref="T:System.Xml.XmlReader" /> et retourne l'objet désérialisé.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le flux XML.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lit le flux XML avec une classe <see cref="T:System.Xml.XmlReader" /> et retourne l'objet désérialisé. Il spécifie également si un contrôle doit être effectué pour vérifier le nom de l'objet avant de lire sa valeur.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le flux XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour vérifier si le nom de l'objet correspond à la valeur de nom racine fournie dans le constructeur ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">Le paramètre <paramref name="verifyObjectName" /> a la valeur <see langword="true" />, et le nom et l'espace de noms de l'élément ne correspondent pas aux valeurs définies dans le constructeur.</exception>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit l'élément XML de fermeture à l'aide d'une classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Il y a un problème avec l'instance en cours d'écriture.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit l'élément XML de fermeture à l'aide d'une classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Il y a un problème avec l'instance en cours d'écriture.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Écrit toutes les données d'objet (élément XML de début, contenu et élément englobant) dans un document ou un flux XML à l'aide du XmlDictionaryWriter spécifié. La méthode inclut un programme de résolution pour le mappage de déclarations <see langword="xsi:type" /> au moment de l'exécution.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">XmlDictionaryWriter utilisé pour écrire le contenu du flux ou du document XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Objet qui contient le contenu à écrire.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Implémentation de la classe <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilisée pour mapper les déclarations <see langword="xsi:type" /> aux contrats de données connus.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit toutes les données d'objet (élément XML de début, de contenu et de fermeture) dans un document ou un flux XML avec une classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Objet contenant les données à écrire dans le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Il y a un problème avec l'instance en cours d'écriture.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit le contenu XML à l'aide d'une classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le flux.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Objet à écrire dans le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Il y a un problème avec l'instance en cours d'écriture.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le contenu XML à l'aide d'une classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">Objet à écrire dans le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Il y a un problème avec l'instance en cours d'écriture.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit l'élément XML d'ouverture à l'aide d'une classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire l'élément XML de début.</param>
      <param name="graph" vsli:raw="The object to write.">Objet à écrire.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit l'élément XML d'ouverture à l'aide d'une classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire l'élément XML de début.</param>
      <param name="graph" vsli:raw="The object to write.">Objet à écrire.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Obtient le composant utilisé pour mapper dynamiquement les déclarations <see langword="xsi:type" /> aux types de contrat connus.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Implémentation de la classe <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtient une valeur qui spécifie s'il faut ignorer les données fournies par une extension de la classe lors de la sérialisation ou la désérialisation de la classe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour omettre les données d'extension ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Obtient une collection des types pouvant être présents dans le graphique d'objets sérialisé à l'aide de cette instance de <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les types attendus passés en tant que types connus au constructeur <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Obtient le nombre maximal d'éléments à sérialiser ou désérialiser dans un graphique d'objets.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Le nombre d'éléments dépasse la valeur maximale.</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Nombre maximal d'éléments à sérialiser ou à désérialiser. La valeur par défaut est <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtient une valeur qui spécifie s'il faut utiliser des constructions XML non standard pour conserver des données de référence d'objet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les références ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Obtient une valeur qui spécifie si les types en lecture seule sont sérialisés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">
        <see langword="true" /> si les types en lecture seule sont sérialisés ; <see langword="false" /> si tous les types sont sérialisés.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Étend la classe <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> en fournissant des méthodes pour définir et obtenir un <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Retourne le substitut de fournisseur de sérialisation pour ce sérialiseur.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Sérialiseur substitué.</param>
      <returns vsli:raw="The surrogate serializer.">Sérialiseur de substitution.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Spécifie un fournisseur de sérialisation de substitution pour ce <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Sérialiseur substitué.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">Fournisseur de sérialisation de substitution.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Spécifie les paramètres de sérialiseur du contrat de données.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Obtient ou définit le composant utilisé pour mapper dynamiquement les déclarations xsi:type aux types de contrat connus.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">Composant utilisé pour mapper dynamiquement les déclarations xsi:type aux types de contrat connus.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtient ou définit une valeur qui spécifie s'il faut ignorer les données fournies par une extension de la classe en cours de sérialisation ou de désérialisation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ignorer les données fournies par une extension de la classe lors de la sérialisation ou la désérialisation de la classe, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Obtient ou définit une collection des types pouvant être présents dans le graphique d'objets sérialisé à l'aide de cette instance DataContractSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Collection des types pouvant être présents dans le graphique d'objets sérialisé à l'aide de cette instance DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Obtient ou définit le nombre maximal d'éléments à sérialiser ou désérialiser dans un graphique d'objets.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Nombre maximal d'éléments à sérialiser ou désérialiser dans un graphique d'objets.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtient ou définit une valeur qui spécifie s'il faut utiliser des constructions XML non standard pour conserver des données de référence d'objet.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour utiliser des constructions XML non standard afin de conserver les données de référence d'objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Obtient ou définit le nom racine de l'objet sélectionné.</summary>
      <returns vsli:raw="The root name of the selected object.">Nom racine de l'objet sélectionné.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Obtient ou définit l'espace de noms racine pour l'objet spécifié.</summary>
      <returns vsli:raw="The root namespace for the specified object.">Espace de noms racine pour l'objet spécifié.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtient ou définit une valeur qui spécifie s'il faut sérialiser des types de lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser des types en lecture seule ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Représente les options qui peuvent être définies pour une classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Obtient la collection des types qui peuvent être rencontrés pendant la sérialisation ou la désérialisation.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Collection <see langword="KnownTypes" /> qui reprend les types pouvant être rencontrés pendant la sérialisation ou la désérialisation. Les représentations de schéma XML sont exportées pour tous les types spécifiés dans cette collection par la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Stocke des données provenant d'un contrat de données dont les versions sont gérées, qui a été étendu en ajoutant de nouveaux membres.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Fournit une structure de données pour stocker des données supplémentaires rencontrées par le <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> lors de la désérialisation d’un type marquée avec l’attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Obtient ou définit la structure qui contient des données supplémentaires.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">
        <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> qui contient des données non reconnues comme données appartenant au contrat de données.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Fournit la classe de base utilisée pour sérialiser des objets en tant que documents ou flux XML. Cette classe est abstraite.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Obtient une valeur qui spécifie si le <see cref="T:System.Xml.XmlDictionaryReader" /> est positionné sur un élément XML qui peut être lu.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilisé pour lire le document ou le flux XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur peut lire les données ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Obtient une valeur qui spécifie si le <see cref="T:System.Xml.XmlReader" /> est positionné sur un élément XML qui peut être lu.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le document ou le flux XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé sur l'élément de début ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Lit le flux ou le document XML avec un <see cref="T:System.IO.Stream" /> et retourne l'objet désérialisé.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.IO.Stream" /> utilisé pour lire le flux ou le document XML.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Lit le document ou le flux XML avec un <see cref="T:System.Xml.XmlDictionaryReader" /> et retourne l'objet désérialisé.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilisé pour lire le document XML.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lit le flux ou le document XML avec un <see cref="T:System.Xml.XmlDictionaryReader" /> et retourne l'objet désérialisé ; il vous permet également de spécifier si le sérialiseur peut lire les données avant de tenter de les lire.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilisé pour lire le document XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> pour vérifier si le nom et l'espace de noms de l'élément XML englobant correspondent au nom et à l'espace de noms de la racine ; sinon, <see langword="false" /> pour ignorer la vérification.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lit le document ou le flux XML avec un <see cref="T:System.Xml.XmlReader" /> et retourne l'objet désérialisé.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le document ou le flux XML.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lit le document ou le flux XML avec un <see cref="T:System.Xml.XmlReader" /> et retourne l'objet désérialisé ; il vous permet également de spécifier si le sérialiseur peut lire les données avant de tenter de les lire.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire le flux ou le document XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> pour vérifier si le nom et l'espace de noms de l'élément XML englobant correspondent au nom et à l'espace de noms de la racine ; <see langword="false" /> pour ignorer la vérification.</param>
      <returns vsli:raw="The deserialized object.">Objet désérialisé.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit la fin des données d'objet comme un élément XML de fermeture dans le document ou le flux XML avec un <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit la fin des données d'objet comme un élément XML de fermeture dans le document ou le flux XML avec un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Écrit le contenu complet (début, contenu et fin) de l'objet dans le flux ou le document XML avec le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.IO.Stream" /> utilisé pour écrire le flux ou le document XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Objet contenant les données à écrire dans le flux.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit le contenu complet (début, contenu et fin) de l'objet dans le flux ou le document XML avec le <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le contenu du flux ou du document XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Objet qui contient le contenu à écrire.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le contenu complet (début, contenu et fin) de l'objet dans le flux ou le document XML avec le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Objet qui contient le contenu à écrire.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit uniquement le contenu de l'objet dans le flux ou le document XML à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Objet qui contient le contenu à écrire.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit uniquement le contenu de l'objet dans le flux ou le document XML avec le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le flux ou le document XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">Objet qui contient le contenu à écrire.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Écrit le début des données de l'objet comme un élément XML d'ouverture à l'aide du <see cref="T:System.Xml.XmlDictionaryWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisé pour écrire le document XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le début des données de l'objet comme un élément XML d'ouverture à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">le type en cours de sérialisation n'est pas conforme aux règles de contrat de données. Par exemple, l'attribut <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> n'a pas été appliqué au type.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">il y a un problème avec l'instance en cours de sérialisation.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">le nombre maximal d'objets à sérialiser a été dépassé. Vérifiez la propriété <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Contient des méthodes pour lire et écrire du XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Génère un type de schéma par défaut en fonction du nom de type spécifié et l'ajoute à l'jeu de schémas spécifié.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> auquel ajouter le type de schéma généré.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom de type auquel assigner le schéma.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="schemas" /> ou <paramref name="typeQName" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Lit un groupe de nœuds XML à partir du lecteur spécifié et retourne le résultat.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour la lecture.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="xmlReader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">Un nœud <see langword="null" /> a été rencontré lors de la lecture.</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Tableau de type <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Écrit les nœuds fournis à l'aide du writer spécifié.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour l'écriture.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Tableau de type <see cref="T:System.Xml.XmlNode" /> dans lequel écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="xmlWriter" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Lorsqu’une classe représentant un contrat de données et les métadonnées représentant un membre du contrat sont fournies, produit une requête XPath pour le membre.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Crée un XPath à partir d’un contrat de données à l’aide du type de données de contrat, du tableau d’éléments de métadonnées, de l’élément de niveau supérieur et des espaces de noms spécifiés.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Type qui représente un contrat de données.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Métadonnées, générées à l'aide de la méthode <see cref="Overload:System.Type.GetMember" /> de la classe <see cref="T:System.Type" />, qui pointent vers le membre de données spécifique utilisé pour générer la requête.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">Élément de niveau supérieur dans le XPath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Espaces de noms XML et leurs préfixes trouvés dans le contrat de données.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
XPath généré à partir des données de type et de membre.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Crée un XPath à partir d’un contrat de données à l’aide du type de contrat de données, du tableau d’éléments de métadonnées et des espaces de noms spécifiés.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Type qui représente un contrat de données.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Métadonnées, générées à l'aide de la méthode <see cref="Overload:System.Type.GetMember" /> de la classe <see cref="T:System.Type" />, qui pointent vers le membre de données spécifique utilisé pour générer la requête.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Espaces de noms XML et leurs préfixes trouvés dans le contrat de données.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
XPath généré à partir des données de type et de membre.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Autorise la transformation d’un ensemble de types .NET Framework qui sont utilisés dans les contrats de données en un fichier de schéma XML (.xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> avec l'jeu de schémas spécifié.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui contient les schémas à exporter.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Obtient une valeur qui indique si l'ensemble des types CLR (Common Language Runtime) contenu dans un ensemble d'assemblys peut être exporté.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">Un <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> qui contient les assemblys avec les types à exporter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les types peuvent être exportés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Obtient une valeur qui indique si l'ensemble des types CLR (Common Language Runtime) contenu dans un <see cref="T:System.Collections.Generic.ICollection`1" /> peut être exporté.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les types spécifiés à exporter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les types peuvent être exportés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Obtient une valeur qui indique si le type CLR spécifié peut être exporté.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">
        <see cref="T:System.Type" /> à exporter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type peut être exporté ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Transforme les types contenus dans la collection spécifiée d'assemblys.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) qui contient les types à exporter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="assemblies" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Reflection.Assembly" /> dans la collection est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Transforme les types contenus dans le <see cref="T:System.Collections.Generic.ICollection`1" /> passé à cette méthode.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">Un <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Type" />) qui contient les types à exporter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="types" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un type dans la collection est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Transforme le type .NET Framework spécifié en un schéma XSD.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">
        <see cref="T:System.Type" /> à transformer en schéma XML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Retourne le nom de niveau supérieur et l'espace de noms pour le <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">
        <see cref="T:System.Type" /> à interroger.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom de niveau supérieur et l'espace de noms pour ce <see cref="T:System.Type" />, qui est écrit dans le flux de données lors de l'écriture de cet objet.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Retourne un type de schéma XML pour le type spécifié.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">Type pour lequel retourner un schéma.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> qui contient le schéma XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Retourne le nom et l'espace de noms de contrat pour <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">
        <see cref="T:System.Type" /> qui a été exporté.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom de contrat du type et son espace de noms.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Obtient ou définit un <see cref="T:System.Runtime.Serialization.ExportOptions" /> qui contient des options qui peuvent être définies pour l'opération d'exportation.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">
        <see cref="T:System.Runtime.Serialization.ExportOptions" /> qui contient des options utilisées pour personnaliser l'exportation des types vers les schémas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Obtient la collection de schémas XML exportés.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> qui contient les schémas transformés à partir de l'ensemble de types CLR après avoir appelé la méthode <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Contient des propriétés et des méthodes qui permettent le traitement de fragments XML lorsqu'elles sont implémentées par un <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Met fin au traitement d'un fragment XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Démarre le traitement d'un fragment XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Si la valeur est <see langword="true" />, tous les espaces de noms déclarés en dehors du fragment sont de nouveau déclarés s'ils sont utilisés dans le fragment. Si la valeur est <see langword="false" />, les espaces de noms ne font pas l'objet d'une nouvelle déclaration.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Écrit un fragment XML dans le flux sous-jacent du writer.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">La mémoire tampon dans laquelle écrire.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle écrire dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">Nombre d'octets à écrire dans <paramref name="buffer" />.</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Obtient une valeur qui indique si ce <see cref="T:System.Xml.XmlDictionaryWriter" /> peut traiter des fragments XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce <see cref="T:System.Xml.XmlDictionaryWriter" /> peut traiter des fragments XML ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Représente une interface qui peut être implémentée par les classes qui fournissent des flux de données.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Obtient un flux de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Libère un flux de données dans lequel générer.</summary>
      <param name="stream" vsli:raw="The stream being released.">Le flux est libéré.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Fournit des méthodes permettant de réinitialiser un lecteur binaire pour la lecture d'un nouveau document.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Réinitialise le lecteur binaire à l'aide de la mémoire tampon d'entrée indiquée.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Délégué à appeler lorsque le lecteur est fermé.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Réinitialise le lecteur binaire à l'aide du flux d'entrée indiqué.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Délégué à appeler lorsque le lecteur est fermé.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Spécifie les implémentations nécessaires pour les writers binaires XML qui dérivent de cette interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Spécifie les initialisations nécessaires pour les writers binaires XML qui implémentent cette méthode.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryWriterSession" /> à utiliser.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le flux est fermé par l’enregistreur lorsqu’il est terminé ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">
        <see langword="interface" /> qui définit le contrat qu'un dictionnaire XML doit implémenter pour être utilisé par les implémentations <see cref="T:System.Xml.XmlDictionaryReader" /> et <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tente de rechercher une entrée dans le dictionnaire.</summary>
      <param name="key" vsli:raw="Key to look up.">Clé à rechercher.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Si <paramref name="key" /> est défini, la <see cref="T:System.Xml.XmlDictionaryString" /> mappée à la clé ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la clé se trouve dans le dictionnaire, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Recherche dans le dictionnaire une valeur de chaîne spécifiée.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valeur de chaîne recherchée.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">La <see cref="T:System.Xml.XmlDictionaryString" /> correspondante si elle est trouvée ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur se trouve dans le dictionnaire ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Recherche dans le dictionnaire un objet <see cref="T:System.Xml.XmlDictionaryString" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Objet <see cref="T:System.Xml.XmlDictionaryString" /> recherché.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">La <see cref="T:System.Xml.XmlDictionaryString" /> correspondante si elle est trouvée ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la <see cref="T:System.Xml.XmlDictionaryString" /> se trouve dans le dictionnaire ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Spécifie les implémentations nécessaires pour les lecteurs de texte XML qui dérivent de cette interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Spécifie les initialisations nécessaires pour les lecteurs de texte XML qui lisent une mémoire tampon.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Spécifie les initialisations nécessaires pour les lecteurs de texte XML qui lisent un flux.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Spécifie les implémentations nécessaires pour les writers de texte XML qui dérivent de cette interface.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Spécifie les initialisations nécessaires pour les writers de texte XML qui implémentent cette méthode.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le flux est fermé par l’enregistreur lorsqu’il est terminé ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> pour une méthode de rappel lors de la fermeture du lecteur.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> qui déclenche l’événement <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Identificateur unique optimisé pour les GUID.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Crée une instance de cette classe avec un nouveau GUID unique.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crée une instance de cette classe à l'aide d'un tableau d'octets qui représente un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau d'octets qui représente un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> fournit moins de 16 octets valides.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crée une instance de cette classe qui démarre à partir d'un offset dans un tableau d'<see langword="byte" /> qui représente un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau de <see langword="byte" /> qui représente un <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Position d'offset dans le tableau de <see langword="byte" /> qui représente un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> et <paramref name="offset" /> fournissent moins de 16 octets valides.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Crée une instance de cette classe à partir d'un offset dans un <see langword="char" /> à l'aide d'un nombre d'entrées spécifié.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau de <see langword="char" /> qui représente un <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Position d'offset dans le tableau de <see langword="char" /> qui représente un <see cref="T:System.Guid" />.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">Nombre d'entrées de tableau à utiliser, à partir de <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau.

- ou -

<paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau moins <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> est égal à zéro.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crée une instance de cette classe à l'aide d'un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Crée une instance de cette classe à l'aide d'une chaîne.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Chaîne utilisée pour générer l'<see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">La longueur de <paramref name="value" /> est égale à zéro.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Vérifie si un objet est égal à cet <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est égal à cet <see cref="T:System.Xml.UniqueId" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Crée une représentation sous forme de code de hachage de cet <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Représentation sous forme de code de hachage d'entier de cet <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Substitue l'opérateur d'égalité pour tester l'égalité de deux <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Première <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Deuxième <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="true" /> si les deux <see cref="T:System.Xml.UniqueId" /> sont égaux ou ont la valeur <see langword="null" /> ; <see langword="false" /> s'ils ne sont pas égaux ou si un seul a la valeur <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Substitue l'opérateur d'égalité pour tester l'inégalité de deux <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Première <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Deuxième <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'opérateur d'égalité substitué retourne <see langword="false" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Place la valeur <see cref="T:System.Xml.UniqueId" /> dans un tableau <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">Le tableau <see langword="char" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Position du tableau <see langword="char" /> à partir de laquelle commencer l'insertion de la valeur <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> et <paramref name="offset" /> fournissent moins de 16 octets valides.</exception>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Nombre d'entrées du tableau <see langword="char" /> occupées par la valeur <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Affiche la valeur <see cref="T:System.Xml.UniqueId" /> dans un format de chaîne.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Représentation sous forme de chaîne de la valeur <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Tente d’obtenir la valeur du <see cref="T:System.Xml.UniqueId" /> en tant que <see cref="T:System.Guid" /> et de la stocker dans le tableau d’octets donné, à l’offset spécifié.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau d'<see langword="byte" /> qui contiendra le <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Position du tableau <see langword="byte" /> à partir de laquelle commencer l'insertion de la valeur <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> et <paramref name="offset" /> fournissent moins de 16 octets valides.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur stockée dans cette instance de l'<see cref="T:System.Xml.UniqueId" /> est un <see cref="T:System.Guid" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tente d'obtenir la valeur de l'<see cref="T:System.Xml.UniqueId" /> en tant que <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">Le <see cref="T:System.Guid" /> en cas de réussite ; sinon <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> et <paramref name="offset" /> fournissent moins de 16 octets valides.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si UniqueId représente un <see cref="T:System.Guid" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Obtient la longueur de la représentation sous forme de chaîne de l'<see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">La longueur de la représentation sous forme de chaîne de l'<see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Indique si l'<see cref="T:System.Xml.UniqueId" /> est un <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'<see cref="T:System.Xml.UniqueId" /> est un <see cref="T:System.Guid" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Permet la gestion dynamique des chaînes optimisées.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Crée un objet <see cref="T:System.Xml.XmlDictionaryString" /> à partir des paramètres d'entrée et l'ajoute à une collection interne.</summary>
      <param name="id" vsli:raw="The key value.">Valeur de clé.</param>
      <param name="value" vsli:raw="The value.">La valeur.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> est inférieur à zéro.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Une entrée avec la clé = <paramref name="id" /> existe déjà.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">
        <see cref="T:System.Xml.XmlDictionaryString" /> récemment créé qui est ajouté à une collection interne.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Efface le contenu de la collection interne.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Vérifie si la collection interne contient une entrée correspondant à une clé.</summary>
      <param name="key" vsli:raw="The key to search on.">Clé à rechercher.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient une chaîne si une entrée est trouvée ; sinon, <see langword="null" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée correspondant à <paramref name="key" /> a été trouvée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Vérifie si la collection interne contient une entrée correspondant à une valeur.</summary>
      <param name="value" vsli:raw="The value to search for.">La valeur à rechercher.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient une chaîne si une entrée est trouvée ; sinon, <see langword="null" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée correspondant à <paramref name="value" /> a été trouvée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Vérifie si la collection interne contient une entrée correspondant à une valeur.</summary>
      <param name="value" vsli:raw="The value to search for.">La valeur à rechercher.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient une chaîne si une entrée est trouvée ; sinon, <see langword="null" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une entrée correspondant à <paramref name="value" /> a été trouvée ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Permet d'utiliser un dictionnaire dynamique pour compresser des chaînes courantes qui apparaissent dans un message et conserver l'état.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Crée une instance de cette classe.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Efface les collections internes.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Tente d'ajouter un objet <see cref="T:System.Xml.XmlDictionaryString" /> à la collection interne.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">
        <see cref="T:System.Xml.XmlDictionaryString" /> à ajouter.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">Clé de l'objet <see cref="T:System.Xml.XmlDictionaryString" /> ajouté.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Une entrée avec la clé = <paramref name="key" /> existe déjà.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la chaîne a pu être ajoutée ; dans le cas contraire, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Implémente un dictionnaire utilisé pour optimiser les implémentations de lecteur/writer XML de WCF (Windows Communication Foundation).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Crée un <see cref="T:System.Xml.XmlDictionary" /> vide.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Crée un <see cref="T:System.Xml.XmlDictionary" /> doté d'une capacité initiale.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">Taille initiale du dictionnaire.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Ajoute une chaîne au <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Chaîne à ajouter au dictionnaire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">La <see cref="T:System.Xml.XmlDictionaryString" /> ajoutée.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Tente de rechercher une entrée dans le dictionnaire.</summary>
      <param name="key" vsli:raw="Key to look up.">Clé à rechercher.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Si <paramref name="key" /> est défini, la <see cref="T:System.Xml.XmlDictionaryString" /> mappée à la clé ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la clé se trouve dans le dictionnaire, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Recherche dans le dictionnaire une valeur de chaîne spécifiée.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valeur de chaîne recherchée.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">La <see cref="T:System.Xml.XmlDictionaryString" /> correspondante si elle est trouvée ; sinon <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur se trouve dans le dictionnaire ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Recherche dans le dictionnaire un objet <see cref="T:System.Xml.XmlDictionaryString" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">Objet <see cref="T:System.Xml.XmlDictionaryString" /> recherché.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">La <see cref="T:System.Xml.XmlDictionaryString" /> correspondante si elle est trouvée ; sinon <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la <see cref="T:System.Xml.XmlDictionaryString" /> se trouve dans le dictionnaire ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Obtient un <see langword="static" /><see cref="T:System.Xml.IXmlDictionary" /> vide.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">
        <see langword="static" />
        <see cref="T:System.Xml.IXmlDictionary" /> vide.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Classe <see langword="abstract" /> que WCF (Windows Communication Foundation) dérive de <see cref="T:System.Xml.XmlReader" /> pour procéder à la sérialisation et à la désérialisation.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Crée une instance de cette classe.  Appelée uniquement par ses classes dérivées.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

- ou -

<paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon moins le décalage.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon moins le décalage.

- ou -

<paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Délégué à appeler lorsque le lecteur est fermé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon moins le décalage.

- ou -

<paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon moins le décalage.

- ou -

<paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur de la mémoire tampon.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> ou <paramref name="quotas" /> est <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> à utiliser.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Délégué à appeler lorsque le lecteur est fermé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui peut lire le format XML binaire .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Les quotas qui s'appliquent à cette opération.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> à partir d'un <see cref="T:System.Xml.XmlReader" /> existant.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">Les encodages de caractères possibles de l'entrée.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Les encodages de caractères possibles de l'entrée.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Le type de contenu (type MIME) du message.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Les encodages de caractères possibles de l'entrée.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Le type de contenu (type MIME) du message.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Les <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer au lecteur.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">La taille maximale autorisée de la mémoire tampon.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Les encodages de caractères possibles de l'entrée.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">Les encodages de caractères possibles du flux.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Les encodages de caractères possibles du flux.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Le type de contenu (type MIME) du message.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Les encodages de caractères possibles du flux.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">Le type de contenu (type MIME) du message.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">Le type MIME du message.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">Les <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer au lecteur.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" /> qui lit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Les encodages de caractères possibles du flux.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Les quotas à appliquer à ce lecteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Objet <see cref="T:System.Text.Encoding" /> qui spécifie les propriétés d'encodage à appliquer.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Les quotas appliqués au lecteur.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Les quotas appliqués au lecteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">Objet <see cref="T:System.Text.Encoding" /> qui spécifie les propriétés d'encodage à appliquer.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à appliquer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">Le délégué à appeler lorsque le lecteur est fermé.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Les quotas appliqués au lecteur.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Cette méthode n'est pas encore implémentée.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Toujours.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">En cas de substitution dans une classe dérivée, obtient la valeur d'un attribut.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Une <see cref="T:System.Xml.XmlDictionaryString" /> qui représente le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Une <see cref="T:System.Xml.XmlDictionaryString" /> qui représente l'espace de noms d'un attribut.</param>
      <returns vsli:raw="The value of the attribute.">Valeur de l'attribut.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Obtient des noms non atomisés.</summary>
      <param name="localName" vsli:raw="The local name.">Nom local.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">Espace de noms pour le <paramref name="localName" /> local.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Permet d'obtenir l'index du nom local du nœud actuel au sein d'un tableau de noms.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">Le tableau de chaînes de noms locaux à rechercher.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">L'espace de noms du nœud actuel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> ou tout nom du tableau porte la valeur <see langword="null" />

- ou -

<paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">L'index du nom local du nœud actuel au sein d'un tableau de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Permet d'obtenir l'index du nom local du nœud actuel au sein d'un tableau de noms.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">Le tableau <see cref="T:System.Xml.XmlDictionaryString" /> de noms locaux à rechercher.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">L'espace de noms du nœud actuel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> ou tout nom du tableau porte la valeur <see langword="null" />

- ou -

<paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">L'index du nom local du nœud actuel au sein d'un tableau de noms.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Vérifie si le paramètre <paramref name="localName" /> est le nom local du nœud actuel.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">Nom local du nœud actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="localName" /> correspond au nom local du nœud actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Vérifie si le paramètre <paramref name="localName" /> est le nom local du nœud actuel.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">Objet <see cref="T:System.Xml.XmlDictionaryString" /> qui représente le nom local du nœud actuel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="localName" /> correspond au nom local du nœud actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Vérifie si le paramètre <paramref name="namespaceUri" /> est le l'espace de noms du nœud actuel.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">L'espace de noms du nœud actuel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="namespaceUri" /> correspond à l'espace de noms du nœud actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Vérifie si le paramètre <paramref name="namespaceUri" /> est le l'espace de noms du nœud actuel.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">Espace de noms du nœud actuel.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="namespaceUri" /> correspond à l'espace de noms du nœud actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Vérifie si le lecteur est positionné au démarrage d'un tableau. Cette classe retourne la valeur <see langword="false" />, mais les classes dérivées qui présentent le concept de tableau peuvent retourner la valeur <see langword="true" />.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Type du nœud, s'il s'agit d'un nœud valide ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur est placé au début d'un nœud de tableaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Teste si la première balise est une balise de début ou une balise d'élément vide et si le nom local et l'URI d'espace de noms correspondent à ceux du nœud actuel.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">Une <see cref="T:System.Xml.XmlDictionaryString" /> qui représente le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">Une <see cref="T:System.Xml.XmlDictionaryString" /> qui représente l'espace de noms d'un attribut.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la première balise du tableau est une balise de début ou une balise d'élément vide et correspond à <paramref name="localName" /> et à <paramref name="namespaceUri" />; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Teste si le nœud actuel est un nœud de texte.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">Type du nœud testé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le type de nœud est <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" />, ou <see cref="F:System.Xml.XmlNodeType.Attribute" />;sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Teste si le nœud de contenu actuel est un élément de début ou un élément vide.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Teste si le nœud de contenu actuel est un élément de début ou un élément vide, et si la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément correspond à l'argument fourni.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">La propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Teste si le nœud de contenu actuel est un élément de début ou un élément vide, et si les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément correspondent aux arguments fournis.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Teste si le nœud de contenu actuel est un élément de début ou un élément vide, et si les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément correspondent à l'argument fourni.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Boolean" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.DateTime" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Decimal" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Double" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Guid" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lit des occurrences répétées de nombres entiers <see langword="short" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lit des occurrences répétées de nombres entiers dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lit des occurrences répétées de nombres entiers <see langword="long" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lit des occurrences répétées de nombres <see langword="float" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Le tableau dans lequel les nombres à virgule flottante sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Nombre de nombres à virgule flottante à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The umber of float numbers put in the array.">Nombre de nombres à virgule flottante placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.TimeSpan" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Boolean" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.DateTime" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Decimal" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Lit des occurrences répétées de types de nœuds <see cref="T:System.Double" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Guid" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lit des occurrences répétées de nombres entiers <see langword="short" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lit des occurrences répétées de nombres entiers dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lit des occurrences répétées de nombres entiers <see langword="long" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Le tableau dans lequel les nombres entiers sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">Nombre de nombres entiers à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">Nombre de nombres entiers placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lit des occurrences répétées de nombres <see langword="float" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">Le tableau dans lequel les nombres à virgule flottante sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">Nombre de nombres à virgule flottante à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of float numbers put in the array.">Nombre de nombres à virgule flottante placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.TimeSpan" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Le tableau dans lequel les nœuds sont placés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">Nombre de nœuds à placer dans le tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">Nombre de nœuds placés dans le tableau.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Boolean" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Tableau <see cref="T:System.Boolean" /> répertoriant les nœuds <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lit des occurrences répétées de nœuds <see cref="T:System.Boolean" /> dans un tableau typé.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Tableau <see cref="T:System.Boolean" /> répertoriant les nœuds <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Convertit le contenu d'un nœud en un type spécifié.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">Type <see cref="T:System.Type" /> de la valeur à retourner.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type. Par exemple, il peut être utilisé lors de la conversion d’un objet <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>. Cette valeur peut être une référence nulle.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenu de texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format Base64.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">La taille du tableau est supérieure au quota MaxArrayLength pour ce lecteur.</exception>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Tableau d'octets qui contient les octets binaires décodés Base64s.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">La taille du tableau est supérieure à <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Tableau d'octets contenant les octets binaries decodes <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lit le contenu et retourne les octets binaires décodés au format <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">Longueur maximale du tableau.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">La taille du tableau est supérieure à <paramref name="maxByteArrayContentLength" />.</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Tableau d'octets contenant les octets binaries decodes <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Lit le contenu dans un tableau  <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">Tableau dans lequel les caractères sont insérés.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">Nombre de caractères à placer dans le tableau.</param>
      <returns vsli:raw="Number of characters read.">Nombre de caractères lus.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Convertit le contenu d'un nœud en objet <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">Représentation <see langword="decimal" /> du contenu de nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Convertit le contenu d'un nœud en objet <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">Représentation <see langword="float" /> du contenu de nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Convertit le contenu d'un nœud en objet <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">Représentation <see langword="guid" /> du contenu de nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Convertit le contenu d'un nœud en une représentation de nom complet.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Partie <see cref="P:System.Xml.XmlReader.LocalName" /> du nom qualifié complet (paramètre <see langword="out" />).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">Partie <see cref="P:System.Xml.XmlReader.NamespaceURI" /> du nom qualifié complet (paramètre <see langword="out" />).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Convertit le contenu d'un nœud en une chaîne.</summary>
      <returns vsli:raw="The node content in a string representation.">Contenu de nœud dans une représentation sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Convertit le contenu d'un nœud en une chaîne.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">Longueur maximale de la chaîne.</param>
      <returns vsli:raw="Node content in string representation.">Contenu de nœud dans la représentation sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Convertit le contenu d'un nœud en une chaîne.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">Tableau de chaînes auquel le contenu doit correspondre.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Index de l'entrée figurant dans <paramref name="strings" /> qui correspond au contenu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> a la valeur <see langword="null" />.

- ou -

Une entrée dans <paramref name="strings" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The node content in a string representation.">Contenu de nœud dans une représentation sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Convertit le contenu d'un nœud en une chaîne.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">Tableau d'objets <see cref="T:System.Xml.XmlDictionaryString" /> auxquels le contenu doit correspondre.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">Index de l'entrée figurant dans <paramref name="strings" /> qui correspond au contenu.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> a la valeur <see langword="null" />.

- ou -

Une entrée dans <paramref name="strings" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The node content in a string representation.">Contenu de nœud dans une représentation sous forme de chaîne.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit le contenu d'un nœud en objet <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">Représentation <see cref="T:System.TimeSpan" /> du contenu de nœud.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Convertit le contenu d'un nœud en un identificateur unique.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">Contenu du nœud représenté sous forme d'identificateur unique.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Convertit le contenu d'un nœud en un tableau <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Contenu du nœud représenté sous forme de tableau <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Convertit le contenu d'un nœud en un tableau d'octets Base64s.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">Le contenu du nœud représenté sous forme de tableau d'octets Base64s.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Convertit le contenu d'un nœud en un tableau d'octets <see langword="BinHex" />.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Le contenu du nœud représenté sous forme de tableau d'octets <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Convertit le contenu d'un élément en un nombre à virgule flottante (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Le contenu du nœud représenté sous forme de nombre à virgule flottante (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.Guid" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Convertit le contenu d'un élément en un entier (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Le contenu du nœud représenté sous forme d'entier (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Convertit le contenu d'un élément en un entier long (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Le contenu du nœud représenté sous forme d'entier long (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convertit le contenu d'un élément en objet <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Contenu du nœud représenté sous forme de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Convertit le contenu d'un élément en un identificateur unique.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">Le format de l'élément est incorrect.</exception>
      <returns vsli:raw="The node's content represented as a unique identifier.">Contenu du nœud représenté sous forme d'identificateur unique.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Vérifie si le nœud actuel est un élément et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retourne <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Vérifie si le nœud actuel est un élément avec le <paramref name="name" /> spécifié, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nom qualifié de l'élément.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retourne <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Vérifie si le nœud actuel est un élément portant les éléments <paramref name="localName" /> et <paramref name="namespaceUri" />, puis avance  le lecteur jusqu'au nœud  suivant.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retourne <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Vérifie si le nœud actuel est un élément portant les éléments <paramref name="localName" /> et <paramref name="namespaceUri" />, puis avance  le lecteur jusqu'au nœud  suivant.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> retourne <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'objet <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'objet <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Tableau de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'entiers <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Tableau d'entiers <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'entiers <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Tableau d'entiers <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> dans un tableau d'entiers (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Tableau d'entiers (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> dans un tableau d'entiers (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Tableau d'entiers (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'entiers <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Tableau d'entiers <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau d'entiers <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Tableau d'entiers <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> dans un tableau de nombres <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Tableau de nombres <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> dans un tableau de nombres <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Tableau de nombres <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Vérifie si le nœud actuel est un élément portant les éléments <paramref name="localName" /> et <paramref name="namespaceUri" />, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Lit le contenu du nœud actuel dans une chaîne.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Impossible de lire le contenu du nœud actuel.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">La longueur maximale de chaîne autorisée a été dépassée.</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">Une chaîne qui contient le contenu du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Lit le contenu du nœud actuel dans une chaîne comportant une longueur maximale spécifiée.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Longueur de chaîne maximale autorisée.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">Impossible de lire le contenu du nœud actuel.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">La longueur maximale de chaîne autorisée a été dépassée.</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">Une chaîne qui contient le contenu du nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Tableau <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lit le contenu d'une série de nœuds avec les éléments <paramref name="localName" /> et <paramref name="namespaceUri" /> donnés dans un tableau de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Tableau <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Non implémenté.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">La mémoire tampon à partir de laquelle effectuer la lecture.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La position de départ à partir de laquelle effectuer la lecture dans <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Le nombre d'octets pouvant être lus à partir de <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Toujours.</exception>
      <returns vsli:raw="Not implemented.">Non implémenté.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Cette méthode n'est pas encore implémentée.</summary>
      <param name="stream" vsli:raw="The stream to read from.">Flux à partir duquel effectuer la lecture.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Détermine si des commentaires sont inclus.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Les préfixes à inclure.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Toujours.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implémentée dans cette classe (cette propriété retourne toujours <see langword="false" />). Peut être remplacée dans les classes dérivées.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">Retourne la valeur 0, sauf si elle a été remplacée dans une classe dérivée.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" /> sauf si elle a été remplacée dans une classe dérivée.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implémentée dans cette classe (cette propriété retourne toujours <see langword="false" />). Peut être remplacée dans les classes dérivées.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">Retourne la valeur 0, sauf si elle a été remplacée dans une classe dérivée.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" /> sauf si elle a été remplacée dans une classe dérivée.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implémentée dans cette classe (cette propriété retourne toujours <see langword="false" />). Peut être remplacée dans les classes dérivées.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Retourne la valeur <see langword="null" />, sauf si elle a été remplacée dans une classe dérivée. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" /> sauf si elle a été remplacée dans une classe dérivée.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implémentée dans cette classe (cette propriété retourne toujours <see langword="false" />). Peut être remplacée dans les classes dérivées.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Retourne la valeur <see langword="null" />, sauf si elle a été remplacée dans une classe dérivée.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" /> sauf si elle a été remplacée dans une classe dérivée.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">Non implémentée dans cette classe (cette propriété retourne toujours <see langword="false" />). Peut être remplacée dans les classes dérivées.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Retourne la valeur <see langword="null" />, sauf si elle a été remplacée dans une classe dérivée.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" /> sauf si elle a été remplacée dans une classe dérivée.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Cette propriété retourne toujours <see langword="false" />. Ses classes dérivées peuvent procéder à une substitution pour retourner <see langword="true" /> si elles prennent en charge la canonisation.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Obtient les valeurs de quota qui s'appliquent à l'instance actuelle de cette classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">Les <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> qui s'appliquent à l'instance actuelle de cette classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Contient des valeurs de quota configurables pour les XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Crée une instance de cette classe.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Définit les propriétés sur une instance de quotas passée, d'après les valeurs de cette instance.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">L'instance <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> dans laquelle les valeurs doivent être copiées.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour l'instance passée.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La valeur passée de la cible <paramref name="quotas" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Obtient une instance de cette classe où toutes les propriétés ont les valeurs maximales.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Instance des <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> où les propriétés ont la valeur <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Obtient ou définit la longueur maximale de tableau autorisée.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour cette instance.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tente d'assigner <see langword="set" /> la valeur à moins de zéro.</exception>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">La longueur de tableau maximale autorisée. La valeur par défaut est 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Obtient ou définit le nombre maximal d’octets autorisés retournés pour chaque lecture.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour cette instance.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tente d'assigner <see langword="set" /> la valeur à moins de zéro.</exception>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">Le nombre maximal d'octets autorisés retournés pour chaque lecture. La valeur par défaut est 4096.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Obtient ou définit la profondeur maximale des nœuds imbriqués.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour cette instance.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Tente d'assigner <see langword="set" /> la valeur à moins de zéro.</exception>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">La profondeur maximale des nœuds imbriqués. La valeur par défaut est 32.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Obtient ou définit le nombre maximal de caractères autorisés dans un nom de table.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour cette instance.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tente d'assigner <see langword="set" /> la valeur à moins de zéro.</exception>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">Le nombre maximal de caractères autorisés dans un nom de table. La valeur par défaut est 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Obtient ou définit la longueur de chaîne maximale retournée par le lecteur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Tente d'assigner <see langword="set" /> la valeur, mais les valeurs de quota sont en lecture seule pour cette instance.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Tente d'assigner <see langword="set" /> la valeur à moins de zéro.</exception>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">La longueur de chaîne maximale retournée par le lecteur. La valeur par défaut est 8192.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Obtient les quotas modifiés pour les <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Quotas modifiés pour <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Énumère les valeurs de quota configurables pour les XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Spécifie longueur maximale de tableau autorisée.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Spécifie le nombre maximal d'octets pouvant être renvoyés par lecture.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Spécifie la profondeur maximale des nœuds imbriqués.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Spécifie le nombre maximal de caractères autorisés dans un nom de tableau.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Spécifie la longueur de chaîne maximale retournée par le lecteur.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Représente une entrée stockée dans un <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Crée une instance de cette classe.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">Le <see cref="T:System.Xml.IXmlDictionary" /> contenant cette instance.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">Chaîne qui correspond à la valeur de l'entrée de dictionnaire.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">Nombre entier qui correspond à la clé de l'entrée de dictionnaire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> est inférieur à 0 ou supérieur à <see cref="F:System.Int32.MaxValue" />/4.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Affiche une représentation textuelle de cet objet.</summary>
      <returns vsli:raw="The string value for this instance of the class.">La valeur de chaîne pour cette instance de la classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Représente le <see cref="T:System.Xml.IXmlDictionary" /> passé au constructeur de cette instance de la <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">Le <see cref="T:System.Xml.IXmlDictionary" /> de cette entrée de dictionnaire.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Obtient une <see cref="T:System.Xml.XmlDictionaryString" /> représentant la chaîne vide.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">
        <see cref="T:System.Xml.XmlDictionaryString" /> représentant la chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Obtient la clé entière pour cette instance de la classe.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">La clé entière pour cette instance de la classe.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Obtient la valeur de chaîne pour cette instance de la classe.</summary>
      <returns vsli:raw="The string value for this instance of the class.">La valeur de chaîne pour cette instance de la classe.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Représente une classe abstraite que WCF (Windows Communication Foundation) dérive de <see cref="T:System.Xml.XmlWriter" /> pour procéder à la sérialisation et à la désérialisation.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit le format XML binaire WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit le format XML binaire WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser comme dictionnaire partagé.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit le format XML binaire WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser comme dictionnaire partagé.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryWriterSession" /> à utiliser.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit le format XML binaire WCF.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Le flux de données à partir duquel effectuer la lecture.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> à utiliser comme dictionnaire partagé.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryWriterSession" /> à utiliser.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le flux est fermé par le writer lorsqu'il est terminé ; sinon <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> à partir d'un <see cref="T:System.Xml.XmlWriter" /> existant.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Le nombre maximal d'octets mis en mémoire tampon dans l'enregistreur.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Attribut dans l'en-tête SOAP ContentType.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit du XML au format MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">Le nombre maximal d'octets mis en mémoire tampon dans l'enregistreur.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">Le content-type de la partie MIME qui contient l'ensemble d'informations.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">La limite MIME du message.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">L'URI content-id de la partie MIME qui contient l'ensemble d'informations.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">
        <see langword="true" /> pour écrire les en-têtes de message.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le flux est fermé par le writer lorsqu'il est terminé ; sinon <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit du XML textuel.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit du XML textuel.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">Le codage de caractères de la sortie.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crée une instance de <see cref="T:System.Xml.XmlDictionaryWriter" /> qui écrit du XML textuel.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">L'encodage de caractères du flux.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le flux est fermé par le writer lorsqu'il est terminé ; sinon <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">Lorsqu'elle est implémentée par une classe dérivée, elle met fin à la canonisation démarrée par l'appel <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> correspondant.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Cette méthode n'est pas encore implémentée.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">En cas d'implémentation par une classe dérivée, démarre la canonisation.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Le flux dans lequel écrire.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour inclure des commentaires ; sinon <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Les préfixes à inclure.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Cette méthode n'est pas encore implémentée.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the data.">Le tableau qui contient les données.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">Le nombre de valeurs à écrire à partir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Écrit des nœuds à partir d'un tableau <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">Le tableau qui contient les nœuds.</param>
      <param name="offset" vsli:raw="The starting index in the array.">L'index de départ du tableau.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">Le nombre de nœuds à obtenir du tableau.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est &lt; 0 ou &gt; la longueur de <paramref name="array" />.

- ou -

<paramref name="count" /> est &lt; 0 ou &gt; <paramref name="array" /> de longueur moins <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Écrit un nom qualifié et une valeur d'attribut.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">Le préfixe de l'attribut.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value" vsli:raw="The attribute.">L'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Écrit un nom qualifié et une valeur d'attribut.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
      <param name="value" vsli:raw="The attribute.">L'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Encode de façon asynchrone les octets binaires spécifiés au format base64 et écrit le texte résultant.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Tableau d'octets à encoder.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Nombre d'octets à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlDictionaryWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlDictionaryWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteBase64" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Écrit un élément avec du texte.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Le préfixe de l'élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="value" vsli:raw="The element content.">Le contenu de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Écrit un élément avec du texte.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <param name="value" vsli:raw="The element content.">Le contenu de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Écrit le nœud XML actuel à partir d'un <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">L’<see cref="T:System.Xml.XmlDictionaryReader" />opérateur</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see langword="XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Écrit le nœud XML actuel à partir d'un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">L’<see cref="T:System.Xml.XmlReader" />opérateur</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour copier les attributs par défaut à partir de <see cref="T:System.Xml.XmlReader" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Écrit le nom qualifié de l'espace de noms. Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">Le nom local du nom qualifié.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">L'URI de l'espace de noms du nom qualifié.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Écrit le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">Le préfixe de l'espace de noms.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Écrit le début d'un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">L'URI de l'espace de noms de l'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Écrit la balise de début indiquée et l'associe à l'espace de noms et au préfixe spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Le préfixe de l'élément.</param>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Le writer est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Écrit l’étiquette de début indiquée et l’associe à l’espace de noms spécifié.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Le nom local de l'élément.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">L'URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">Le writer est fermé.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Écrit le texte spécifié.</summary>
      <param name="value" vsli:raw="The text to write.">Texte à écrire.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Écrit le nœud de texte sur lequel un <see cref="T:System.Xml.XmlDictionaryReader" /> est positionné.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">Le <see cref="T:System.Xml.XmlDictionaryReader" /> à partir duquel obtenir la valeur du texte.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le lecteur est positionné sur une valeur d'attribut ou un contenu d'élément, sinon <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Guid" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">La valeur <see cref="T:System.Guid" /> à écrire.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Écrit une valeur <see cref="T:System.TimeSpan" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">La valeur <see cref="T:System.TimeSpan" /> à écrire.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Écrit une valeur à partir d'un <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">La valeur <see cref="T:System.Xml.IStreamProvider" /> à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> retourne un objet de flux <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Une méthode <see cref="T:System.Xml.XmlDictionaryWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Écrit une valeur Id unique.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">La valeur Id unique à écrire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Écrit une valeur <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Valeur de <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Écrit de façon asynchrone une valeur à partir d'un <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">La valeur <see cref="T:System.Xml.IStreamProvider" /> à écrire.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Une méthode <see cref="T:System.Xml.XmlDictionaryWriter" /> a été appelée avant la fin d’une opération asynchrone précédente. Dans ce cas, l’exception <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».

- ou -

Une méthode asynchrone <see cref="T:System.Xml.XmlDictionaryWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur <see langword="true" />. Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Attribuez à XmlReaderSettings.Async la valeur True si vous voulez utiliser des méthodes asynchrones ».</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Tâche qui représente l'opération <see langword="WriteValue" /> asynchrone.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Écrit un attribut XML standard dans le nœud actuel.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Écrit un attribut XML dans le nœud actuel.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Le nom local de l'attribut.</param>
      <param name="value" vsli:raw="The value of the attribute.">Valeur de l'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Écrit un attribut de déclaration d'espace de noms.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Le préfixe lié à l'espace de noms indiqué.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">L'espace de noms auquel le préfixe est lié.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Écrit un attribut de déclaration d'espace de noms.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">Le préfixe lié à l'espace de noms indiqué.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">L'espace de noms auquel le préfixe est lié.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Cette propriété retourne toujours <see langword="false" />. Ses classes dérivées peuvent procéder à une substitution pour retourner <see langword="true" /> si elles prennent en charge la canonisation.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
  </members>
</doc>