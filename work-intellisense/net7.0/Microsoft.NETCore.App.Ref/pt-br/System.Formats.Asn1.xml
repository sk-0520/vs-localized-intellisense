<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>Esse tipo representa uma marca ASN.1, como descrito na Recomendação X.680 de ITU-T.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>Representa a marca de classe universal para um valor Booliano.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>Representa a marca de classe universal para um valor de Cadeia de Caracteres de Bits em uma codificação construída.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>Representa a marca de classe universal para um valor de Cadeia de Caracteres de Octeto em uma codificação construída.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>Representa a marca de classe universal para um valor Enumerado.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>Representa a marca de classe universal para um valor GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>Representa a marca de classe universal para um valor Inteiro.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>Representa a marca de classe universal para um valor <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>Representa a marca de classe universal para um valor de Identificador de Objeto.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>Representa a marca de classe universal para um valor de Cadeia de Caracteres de Bits em uma codificação primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>Representa a marca de classe universal para um valor de Cadeia de Caracteres de Octeto em uma codificação primitiva.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>Representa a marca de classe universal para um valor de Sequência (sempre uma codificação construída).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>Representa a marca de classe universal para um valor SetOf (sempre uma codificação construída).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>Representa a marca de classe universal para um valor UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>Cria <see cref="T:System.Formats.Asn1.Asn1Tag" /> para um valor especificado dentro de uma classe de marca especificada.</summary>
      <param name="tagClass">A classe da marca.</param>
      <param name="tagValue">O valor numérico da marca.</param>
      <param name="isConstructed">
        <see langword="true" /> para uma marca construída, <see langword="false" /> para uma marca primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> não é um valor conhecido.
-ou- <paramref name="tagValue" /> é negativo.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>Cria <see cref="T:System.Formats.Asn1.Asn1Tag" /> para uma marca a partir da classe UNIVERSAL.</summary>
      <param name="universalTagNumber">Um dos valores de enumeração que especifica o tipo semântico da marca.</param>
      <param name="isConstructed">
        <see langword="true" /> para uma marca construída, <see langword="false" /> para uma marca primitiva.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> não é um valor conhecido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>Produz uma marca com os mesmos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mas cujo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> é <see langword="true" />.</summary>
      <returns>Uma marca com os mesmos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mas cujo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> é <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>Produz uma marca com os mesmos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mas cujo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> é <see langword="false" />.</summary>
      <returns>Uma marca com os mesmos valores <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, mas cujo <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> é <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>Informa o número de bytes necessários para a codificação BER da marca.</summary>
      <returns>O número de bytes necessários para a codificação BER da marca.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Lê uma marca codificada por BER que começa em <paramref name="source" />.</summary>
      <param name="source">A sequência de bytes somente leitura cujo início é uma marca codificada por BER.</param>
      <param name="bytesConsumed">Quando esse método é retornado, contém o número de bytes que contribuíram para a marca codificada. Esse parâmetro é tratado como não inicializado.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Os dados fornecidos não são decodificados em uma marca.</exception>
      <returns>A marca decodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>Grava a forma codificada por BER dessa marca em <paramref name="destination" />.</summary>
      <param name="destination">O início de onde a marca codificada deve ser gravada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns>O número de bytes gravados em <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>Testa se <paramref name="other" /> tem a mesma codificação que essa marca.</summary>
      <param name="other">Marca para testar a igualdade.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> tiver os mesmos valores para <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>Testa se <paramref name="obj" /> é <see cref="T:System.Formats.Asn1.Asn1Tag" /> com a mesma codificação que essa marca.</summary>
      <param name="obj">Objeto cuja igualdade de valor será testada</param>
      <returns>
        <see langword="false" /> se <paramref name="obj" /> não for um <see cref="T:System.Formats.Asn1.Asn1Tag" />; caso contrário, <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>Retorna o código hash para a instância.</summary>
      <returns>Um código hash do inteiro com sinal de 32 bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>Testa se <paramref name="other" /> tem os mesmos valores de <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que essa marca e não se compara a <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other">Marca cuja igualdade de conceito será testada.</param>
      <returns>
        <see langword="true" /> se <paramref name="other" /> tiver o mesmo de <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> e <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> que essa marca; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Testa se dois valores de <see cref="T:System.Formats.Asn1.Asn1Tag" /> têm a mesma codificação BER.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> tiverem a mesma codificação BER; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Testa se dois valores de <see cref="T:System.Formats.Asn1.Asn1Tag" /> têm uma codificação BER diferente.</summary>
      <param name="left">O primeiro valor a ser comparado.</param>
      <param name="right">O segundo valor a ser comparado.</param>
      <returns>
        <see langword="true" /> se <paramref name="left" /> e <paramref name="right" /> tiverem uma codificação BER diferente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>Fornece uma representação de texto dessa marca adequada para depuração.</summary>
      <returns>Uma representação de texto dessa marca adequada para depuração.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>Tenta ler uma marca codificada por BER que começa em <paramref name="source" />.</summary>
      <param name="source">A sequência de bytes somente leitura cujo início é uma marca codificada por BER.</param>
      <param name="tag">A marca decodificada.</param>
      <param name="bytesConsumed">Quando esse método é retornado, contém o número de bytes que contribuíram para a marca codificada, 0 em caso de falha. Esse parâmetro é tratado como não inicializado.</param>
      <returns>
        <see langword="true" /> se uma marca foi decodificada corretamente; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Tenta gravar a forma codificada por BER dessa marca em <paramref name="destination" />.</summary>
      <param name="destination">O início de onde a marca codificada deve ser gravada.</param>
      <param name="bytesWritten">Recebe o valor de <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> com êxito, 0 em caso de falha.</param>
      <returns>
        <see langword="false" /> se <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt;<see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(); caso contrário, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>Indica se a marca representa uma codificação construída (<see langword="true" />) ou uma codificação primitiva (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>A classe de marca à qual essa marca pertence.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>O valor numérico da marca.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>A exceção que é gerada quando um valor ASN.1 codificado não pode ser decodificado com êxito.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Formats.Asn1.AsnContentException" /> usando a mensagem padrão.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Formats.Asn1.AsnContentException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Formats.Asn1.AsnContentException" /> usando a mensagem fornecida.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Formats.Asn1.AsnContentException" /> usando a mensagem fornecida e a exceção que é a causa desta exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner">A exceção que é a causa da exceção atual.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>Fornece métodos sem estado para decodificação de dados ASN.1 codificados por BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de Cadeia de Caracteres de Bits de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, retornando o conteúdo em uma nova matriz.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Uma matriz que inclui o conteúdo do valor da Cadeia de Caracteres de Bits.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Booliano de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como cadeia de caracteres com a marca e o tipo de codificação especificados, retornando a cadeia de caracteres decodificada.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="encodingType">Um dos valores de enumeração que representa o tipo de valor a ser processado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.
-ou- <paramref name="encodingType" /> não é um tipo de cadeia de caracteres conhecido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- a cadeia de caracteres não foi decodificada com êxito.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é o mesmo que <paramref name="encodingType" />.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Localiza o intervalo de conteúdo para o valor codificado no início do buffer de <paramref name="source" /> usando as regras de codificação especificadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="contentOffset">Quando esse método é retornado, o deslocamento da carga de conteúdo em relação ao início de <paramref name="source" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="contentLength">Quando esse método é retornado, o número de bytes na carga de conteúdo (que pode ser 0).
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> não representa um valor codificado de acordo com as regras de codificação especificadas.</exception>
      <returns>A marca que identifica o conteúdo.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Enumerado de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação especificadas, retornando o conteúdo como uma fatia do buffer.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>A fatia do buffer que contém os bytes do valor Enumerado em um formulário big-endian com sinal.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Enumerado de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, convertendo-o para a enumeração não [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="enumType">Objeto de tipo que representa o tipo de destino.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> não é um tipo enumerado.
-ou- <paramref name="enumType" /> foi declarado com <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> é <see langword="null" />.</exception>
      <returns>O valor Enumerado convertido em um <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Enumerado de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, convertendo-o para a enumeração não [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <typeparam name="TEnum">Tipo de enumeração de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> não é um tipo enumerado.
-ou- <typeparamref name="TEnum" /> foi declarado com <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor Enumerado convertido em um <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de GeneralizedTime de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor numérico decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação especificadas, retornando o conteúdo como uma fatia do buffer.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>A fatia do buffer que contém os bytes do valor Inteiro em um formulário big-endian com sinal.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um NamedBitList de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Os bits do valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um NamedBitList de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, convertendo-o para a enumeração [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="flagsEnumType">Objeto de tipo que representa o tipo de destino.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> não é um tipo enumerado.
-ou- <paramref name="flagsEnumType" /> não foi declarado com <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> é <see langword="null" /></exception>
      <returns>O valor de NamedBitList convertido em <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um NamedBitList de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, convertendo-o para a enumeração [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <typeparam name="TFlagsEnum">Tipo de enumeração de destino</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> não é um tipo enumerado.
-ou- <typeparamref name="TFlagsEnum" /> não foi declarado com <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor de NamedBitList convertido em <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor <see langword="null" /> de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de Identificador de Objeto de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação especificadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O identificador de objeto decodificado em notação de ponto decimal.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de Cadeia de Caracteres de Octeto de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, retornando o conteúdo em uma nova matriz.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Uma matriz que inclui o conteúdo do valor da Cadeia de Caracteres do Octeto.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de Sequência ou Sequence-Of de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="contentOffset">Quando esse método é retornado, o deslocamento da carga de conteúdo em relação ao início de <paramref name="source" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="contentLength">Quando esse método é retornado, o número de bytes na carga de conteúdo (que pode ser 0).
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor Set-Of de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="contentOffset">Quando esse método é retornado, o deslocamento da carga de conteúdo em relação ao início de <paramref name="source" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="contentLength">Quando esse método é retornado, o número de bytes na carga de conteúdo (que pode ser 0).
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="skipSortOrderValidation">
        <see langword="true" /> para sempre aceitar os dados na ordem em que são apresentados, <see langword="false" /> para verificar se os dados estão classificados corretamente quando as regras de codificação informarem que a classificação era obrigatória (CER e DER).</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de UtcTime de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="twoDigitYearMax">O maior ano para representar com esse valor.
O valor padrão, 2049, representa o intervalo de 1950-2049 para certificados X.509.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.
-ou- <paramref name="twoDigitYearMax" /> não está no intervalo [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta copiar um valor de Cadeia de Caracteres de Bits de <paramref name="source" /> com uma marca especificada nas regras de codificação determinadas para <paramref name="destination" />.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesWritten">Quando esse método é retornado, o número total de bytes gravados em <paramref name="destination" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="destination" /> sobrepõe <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> for grande o suficiente para receber o valor da Cadeia de Caracteres de Bits; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê um valor de cadeia de caracteres de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, copiando a cadeia de caracteres decodificada em um buffer de destino fornecido.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="encodingType">Um dos valores de enumeração que representa o tipo de valor a ser processado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="charsWritten">Quando esse método é retornado, o número de caracteres gravados em <paramref name="destination" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.
-ou- <paramref name="encodingType" /> não é um tipo de cadeia de caracteres conhecido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- a cadeia de caracteres não foi decodificada com êxito.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é o mesmo que <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se <paramref name="destination" /> tiver comprimento suficiente para receber o valor; caso contrário, <see langword="false" /> e o leitor não avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>Tenta ler um valor de cadeia de caracteres de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, copiando os bytes não processados no buffer de destino fornecido.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesWritten">Em caso de sucesso, recebe o número de bytes gravados em <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é um tipo de marca de cadeia de caracteres.
-ou- <paramref name="destination" /> sobrepõe <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> for grande o suficiente para receber o valor da cadeia de caracteres não processada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>As tentativas localizam o intervalo de conteúdo para o valor codificado no início do buffer de <paramref name="source" /> usando as regras de codificação especificadas.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="tag">Quando esse método é retornado, a marca que identifica o conteúdo.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="contentOffset">Quando esse método é retornado, o deslocamento da carga de conteúdo em relação ao início de <paramref name="source" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="contentLength">Quando esse método é retornado, o número de bytes na carga de conteúdo (que pode ser 0).
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <returns>
        <see langword="true" /> se <paramref name="source" /> representar uma codificação estrutural válida para as regras de codificação especificadas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler um valor Inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas como um valor de 32 bits com sinal.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="value">Em caso de sucesso, recebe o valor numérico interpretado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o Inteiro representar o valor entre <see cref="F:System.Int32.MinValue" /> e <see cref="F:System.Int32.MaxValue" />, inclusive; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler um valor inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas como um valor de 64 bits com sinal.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="value">Em caso de sucesso, recebe o valor numérico interpretado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o Inteiro representar o valor entre <see cref="F:System.Int64.MinValue" /> e <see cref="F:System.Int64.MaxValue" />, inclusive; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta obter um valor de Cadeia de Caracteres de Octeto de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, copiando o valor para o buffer de destino fornecido.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesWritten">Quando esse método é retornado, o número total de bytes gravados em <paramref name="destination" />.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="destination" /> sobrepõe <paramref name="source" />.</exception>
      <returns>
        <see langword="true" /> se <paramref name="destination" /> for grande o suficiente para receber o valor da Cadeia de Caracteres de Octeto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta obter um valor de Cadeia de Caracteres de Bits de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, caso o valor esteja contido em uma única codificação (primitiva).</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="value">Em caso de sucesso, recebe uma fatia do buffer de entrada que corresponde ao valor da Cadeia de Caracteres de Bits.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a verificar antes da leitura ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o valor da Cadeia de Caracteres de Bits tiver uma codificação primitiva e todos os bits relatados como não utilizados estiverem definidos como 0; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>Tenta obter um valor de cadeia de caracteres não processada de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, caso o valor esteja contido em uma única codificação (primitiva).</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <param name="value">Em caso de sucesso, recebe uma fatia do buffer de entrada que corresponde ao valor da Cadeia de Caracteres de Bits.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é um tipo de marca de cadeia de caracteres.</exception>
      <returns>
        <see langword="true" /> se o valor da cadeia de caracteres tiver uma codificação primitiva; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta obter um valor da Cadeia de Caracteres de Octeto de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas, caso o valor esteja contido em uma única codificação (primitiva).</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="value">Em caso de sucesso, recebe uma fatia do buffer de entrada que corresponde ao valor da Cadeia de Caracteres de Octeto.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o valor da Cadeia de Caracteres de Octeto tiver uma codificação primitiva; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler um valor Inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas como um valor de 32 bits sem sinal.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="value">Em caso de sucesso, recebe o valor numérico interpretado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o inteiro representar o valor entre <see cref="F:System.UInt32.MinValue" /> e <see cref="F:System.UInt32.MaxValue" />, inclusive; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler um valor Inteiro de <paramref name="source" /> com uma marca especificada de acordo com as regras de codificação determinadas como um valor de 64 bits sem sinal.</summary>
      <param name="source">Buffer que contém dados codificados.</param>
      <param name="ruleSet">As restrições de codificação a serem usadas ao interpretar os dados.</param>
      <param name="value">Em caso de sucesso, recebe o valor numérico interpretado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="bytesConsumed">Quando esse método é retornado, o número total de bytes para o valor codificado.
Esse parâmetro é tratado como não inicializado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> se o Inteiro representar o valor entre <see cref="F:System.UInt64.MinValue" /> e <see cref="F:System.UInt64.MaxValue" />, inclusive; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>O conjunto de regras de codificação para um <see cref="T:System.Formats.Asn1.AsnReader" /> ou <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>Regras básicas de codificação ITU-T X.690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>Regras de codificação canônicas ITU-T X.690</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>Regras de codificação distintas ITU-T X.690</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>Um leitor com estado e somente para encaminhamento de dados ASN.1 codificados por BER, CER ou DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>Constrói um <see cref="T:System.Formats.Asn1.AsnReader" /> de <paramref name="data" /> com determinado conjunto de regras.</summary>
      <param name="data">Os dados a serem lidos.</param>
      <param name="ruleSet">As restrições de codificação do leitor.</param>
      <param name="options">Opções adicionais para o leitor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>Obtém uma exibição <see cref="T:System.ReadOnlyMemory`1" /> dos octetos de conteúdo (bytes) do próximo valor codificado sem avançar o leitor.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">O leitor é posicionado em um ponto em que a marca ou o comprimento é inválido pelas regras de codificação atuais.</exception>
      <returns>Os bytes dos octetos de conteúdo do próximo valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>Obtém uma exibição <see cref="T:System.ReadOnlyMemory`1" /> do próximo valor codificado sem avançar o leitor. Para codificações de comprimento indefinido, isso inclui o marcador Fim do Conteúdo.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">O leitor é posicionado em um ponto em que a marca ou o comprimento é inválido pelas regras de codificação atuais.</exception>
      <returns>Os bytes do próximo valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>Lê a marca codificada na próxima posição de dados, sem avançar o leitor.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">não foi possível decodificar uma marca na posição atual do leitor.</exception>
      <returns>O valor da marca decodificada.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como CADEIA DE CARACTERES DE BITS com uma marca especificada, retornando o valor em uma matriz de bytes.</summary>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Uma cópia do valor em uma matriz recentemente alocada de tamanho preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um Booliano com uma marca especificada.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como cadeia de caracteres com a marca especificada e o tipo de codificação, retornando o valor decodificado como uma cadeia de caracteres.</summary>
      <param name="encodingType">Um dos valores de enumeração representando o tipo de valor a ser processado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> não é um tipo de cadeia de caracteres conhecido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- a cadeia de caracteres não foi decodificada com êxito.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é o mesmo que <paramref name="encodingType" />.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>Obtém uma exibição <see cref="T:System.ReadOnlyMemory`1" /> do próximo valor codificado e avança o leitor após ele. Para uma codificação de comprimento indefinido, isso inclui o marcador Fim do Conteúdo.</summary>
      <returns>Uma exibição <see cref="T:System.ReadOnlyMemory`1" /> do próximo valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como Enumerado com uma marca especificada, retornando o conteúdo como uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Os bytes do valor Enumerado, no formulário big-endian assinado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um Enumerado com uma marca especificada, convertendo-o para a enumeração não [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="enumType" />.</summary>
      <param name="enumType">Objeto de tipo que representa o tipo de destino.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> não é um tipo enumerado.
-ou- <paramref name="enumType" /> foi declarado com <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> é <see langword="null" />.</exception>
      <returns>O valor Enumerado convertido em um <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um Enumerado com uma marca especificada, convertendo-o para a enumeração não [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <typeparam name="TEnum">Tipo de enumeração de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> não é um tipo enumerado.
-ou- <typeparamref name="TEnum" /> foi declarado com <see cref="T:System.FlagsAttribute" />.
-ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor Enumerado convertido em um <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um GeneralizedTime com uma marca especificada.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um Inteiro com uma marca especificada.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um Inteiro com uma marca especificada, retornando o conteúdo como uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Os bytes do valor Inteiro, no formulário big-endian assinado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como NamedBitList com uma marca especificada.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Os bits do valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como NamedBitList com uma marca especificada, convertendo-o para a enumeração [<see cref="T:System.FlagsAttribute" />] especificada por <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType">Objeto de tipo que representa o tipo de destino.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> não é um tipo enumerado.
-ou- <paramref name="flagsEnumType" /> não foi declarado com <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> é <see langword="null" /></exception>
      <returns>O valor de NamedBitList convertido em <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como NamedBitList com uma marca especificada, convertendo-o para a enumeração [<see cref="T:System.FlagsAttribute" />] especificada por <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <typeparam name="TFlagsEnum">Tipo de enumeração de destino</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- o valor codificado é muito grande para caber em um valor <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> não é um tipo enumerado.
-ou- <typeparamref name="TFlagsEnum" /> não foi declarado com <see cref="T:System.FlagsAttribute" /> -ou- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor de NamedBitList convertido em <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um NULL com uma marca especificada.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como IDENTIFICADOR DE OBJETO com uma marca especificada, retornando o valor em uma cadeia de caracteres de formato decimal com ponto.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor do identificador do objeto em uma cadeia de caracteres de formato decimal pontilhado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como uma CADEIA DE CARACTERES DE OCTETO com marca UNIVERSAL 4, retornando o valor em uma matriz de bytes.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Uma cópia do valor em uma matriz recentemente alocada de tamanho preciso.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como uma SEQUÊNCIA ou SEQUÊNCIA DE com a marca especificada e retorna o resultado como um novo leitor posicionado no primeiro valor da sequência (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Um novo leitor posicionado no primeiro valor da sequência (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como CONJUNTO DE com a marca especificada e retorna o resultado como um novo leitor posicionado no primeiro valor do conjunto de (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation">
        <see langword="true" /> para sempre aceitar os dados na ordem em que são apresentados, <see langword="false" /> para verificar se os dados estão classificados corretamente quando as regras de codificação informarem que a classificação era obrigatória (CER e DER).</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Um novo leitor posicionado no primeiro valor do conjunto de (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como CONJUNTO DE com a marca especificada e retorna o resultado como um novo leitor posicionado no primeiro valor do conjunto de (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) usando o valor <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> do construtor (<see langword="false" />, por padrão).</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Um novo leitor posicionado no primeiro valor do conjunto de (ou com <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como um UTCTime com uma marca especificada.</summary>
      <param name="twoDigitYearMax">O maior ano para representar com esse valor.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como UTCTime com uma marca especificada usando o valor <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> das opções passadas para o construtor (com um padrão de 2049).</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>O valor decodificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>Gera uma <see cref="T:System.Formats.Asn1.AsnContentException" /> padronizada caso o leitor tenha dados restantes; não executará nenhuma função se <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> retornar <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como CADEIA DE CARACTERES DE BITS com uma marca especificada, copiando o valor em um buffer de destino fornecido.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.</param>
      <param name="bytesWritten">Em caso de sucesso, recebe o número de bytes gravados em <paramref name="destination" />.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se <paramref name="destination" /> tiver comprimento suficiente para receber o valor; caso contrário, <see langword="false" /> e o leitor não avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como cadeia de caracteres com a marca especificada e o tipo de codificação, copiando o valor decodificado em um buffer de destino fornecido.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="encodingType">Um dos valores de enumeração representando o tipo de valor a ser processado.</param>
      <param name="charsWritten">Em caso de sucesso, recebe o número de caracteres gravados em <paramref name="destination" />.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> não é um tipo de cadeia de caracteres conhecido.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.
-ou- a cadeia de caracteres não foi decodificada com êxito.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é o mesmo que <paramref name="encodingType" />.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se <paramref name="destination" /> tiver comprimento suficiente para receber o valor; caso contrário, <see langword="false" /> e o leitor não avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>Lê o próximo valor como cadeia de caracteres com a marca especificada, copiando os bytes não processados em um buffer de destino fornecido.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <param name="bytesWritten">Em caso de sucesso, recebe o número de bytes gravados em <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é um tipo de marca de cadeia de caracteres.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se <paramref name="destination" /> tiver comprimento suficiente para receber o valor; caso contrário, <see langword="false" /> e o leitor não avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler o próximo valor como Inteiro com uma marca especificada, como um valor de 32 bits assinado.</summary>
      <param name="value">Em caso de sucesso, recebe o valor decodificado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="false" /> e não avançará o leitor se o valor não estiver entre <see cref="F:System.Int32.MinValue" /> e <see cref="F:System.Int32.MaxValue" />, inclusive; caso contrário, <see langword="true" /> será retornado e o leitor avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler o próximo valor como Inteiro com uma marca especificada, como um valor de 64 bits assinado.</summary>
      <param name="value">Em caso de sucesso, recebe o valor decodificado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="false" /> e não avançará o leitor se o valor não estiver entre <see cref="F:System.Int64.MinValue" /> e <see cref="F:System.Int64.MaxValue" />, inclusive; caso contrário, <see langword="true" /> será retornado e o leitor avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como CADEIA DE CARACTERES DE OCTETO com uma marca especificada, copiando o valor em um buffer de destino fornecido.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="bytesWritten">Em caso de sucesso, recebe o número de bytes gravados em <paramref name="destination" />.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se <paramref name="destination" /> tiver comprimento suficiente para receber o valor; caso contrário, <see langword="false" /> e o leitor não avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Lê o próximo valor como uma CADEIA DE CARACTERES DE BITS com uma marca especificada, retornando o conteúdo como uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais.</summary>
      <param name="unusedBitCount">Em caso de sucesso, recebe no último byte o número de bits que foram relatados como "não utilizados" pelo gravador.</param>
      <param name="value">Em caso de sucesso, recebe uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais correspondentes ao valor da CADEIA DE CARACTERES DE BITS.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se o valor da CADEIA DE CARACTERES DE BITS tiver uma codificação primitiva, <see langword="false" /> e não avançará o leitor se ele tiver uma codificação construída.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>Lê o próximo valor como um caractere com uma marca especificada, retornando o conteúdo como uma <see cref="T:System.ReadOnlyMemory`1" /> não processada dos dados originais.</summary>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <param name="contents">Em caso de sucesso, recebe uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais correspondentes ao valor da cadeia de caracteres.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não é um tipo de marca de cadeia de caracteres.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se o valor da cadeia de caracteres tiver uma codificação primitiva, <see langword="false" /> e não avançará o leitor se ele tiver uma codificação construída.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler o próximo valor como CADEIA DE CARACTERES DE OCTETO com uma marca especificada, retornando o conteúdo como uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais.</summary>
      <param name="contents">Em caso de sucesso, recebe uma <see cref="T:System.ReadOnlyMemory`1" /> dos dados originais correspondentes ao valor da CADEIA DE CARACTERES DE OCTETO.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="true" /> e avançará o leitor se o valor da CADEIA DE CARACTERES DE OCTETO tiver uma codificação primitiva, <see langword="false" /> e não avançará o leitor se ele tiver uma codificação construída.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler o próximo valor como Inteiro com uma marca especificada, como um valor de 32 bits não assinado.</summary>
      <param name="value">Em caso de sucesso, recebe o valor decodificado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="false" /> e não avançará o leitor se o valor não estiver entre <see cref="F:System.UInt32.MinValue" /> e <see cref="F:System.UInt32.MaxValue" />, inclusive; caso contrário, <see langword="true" /> será retornado e o leitor avançará.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Tenta ler o próximo valor como Inteiro com uma marca especificada, como um valor de 64 bits não assinado.</summary>
      <param name="value">Em caso de sucesso, recebe o valor decodificado.</param>
      <param name="expectedTag">A marca a ser verificada antes da leitura ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">o valor a seguir não tem a marca correta.
-ou- a codificação de comprimento não é válida de acordo com as regras de codificação atuais.
-ou- o conteúdo não é válido de acordo com as regras de codificação atuais.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>
        <see langword="false" /> e não avançará o leitor se o valor não estiver entre <see cref="F:System.UInt64.MinValue" /> e <see cref="F:System.UInt64.MaxValue" />, inclusive; caso contrário, <see langword="true" /> será retornado e o leitor avançará.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>Obtém uma indicação se o leitor tem os dados restantes disponíveis para processar.</summary>
      <returns>
        <see langword="true" /> Se houver mais dados disponíveis para o leitor processar; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>Obtém as regras de codificação em uso pelo leitor.</summary>
      <returns>As regras de codificação em uso por este leitor.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>Especifica opções que modificam o comportamento de um <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>Obtém ou define um valor que indica se o leitor deve ignorar a ordem de classificação em um valor Set ou Set-Of.</summary>
      <returns>
        <see langword="true" /> Se o leitor não deve validar que um conjunto ou um valor de conjunto está classificado corretamente para as regras de codificação atuais; caso contrário <see langword="false" /> .
O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>Obtém ou define o maior ano a ser representado com um valor UtcTime.</summary>
      <returns>O maior ano para representar com um valor de UtcTime. O padrão é 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>Um gravador para dados ASN.1 codificados por BER, CER e DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>Crie um <see cref="T:System.Formats.Asn1.AsnWriter" /> com determinado conjunto de regras de codificação.</summary>
      <param name="ruleSet">As restrições de codificação do gravador.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> não está definido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>Copia o valor deste gravador em outro.</summary>
      <param name="destination">O gravador para receber o valor.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
-ou- Este gravador está vazio.
-ou- Este gravador representa mais de um valor de nível superior.
-ou- Este valor do gravador foi codificado de uma maneira não compatível com o conjunto de regras do gravador de destino.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>Retorna uma nova matriz que contém o valor codificado.</summary>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Uma matriz com tamanho preciso que contém o valor codificado.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>Grava a representação codificada dos dados em <paramref name="destination" />.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>O número de bytes gravados em <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>Determina se <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produziria uma saída idêntica a <paramref name="other" />.</summary>
      <param name="other">A instância à qual comparar os valores codificados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> se os dados codificados pendentes forem idênticos a <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>Determina se <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> produziria uma saída idêntica a <paramref name="other" />.</summary>
      <param name="other">O valor codificado para comparação.</param>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> se os dados codificados pendentes forem idênticos a <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>Obtém o número de bytes que seriam gravados por <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> foi chamado sem o método Pop correspondente.</exception>
      <returns>O número de bytes que seriam gravados por <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indique que a Cadeia de Caracteres de Octeto aberta com a marca UNIVERSAL 4 está fechada, retornando o gravador para o contexto pai.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.InvalidOperationException">o gravador não está posicionado atualmente em uma Cadeia de Caracteres de Octeto com a marca especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indica que a Sequência aberta com a marca especificada está fechada, retornando o gravador para o contexto pai.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.InvalidOperationException">o gravador não está posicionado atualmente em uma Sequência com a marca especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Indica que o "Conjunto de" aberto com a marca especificada está fechado, retornando o gravador para o contexto pai.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.InvalidOperationException">o gravador não está posicionado atualmente em um "Conjunto de" com a marca especificada.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Comça a gravar um valor de Cadeia de Caracteres de Octeto com uma marca especificada.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <returns>Um valor descartável que chamará <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automaticamente.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Começa a gravar uma Sequência com uma marca especificada.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Um valor descartável que chamará <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automaticamente.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Comece a gravar um "Conjunto de" com uma marca especificada.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <returns>Um valor descartável que chamará <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> automaticamente.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>Redefine o gravador para que não tenha dados, sem liberar recursos.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Tenta gravar a representação codificada dos dados em <paramref name="destination" />.</summary>
      <param name="destination">O buffer no qual gravar.</param>
      <param name="bytesWritten">Em caso de sucesso, recebe o número de bytes gravados em <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">Um <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> não foi fechado por meio de <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> ou <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>
        <see langword="true" /> se a codificação tiver êxito, <see langword="false" /> se <paramref name="destination" /> for muito pequeno.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de Cadeia de Caracteres de Bits com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="unusedBitCount">O número de bits à direita que não são semânticos.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="value" /> tem comprimento 0 e <paramref name="unusedBitCount" /> não é 0 -ou- <paramref name="value" /> não está vazio e qualquer um dos bits identificados por <paramref name="unusedBitCount" /> está definido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> não está no intervalo [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Booliano com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 1).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava a cadeia de caracteres fornecida usando o tipo de codificação especificado usando a marca especificada correspondente ao tipo de codificação.</summary>
      <param name="encodingType">Um dos valores de enumeração que representa a codificação a ser usada.</param>
      <param name="str">A cadeia de caracteres a ser gravada.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> não é um tipo de codificação de cadeia de caracteres restrito.
-ou- <paramref name="encodingType" /> é um tipo de codificação de cadeia de caracteres restrito sem suporte atualmente por este método.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava a cadeia de caracteres fornecida usando o tipo de codificação especificado usando a marca especificada correspondente ao tipo de codificação.</summary>
      <param name="encodingType">Um dos valores de enumeração que representa a codificação a ser usada.</param>
      <param name="value">A cadeia de caracteres a ser gravada.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca universal apropriada para o tipo de codificação solicitado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> não é um tipo de codificação de cadeia de caracteres restrito.
-ou- <paramref name="encodingType" /> é um tipo de codificação de cadeia de caracteres restrito sem suporte atualmente por este método.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>Grava um único valor que já foi codificado.</summary>
      <param name="value">O valor a ser gravado.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> não pode ser lido segundo as regras de codificação atuais.
-ou- <paramref name="value" /> tem dados além do final do primeiro valor.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de enumeração não [<see cref="T:System.FlagsAttribute" />] como Enumerado com a marca UNIVERSAL 10.</summary>
      <param name="value">O valor de enumeração demarcado a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="value" /> não é um valor de enumeração demarcado.
-ou- o tipo não demarcado de <paramref name="value" /> é declarado [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de enumeração não [<see cref="T:System.FlagsAttribute" />] como Enumerado com a marca UNIVERSAL 10.</summary>
      <param name="value">O valor de enumeração demarcado a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 10).</param>
      <typeparam name="TEnum">O tipo de enumeração não [ <see cref="T:System.FlagsAttribute" /> ] a ser gravado.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <typeparamref name="TEnum" /> não é uma enumeração.
-ou- <typeparamref name="TEnum" /> é declarado [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava o <see cref="T:System.DateTimeOffset" /> fornecido como um GeneralizedTime com a marca UNIVERSAL 24 especificada, excluindo opcionalmente os segundos fracionários.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="omitFractionalSeconds">
        <see langword="true" /> para tratar os segundos fracionários em <paramref name="value" /> como 0, mesmo se um valor diferente de zero estiver presente.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 24).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Inteiro com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Inteiro com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Inteiro com uma marca especificada.</summary>
      <param name="value">O valor inteiro a ser gravado, em ordem de byte big-endian assinado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentException">os nove bits mais significativos estão todos definidos.
-ou- os nove bits mais significativos estão todos sem definição.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Inteiro com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor Inteiro com uma marca especificada.</summary>
      <param name="value">O valor inteiro a ser gravado, em ordem de byte big-endian não assinado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentException">os nove bits mais significativos estão todos sem definição.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de matriz de bits como uma NamedBitList com uma marca especificada.</summary>
      <param name="value">Os bits a serem gravados</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de enumeração [<see cref="T:System.FlagsAttribute" />] como uma NamedBitList com uma marca especificada.</summary>
      <param name="value">O valor de enumeração demarcado a ser gravado</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="value" /> não é um valor de enumeração demarcado.
-ou- o tipo não demarcado de <paramref name="value" /> não é declarado [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de enumeração [<see cref="T:System.FlagsAttribute" />] como uma NamedBitList com uma marca especificada.</summary>
      <param name="value">O valor de enumeração a ser gravado</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 3).</param>
      <typeparam name="TEnum">O <see cref="T:System.FlagsAttribute" /> tipo de enumeração [] a ser gravado.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <typeparamref name="TEnum" /> não é um valor de enumeração.
-ou- <typeparamref name="TEnum" /> não é declarado [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava NULL com uma marca especificada.</summary>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 5).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um Identificador de Objeto com uma marca especificada.</summary>
      <param name="oidValue">O identificador de objeto a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="oidValue" /> não é um identificador de objeto decimal com ponto válido.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um Identificador de Objeto com uma marca especificada.</summary>
      <param name="oidValue">O identificador de objeto a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.
-ou- <paramref name="oidValue" /> não é um identificador de objeto decimal com ponto válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava um valor de Cadeia de Caracteres de Octeto com uma marca especificada.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Grava o valor fornecido como um UTCTime com uma marca especificada, desde que o ano esteja no intervalo permitido.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="twoDigitYearMax">O ano máximo válido para <paramref name="value" />, após a conversão para UTC.
Para o intervalo X.509 Time.utcTime de 1950-2049, passe <c>2049</c>.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (após a conversão para UTC) não está no intervalo (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />).</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Escreve o valor fornecido como um UTCTime com uma marca especificada, aceitando o ano de dois dígitos como válido no contexto.</summary>
      <param name="value">O valor a ser gravado.</param>
      <param name="tag">A marca a ser gravada ou <see langword="null" /> para a marca padrão (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> é <see cref="F:System.Formats.Asn1.TagClass.Universal" />, mas <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> não está correto para o método.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>Obtém as regras de codificação em uso por este gravador.</summary>
      <returns>As regras de codificação em uso por este gravador.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>Fornece um destino <see cref="T:System.IDisposable" /> para fechar com segurança uma marcação aberta usando um escopo léxico como um escopo lógico.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou à redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>A classe de marca de determinada marca ASN.1.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>A classe de marca Aplicativo</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>A classe de marca Específica do Contexto</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>A classe de marca Particular</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>A classe de marca Universal</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>Atribuições de marca para a classe UNIVERSAL em ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>Valor da marca de classe universal para Bit String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>Valor da marca de classe universal para BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>Valor da marca de classe universal para Boolean.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>Valor da marca de classe universal para Date.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>Valor da marca de classe universal para Date-Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>Valor da marca de classe universal para Duration.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>Valor da marca de classe universal para Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>O identificador reservado para o marcador de fim de conteúdo em uma codificação de comprimento indefinido.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>Valor da marca de classe universal para Enumerated.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>Valor da marca de classe universal para External.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>Valor da marca de classe universal para GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>Valor da marca de classe universal para GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>Valor da marca de classe universal para GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>Valor da marca de classe universal para IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Valor da marca de classe universal Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>Valor da marca de classe universal para Integer.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>Valor da marca de classe universal para ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Valor da marca de classe universal para Null.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>Valor da marca de classe universal para NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>Valor da marca de classe universal para Object Descriptor.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>Valor da marca de classe universal para Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>Valor da marca de classe universal para IRI (Internationalized Resource Identifier) do Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>Valor da marca de classe universal para Octet String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>Valor da marca de classe universal para PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Valor da marca de classe universal para Real.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>Valor da marca de classe universal para Relative Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>Valor da marca de classe universal para IRI (Internationalized Resource Identifier) de Relative Object Identifier.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>Valor da marca de classe universal para Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Valor da marca de classe universal para Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>Valor da marca de classe universal para Set.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Valor da marca de classe universal para Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>Valor da marca de classe universal para T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>Valor da marca de classe universal para TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>Valor da marca de classe universal para Time.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Valor da marca de classe universal para Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>Valor da marca de classe universal para UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>Valor da marca de classe universal para uma cadeia de caracteres irrestrita.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>Valor da marca de classe universal para UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>Valor da marca de classe universal para UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>Valor da marca de classe universal para VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>Valor da marca de classe universal para VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>