<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Rappresenta i risultati di una singola acquisizione di sottoespressione riuscita.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Recupera la sottostringa acquisita dalla stringa di input chiamando la proprietà <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns>Sottostringa acquisita dalla corrispondenza.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>Posizione nella stringa originale in cui si trova il primo carattere della sottostringa acquisita.</summary>
      <returns>Posizione iniziale con inizio zero nella stringa originale in cui si trova la sottostringa acquisita.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Ottiene la lunghezza della sottostringa acquisita.</summary>
      <returns>Lunghezza della sottostringa acquisita.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Ottiene la sottostringa acquisita dalla stringa di input.</summary>
      <returns>Sottostringa acquisita dalla corrispondenza.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Rappresenta il set di acquisizioni eseguite da un singolo gruppo di acquisizione. La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex">Posizione nella matrice di destinazione in cui iniziare la copiatura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.  
  
-oppure- 
 <paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <summary>Copia gli elementi della raccolta in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero degli elementi nella raccolta di origine è maggiore dello spazio disponibile da <paramref name="arrayIndex" /> alla fine del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Fornisce un enumeratore che scorre la raccolta.</summary>
      <returns>Oggetto contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Capture" /> all'interno di <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se il valore <paramref name="item" /> viene trovato nella raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <returns>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="item">Oggetto da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <returns>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value">Oggetto da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value">Oggetto da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Ottiene il numero delle sottostringhe acquisite dal gruppo.</summary>
      <returns>Numero di elementi presenti nel controllo <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Ottiene un singolo membro della raccolta.</summary>
      <param name="i">Indice nella raccolta di acquisizioni.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> è minore di 0 o maggiore di <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
      <returns>Sottostringa acquisita alla posizione <paramref name="i" /> della raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso alla raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" />, perché le dimensioni della raccolta sono fisse.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Rappresenta i risultati di un singolo gruppo di acquisizione.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Restituisce un oggetto <see langword="Group" /> equivalente a quello fornito che può essere condiviso tra più thread.</summary>
      <param name="inner">Oggetto <see cref="T:System.Text.RegularExpressions.Group" /> di input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> è <see langword="null" />.</exception>
      <returns>Oggetto <see langword="Group" /> dell'espressione regolare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Ottiene una raccolta di tutte le acquisizioni rilevate dal gruppo di acquisizione, nel primo ordine più interno e più a sinistra (o nel primo ordine più interno e più a destra se l'espressione regolare viene modificata con l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La raccolta può avere zero o più elementi.</summary>
      <returns>Raccolta delle sottostringhe individuate dal gruppo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary>Restituisce nome del gruppo di acquisizione rappresentato dall'istanza corrente.</summary>
      <returns>Nome del gruppo di acquisizione rappresentato dall'istanza corrente.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Ottiene un valore che indica se la ricerca di corrispondenze ha avuto esito positivo.</summary>
      <returns>
        <see langword="true" /> se la corrispondenza dà esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Restituisce il set di gruppi acquisiti in un'unica corrispondenza. La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary>Determina se la raccolta di gruppi contiene un gruppo acquisito identificato dal nome specificato.</summary>
      <param name="key">Stringa con il nome del gruppo acquisito da individuare.</param>
      <returns>
        <see langword="true" /> se la raccolta di gruppi contiene un gruppo acquisito identificato da <paramref name="key" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex">Posizione nella matrice di destinazione in cui iniziare la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.

-oppure-

<paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary>Copia gli elementi della raccolta di gruppi in una matrice <see cref="T:System.Text.RegularExpressions.Group" />, a partire da un indice della matrice specifico.</summary>
      <param name="array">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dalla raccolta di gruppi. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.

-oppure-

<paramref name="arrayIndex" /> è maggiore della lunghezza di <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="array" /> - <paramref name="arrayIndex" /> è inferiore al numero di raccolte di gruppi.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Fornisce un enumeratore che scorre la raccolta.</summary>
      <returns>Enumeratore contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Group" /> presenti in <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Gruppo da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary>Determina se la raccolta di gruppi contiene un elemento gruppo specifico.</summary>
      <param name="item">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns>
        <see langword="true" /> se l'elemento gruppo viene trovato nella raccolta di gruppi. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
      <returns>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary>Fornisce un enumeratore che scorre la raccolta di gruppi.</summary>
      <returns>Enumeratore contenente tutti i nomi e gli oggetti nella raccolta <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary>Fornisce un enumeratore che scorre la raccolta di gruppi.</summary>
      <returns>Enumeratore contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Group" /> nella raccolta di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary>Determina l'indice di un gruppo specifico nella raccolta di gruppi.</summary>
      <param name="item">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns>Indice di <paramref name="item" /> se trovato. In caso contrario,-1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Posizione in cui inserire il gruppo.</param>
      <param name="item">Gruppo da inserire.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero del gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da aggiungere alla raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
      <returns>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta di gruppi contiene un elemento gruppo specifico.</summary>
      <param name="value">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns>
        <see langword="true" /> se l'elemento gruppo viene trovato nella raccolta di gruppi. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un gruppo specifico nella raccolta di gruppi.</summary>
      <param name="value">Gruppo da individuare nella raccolta di gruppi.</param>
      <returns>Indice di <paramref name="item" /> se trovato. In caso contrario,-1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Posizione in cui inserire il gruppo.</param>
      <param name="value">Gruppo da inserire.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero del gruppo da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Questo metodo non è supportato. Si tratta di un insieme in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary>Tenta di recuperare un gruppo identificato dalla chiave del nome specificate, se esistente nella raccolta di gruppi.</summary>
      <param name="key">Stringa con la chiave del nome del gruppo da cercare.</param>
      <param name="value">Al termine del metodo, il gruppo con il nome <paramref name="key" />, se viene trovato. In caso contrario <see langword="null" />, se non viene trovato.</param>
      <returns>
        <see langword="true" /> se esiste un gruppo identificato dalla chiave del nome specificata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Restituisce il numero di gruppi nella raccolta.</summary>
      <returns>Numero di gruppi nella raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Consente l'accesso a un membro della raccolta in base a un indice intero.</summary>
      <param name="groupnum">Indice in base zero del membro della raccolta da recuperare.</param>
      <returns>Membro della raccolta specificata da <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Consente l'accesso a un membro della raccolta in base a un indice stringa.</summary>
      <param name="groupname">Nome di un gruppo di acquisizione.</param>
      <returns>Membro della raccolta specificata da <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary>Ottiene un'enumerazione di stringhe contenente le chiavi del nome della raccolta di gruppi.</summary>
      <returns>Chiavi del nome della raccolta di gruppi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>Copia dell'oggetto <see cref="T:System.Text.RegularExpressions.Match" /> da sincronizzare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary>Ottiene il gruppo in corrispondenza della posizione specificata nella raccolta.</summary>
      <param name="index">Indice in base zero del gruppo nella raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException">Impossibile impostare un elemento. Si tratta di un insieme in sola lettura.</exception>
      <returns>Gruppo nella posizione desiderata.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta di gruppi è fissa.</summary>
      <returns>Sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene il gruppo nella posizione desiderata.</summary>
      <param name="index">Posizione in corrispondenza dell'indice zero del gruppo nella raccolta di gruppi.</param>
      <exception cref="T:System.NotSupportedException">Impossibile impostare un elemento. Si tratta di un insieme in sola lettura.</exception>
      <returns>Gruppo nella posizione desiderata.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary>Ottiene un'enumerazione dei gruppi con tutti i gruppi nella raccolta di gruppi.</summary>
      <returns>Enumerazione del gruppo.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Rappresenta i risultati di una singola corrispondenza di un'espressione regolare.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Restituisce un nuovo oggetto <see cref="T:System.Text.RegularExpressions.Match" /> con i risultati relativi alla corrispondenza successiva, partendo dalla posizione in cui terminava l'ultima corrispondenza (dal carattere dopo l'ultimo carattere corrispondente).</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
      <returns>Corrispondenza dell'espressione regolare successiva.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Restituisce l'espansione del criterio di sostituzione specificato.</summary>
      <param name="replacement">Criterio di sostituzione da usare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">L'espansione non è consentita per questo criterio.</exception>
      <returns>Versione espansa del parametro <paramref name="replacement" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Restituisce un'istanza di <see cref="T:System.Text.RegularExpressions.Match" /> equivalente a quella fornita che può essere condivisa tra più thread.</summary>
      <param name="inner">Corrispondenza di un'espressione regolare equivalente a quella prevista.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> è <see langword="null" />.</exception>
      <returns>Corrispondenza di un'espressione regolare che può essere condivisa tra più thread.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Ottiene il gruppo vuoto. Tutte le corrispondenze non riuscite restituiscono questa corrispondenza vuota.</summary>
      <returns>Corrispondenza vuota.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Ottiene una raccolta di gruppi corrispondenti all'espressione regolare.</summary>
      <returns>Gruppi di caratteri corrispondenti al criterio.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Rappresenta il gruppo di corrispondenze corrette individuate applicando in modo iterativo un modello di espressione regolare alla stringa di input.  La raccolta non è modificabile (sola lettura) e non ha costruttori pubblici. Il metodo <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> restituisce un oggetto <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia tutti gli elementi della raccolta nella matrice indicata a partire dall'indice specificato.</summary>
      <param name="array">Matrice in cui copiare la raccolta.</param>
      <param name="arrayIndex">Posizione nella matrice in cui iniziare la copiatura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è una matrice multidimensionale.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> non rientra nei limiti di <paramref name="array" />.  
  
-oppure- 
 <paramref name="arrayIndex" /> e <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> non rientrano nei limiti di <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <summary>Copia gli elementi della raccolta in un oggetto <see cref="T:System.Array" />, a partire da uno specifico indice di <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Fornisce un enumeratore che scorre la raccolta.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
      <returns>Oggetto contenente tutti gli oggetti <see cref="T:System.Text.RegularExpressions.Match" /> all'interno di <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se il valore <paramref name="item" /> viene trovato nella raccolta. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <paramref name="item" /> è stato rimosso correttamente dalla raccolta; in caso contrario, <see langword="false" />. Questo metodo restituisce <see langword="false" /> anche se l'oggetto <paramref name="item" /> non viene trovato nella raccolta originale.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="item">Oggetto da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da aggiungere alla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
      <returns>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi dalla raccolta.</summary>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determina se la raccolta contiene un valore specifico.</summary>
      <param name="value">Oggetto da individuare nella raccolta.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> viene trovato nell'insieme; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value">Oggetto da individuare nella raccolta.</param>
      <returns>Indice di <paramref name="value" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto da inserire nella raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Oggetto da rimuovere dalla raccolta.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>La chiamata di questo metodo genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.NotSupportedException">Raccolta in sola lettura.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Ottiene il numero di corrispondenze.</summary>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
      <returns>Numero di corrispondenze.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se la raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="false" /> in tutti i casi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Ottiene un singolo membro della raccolta.</summary>
      <param name="i">Indice nella raccolta <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> è minore di 0 oppure maggiore o uguale a <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
      <returns>Sottostringa acquisita alla posizione <paramref name="i" /> della raccolta.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso alla raccolta. Questa proprietà restituisce sempre l'oggetto stesso.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se la dimensione della raccolta è fissa.</summary>
      <returns>
        <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Rappresenta il metodo chiamato ogni volta che si individua una corrispondenza di un'espressione regolare durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match">Oggetto <see cref="T:System.Text.RegularExpressions.Match" /> che rappresenta una corrispondenza di un'espressione regolare singola durante un'operazione del metodo <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns>Stringa restituita dal metodo rappresentato dal delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Rappresenta un'espressione regolare non modificabile.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Specifica che per un'operazione di criteri di ricerca non è previsto un timeout.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary>Il tempo massimo che può trascorrere in un'operazione di criteri di ricerca prima del timeout dell'operazione.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> usando i dati serializzati.</summary>
      <param name="info">Oggetto in cui sono contenuti un modello serializzato e le informazioni relative a <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context">Destinazione per questa serializzazione. Questo parametro non viene usato; specificare <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">Il criterio contenuto nel parametro <paramref name="info" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="info" /> contiene un flag <see cref="T:System.Text.RegularExpressions.RegexOptions" /> non valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata.</summary>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata, con opzioni che modificano il criterio.</summary>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che modificano l'espressione regolare.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="options" /> contiene un flag non valido.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.Regex" /> per l'espressione regolare specificata, con le opzioni che modificano il criterio e un valore che specifica per quanto tempo un metodo di criteri di ricerca deve provare a trovare una corrispondenza prima del timeout.</summary>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che modificano l'espressione regolare.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati in un assembly denominato.</summary>
      <param name="regexinfos">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname">Nome file dell'assembly.</param>
      <exception cref="T:System.ArgumentException">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati in un assembly denominato con gli attributi specificati.</summary>
      <param name="regexinfos">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname">Nome file dell'assembly.</param>
      <param name="attributes">Matrice che definisce gli attributi da applicare all'assembly.</param>
      <exception cref="T:System.ArgumentException">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Compila uno o più oggetti <see cref="T:System.Text.RegularExpressions.Regex" /> specificati e un file di risorse specificato in un assembly denominato con gli attributi specificati.</summary>
      <param name="regexinfos">Matrice che descrive le espressioni regolari da compilare.</param>
      <param name="assemblyname">Nome file dell'assembly.</param>
      <param name="attributes">Matrice che definisce gli attributi da applicare all'assembly.</param>
      <param name="resourceFile">Nome del file di risorse Win32 da includere nell'assembly.</param>
      <exception cref="T:System.ArgumentException">Il valore della proprietà <see cref="P:System.Reflection.AssemblyName.Name" /> del parametro <paramref name="assemblyname" /> è una stringa vuota o null.  
  
-oppure- 
Il criterio di ricerca di espressioni regolari di uno o più oggetti in <paramref name="regexinfos" /> contiene una sintassi non valida.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> o <paramref name="regexinfos" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">Il parametro <paramref name="resourceFile" /> definisce un file di risorse Win32 non valido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossibile trovare il file designato dal parametro <paramref name="resourceFile" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET core solo: la creazione di un assembly di espressioni regolari compilate non è supportata.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Ignora un set minimo di caratteri (\, *, +, ?, |, {, [, (,), ^, $,., # e spazio) sostituendoli con i rispettivi codici di escape. In questo modo il motore delle espressioni regolari interpreta questi caratteri letteralmente anziché come metacaratteri.</summary>
      <param name="str">Stringa di input che contiene il testo da convertire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> è <see langword="null" />.</exception>
      <returns>Stringa di caratteri con metacaratteri convertiti nel relativo formato di escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Restituisce una matrice di nomi di gruppi di acquisizione per l'espressione regolare.</summary>
      <returns>Matrice di stringhe di nomi di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Restituisce una matrice di numeri di gruppi di acquisizione che corrispondono ai nomi dei gruppi in una matrice.</summary>
      <returns>Matrice di interi di numeri di gruppi.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Ottiene un nome di gruppo che corrisponde al numero di gruppo specificato.</summary>
      <param name="i">Numero di gruppo da convertire nel nome di gruppo corrispondente.</param>
      <returns>Stringa contenente il nome di gruppo associato al numero di gruppo specificato. Se nessun nome di gruppo corrisponde a <paramref name="i" />, il metodo restituisce <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Restituisce il numero di gruppo che corrisponde al nome di gruppo specificato.</summary>
      <param name="name">Nome di gruppo da convertire nel numero di gruppo corrispondente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <returns>Numero di gruppo che corrisponde al nome di gruppo specificato o -1 se <paramref name="name" /> non è un nome di gruppo valido.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException">I riferimenti sono già stati inizializzati.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> trova una corrispondenza in una stringa di input specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indica se l'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" /> trova una corrispondenza nella stringa di input specificata, a partire dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat">Posizione del carattere dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Indica se l'espressione regolare specificata trova una corrispondenza nella stringa di input specificata usando le opzioni di corrispondenza specificate e l'intervallo di timeout.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è un valore valido di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout.</exception>
      <returns>
        <see langword="true" /> se l'espressione regolare individua una corrispondenza; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Cerca nella stringa di input specificata la prima ricorrenza dell'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Cerca nella stringa di input la prima occorrenza di un'espressione regolare, a partire dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat">Posizione del carattere in base zero dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Cerca nella stringa di input la prima occorrenza di un'espressione regolare, a partire dalla posizione iniziale specificata e cercando solo nel numero di caratteri specificato.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="beginning">Posizione del carattere in base zero nella stringa di input che definisce la posizione più a sinistra in cui cercare.</param>
      <param name="length">Numero di caratteri nella sottostringa da includere nella ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.  
  
-oppure- 
 <paramref name="length" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.  
  
-oppure- 
 <paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifica una posizione esterna all'intervallo di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Cerca nella stringa di input specificata la prima occorrenza dell'espressione regolare specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Cerca nella stringa di input la prima occorrenza dell'espressione regolare specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Cerca nella stringa di input la prima occorrenza dell'espressione regolare specificata usando le opzioni di corrispondenza e l'intervallo di timeout specificati.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Oggetto contenente informazioni sulla corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <returns>Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare, partendo dalla posizione iniziale specificata nella stringa.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="startat">Posizione del carattere nella stringa di input dalla quale iniziare la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <returns>Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <returns>Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata usando le opzioni di corrispondenza specificate.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <returns>Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Cerca nella stringa di input specificata tutte le occorrenze di un'espressione regolare specificata usando le opzioni di corrispondenza e l'intervallo di timeout specificati.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che specificano le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <returns>Raccolta di oggetti <see cref="T:System.Text.RegularExpressions.Match" /> trovati dalla ricerca. Se non vengono trovate corrispondenze, il metodo restituisce un oggetto raccolta vuoto.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>In una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione può aver luogo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>In una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa di sostituzione specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione può aver luogo.</param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa di sostituzione specificata. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="replacement">Stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="replacement" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>In una stringa di input specificata, sostituisce tutte le sottostringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, a eccezione del fatto che ogni stringa corrispondente viene sostituita dalla stringa di sostituzione. Se <paramref name="pattern" /> non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>In una stringa di input specificata, sostituisce tutte le stringhe corrispondenti a un'espressione regolare specificata con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>In una stringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione avrà luogo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>In una sottostringa di input specificata, sostituisce un numero massimo di stringhe specificato corrispondenti a un criterio di espressione regolare con una stringa restituita da un delegato <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Stringa nella quale cercare una corrispondenza.</param>
      <param name="evaluator">Metodo personalizzato che esamina ogni corrispondenza e restituisce la stringa corrispondente originale o una stringa di sostituzione.</param>
      <param name="count">Numero massimo di volte in cui la sostituzione avrà luogo.</param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="evaluator" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Stringa nuova identica alla stringa di input, ad eccezione del fatto che ogni stringa corrispondente viene sostituita da una stringa di sostituzione. Se il criterio di espressione regolare non trova corrispondenza nell'istanza corrente, il metodo restituisce l'istanza corrente invariata.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Stringa da dividere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Suddivide una stringa di input per un numero massimo di volte specificato in una matrice di sottostringhe in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Stringa da suddividere.</param>
      <param name="count">Numero massimo di volte in cui la suddivisione può aver luogo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Suddivide una stringa di input per un numero massimo di volte specificato in una matrice di sottostringhe in corrispondenza delle posizioni definite da un'espressione regolare specificata nel costruttore <see cref="T:System.Text.RegularExpressions.Regex" />. La ricerca del criterio di espressione regolare inizia da una posizione del carattere specificata nella stringa di input.</summary>
      <param name="input">Stringa da suddividere.</param>
      <param name="count">Numero massimo di volte in cui la suddivisione può aver luogo.</param>
      <param name="startat">Posizione del carattere nella stringa di input da cui avrà inizio la ricerca.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> è minore di zero o maggiore della lunghezza di <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare.</summary>
      <param name="input">Stringa da dividere.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato. Le opzioni specificate modificano l'operazione di corrispondenza.</summary>
      <param name="input">Stringa da dividere.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Suddivide una stringa di input in una matrice di sottostringhe in corrispondenza delle posizioni definite da un criterio di espressione regolare specificato. I parametri aggiuntivi specificano le opzioni che modificano l'operazione di corrispondenza e un intervallo di timeout se non viene trovata alcuna corrispondenza.</summary>
      <param name="input">Stringa da dividere.</param>
      <param name="pattern">Criterio di espressione regolare di cui trovare la corrispondenza.</param>
      <param name="options">Combinazione bit per bit dei valori di enumerazione che forniscono le opzioni per la corrispondenza.</param>
      <param name="matchTimeout">Intervallo di timeout o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> per indicare che per il metodo non è previsto un timeout.</param>
      <exception cref="T:System.ArgumentException">Si è verificato un errore di analisi dell'espressione regolare.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> o <paramref name="pattern" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> non è una combinazione bit per bit valida di valori di <see cref="T:System.Text.RegularExpressions.RegexOptions" />.  
  
-oppure- 
 <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Si è verificato un timeout. Per altre informazioni sui timeout, vedere la sezione Osservazioni.</exception>
      <returns>Matrice di stringhe.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per deserializzare l'oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> corrente.</summary>
      <param name="si">Oggetto da popolare con le informazioni sulla serializzazione.</param>
      <param name="context">Posizione di archiviazione e recupero dei dati serializzati. Questo parametro è riservato per usi futuri.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Restituisce il criterio di espressione regolare passato al costruttore <see langword="Regex" />.</summary>
      <returns>Parametro <paramref name="pattern" /> passato al costruttore <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Converte tutti i caratteri di escape presenti nella stringa di input.</summary>
      <param name="str">Stringa di input contenente il testo da convertire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> include una sequenza di escape non riconosciuta.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> è <see langword="null" />.</exception>
      <returns>Stringa di caratteri con eventuali caratteri di escape convertiti nel relativo formato non di escape.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> se la proprietà <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> se la proprietà <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contiene l'opzione <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary>Verifica se un intervallo di timeout si trova all'interno di un intervallo di valori accettabili.</summary>
      <param name="matchTimeout">Intervallo di timeout da verificare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il timeout specificato non è compreso in un intervallo valido.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Ottiene o imposta il numero massimo di voci nella cache statica corrente di espressioni regolari compilate.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore in un'operazione set è minore di zero.</exception>
      <returns>Numero massimo di voci nella cache statica.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary>Ottiene o imposta un dizionario che esegue il mapping di gruppi di acquisizione denominati ai valori di indice corrispondenti.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> in un'operazione set è <see langword="null" />.</exception>
      <returns>Dizionario che esegue il mapping di gruppi di acquisizione denominati ai valori di indice corrispondenti.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary>Ottiene o imposta un dizionario che esegue il mapping di gruppi di acquisizione numerati nei relativi valori di indice.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> in un'operazione set è <see langword="null" />.</exception>
      <returns>Un dizionario che esegue il mapping di gruppi di acquisizione numerati nei relativi valori di indice.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Ottiene l'intervallo di timeout dell'istanza corrente.</summary>
      <returns>Intervallo di tempo massimo che può trascorrere in un'operazione di criteri di ricerca prima che venga generata un'eccezione <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Ottiene le opzioni passate al costruttore <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Uno o più membri dell'enumerazione <see cref="T:System.Text.RegularExpressions.RegexOptions" /> che rappresentano le opzioni passate al costruttore <see cref="T:System.Text.RegularExpressions.Regex" /></returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Ottiene un valore che indica se l'espressione regolare effettua la ricerca da destra a sinistra.</summary>
      <returns>
        <see langword="true" /> se l'espressione regolare effettua la ricerca da destra a sinistra; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Fornisce le informazioni su un'espressione regolare utilizzate per compilare un'espressione regolare in un assembly autonomo.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare da includere in un assembly.</summary>
      <param name="pattern">Espressione regolare da compilare.</param>
      <param name="options">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
      <param name="name">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
      <param name="fullnamespace">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
      <param name="ispublic">
        <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="name" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> che contiene informazioni su un'espressione regolare con un valore di timeout specificato da includere in un assembly.</summary>
      <param name="pattern">Espressione regolare da compilare.</param>
      <param name="options">Opzioni dell'espressione regolare da utilizzare per compilare l'espressione regolare.</param>
      <param name="name">Nome del tipo che rappresenta l'espressione regolare compilata.</param>
      <param name="fullnamespace">Spazio dei nomi al quale appartiene il nuovo tipo.</param>
      <param name="ispublic">
        <see langword="true" /> per rendere l'espressione regolare compilata visibile pubblicamente; in caso contrario, <see langword="false" />.</param>
      <param name="matchTimeout">L'intervallo di timeout predefinito per l'espressione regolare.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="name" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fullnamespace" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="matchTimeout" /> è negativo, zero o maggiore di circa 24 giorni.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Ottiene o imposta un valore che indica se l'espressione regolare compilata ha visibilità pubblica.</summary>
      <returns>
        <see langword="true" /> se l'espressione regolare ha visibilità pubblica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary>Ottiene o imposta l'intervallo di timeout predefinito dell'espressione regolare.</summary>
      <returns>L'intervallo di tempo massimo predefinito che può trascorrere in un'operazione di corrispondenza dei modelli prima che <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> venga generato o <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> se i timeout sono disabilitati.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Ottiene o imposta il nome del tipo che rappresenta l'espressione regolare compilata.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il valore per questa proprietà è una stringa vuota.</exception>
      <returns>Nome del nuovo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi cui appartiene il nuovo tipo.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
      <returns>Spazio dei nomi del nuovo tipo.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Ottiene o imposta le opzioni da utilizzare per compilare l'espressione regolare.</summary>
      <returns>Combinazione bit per bit dei valori dell'enumerazione.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Ottiene o imposta l'espressione regolare da compilare.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore di questa proprietà è <see langword="null" />.</exception>
      <returns>Espressione regolare da compilare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>Eccezione generata quando il tempo di esecuzione di un metodo dei criteri di ricerca di espressioni regolari supera l'intervallo di timeout.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio fornito dal sistema.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati serializzati.</param>
      <param name="context">Flusso che contiene i dati serializzati.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con la stringa di messaggio specificata.</summary>
      <param name="message">Stringa che descrive l'eccezione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message">Stringa che descrive l'eccezione.</param>
      <param name="inner">Eccezione che ha determinato l'eccezione corrente.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> con le informazioni sul modello di espressione regolare, il testo di input e l'intervallo di timeout.</summary>
      <param name="regexInput">Il testo di input elaborato dal motore delle espressioni regolari quando si è verificato il timeout.</param>
      <param name="regexPattern">Modello utilizzato dal motore delle espressioni regolari quando si verifica il timeout.</param>
      <param name="matchTimeout">Intervallo di timeout.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popola un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare un oggetto <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="info">Oggetto informazioni di serializzazione da popolare con i dati.</param>
      <param name="context">Destinazione per questa serializzazione.</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>Ottiene il testo di input che il motore delle espressioni regolari stava elaborando quando si è verificato il timeout.</summary>
      <returns>Testo di input dell'espressione regolare.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>Ottiene l'intervallo di timeout per una corrispondenza di espressione regolare.</summary>
      <returns>Intervallo di timeout.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>Ottiene il modello di espressione regolare utilizzato nell'operazione di confronto nel momento in cui si è verificato il timeout.</summary>
      <returns>Il modello di espressione regolare.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Fornisce valori enumerati da usare per impostare le opzioni delle espressioni regolari.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Specifica che l'espressione regolare è compilata in un assembly. Questa situazione determina un'esecuzione più rapida ma aumenta i tempi di avvio. Questo valore non deve essere assegnato alla proprietà <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> quando viene chiamato il metodo <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Per ulteriori informazioni, vedere la sezione "espressioni regolari compilate" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Specifica che le differenze culturali della lingua vengono ignorate. Per altre informazioni, vedere la sezione "confronto usando la lingua inglese" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Consente un comportamento conforme a ECMAScript per l'espressione. Questo valore può essere utilizzato soltanto in combinazione con i valori <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> e <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. L'uso di questo valore con qualsiasi altro valore determina un'eccezione.  
  
Per ulteriori informazioni sull' <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> opzione, vedere la sezione "comportamento di corrispondenza ECMAScript" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Specifica che le uniche acquisizioni valide sono i gruppi denominati o numerati in modo esplicito del modulo (? &lt; nome &gt; ...). In questo modo le parentesi senza nome possono fungere da gruppi di non acquisizione senza la goffaggine sintattica dell'espressione (?:...). Per ulteriori informazioni, vedere la sezione "solo acquisizioni esplicite" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Specifica una corrispondenza senza distinzione tra maiuscole e minuscole. Per ulteriori informazioni, vedere la sezione "corrispondenza senza distinzione tra maiuscole e minuscole" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Elimina uno spazio vuoto non preceduto da un carattere di escape dal criterio e consente i commenti contrassegnati da #. Tuttavia, questo valore non influisce né elimina gli spazi in classi di caratteri, quantificatori numerici o token che contrassegnano l'inizio di singoli elementi del linguaggio di espressioni regolari. Per altre informazioni, vedere la sezione "Ignora spazi vuoti" nell'articolo Opzioni di espressioni regolari.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Modalità multiriga. Modifica il significato dei simboli ^ e $ in modo che corrispondano rispettivamente all'inizio e alla fine di qualsiasi riga e non solo dell'intera stringa. Per altre informazioni, vedere la sezione "modalità multiriga" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Specifica che non sono state impostate opzioni. Per ulteriori informazioni sul comportamento predefinito del motore delle espressioni regolari, vedere la sezione "opzioni predefinite" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Specifica che la ricerca verrà eseguita da destra a sinistra anziché da sinistra a destra. Per altre informazioni, vedere la sezione "modalità da destra a sinistra" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Specifica la modalità a riga singola. Modifica il significato del punto (.) in modo che corrisponda a ogni carattere (anziché a ogni carattere eccetto \n). Per altre informazioni, vedere la sezione "modalità a riga singola" nell'articolo Opzioni di espressioni regolari .</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseError">
      <summary>Specifica il motivo dettagliato per cui viene generata una <see cref="T:System.Text.RegularExpressions.RegexParseException" /> quando un'espressione regolare contiene un errore di analisi.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasComment">
      <summary>Un costrutto di alternanza in un'espressione regolare contiene un commento.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedCondition">
      <summary>Un'alternanza in un'espressione regolare presenta una condizione con formato non valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasMalformedReference">
      <summary>Un costrutto di alternanza in un'espressione regolare contiene un riferimento non valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasNamedCapture">
      <summary>Un costrutto di alternanza in un'espressione regolare usa un'acquisizione denominata.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasTooManyConditions">
      <summary>Un'alternanza in un'espressione regolare presenta troppe condizioni.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.AlternationHasUndefinedReference">
      <summary>Un costrutto di alternanza in un'espressione regolare contiene un riferimento non definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupNameInvalid">
      <summary>Il nome di gruppo di un gruppo acquisito in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.CaptureGroupOfZero">
      <summary>Un'espressione regolare definisce una sottoespressione numerata denominata zero.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ExclusionGroupNotLast">
      <summary>Una classe di caratteri in un'espressione regolare con un gruppo di esclusione non è l'ultima parte della classe di caratteri.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientClosingParentheses">
      <summary>Un'espressione regolare presenta una parentesi aperta senza escape oppure manca una parentesi chiusa.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOpeningParentheses">
      <summary>Un'espressione regolare presenta una parentesi chiusa senza escape oppure manca una parentesi aperta.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InsufficientOrInvalidHexDigits">
      <summary>Una sequenza di escape esadecimale in un'espressione regolare non include cifre sufficienti o contiene cifre non valide.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidGroupingConstruct">
      <summary>Un costrutto di raggruppamento in un'espressione regolare non è valido o è in formato non corretto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.InvalidUnicodePropertyEscape">
      <summary>Un escape di proprietà Unicode in un'espressione regolare non è valido o è sconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedNamedReference">
      <summary>Un riferimento denominato in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MalformedUnicodePropertyEscape">
      <summary>Un escape di proprietà Unicode non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.MissingControlCharacter">
      <summary>Manca un carattere di controllo in un'espressione regolare.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.NestedQuantifiersNotParenthesized">
      <summary>I quantificatori ripetuti in un altro quantificatore all'interno di un'espressione regolare non sono raggruppati tra parentesi.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierAfterNothing">
      <summary>Un quantificatore in un'espressione regolare si trova in una posizione in cui non è in grado di quantificare alcunché, ad esempio all'inizio di un'espressione regolare o in un gruppo.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.QuantifierOrCaptureGroupOutOfRange">
      <summary>Un gruppo acquisito o un quantificatore in un'espressione regolare non è compreso nell'intervallo, ovvero è maggiore di <see cref="F:System.Int32.MaxValue" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedCharacterRange">
      <summary>Una classe di caratteri in un'espressione regolare contiene un intervallo di caratteri inversi, ad esempio z-a anziché a-z.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ReversedQuantifierRange">
      <summary>Un intervallo del quantificatore in un'espressione regolare è inverso, ad esempio <code>{10,1}</code> invece di <code>(1,10}</code>.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.ShorthandClassInCharacterRange">
      <summary>Una classe di caratteri in un'espressione regolare contiene una classe a sintassi abbreviata che non è consentita all'interno di una classe di caratteri.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNamedReference">
      <summary>Un riferimento denominato usato in un'espressione regolare non è definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UndefinedNumberedReference">
      <summary>Un riferimento numerato usato in un'espressione regolare non è definito.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnescapedEndingBackslash">
      <summary>Un'espressione regolare termina con una barra rovesciata finale senza escape.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.Unknown">
      <summary>Errore di analisi dell'espressione regolare sconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedControlCharacter">
      <summary>Un carattere di controllo in un'espressione regolare non è riconosciuto.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedEscape">
      <summary>Una sequenza o un carattere di escape in un'espressione regolare non è valido.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnrecognizedUnicodeProperty">
      <summary>Una proprietà Unicode in un'espressione regolare non è riconosciuta o non è valida.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedBracket">
      <summary>Un'espressione regolare presenta una parentesi quadra aperta senza escape o manca una parentesi quadra chiusa.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexParseError.UnterminatedComment">
      <summary>Un commento in un'espressione regolare non è terminato.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexParseException">
      <summary>Eccezione risultante da un errore di analisi in un'espressione regolare, con informazioni dettagliate nelle proprietà <see cref="P:System.Text.RegularExpressions.RegexParseException.Error" /> e <see cref="P:System.Text.RegularExpressions.RegexParseException.Offset" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Imposta l'oggetto <paramref name="info" /> con il nome del parametro e informazioni aggiuntive sull'eccezione.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Error">
      <summary>Ottiene l'errore che si è verificato durante l'analisi.</summary>
      <returns>Errore che si è verificato durante l'analisi.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexParseException.Offset">
      <summary>Ottiene l'offset del carattere in base zero nel criterio dell'espressione regolare in cui si verifica l'errore di analisi.</summary>
      <returns>Offset in corrispondenza del quale si verifica l'errore di analisi.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>La classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> è la classe base per le espressioni regolari compilate.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Numero di acquisizione.</param>
      <param name="start">Posizione iniziale dell'acquisizione.</param>
      <param name="end">Posizione finale dell'acquisizione.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Determina se un carattere è contenuto in una classe di caratteri.</summary>
      <param name="ch">Carattere da verificare.</param>
      <param name="charClass">Nome interno di una classe di caratteri.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="ch" /> è contenuto nella classe di caratteri specificata dal parametro <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch">Carattere.</param>
      <param name="set">Set di caratteri.</param>
      <param name="category">Categoria del carattere.</param>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i">Numero da salvare.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">Possibile posizione limite.</param>
      <param name="startpos">Posizione iniziale.</param>
      <param name="endpos">Posizione finale.</param>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">Possibile posizione dei limiti ECMA.</param>
      <param name="startpos">Posizione iniziale.</param>
      <param name="endpos">Posizione finale.</param>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Numero di acquisizione.</param>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Numero di acquisizione.</param>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Numero di acquisizione.</param>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>Restituisce <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Istanza del motore delle espressioni regolari.</param>
      <param name="text">Testo da analizzare per trovare una corrispondenza di criteri.</param>
      <param name="textbeg">Posizione iniziale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textend">Posizione finale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textstart">Posizione iniziale in base zero dove cercare questa corrispondenza.</param>
      <param name="prevlen">Numero di caratteri nella corrispondenza precedente.</param>
      <param name="quick">
        <see langword="true" /> per cercare una corrispondenza in modo rapido; in caso contrario, <see langword="false" />.</param>
      <returns>Corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Istanza del motore delle espressioni regolari.</param>
      <param name="text">Testo da analizzare per trovare una corrispondenza di criteri.</param>
      <param name="textbeg">Posizione iniziale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textend">Posizione finale in base zero in <paramref name="text" /> dove il motore delle espressioni regolari cerca una corrispondenza.</param>
      <param name="textstart">Posizione iniziale in base zero dove cercare questa corrispondenza.</param>
      <param name="prevlen">Numero di caratteri nella corrispondenza precedente.</param>
      <param name="quick">
        <see langword="true" /> per cercare una corrispondenza in modo rapido; in caso contrario, <see langword="false" />.</param>
      <param name="timeout">Intervallo di timeout.</param>
      <returns>Corrispondenza.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Numero di acquisizione.</param>
      <param name="uncapnum">Numero di acquisizioni salvato.</param>
      <param name="start">Posizione iniziale.</param>
      <param name="end">Posizione finale.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>Usato da un oggetto <see cref="T:System.Text.RegularExpressions.Regex" /> generato dal metodo <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Crea una classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> per un'espressione regolare compilata.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>Se sottoposta a override in una classe derivata, consente di creare un oggetto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> per un'espressione regolare compilata specifica.</summary>
      <returns>Oggetto <see cref="T:System.Text.RegularExpressions.RegexRunner" /> progettato per eseguire un'espressione regolare compilata specifica.</returns>
    </member>
  </members>
</doc>