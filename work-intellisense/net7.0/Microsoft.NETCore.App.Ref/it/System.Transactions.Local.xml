<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary>Descrive una transazione di cui è possibile eseguire il commit.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con il valore <paramref name="timeout" /> specificato.</summary>
      <param name="timeout">Tempo massimo di esistenza della transazione prima della sua interruzione.</param>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.CommittableTransaction" /> con le opzioni di transazione specificate.</summary>
      <param name="options">Struttura <see cref="T:System.Transactions.TransactionOptions" /> che descrive le opzioni di transazione da utilizzare per la nuova transazione.</param>
      <exception cref="T:System.PlatformNotSupportedException">Tentativo di creare una transazione in Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> non è valido.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary>Avvia un tentativo di eseguire il commit della transazione in modo asincrono.</summary>
      <param name="asyncCallback">Delegato <see cref="T:System.AsyncCallback" /> richiamato quando la transazione viene completata. Questo parametro può essere <see langword="null" />, nel qual caso all'applicazione non viene notificato il completamento della transazione. Al contrario, nell'applicazione deve essere utilizzata l'interfaccia <see cref="T:System.IAsyncResult" /> per verificare il completamento e attendere di conseguenza, oppure deve essere chiamato il metodo <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> per attendere il completamento.</param>
      <param name="asyncState">Oggetto, che può contenere informazioni sullo stato arbitrarie, associato all'esecuzione asincrona del commit. Questo oggetto viene passato al callback e non è interpretato mediante <see cref="N:System.Transactions" />. È consentito un riferimento null.</param>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> che può essere utilizzata dal chiamante per controllare lo stato dell'operazione asincrona o per attendere il completamento dell'operazione.</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary>Tenta di eseguire il commit della transazione.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException">
        <see cref="M:System.Transactions.CommittableTransaction.Commit" /> viene chiamato in una transazione, che diventa <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.Commit" /> e viene eseguito il rollback della transazione per la prima volta.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary>Termina un tentativo di eseguire il commit della transazione in modo asincrono.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> associato al commit asincrono.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException">Viene chiamato <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> e viene eseguito il rollback della transazione per la prima volta.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary>Ottiene l'oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</summary>
      <returns>Oggetto fornito come ultimo parametro della chiamata del metodo <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary>Ottiene un oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</summary>
      <returns>Oggetto <see cref="T:System.Threading.WaitHandle" /> che viene usato per attendere il completamento di un'operazione asincrona.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary>Ottiene un'indicazione sull'eventuale completamento in modo sincrono di un'operazione di commit asincrona.</summary>
      <returns>
        <see langword="true" /> se l'operazione di commit asincrona è stata completata in modo sincrono, in caso contrario, <see langword="false" />. Questa proprietà restituisce sempre <see langword="false" /> anche se l'operazione viene completata in modo sincrono.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary>Ottiene un'indicazione del completamento dell'operazione di commit asincrono.</summary>
      <returns>
        <see langword="true" /> se l'operazione viene completata. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary>Determina il tipo di transazione dipendente da creare.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary>La transazione dipendente blocca il processo di esecuzione del commit della transazione fino al timeout della transazione padre oppure fino alla chiamata del metodo <see cref="M:System.Transactions.DependentTransaction.Complete" />. In questo caso, può essere effettuata un'operazione aggiuntiva sulla transazione ed è possibile creare nuovi elenchi.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary>La transazione dipendente interrompe automaticamente la transazione se sulla transazione padre viene chiamato Commit prima di <see cref="M:System.Transactions.DependentTransaction.Complete" />.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary>Descrive un duplicato di una transazione che garantisce che non può essere eseguito il commit della transazione fino a quando nell'applicazione non si completano le operazioni relative alla transazione. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary>Tenta di completare la transazione dipendente.</summary>
      <exception cref="T:System.Transactions.TransactionException">Qualsiasi tentativo di operazioni aggiuntive nella transazione dopo che viene chiamato questo metodo. Sono inclusi metodi di richiamo quali <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> oppure qualsiasi operazione di serializzazione nella transazione.</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary>Facilita la comunicazione tra un partecipante alla transazione integrato e la gestione transazioni durante la fase finale della transazione.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary>Indica che il partecipante alla transazione ha completato le relative operazioni.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary>Determina se l'oggetto deve essere integrato durante la fase di preparazione.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary>L'oggetto deve essere integrato durante la fase iniziale del processo di commit.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary>L'oggetto non richiede l'integrazione durante la fase iniziale del processo di commit.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary>Specifica il modo in cui le transazioni distribuite interagiscono con le transazioni COM+.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary>Cerca un contesto COM+ esistente e, se presente, esegue la sincronizzazione con esso.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary>Il contesto <see cref="N:System.EnterpriseServices" /> (che può essere recuperato chiamando il metodo statico <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> della classe <see cref="T:System.EnterpriseServices.ContextUtil" />) e la transazione di ambiente <see cref="N:System.Transactions" /> (che può essere recuperata chiamando il metodo statico <see cref="P:System.Transactions.Transaction.Current" /> della classe <see cref="T:System.Transactions.Transaction" />) sono sempre sincronizzati. In questo modo si verifica una riduzione delle prestazioni dal momento che può essere necessario creare nuovi contesti <see cref="N:System.EnterpriseServices" />.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary>Non esiste alcuna sincronizzazione tra <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> e <see cref="P:System.Transactions.Transaction.Current" />.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary>Fornisce un meccanismo affinché l'ambiente di hosting specifichi una propria nozione predefinita di <see cref="P:System.Transactions.Transaction.Current" />.</summary>
      <returns>Un oggetto <see cref="T:System.Transactions.Transaction" />.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary>Descrive una transazione DTC.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary>Interrompe una transazione.</summary>
      <param name="reason">
        <see cref="T:System.EnterpriseServices.BOID" /> facoltativo che indica il motivo dell'interruzione della transazione. Questo parametro può essere <see langword="null" />: in tal caso, indica che non è fornita alcuna informazione sul motivo dell'interruzione.</param>
      <param name="retaining">Questo valore deve essere <see langword="false" />.</param>
      <param name="async">Quando <paramref name="async" /> è <see langword="true" />, viene eseguita un'interruzione asincrona e il chiamante deve utilizzare <see langword="ITransactionOutcomeEvents" /> per informazioni sul risultato della transazione.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>Esegue il commit di una transazione.</summary>
      <param name="retaining">Questo valore deve essere <see langword="false" />.</param>
      <param name="commitType">Valore estratto dall'enumerazione OLE DB <see langword="XACTTC" />.</param>
      <param name="reserved">Il valore deve essere zero.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary>Recupera informazioni su una transazione.</summary>
      <param name="transactionInformation">Puntatore alla struttura <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> allocata dal chiamante che riceverà le informazioni sulla transazione. Questo valore deve essere diverso da <see langword="null" />.</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary>Descrive un'interfaccia che un gestore di risorse deve implementare per fornire i callback di notifica commit a due fasi per la gestione delle transazioni in seguito all'integrazione per la partecipazione.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del commit di una transazione.</summary>
      <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che lo stato di una transazione è in dubbio.</summary>
      <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso la preparazione di una transazione per il commit.</summary>
      <param name="preparingEnlistment">Oggetto <see cref="T:System.Transactions.PreparingEnlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback (interruzione) di una transazione.</summary>
      <param name="enlistment">Oggetto <see cref="T:System.Transactions.Enlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary>Descrive un oggetto che svolge la funzione di delegato di commit per una transazione non distribuita interna a una gestione risorse.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary>Notifica a un partecipante alla transazione che l'elenco è stato completato.</summary>
      <exception cref="T:System.Transactions.TransactionException">Tentativo di integrare nell'elenco o di serializzare una transazione.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback della transazione.</summary>
      <param name="singlePhaseEnlistment">Oggetto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzato per inviare una risposta al gestore delle transazioni.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del commit della transazione.</summary>
      <param name="singlePhaseEnlistment">Interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzata per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary>Rappresenta una transazione non di primo livello, ma di cui è possibile eseguire l'escalation per consentirne la gestione mediante MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary>Notifica a un oggetto inserito nell'elenco che è in corso l'esecuzione del rollback della transazione.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary>Descrive un oggetto risorsa che supporta l'ottimizzazione mediante commit monofase per partecipare a una transazione.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Rappresenta l'implementazione del callback del gestore delle risorse per l'ottimizzazione del commit a una fase.</summary>
      <param name="singlePhaseEnlistment">Oggetto <see cref="T:System.Transactions.SinglePhaseEnlistment" /> utilizzato per inviare una risposta alla gestione transazioni.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary>Specifica il livello di isolamento di una transazione.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary>Le modifiche in sospeso dalle transazioni più isolate non possono essere sovrascritte.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary>Durante la transazione non è possibile leggere i dati volatili, ma è possibile modificarli.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary>Durante la transazione è possibile leggere e modificare i dati volatili.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary>Durante la transazione, è possibile leggere i dati volatili ma non modificarli. Durante la transazione, è possibile aggiungere nuovi dati.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary>Durante la transazione è possibile leggere ma non modificare i dati volatili e non è possibile aggiungere nuovi dati.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary>
        <para>È possibile leggere i dati volatili. Prima che una transazione modifichi i dati, viene verificato se un'altra transazione ha modificato i dati dopo essere stati letti. Se i dati sono stati aggiornati, viene generato un errore. In questo modo, una transazione può ottenere il valore dei dati di cui è stato precedentemente eseguito il commit.</para>
        <para>Quando si tenta di alzare il livello di una transazione creata con il livello di isolamento <see langword="Snapshot" />, viene generata un'eccezione <see cref="T:System.InvalidOperationException" /> con il messaggio di errore "Impossibile promuovere le transazioni con IsolationLevel Snapshot".</para>
      </summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary>Verrà utilizzato un livello di isolamento diverso da quello specificato, ma il livello non potrà essere determinato. Se viene impostato questo valore, verrà generata un'eccezione.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary>Descrive una transazione delegata di una transazione esistente di cui è possibile eseguire l'escalation per consentirne la gestione mediante MSDTC, se necessario.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary>Notifica a un oggetto inserito nell'elenco che è stata richiesta un'escalation della transazione delegata.</summary>
      <returns>Token di propagazione trasmettitore/ricevitore che effettua il marshalling di una transazione distribuita. Per altre informazioni, vedere <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary>Facilita la comunicazione tra un partecipante alla transazione integrato e la gestione transazioni durante la fase di preparazione della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary>Indica che deve essere eseguito il rollback della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary>Indica che deve essere eseguito il rollback della transazione.</summary>
      <param name="e">Spiegazione del motivo per cui viene avviato un rollback.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary>Indica che è possibile eseguire il commit della transazione.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary>Ottiene le informazioni per il recupero di un elenco.</summary>
      <exception cref="T:System.InvalidOperationException">Tentativo di ottenere informazioni per il recupero all'interno di un'integrazione volatile, che non genera alcuna informazione di questo tipo.</exception>
      <returns>Informazioni per il recupero di un'integrazione.</returns>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary>Fornisce un insieme di callback che facilitano la comunicazione tra un partecipante inserito nell'elenco per il commit a una fase e la gestione transazioni quando viene ricevuta la notifica di <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary>Rappresenta un callback utilizzato per indicare al gestore delle transazioni che deve essere eseguito il rollback della transazione.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary>Rappresenta un callback utilizzato per indicare al gestore delle transazioni che deve essere eseguito il rollback della transazione e fornisce una spiegazione.</summary>
      <param name="e">Spiegazione del motivo per cui viene iniziato un rollback.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary>Rappresenta un callback utilizzato per indicare al gestore delle transazioni che il commit a una fase è stato completato.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary>Rappresenta un callback utilizzato per indicare al gestore delle transazioni che lo stato della transazione è in dubbio.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary>Rappresenta un callback utilizzato per indicare al gestore delle transazioni che lo stato della transazione è in dubbio e fornisce una spiegazione.</summary>
      <param name="e">Spiegazione del motivo per cui la transazione è in dubbio.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary>Rappresenta una transazione che non contiene una radice che può essere delegata. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.SubordinateTransaction" />.</summary>
      <param name="isoLevel">Livello di isolamento della transazione</param>
      <param name="superior">Elemento <see cref="T:System.Transactions.ISimpleTransactionSuperior" /></param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary>Rappresenta una transazione.</summary>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary>Indica che la transazione è stata completata.</summary>
      <exception cref="T:System.ObjectDisposedException">Tentativo di sottoscrivere questo evento in una transazione che è stata eliminata.</exception>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary>Crea un duplicato della transazione.</summary>
      <returns>Oggetto <see cref="T:System.Transactions.Transaction" /> che rappresenta una copia dell'oggetto transazione corrente.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary>Crea un duplicato dipendente della transazione.</summary>
      <param name="cloneOption">Oggetto <see cref="T:System.Transactions.DependentCloneOption" /> che controlla il tipo di transazione dipendente da creare.</param>
      <returns>Oggetto <see cref="T:System.Transactions.DependentTransaction" /> che rappresenta il duplicato dipendente.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary>Rilascia le risorse contenute nell'oggetto.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Integra una gestione risorse durature che supporta il commit a due fasi per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="enlistmentNotification">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche di commit a due fasi.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns>Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Integra una gestione risorse durature che supporta l'ottimizzazione del commit a una fase per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="singlePhaseNotification">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.ISinglePhaseNotification" /> che deve essere in grado di ricevere le notifiche di commit a una fase e di commit a due fasi.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns>Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary>Inserisce un gestore risorse con una transazione interna che usa un'integrazione PSPE (Promotable Single Phase Enlistment).</summary>
      <param name="promotableSinglePhaseNotification">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <returns>Implementazione di un'interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Inserisce un gestore risorse con una transazione interna che usa un'integrazione PSPE (Promotable Single Phase Enlistment).</summary>
      <param name="promotableSinglePhaseNotification">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <param name="promoterType">Tipo di elaborazione delle transazioni distribuite.</param>
      <returns>Implementazione di un'interfaccia <see cref="T:System.Transactions.SinglePhaseEnlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Integra un gestore di risorse volatili che supporta il commit a due fasi per partecipare a una transazione.</summary>
      <param name="enlistmentNotification">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere notifiche relative al commit a due fasi.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns>Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Integra una gestione risorse volatili che supporta l'ottimizzazione del commit a una fase per la partecipazione a una transazione.</summary>
      <param name="singlePhaseNotification">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.ISinglePhaseNotification" /> che deve essere in grado di ricevere le notifiche di commit a una fase e di commit a due fasi.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
      <returns>Oggetto <see cref="T:System.Transactions.Enlistment" /> che descrive l'integrazione.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary>Determina se questa transazione e l'oggetto specificato sono uguali.</summary>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> e questa transazione sono identici; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary>Ottiene l'oggetto <c>byte[]</c> restituito dal metodo <c>Promote</c> quando la transazione viene promossa.</summary>
      <returns>Oggetto <c>byte[]</c> restituito dal metodo <c>Promote</c> quando la transazione viene promossa.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Verifica se due istanze di <see cref="T:System.Transactions.Transaction" /> specificate sono equivalenti.</summary>
      <param name="x">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a destra dell'operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Transactions.Transaction" /> non sono uguali.</summary>
      <param name="x">Istanza di <see cref="T:System.Transactions.Transaction" /> a sinistra dell'operatore di disuguaglianza.</param>
      <param name="y">Istanza della struttura <see cref="T:System.Transactions.Transaction" /> a destra dell'operatore di disuguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Promuove e inserisce una gestione risorse duratura che supporta il commit a due fasi per la partecipazione a una transazione.</summary>
      <param name="resourceManagerIdentifier">Identificatore univoco di un gestore delle risorse, che deve essere mantenuto dopo un riavvio o un errore del gestore delle risorse.</param>
      <param name="promotableNotification">Un oggetto che svolge la funzione di delegato di commit per una transazione non distribuita interna a una gestione risorse.</param>
      <param name="enlistmentNotification">Oggetto che implementa l'interfaccia <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche di commit a due fasi.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" /> se il gestore di risorse vuole eseguire altre operazioni durante la fase di preparazione.</param>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary>Esegue il rollback (interruzione) della transazione.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary>Esegue il rollback (interruzione) della transazione.</summary>
      <param name="e">Spiegazione del motivo per cui si è verificato un rollback.</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Imposta l'identificatore di transazione distribuita generato dal promotore non MSDTC.</summary>
      <param name="promotableNotification">Interfaccia <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> implementata dal partecipante.</param>
      <param name="distributedTransactionIdentifier">Identificatore della transazione usato per la gestione transazioni distribuite.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Ottiene un oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati richiesti per la serializzazione di questa transazione.</summary>
      <param name="serializationInfo">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context">Destinazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />) della serializzazione.</param>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary>Ottiene o imposta la transizione dell'ambiente.</summary>
      <returns>Oggetto <see cref="T:System.Transactions.Transaction" /> che descrive la transazione corrente.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary>Ottiene il livello di isolamento della transazione.</summary>
      <returns>Uno dei valori <see cref="T:System.Transactions.IsolationLevel" /> che indica il livello di isolamento della transazione.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary>Identifica in modo univoco il formato dell'oggetto <c>byte[]</c> restituito dal metodo Promote quando la transazione viene promossa.</summary>
      <returns>GUID che identifica in modo univoco il formato del <c>byte []</c> restituito dal metodo Promote quando la transazione viene innalzata di livello.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary>Recupera informazioni aggiuntive su una transazione.</summary>
      <returns>Oggetto <see cref="T:System.Transactions.TransactionInformation" /> che contiene informazioni aggiuntive sulla transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary>Eccezione generata quando si è tentato di eseguire un'operazione in una transazione di cui è già stato eseguito il rollback oppure si è tentato di eseguire il commit della transazione e la transazione si interrompe.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con il messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionAbortedException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary>Rappresenta il metodo che gestisce l'evento <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> di una classe <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">Oggetto <see cref="T:System.Transactions.TransactionEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary>Fornisce i dati per i seguenti eventi di transazione: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> e <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionEventArgs" />.</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary>Ottiene la transazione per cui viene fornito lo stato di evento.</summary>
      <returns>Oggetto <see cref="T:System.Transactions.Transaction" /> per cui viene fornito lo stato di evento.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary>Eccezione generata quando si tenta di operare in una transazione che non può accettare nuove operazioni.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con il messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary>Eccezione generata quando viene tentata un'operazione su una transazione in dubbio oppure quando si tenta di eseguire il commit della transazione e questa diventa InDoubt.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con il messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionInDoubtException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary>Fornisce informazioni aggiuntive su una transazione.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary>Ottiene l'ora di creazione della transazione.</summary>
      <returns>Struttura <see cref="T:System.DateTime" /> contenente l'ora di creazione della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary>Ottiene un identificatore univoco della transazione per cui è stata eseguita un'escalation.</summary>
      <returns>Oggetto <see cref="T:System.Guid" /> contenente l'identificatore univoco della transazione per cui è stata eseguita un'escalation.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary>Ottiene un identificatore univoco della transazione.</summary>
      <returns>Identificatore univoco della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary>Ottiene lo stato della transazione.</summary>
      <returns>Oggetto <see cref="T:System.Transactions.TransactionStatus" /> contenente lo stato della transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary>Facilita l'interazione tra <see cref="N:System.Transactions" /> e i componenti che sono stati precedentemente scritti per interagire con MSDTC, COM+ o <see cref="N:System.EnterpriseServices" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary>Tipo di elaborazione delle transazioni distribuite.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary>Ottiene un'istanza di <see cref="T:System.Transactions.IDtcTransaction" /> che rappresenta un oggetto <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction">Istanza di <see cref="T:System.Transactions.Transaction" /> di cui effettuare il marshalling.</param>
      <returns>Istanza di <see cref="T:System.Transactions.IDtcTransaction" /> che rappresenta un oggetto <see cref="T:System.Transactions.Transaction" />.  L'istanza di <see cref="T:System.Transactions.IDtcTransaction" /> è compatibile con la forma non gestita di ITransaction usata da MSDTC e con la forma gestita di <see cref="T:System.EnterpriseServices.ITransaction" /> usata da <see cref="N:System.EnterpriseServices" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary>Trasforma un oggetto transazione in un cookie della transazione di esportazione.</summary>
      <param name="transaction">Oggetto <see cref="T:System.Transactions.Transaction" /> di cui effettuare il marshalling.</param>
      <param name="whereabouts">Indirizzo in cui è descritto il percorso del servizio di gestione transazioni di destinazione. In tal modo due servizi di gestione transazioni saranno in grado di comunicare tra loro e propagare una transazione da un sistema all'altro.</param>
      <returns>Cookie della transazione di esportazione che rappresenta l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary>Genera un oggetto <see cref="T:System.Transactions.Transaction" /> da un oggetto <see cref="T:System.Transactions.IDtcTransaction" /> specificato.</summary>
      <param name="transactionNative">Oggetto <see cref="T:System.Transactions.IDtcTransaction" /> di cui effettuare il marshalling.</param>
      <returns>Istanza di <see cref="T:System.Transactions.Transaction" /> che rappresenta l'oggetto <see cref="T:System.Transactions.IDtcTransaction" /> dato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary>Genera un oggetto <see cref="T:System.Transactions.Transaction" /> da un cookie di esportazione specificato.</summary>
      <param name="cookie">Forma dell'oggetto transazione per cui è stato effettuato il marshalling.</param>
      <returns>Oggetto <see cref="T:System.Transactions.Transaction" /> del cookie di esportazione specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary>Genera un'istanza di <see cref="T:System.Transactions.Transaction" /> dal token di propagazione del trasmettitore specificato.</summary>
      <param name="propagationToken">Token di propagazione che rappresenta una transazione.</param>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException">La deserializzazione di una transazione ha esito negativo in quanto il gestore delle transazioni non può essere contattato. Ciò potrebbe essere dovuto al firewall di rete oppure alle impostazioni di sicurezza.</exception>
      <returns>Oggetto <see cref="T:System.Transactions.Transaction" /> del token di propagazione del trasmettitore specificato.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary>Genera un token di propagazione per l'oggetto <see cref="T:System.Transactions.Transaction" /> specificato.</summary>
      <param name="transaction">Transazione di cui effettuare il marshalling in un token di propagazione.</param>
      <returns>Questo metodo, insieme al metodo <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />, fornisce una funzionalità per la propagazione di tipo trasmettitore/ricevitore in cui la transazione viene estratta dal computer remoto quando viene chiamato il secondo metodo per effettuarne l'unmarshalling.  
  
Per altre informazioni sui diversi modelli di propagazione, vedere la classe <see cref="T:System.Transactions.TransactionInterop" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary>Ottiene il whereabouts del servizio di gestione transazioni distribuito usato da <see cref="N:System.Transactions" />.</summary>
      <returns>Whereabouts del servizio di gestione transazioni distribuito usato da <see cref="N:System.Transactions" />.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary>Contiene i metodi utilizzati per la gestione delle transazioni. La classe non può essere ereditata.</summary>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary>Indica che è iniziata una transazione distribuita.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary>Notifica al gestore delle transazioni che un gestore delle risorse, che sta recuperando un errore, ha terminato il reinserimento nell'elenco di tutte le transazioni non risolte.</summary>
      <param name="resourceManagerIdentifier">Struttura <see cref="T:System.Guid" /> che identifica in modo univoco la risorsa da recuperare.</param>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="resourceManagerIdentifier" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary>Reinserisce nell'elenco un partecipante alla transazione duraturo.</summary>
      <param name="resourceManagerIdentifier">Struttura <see cref="T:System.Guid" /> che identifica in modo univoco il gestore delle risorse.</param>
      <param name="recoveryInformation">Contiene informazioni aggiuntive alle informazioni per il recupero.</param>
      <param name="enlistmentNotification">Oggetto risorsa che implementa <see cref="T:System.Transactions.IEnlistmentNotification" /> per ricevere le notifiche.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="recoveryInformation" /> non è valido.  
  
-oppure- 
Le informazioni sul gestore delle transazioni presenti in <paramref name="recoveryInformation" /> non corrispondono al gestore delle transazioni configurato.  
  
-oppure- 
 <paramref name="RecoveryInformation" /> non è riconosciuto da <see cref="N:System.Transactions" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> è gia stato chiamato per l'oggetto <paramref name="resourceManagerIdentifier" /> specificato. L'operazione di reinserimento nell'elenco viene rifiutata.</exception>
      <exception cref="T:System.Transactions.TransactionException">
        <paramref name="resourceManagerIdentifier" /> non corrisponde al contenuto delle informazioni per il recupero specificate in <paramref name="recoveryInformation" />.</exception>
      <returns>Classe <see cref="T:System.Transactions.Enlistment" /> che descrive l'elenco.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary>Ottiene l'intervallo di timeout predefinito per le nuove transazioni.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che specifica l'intervallo di timeout per le nuove transazioni.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary>Ottiene o imposta una factory di transazioni personalizzata.</summary>
      <returns>Delegato <see cref="T:System.Transactions.HostCurrentTransactionCallback" /> contenente una factory di transazioni personalizzata.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary>Ottiene l'intervallo massimo di timeout predefinito per le nuove transazioni.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che specifica l'intervallo massimo di timeout consentito durante la creazione di nuove transazioni.</returns>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary>Eccezione generata quando un gestore delle risorse non è in grado di comunicare con il gestore delle transazioni.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con il messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary>Contiene informazioni aggiuntive che specificano i comportamenti di una transazione.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary>Determina se questa istanza di <see cref="T:System.Transactions.TransactionOptions" /> e l'oggetto specificato sono uguali.</summary>
      <param name="obj">Oggetto da confrontare con questa istanza.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> e l'istanza di <see cref="T:System.Transactions.TransactionOptions" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash di un intero con segno a 32 bit.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Verifica se due istanze di <see cref="T:System.Transactions.TransactionOptions" /> specificate sono equivalenti.</summary>
      <param name="x">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a destra dell'operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Restituisce un valore che indica se due istanze di <see cref="T:System.Transactions.TransactionOptions" /> non sono uguali.</summary>
      <param name="x">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a sinistra dell'operatore di uguaglianza.</param>
      <param name="y">Istanza della struttura <see cref="T:System.Transactions.TransactionOptions" /> a destra dell'operatore di uguaglianza.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> non sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary>Ottiene o imposta l'isolamento della transazione.</summary>
      <returns>Enumerazione <see cref="T:System.Transactions.IsolationLevel" /> che specifica il livello di isolamento della transazione.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary>Ottiene o imposta il periodo di timeout per la transazione.</summary>
      <returns>Valore <see cref="T:System.TimeSpan" /> che specifica il periodo di timeout per la transazione.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary>Eccezione generata quando una promozione ha esito negativo.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con le informazioni relative a serializzazione e contesto di flusso specificate.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive una serializzazione non riuscita.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che descrive un contesto di serializzazione non riuscito.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con il messaggio specificato.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionPromotionException" /> con il messaggio e l'eccezione interna specificati.</summary>
      <param name="message">Oggetto <see cref="T:System.String" /> contenente un messaggio in cui è illustrata la causa dell'eccezione.</param>
      <param name="innerException">Ottiene l'istanza dell'eccezione che causa l'eccezione corrente. Per altre informazioni, vedere la proprietà <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary>Rende transazionale un blocco di codice. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout e i requisiti di interoperabilità COM+ specificati e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="interopOption">Istanza dell'enumerazione <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> in cui è descritta la modalità di interazione tra la transazione associata e le transazioni COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout specificato e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="scopeTimeout">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> e imposta la transazione specificata come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</summary>
      <param name="transactionToUse">Transazione da impostare come transazione di ambiente, in modo che venga utilizzata dalle operazioni transazionali effettuate all'interno dell'ambito.</param>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con l'opzione del flusso asincrono specificato.</summary>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout e i requisiti specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="scopeTimeout">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con il valore di timeout, i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="scopeTimeout">
        <see cref="T:System.TimeSpan" /> dopo cui si verifica il timeout dell'ambito della transazione e l'interruzione della transazione.</param>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con l'ambito e i requisiti di interoperabilità COM+ specificati e le opzioni di transazione.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
      <param name="interopOption">Istanza dell'enumerazione <see cref="T:System.Transactions.EnterpriseServicesInteropOption" /> in cui è descritta la modalità di interazione tra la transazione associata e le transazioni COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Supportato in .NET Framework 4.5.1 e versioni successive] 
Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="transactionOptions">Struttura <see cref="T:System.Transactions.TransactionOptions" /> in cui sono descritte le opzioni di transazione da utilizzare se si crea una nuova transazione. Se si utilizza una transazione esistente, il valore di timeout in questo parametro si applica all'ambito della transazione. Se il tempo scade prima dell'eliminazione dell'ambito, la transazione viene interrotta.</param>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Transactions.TransactionScope" /> con i requisiti e le opzioni del flusso asincrono specificati.</summary>
      <param name="scopeOption">Istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeOption" /> che descrive i requisiti della transazione associati al relativo ambito.</param>
      <param name="asyncFlowOption">Un'istanza dell'enumerazione <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> che descrive se la transazione di ambiente associata all'ambito della transazione passerà attraverso le continuazioni di thread quando si utilizzano i modelli di programmazione asincrona di .NET Task o async/await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary>Indica che sono state completate tutte le operazioni all'interno dell'ambito.</summary>
      <exception cref="T:System.InvalidOperationException">Questo metodo è stato già chiamato una volta.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary>Termina l'ambito della transazione.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary>Specifica se il flusso delle transazioni tra le continuazioni di thread è attivato per <see cref="T:System.Transactions.TransactionScope" /> .</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary>Specifica che il flusso delle transazioni tra le continuazioni di thread è attivato.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary>Specifica che il flusso delle transazioni tra le continuazioni di thread è soppresso. Si tratta dell'impostazione predefinita se nessun oggetto <see langword="TransactionScopeAsyncFlowOption" /> viene specificato nel costruttore <see cref="Overload:System.Transactions.TransactionScope.#ctor" />.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary>Fornisce opzioni aggiuntive per la creazione dell'ambito di una transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary>Una transazione è necessaria per l’ambito. Utilizza una transazione di ambiente se ne esiste già una. In caso contrario, prima di accedere all'ambito viene creata una nuova transazione. Rappresenta il valore predefinito.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary>Per l'ambito viene sempre creata una nuova transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary>Durante la creazione dell'ambito, il contesto della transazione di ambiente viene soppresso. Tutte le operazioni all'interno dell'ambito vengono eseguite senza un tale contesto di transazioni.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary>Rappresenta il metodo che gestirà l'evento <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> di una classe <see cref="T:System.Transactions.TransactionManager" />.</summary>
      <param name="sender">Origine dell'evento.</param>
      <param name="e">
        <see cref="T:System.Transactions.TransactionEventArgs" /> contenente la transazione da cui è possibile recuperare le informazioni sulla transazione.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary>Descrive lo stato corrente di una transazione distribuita.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary>È stato eseguito il rollback della transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary>Lo stato della transazione è sconosciuto, in quanto non è stato ancora eseguito il polling di alcuni partecipanti.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary>È stato eseguito il commit della transazione.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary>Lo stato della transazione è sconosciuto.</summary>
    </member>
  </members>
</doc>