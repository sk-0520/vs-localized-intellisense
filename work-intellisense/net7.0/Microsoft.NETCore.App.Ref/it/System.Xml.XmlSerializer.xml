<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Specifica diverse opzioni da usare quando vengono generati tipi .NET da usare con un servizio Web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Abilita il data binding.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Crea eventi per la chiamata asincrona a metodi Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Crea metodi Begin ed End per la chiamata asincrona a metodi Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Genera codice di serializzazione ordinato in modo esplicito come specificato mediante la proprietà <see langword="Order" /> degli attributi <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Rappresenta i tipi primitivi in base alle proprietà.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Rappresenta tipi primitivi in base ai campi e tipi primitivi in base ai tipi dello spazio dei nomi <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Fornisce un metodo statico per la conversione di testo di input in nomi per entità di codice.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Produce una stringa con maiuscole-minuscole camel da una stringa di input.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nome di un'entità di codice, ad esempio un parametro di un metodo, derivato in genere da un nome di elemento o di attributo XML.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Versione con maiuscole-minuscole camel della stringa di parametri.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Produce una stringa con maiuscole-minuscole Pascal da una stringa di input.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nome di un'entità di codice, ad esempio un parametro di un metodo, derivato in genere da un nome di elemento o di attributo XML.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Versione con maiuscole-minuscole Pascal della stringa di parametri.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Produce un nome di entità di codice valido da una stringa di input.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">Nome di un'entità di codice, ad esempio un parametro di un metodo, derivato in genere da un nome di elemento o di attributo XML.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Stringa che può essere utilizzata come identificatore di codice, ad esempio il nome di un parametro di un metodo.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Gestisce un gruppo di nomi di entità di codice o mapping di tipi correlati generati dall'infrastruttura di serializzazione XML di .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e determina se per gli identificatori del codice viene applicata la distinzione tra maiuscole e minuscole.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se per gli identificatori viene applicata la distinzione tra maiuscole e minuscole; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Aggiunge all'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> un mapping di tipi o un'entità di codice denominata.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Nome utilizzato per indicizzare l'entità di codice.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Informazioni dell'entità di codice o del mapping di tipi.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Impedisce che un nome specificato venga utilizzato nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nome che non sarà disponibile nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Aggiunge all'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> un mapping di tipi o un'entità di codice denominata, garantendo l'univocità del nome all'interno dell'ambito.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Nome candidato utilizzato per indicizzare l'entità di codice.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">Informazioni dell'entità di codice o del mapping di tipi.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Valore del parametro identifier o, in caso di conflitto di nomi, stringa modificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Rimuove tutte le entità di codice o tutti i mapping di tipi, inclusi i relativi nomi, dall'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Determina se un nome specificato è già utilizzato nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nome di cui verificare l'utilizzo nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nome è già in uso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Garantisce il corretto utilizzo delle lettere maiuscole e minuscole nell'input modificando il nome in base al valore della proprietà <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">Nome da poter modificare.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Stringa uguale all'identificatore dell'input o di cui è stato modificato l'utilizzo delle maiuscole e minuscole nella prima lettera.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Determina se il nome di input è in conflitto con un altro nome nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e, in caso di conflitto, genera una stringa modificata.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">Nome da modificare qualora non sia già univoco.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">Valore del parametro identifier o, in caso di conflitto di nomi, stringa modificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Rimuove dall'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> l'entità di codice o il mapping dei tipi identificato dal nome di input.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">Nome delle informazioni dell'entità di codice o del mapping di tipi da rimuovere.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Rimuove il nome di input dai nomi riservati dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Nome che verrà reso disponibile nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Restituisce una matrice delle entità di codice o dei mapping di tipi nell'ambito dell'istanza di <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">Tipo di tutte le entità di codice o di tutti i mapping di tipi dell'istanza.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Matrice delle entità di codice o dei mapping dei tipi archiviata dall'oggetto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Ottiene o imposta un valore che indica se l'istanza utilizza le maiuscole-minuscole camel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" /> per indicare che l'istanza utilizza le maiuscole-minuscole camel; <see langword="false" /> per indicare che l'istanza utilizza la convenzione Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Descrive il contesto in cui un insieme di schemi viene associato a entità di codice .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.ImportContext" /> per gli identificatori di codice specificati, con l'opzione di condivisione dei tipi indicata.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">Entità di codice a cui viene applicato il contesto.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Valore <see cref="T:System.Boolean" /> che determina se i tipi personalizzati sono condivisi nello schema.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Ottiene un valore che determina se i tipi personalizzati sono condivisi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i tipi personalizzati sono condivisi nello schema; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Ottiene un insieme di entità di codice a cui viene applicato il contesto.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">Oggetto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> che specifica le entità di codice a cui viene applicato il contesto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Ottiene un insieme di avvisi generati quando vengono importate le descrizioni di entità di codice.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">Oggetto <see cref="T:System.Collections.Specialized.StringCollection" /> che contiene gli avvisi che sono stati generati durante l'importazione delle descrizioni di entità di codice.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Stabilisce una proprietà <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> che deve essere utilizzata dall'infrastruttura .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Ottiene o imposta se i valori degli attributi degli spazi vuoti vengono normalizzati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i valori degli attributi degli spazi vuoti vengono normalizzati; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Ottiene o imposta la modalità di gestione degli spazi vuoti durante l'analisi del codice XML.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Membro dell'enumerazione <see cref="T:System.Xml.WhitespaceHandling" /> che descrive la modalità di gestione degli spazi vuoti quando viene analizzato il codice XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Descrive un'utilità di importazione dello schema.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Specifica che <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare il membro della classe come attributo SOAP codificato.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Consente di inizializzare una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> utilizzando il valore specificato come nome dell'attributo XML.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">Il nome dell'attributo XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Ottiene o imposta il nome dell'attributo XML generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">Il nome dell'attributo XML. Il valore predefinito è l'identificatore del membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Ottiene o imposta il tipo di dati XSD (XML Schema Definition Language) dell'attributo SOAP generato mediante la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">Non è possibile eseguire il mapping del tipo di dati XML Schema al tipo di dati .NET.</exception>
      <returns vsli:raw="An XML Schema data type.">Tipo di dati di XML Schema.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Ottiene o imposta lo spazio dei nomi XML dell'attributo XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Lo spazio dei nomi XML dell'attributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Consente di eseguire l'override di attributi applicati a proprietà, campi e classi in caso di utilizzo di un elemento <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la serializzazione o la deserializzazione di un oggetto con codifica SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Consente di aggiungere un elemento <see cref="T:System.Xml.Serialization.SoapAttributes" /> alla raccolta di oggetti <see cref="T:System.Xml.Serialization.SoapAttributes" /> contenuti nell'elemento <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. Il parametro <paramref name="type" /> specifica l'oggetto di cui eseguire l'override tramite l'elemento <see cref="T:System.Xml.Serialization.SoapAttributes" />. Il parametro <paramref name="member" /> specifica il nome di un membro sottoposto a override.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">Elemento <see cref="T:System.Type" /> dell'oggetto di cui eseguire l'override.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nome del membro di cui eseguire l'override.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Elemento <see cref="T:System.Xml.Serialization.SoapAttributes" /> che rappresenta gli attributi usati per l'override.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Aggiunge un elemento <see cref="T:System.Xml.Serialization.SoapAttributes" /> a una raccolta di oggetti <see cref="T:System.Xml.Serialization.SoapAttributes" />. Il parametro <paramref name="type" /> specifica un oggetto da sottoporre a override mediante l'elemento <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Elemento <see cref="T:System.Type" /> dell'oggetto sottoposto a override.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">Elemento <see cref="T:System.Xml.Serialization.SoapAttributes" /> che rappresenta gli attributi usati per l'override.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Ottiene l'oggetto associato al tipo specificato (classe base).</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Classe base <see cref="T:System.Type" /> associata alla raccolta di attributi da recuperare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Una classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> che rappresenta l'insieme di attributi utilizzati per l'override.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Ottiene l'oggetto associato al tipo specificato (classe base). Nel parametro <paramref name="member" /> viene specificato il membro della classe base sottoposto a override.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">Classe base <see cref="T:System.Type" /> associata alla raccolta di attributi di cui eseguire l'override.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">Nome del membro sottoposto a override nel quale è specificato l'elemento <see cref="T:System.Xml.Serialization.SoapAttributes" /> da restituire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">Una classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> che rappresenta l'insieme di attributi utilizzati per l'override.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Rappresenta una raccolta di oggetti attributo che controlla le modalità di serializzazione e deserializzazione di metodi SOAP mediante l'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> usando il tipo personalizzato specificato.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Qualsiasi oggetto che implementa l'interfaccia <see cref="T:System.Reflection.ICustomAttributeProvider" />, ad esempio la classe <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Ottiene o imposta l'elemento <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> di cui eseguire l'override.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">Una classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> che consente di eseguire l'override del comportamento della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> quando il membro viene serializzato.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Ottiene o imposta il valore predefinito di un attributo o elemento XML.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Un oggetto che rappresenta il valore predefinito di un attributo o elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Ottiene o imposta un elemento <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> di cui eseguire l'override.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">La classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> da sottoporre a override.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Ottiene o imposta un oggetto che specifica come l'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un'enumerazione SOAP.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Oggetto che specifica come il <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un membro di enumerazione.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Ottiene o imposta un valore che specifica se un campo o una proprietà pubblica verrà serializzato nel formato XML SOAP codificato dall'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.Serialization.XmlSerializer" /> non deve serializzare il campo o la proprietà. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Ottiene o imposta un oggetto che trasmette all'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" /> istruzioni per serializzare un tipo di oggetto in XML SOAP codificato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">Una classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> che consente di eseguire l'override di una classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> applicata a una dichiarazione della classe o che viene applicata a una dichiarazione della classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Consente di specificare che il valore del membro pubblico venga serializzato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> come elemento XML SOAP codificato.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Consente di inizializzare una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> e di specificare il nome dell'elemento XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Il nome dell'elemento XML del membro serializzato.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Ottiene o imposta il tipo di dati XSD (XML Schema Definition Language) dell'elemento XML generato.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Uno dei tipi di dati XML Schema.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Ottiene o imposta il nome dell'elemento XML generato.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Il nome dell'elemento XML generato. Il valore predefinito è l'identificatore del membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Ottiene o imposta un valore che indica se <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare un membro con l'attributo <see langword="xsi:null" /> impostato su "1".</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'attributo <see langword="xsi:null" /> viene generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Controlla la modalità di serializzazione di un membro di enumerazione usata dall'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> usando il nome di elemento specificato.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Nome dell'elemento XML generato dall'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Ottiene o imposta il valore generato in un documento XML quando viene serializzata un'enumerazione con l'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" /> o il valore riconosciuto quando viene deserializzato il membro dell'enumerazione.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">Valore generato in un documento XML quando l'enumerazione viene serializzata da <see cref="T:System.Xml.Serialization.XmlSerializer" /> o valore riconosciuto al momento della deserializzazione del membro dell'enumerazione.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Indica all'elemento <see cref="T:System.Xml.Serialization.XmlSerializer" /> di non serializzare il campo pubblico o il valore della proprietà di lettura/scrittura pubblica.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Consente il riconoscimento di un tipo da parte della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> quando un oggetto viene serializzato o deserializzato nel formato XML SOAP codificato.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> utilizzando il tipo specificato.</summary>
      <param name="type" vsli:raw="The type of the object to include.">Il tipo dell'oggetto da includere.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Ottiene o imposta il tipo dell'oggetto da utilizzare durante la serializzazione o deserializzazione di un oggetto.</summary>
      <returns vsli:raw="The type of the object to include.">Il tipo dell'oggetto da includere.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Genera mapping a messaggi con codifica SOAP da tipi .NET Framework o informazioni dei metodi di servizi Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, specificando uno spazio dei nomi XML predefinito per i mapping di tipi importati.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, specificando gli override per la serializzazione XML.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Oggetto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati utilizzando la codifica SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, specificando gli override della serializzazione XML e uno spazio dei nomi XML predefinito.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Oggetto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati utilizzando la codifica SOAP.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera mapping interni di tipi per le informazioni raccolte da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matrice di entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapping interni dei tipi .NET Framework alle parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera mapping interni di tipi per le informazioni raccolte da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matrice di entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che gli elementi che corrispondono a parti di messaggio WSDL devono essere inclusi in un elemento wrapper aggiuntivo in un messaggio SOAP. In caso contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> per indicare un'associazione di servizio Web di tipo RPC; <see langword="false" /> per indicare un'associazione di servizio Web di tipo documento o un'intestazione SOAP.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapping interni dei tipi .NET Framework alle parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera mapping interni di tipi per le informazioni raccolte da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matrice di entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che gli elementi che corrispondono a parti di messaggio WSDL devono essere inclusi in un elemento wrapper aggiuntivo in un messaggio SOAP. In caso contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> per indicare un'associazione di servizio Web di tipo RPC; <see langword="false" /> per indicare un'associazione di servizio Web di tipo documento o un'intestazione SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per indicare che un deserializzatore generato deve verificare la presenza del nome qualificato previsto dell'elemento wrapper. In caso contrario, <see langword="false" />. Il valore di questo parametro è importante solo se il valore del parametro <paramref name="hasWrapperElement" /> è <see langword="true" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapping interni dei tipi .NET Framework alle parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera mapping interni di tipi per le informazioni raccolte da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matrice di entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che gli elementi che corrispondono a parti di messaggio WSDL devono essere inclusi in un elemento wrapper aggiuntivo in un messaggio SOAP. In caso contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> per indicare un'associazione di servizio Web di tipo RPC; <see langword="false" /> per indicare un'associazione di servizio Web di tipo documento o un'intestazione SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per indicare che un deserializzatore generato deve verificare la presenza del nome qualificato previsto dell'elemento wrapper. In caso contrario, <see langword="false" />. Il valore di questo parametro è importante solo se il valore del parametro <paramref name="hasWrapperElement" /> è <see langword="true" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Uno dei valori di <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Mapping interni dei tipi .NET Framework alle parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Spazio dei nomi XML predefinito da utilizzare.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Inserisce i mapping per un tipo nel contesto dell'istanza di <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> per utilizzarli successivamente quando vengono richiamati i metodi di importazione.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">Tipo .NET Framework per cui salvare informazioni dei mapping dei tipi.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Inserisce i mapping per i tipi derivati nel contesto dell'istanza di <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> per utilizzarli successivamente quando vengono richiamati i metodi di importazione.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Oggetto reflection <see cref="T:System.Reflection.ICustomAttributeProvider" /> che contiene attributi personalizzati derivati dall'attributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Rappresenta alcuni attributi di un elemento XSD &lt;<see langword="part" />&gt; in un documento WSDL per la generazione di classi dal documento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Ottiene o imposta un valore che corrisponde all'attributo di nome dell'elemento part WSDL.</summary>
      <returns vsli:raw="The element name.">Nome dell'elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Ottiene o imposta un valore che corrisponde all'attributo di tipo dell'elemento part WSDL.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che corrisponde al tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Consente di controllare lo schema generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> quando un'istanza di classe viene serializzata come elemento XML SOAP codificato.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e specifica il nome del tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Il nome del tipo XML generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> durante la serializzazione dell'istanza della classe e riconosciuto durante la deserializzazione dell'istanza della classe.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e specifica il nome e lo spazio dei nomi XML del tipo.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Il nome del tipo XML generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> durante la serializzazione dell'istanza della classe e riconosciuto durante la deserializzazione dell'istanza della classe.</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">Lo spazio dei nomi XML del tipo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Ottiene o imposta un valore che indica se includere il tipo nei documenti dello schema XML con codifica SOAP.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per includere il tipo nei documenti dello schema XML con codifica SOAP; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Ottiene o imposta lo spazio dei nomi del tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">Lo spazio dei nomi del tipo XML. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Ottiene o imposta il nome del tipo XML.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">Il nome del tipo XML. Il nome predefinito è il nome della classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Consente di ottenere dati per l'oggetto noto, ma senza riferimenti, trovato durante la deserializzazione in un flusso XML SOAP codificato.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o" vsli:raw="The unreferenced object.">Oggetto senza riferimenti.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Stringa univoca usata per identificare l'oggetto senza riferimenti.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Ottiene l'ID dell'oggetto.</summary>
      <returns vsli:raw="The ID of the object.">L'ID dell'oggetto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Ottiene l'oggetto deserializzato e senza riferimenti.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">L'oggetto deserializzato e senza riferimenti.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Rappresenta il metodo di gestione dell'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> di un oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Rappresenta una raccolta di oggetti <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Aggiunge un oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> alla raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">Oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> da aggiungere.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">L'indice della classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> appena aggiunta.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> specificato è presente nell'insieme.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">Classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in questione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> è presente nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Copia l'intero insieme in una matrice unidimensionale compatibile di oggetti <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">Matrice unidimensionale di oggetti <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> che costituisce la destinazione degli elementi copiati dall'insieme. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Ottiene l'indice della classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> specificata.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">La classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> della quale si desidera l'indice.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Indice dell'oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> specificato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Inserisce un oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">Indice in cui viene inserito <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">Oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> da inserire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Rimuove l'oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> specificato dalla raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">Oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> da rimuovere.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Ottiene o imposta l'oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Indice dell'oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Specifica che <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare un determinato membro della classe come matrice di elementi XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e specifica il nome dell'elemento XML generato nell'istanza di documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Il nome dell'elemento XML generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Recupera o imposta il nome dell'elemento XML associato alla matrice serializzata.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">Il nome dell'elemento XML della matrice serializzata. Il valore predefinito è il nome del membro al quale è assegnato <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Ottiene o imposta un valore che indica se il nome dell'elemento XML generato da <see cref="T:System.Xml.Serialization.XmlSerializer" /> è completo o non qualificato.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Uno dei valori di <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Il valore predefinito è <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Ottiene o imposta un valore che indica se <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare un membro come un tag XML vuoto con l'attributo <see langword="xsi:nil" /> impostato su <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'attributo <see langword="xsi:nil" /> viene generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Ottiene o imposta lo spazio dei nomi dell'elemento XML.</summary>
      <returns vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Ottiene o imposta l'ordine esplicito in cui gli elementi vengono serializzati o deserializzati.</summary>
      <returns vsli:raw="The order of the code generation.">Ordine di generazione del codice.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Rappresenta un attributo che specifica i tipi derivati che <see cref="T:System.Xml.Serialization.XmlSerializer" /> può inserire in una matrice serializzata.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e specifica il nome dell'elemento XML generato nel documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Il nome dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e specifica il nome dell'elemento XML generato nel documento XML e il <see cref="T:System.Type" /> che può essere inserito nel documento XML generato.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Il nome dell'elemento XML.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> dell'oggetto da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e specifica il <see cref="T:System.Type" /> che può essere inserito nella matrice serializzata.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> dell'oggetto da serializzare.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Ottiene o imposta il tipo di dati XML dell'elemento XML generato.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Tipo di dati XSD (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Ottiene o imposta il nome dell'elemento XML generato.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Il nome dell'elemento XML generato. Il valore predefinito è l'identificatore del membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Ottiene o imposta un valore che indica se il nome dell'elemento XML generato è completo.</summary>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">La proprietà <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> è impostata su <see langword="XmlSchemaForm.Unqualified" /> e viene specificato un valore <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Uno dei valori di <see cref="T:System.Xml.Schema.XmlSchemaForm" />. Il valore predefinito è <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Ottiene o imposta un valore che indica se <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializzare un membro come un tag XML vuoto con l'attributo <see langword="xsi:nil" /> impostato su <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera l'attributo <see langword="xsi:nil" />; in caso contrario, <see langword="false" /> e non viene generata alcuna istanza. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Ottiene o imposta lo spazio dei nomi dell'elemento XML generato.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">Lo spazio dei nomi dell'elemento XML generato.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Ottiene o imposta il livello in una gerarchia di elementi XML interessati dall'<see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">Indice con inizio zero di un gruppo di indici in una matrice di matrici.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Ottiene o imposta il tipo consentito in una matrice.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">
        <see cref="T:System.Type" /> consentito nella matrice.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Rappresenta una raccolta di oggetti <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Aggiunge un oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> alla raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">Oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da aggiungere alla raccolta.</param>
      <returns vsli:raw="The index of the added item.">L'indice dell'elemento aggiunto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Determina se l'insieme contiene l'oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> specificato.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se nell'insieme è presente l'oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Copia una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> nell'insieme, a partire dall'indice di destinazione specificato.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da copiare nell'insieme.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">Indice in corrispondenza del quale iniziano gli attributi copiati.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Restituisce l'indice in base zero della prima occorrenza dell'oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> specificato nella raccolta oppure -1 se l'attributo non risulta presente nella raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">Oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da individuare nella raccolta.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Primo indice dell'oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> nell'insieme oppure -1 se l'attributo non risulta presente nell'insieme.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Inserisce un oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">Indice in corrispondenza del quale viene inserito l'attributo.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">Oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da inserire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Rimuove <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dall'insieme, se presente.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">Oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da rimuovere.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">L'indice con inizio zero del membro dell'insieme da ottenere o impostare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">Oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Recupera un oggetto che rappresenta l'attributo XML sconosciuto.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">Un <see cref="T:System.Xml.XmlAttribute" /> che rappresenta l'attributo XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Ottiene un elenco delimitato da virgole di nomi di attributi XML previsti in un'istanza di un documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Elenco delimitato da virgole di nomi di attributi XML. Ciascun nome è nel seguente formato: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Ottiene il numero di riga dell'attributo XML sconosciuto.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">Il numero di riga dell'attributo XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Ottiene la posizione nella riga dell'attributo XML sconosciuto.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">La numero di posizione dell'attributo XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Ottiene l'oggetto in corso di deserializzazione.</summary>
      <returns vsli:raw="The object being deserialized.">Oggetto di cui è in corso la deserializzazione.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Rappresenta il metodo che gestisce <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Consente di sottoporre a override gli attributi di una proprietà, di un campo e di una classe quando si utilizza <see cref="T:System.Xml.Serialization.XmlSerializer" /> per serializzare o deserializzare un oggetto</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Aggiunge un oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> all'insieme di oggetti <see cref="T:System.Xml.Serialization.XmlAttributes" />. Il parametro <paramref name="type" /> specifica un oggetto da sottoporre a override. Il parametro <paramref name="member" /> specifica il nome di un membro sottoposto a override.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">Elemento <see cref="T:System.Type" /> dell'oggetto di cui eseguire l'override.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nome del membro di cui eseguire l'override.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> che rappresenta gli attributi che eseguono l'override.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Aggiunge un oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> all'insieme di oggetti <see cref="T:System.Xml.Serialization.XmlAttributes" />. Il parametro <paramref name="type" /> specifica un oggetto da sottoporre a override tramite l'oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Elemento <see cref="T:System.Type" /> dell'oggetto sottoposto a override.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> che rappresenta gli attributi che eseguono l'override.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Ottiene l'oggetti associato al tipo specificato della classe base.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Classe base <see cref="T:System.Type" /> associata alla raccolta di attributi da recuperare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> che rappresenta l'insieme degli attributi che eseguono l'override.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Ottiene gli oggetti associati al tipo specificato (classe base). Il parametro del membro specifica il membro della classe base sottoposto a override.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">Classe base <see cref="T:System.Type" /> associata all'insieme di attributi desiderati.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">Nome del membro sottoposto a override nel quale è specificato l'elemento <see cref="T:System.Xml.Serialization.XmlAttributes" /> da restituire.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributes" /> che rappresenta l'insieme degli attributi che eseguono l'override.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Rappresenta un insieme di oggetti attributo che controlla come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza e deserializza un oggetto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> e personalizza il modo in cui <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza e deserializza un oggetto.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Classe in grado di fornire implementazioni alternative degli attributi che controllano la serializzazione XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Ottiene o imposta l'elemento <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> di cui eseguire l'override.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">La classe <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> da sottoporre a override.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Ottiene l'insieme di oggetti <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> di cui eseguire l'override.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Un oggetto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> che rappresenta l'insieme di oggetti <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Recupera o imposta un oggetto che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un campo pubblico o una proprietà in lettura/scrittura che restituisce una matrice.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> che specifica il modo in cui <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un campo public o una proprietà di lettura/scrittura che restituisce una matrice.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Recupera o imposta un insieme di oggetti che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza gli elementi inseriti in una matrice restituita da un campo pubblico o una proprietà di lettura/scrittura.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Un oggetto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> che contiene un insieme di oggetti <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Ottiene o imposta un oggetto che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un campo pubblico o una proprietà pubblica in lettura/scrittura come attributo XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> che controlla la serializzazione di un campo public o di una proprietà di lettura/scrittura come attributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Ottiene o imposta un oggetto che consente di distinguere tra un gruppo di scelte.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> che è possibile applicare a un membro della classe che viene serializzato come elemento <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Ottiene o imposta il valore predefinito di un attributo o elemento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">Un <see cref="T:System.Object" /> che rappresenta il valore predefinito dell'elemento o dell'attributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Ottiene un insieme di oggetti che specificano il modo in cui <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un campo public o una proprietà di lettura/scrittura come elemento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">Un <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> che contiene un insieme di oggetti <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Ottiene o imposta un oggetto che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un membro di enumerazione.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Un <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza un membro di enumerazione.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Ottiene o imposta un valore che specifica se <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza o meno un campo pubblico o una proprietà in lettura/scrittura pubblica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Xml.Serialization.XmlSerializer" /> non deve serializzare il campo o la proprietà. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Ottiene o imposta un valore che specifica se mantenere tutte le dichiarazioni degli spazi dei nomi quando un oggetto contenente un membro che restituisce un oggetto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> viene sottoposto a override.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le dichiarazioni degli spazi dei nomi devono essere mantenute; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Ottiene o imposta un oggetto che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza una classe come elemento XML di primo livello.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che esegue l'override di una classe con attributi come elemento XML di primo livello.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Ottiene o imposta un oggetto che fa in modo che <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializzi un campo pubblico o una proprietà pubblica in lettura/scrittura come testo XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">Un <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> che esegue l'override della serializzazione predefinita di un campo pubblico o di una proprietà.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Ottiene o imposta un oggetto che specifica come <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza una classe alla quale è stato applicato <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">Un <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> che esegue l'override di un <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applicato a una dichiarazione di classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Specifica che è possibile rilevare ulteriormente il membro tramite un'enumerazione.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">Nome del membro che restituisce l'enumerazione utilizzata per rilevare la scelta.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Ottiene o imposta il nome del campo che restituisce l'enumerazione da utilizzare per rilevare i tipi.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">Il nome di un campo che restituisce un'enumerazione.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Contiene campi che possono essere utilizzati per passare delegati di evento a un metodo <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> thread-safe di <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Ottiene o imposta un oggetto che rappresenta il metodo che gestisce l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> che punta al gestore eventi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Ottiene o imposta un oggetto che rappresenta il metodo che gestisce l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> che punta al gestore eventi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Ottiene o imposta un oggetto che rappresenta il metodo che gestisce l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> che punta al gestore eventi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Ottiene o imposta un oggetto che rappresenta il metodo che gestisce l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> che punta al gestore eventi.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Rappresenta una raccolta di oggetti <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> usati da <see cref="T:System.Xml.Serialization.XmlSerializer" /> per eseguire l'override della modalità predefinita di serializzazione di una classe.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Aggiunge un oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> alla raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> da aggiungere.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">Indice in base zero del nuovo elemento aggiunto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Determina se la raccolta contiene l'oggetto specificato.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> da ricercare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto è presente nella raccolta, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Copia <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> o una parte di esso in una matrice unidimensionale.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">La matrice <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> per conservare gli elementi copiati.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Ottiene l'indice della classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> specificata.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> di cui viene recuperato l'indice.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">L’indice in base zero dell'oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Inserisce un oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> nella raccolta.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">Indice in base zero in cui viene inserito il membro.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> da inserire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Rimuove l'oggetto specificato dalla raccolta.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> da rimuovere dalla raccolta.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">La proprietà è stata impostata e l'interfaccia <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> è in sola lettura.</exception>
      <returns vsli:raw="The element at the specified index.">Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Ottiene un oggetto che rappresenta l'elemento XML sconosciuto.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">Oggetto che rappresenta l'elemento XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Ottiene un elenco delimitato da virgole di nomi di elementi XML previsti in un'istanza di un documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Elenco delimitato da virgole di nomi di elementi XML. Ciascun nome è nel seguente formato: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Ottiene il numero della riga nella quale è stato rilevato l'elemento sconosciuto se il visualizzatore XML è <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Ottiene il numero della riga nella quale è stato rilevato l'elemento sconosciuto se il visualizzatore XML è <see cref="T:System.Xml.XmlTextReader" />; in caso contrario si otterrà -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Ottiene la posizione nella riga in corrispondenza della quale è stato rilevato l'elemento sconosciuto se il visualizzatore XML è <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Ottiene il numero della riga nella quale è stato rilevato l'elemento sconosciuto se il visualizzatore XML è <see cref="T:System.Xml.XmlTextReader" />; in caso contrario si otterrà -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Ottiene l'oggetto in corso di deserializzazione con la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">L'oggetto da deserializzare mediante la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Rappresenta il metodo di gestione dell'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> di un oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Consente all'<see cref="T:System.Xml.Serialization.XmlSerializer" /> di riconoscere un tipo quando serializza o deserializza un oggetto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">Il <see cref="T:System.Type" /> dell'oggetto da includere.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Ottiene o imposta il tipo di oggetto da includere.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">Il <see cref="T:System.Type" /> dell'oggetto da includere.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Supporta i mapping tra i tipi .NET Framework e i tipi di dati XML Schema.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Imposta la chiave utilizzata per ricercare il mapping.</summary>
      <param name="key" vsli:raw="The lookup key.">Chiave di ricerca.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Ottiene il nome dell'elemento mappato.</summary>
      <returns vsli:raw="The name of the mapped element.">Nome dell'elemento mappato.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Ottiene lo spazio dei nomi dell'elemento mappato.</summary>
      <returns vsli:raw="The namespace of the mapped element.">Spazio dei nomi dell'elemento mappato.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Ottiene il nome dell'elemento XSD del mapping.</summary>
      <returns vsli:raw="The XSD element name.">Nome dell'elemento XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Specifica se un mapping è in lettura, scrittura o in entrambe le modalità.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Vengono generati sia metodi di lettura che di scrittura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Vengono generati metodi di lettura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Vengono generati metodi di scrittura.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Esegue il mapping di un'entità di codice di un metodo di servizio Web .NET Framework a un elemento di un messaggio nel linguaggio di descrizione dei servizi Web (WSDL, Web Services Description Language).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Ottiene o imposta un valore che indica se il tipo .NET Framework è mappato a un attributo o a un elemento XML di qualsiasi tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo è mappato a un attributo o a un elemento XML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Ottiene un valore che indica se per il relativo campo nel tipo .NET Framework è specificato un valore.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se per il relativo campo è specificato un valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Ottiene il nome non qualificato della dichiarazione di elemento XML valido per questo mapping.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">Nome non qualificato della dichiarazione di elemento XML valido per questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Ottiene il nome del membro del metodo di servizio Web rappresentato da questo mapping.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">Nome del membro del metodo di servizio Web rappresentato da questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Ottiene lo spazio dei nomi XML valido per questo mapping.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">Spazio dei nomi XML valido per questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Ottiene il nome di tipo completo del tipo .NET Framework per questo mapping.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">Nome di tipo completo del tipo .NET Framework per questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Ottiene il nome di tipo del tipo .NET Framework per questo mapping.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">Nome di tipo del tipo .NET Framework per questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Ottiene lo spazio dei nomi del tipo .NET Framework per questo mapping.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">Spazio dei nomi del tipo .NET Framework per questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Ottiene il nome dell'elemento XML presente nel documento di descrizione del servizio.</summary>
      <returns vsli:raw="The XML element name.">Nome dell'elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fornisce i mapping tra i metodi di servizio Web di .NET Framework e i messaggi WSDL (Web Service Description Language) definiti per i servizi Web SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Ottiene il numero di entità di codice .NET Framework che appartengono a un metodo di servizio Web a cui viene mappato un messaggio SOAP.</summary>
      <returns vsli:raw="The number of mappings in the collection.">Numero di mapping dell'insieme.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Ottiene un elemento che contiene informazioni del mapping interno dei tipi per un'entità di codice .NET Framework che appartiene a un metodo di servizio Web che viene mappato a un messaggio SOAP.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">Indice del mapping da restituire.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> richiesto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Ottiene il nome del tipo .NET Framework che viene mappato al tipo di dati di un elemento dello schema XML che rappresenta un messaggio SOAP.</summary>
      <returns vsli:raw="The name of the .NET type.">Nome del tipo .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Ottiene lo spazio dei nomi del tipo .NET Framework che viene mappato al tipo di dati di un elemento dello schema XML che rappresenta un messaggio SOAP.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">Spazio dei nomi .NET Framework del mapping.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Ottiene il numero di riga del nodo XML sconosciuto.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">Il numero di riga del nodo XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Ottiene la posizione nella riga del nodo XML sconosciuto.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">Il numero di posizione del nodo XML sconosciuto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Ottiene il nome XML locale del nodo XML da serializzare.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">Ottiene il nome XML locale del nodo XML da serializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Ottiene il nome del nodo XML da serializzare.</summary>
      <returns vsli:raw="The name of the node being deserialized.">Il nome del nodo da deserializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Ottiene l'URI dello spazio dei nomi associato al nodo XML da serializzare.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">L'URI dello spazio dei nomi associato al nodo XML da serializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Ottiene il tipo del nodo XML da serializzare.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">L'<see cref="T:System.Xml.XmlNodeType" /> che rappresenta il nodo XML da deserializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Ottiene l'oggetto in corso di deserializzazione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">L'<see cref="T:System.Object" /> da deserializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Ottiene il testo del nodo XML da deserializzare.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">Il testo del nodo XML da deserializzare.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Rappresenta il metodo di gestione dell'evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> di un oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Genera mapping a dichiarazioni di elementi dello schema XML, incluse parti di messaggi XSD (XML Schema Definition) letterali in un documento nel linguaggio di descrizione dei servizi Web (WSDL, Web Services Description Language), per tipi .NET Framework o informazioni dei metodi di servizi Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando lo spazio dei nomi XML predefinito specificato.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando gli override di serializzazione XML specificati.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Oggetto che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizzando gli override di serializzazione XML e lo spazio dei nomi XML predefinito specificati.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Oggetto che esegue l'override del modo in cui la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializza i tipi mappati.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Spazio dei nomi XML predefinito da utilizzare per i mapping di tipi importati.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Genera mapping interni di tipi per le informazioni provenienti da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con mapping alle parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Restituisce mapping interni di tipi utilizzando informazioni derivate da un metodo di servizio Web e consente di specificare un nome di elemento XML, uno spazio dei nomi XML e altre opzioni.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Restituisce mapping interni di tipi utilizzando informazioni derivate da un metodo di servizio Web e consente di specificare un nome di elemento XML, uno spazio dei nomi XML e altre opzioni.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per specificare che il tipo di schema generato verrà contrassegnato con l'elemento <see langword="&lt;xs:anyAttribute&gt;" />; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Genera mapping interni di tipi per le informazioni provenienti da un metodo di servizio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nome di elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Spazio dei nomi di un elemento XML prodotto dal metodo di servizio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> che contengono entità di codice .NET Framework che appartengono a un metodo di servizio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi che corrispondono alle parti di un messaggio WSDL devono essere racchiusi in un elemento wrapper aggiuntivo in un messaggio SOAP; in caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo è una chiamata di procedura remota; in caso contrario, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per specificare che il tipo di schema generato verrà contrassegnato con l'elemento <see langword="&lt;xs:anyAttribute&gt;" />; in caso contrario, <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Uno dei valori di <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. Il valore predefinito è <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">Oggetto <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework specificato.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo e lo spazio dei nomi specificati.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Spazio dei nomi XML predefinito da utilizzare.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo e l'attributo specificati.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Attributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che viene applicato al tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">Classe <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che rappresenta un mapping tra un tipo .NET Framework e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Genera un mapping a un elemento dello schema XML per un tipo .NET Framework utilizzando il tipo, l'attributo e lo spazio dei nomi specificati.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">Tipo .NET Framework per cui generare un mapping dei tipi.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Attributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che viene applicato al tipo.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">Spazio dei nomi XML predefinito da utilizzare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">Classe <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che contiene il mapping .NET Framework interno tra un tipo e un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Include i mapping relativi a un tipo per utilizzarli successivamente, quando vengono richiamati i metodi di importazione.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">Tipo .NET Framework per cui salvare informazioni dei mapping dei tipi.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Include i mapping relativi a tipi derivati per utilizzarli successivamente, quando vengono richiamati i metodi di importazione.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Istanza della classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> che contiene attributi personalizzati derivati dall'attributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Fornisce i mapping tra le entità di codice dei metodi di servizio Web di .NET Framework e il contenuto dei messaggi nel linguaggio di descrizione dei servizi Web (WSDL, Web Services Description Language) definiti per i servizi Web SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Ottiene o imposta un valore che indica se la classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> rappresenta un valore restituito di un metodo di servizio Web, in contrapposizione a un parametro di output.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il membro rappresenta il valore restituito di un servizio Web; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Ottiene o imposta il nome del membro del metodo di servizio Web per questo mapping.</summary>
      <returns vsli:raw="The name of the Web service method.">Nome del metodo di servizio Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Ottiene o imposta il tipo dell'entità di codice del membro del metodo di servizio Web rappresentata da questo mapping.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">Classe <see cref="T:System.Type" /> dell'entità di codice del membro del metodo di servizio Web rappresentata da questo mapping.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Ottiene o imposta un valore che indica che il valore dell'attributo <c>isNullable</c> della definizione di elemento XML corrispondente è <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per eseguire l'override della proprietà <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Ottiene o imposta una classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> con l'insieme di attributi relativi alla codifica SOAP che sono stati applicati all'entità di codice del membro.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">Classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> che contiene gli oggetti che rappresentano gli attributi SOAP applicati al membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Ottiene o imposta una classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> con l'insieme di attributi relativi a <see cref="T:System.Xml.Serialization.XmlSerializer" /> che sono stati applicati all'entità di codice del membro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">Classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> che rappresenta gli attributi XML che sono stati applicati al codice del membro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Consente l'iterazione su una raccolta di oggetti <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">Oggetto <see cref="T:System.Xml.Serialization.XmlSchemas" /> su cui si desidera eseguire l'iterazione.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Sposta l'enumeratore sull'elemento successivo dell'insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se lo spostamento ha esito positivo. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nell'insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Ottiene l'elemento corrente della raccolta.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> corrente nella raccolta.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Ottiene l'elemento corrente dell'insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Elemento corrente dell'insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Inserisce negli oggetti <see cref="T:System.Xml.Schema.XmlSchema" /> dichiarazioni di elementi dello schema XML presenti in oggetti mapping dei tipi.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" /> a cui vengono aggiunte dichiarazioni di elementi ottenute dai mapping dei tipi.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Esporta un elemento <c>&lt;any&gt;</c> nell'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> identificato dallo spazio dei nomi specificato.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">Spazio dei nomi XML Schema Document a cui aggiungere un elemento <c>&lt;any&gt;</c>.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Nome arbitrario assegnato all'elemento dichiarato <c>&lt;any&gt;</c>.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Aggiunge una dichiarazione di elemento per un oggetto o un tipo a un messaggio SOAP o a un oggetto <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene i mapping da esportare.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">Stringa "any" con un intero accodato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Aggiunge una dichiarazione di elemento alla classe <see cref="T:System.Xml.Schema.XmlSchema" /> applicabile per ciascuna delle parti elemento di una definizione di messaggio SOAP letterale.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Mapping interni dei tipi .NET Framework per le parti elemento di una definizione di messaggio WSDL (Web Service Description Language).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Aggiunge una dichiarazione di elemento alla classe <see cref="T:System.Xml.Schema.XmlSchema" /> applicabile per ciascuna delle parti elemento di una definizione di messaggio SOAP letterale e specifica se sono compresi gli elementi di inclusione.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">Mapping interno tra un tipo .NET Framework e un elemento dello schema XML.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi dello schema che racchiudono lo schema devono essere inclusi; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Aggiunge una dichiarazione di elemento all'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> applicabile per una singola parte elemento di una definizione di messaggio SOAP letterale.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Mapping interni dei tipi .NET Framework per le parti elemento di una definizione di messaggio WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome XML completo della dichiarazione dell'elemento esportato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Aggiunge una dichiarazione di elemento per un tipo .NET Framework all'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> applicabile.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">Mapping interno tra un tipo .NET Framework e un elemento dello schema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Genera mapping interni a tipi .NET Framework per dichiarazioni di elementi dello schema XML, incluse parti di messaggi XSD letterali in un documento WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> utilizzando un insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" /> che rappresenta gli schemi XML utilizzati da messaggi letterali SOAP definiti in un documento WSDL.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> utilizzando un insieme di oggetti <see cref="T:System.Xml.Schema.XmlSchema" /> che rappresenta gli schemi XML utilizzati da messaggi letterali SOAP, oltre alle classi generate per le associazioni definite in un documento WSDL.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Oggetto <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Oggetto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> che specifica una raccolta di classi da generare per le associazioni definite in un documento WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Genera informazioni dei mapping interni dei tipi per una singola parte elemento letterale SOAP definita in un documento WSDL.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome del tipo di un elemento per cui viene generato un tipo .NET Framework.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">Nome dell'elemento part nel documento WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che rappresenta il mapping dei tipi .NET Framework per una singola parte elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera informazioni sui mapping dei tipi interni per un elemento definito in un documento dello schema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome di un elemento definito in un documento dello schema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Tipo base del tipo .NET Framework generato in modo che corrisponda al tipo di un elemento XSD.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">Classe <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che rappresenta le informazioni dei mapping di tipi .NET Framework per un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Genera informazioni dei mapping interni dei tipi per un elemento definito in un documento dello schema XML o come parte in un documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome di un elemento definito in un documento dello schema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Tipo base del tipo .NET Framework generato in modo che corrisponda al tipo di un elemento XSD.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il tipo che corrisponde a un elemento XSD può ereditare indirettamente dal tipo base; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Informazioni dei mapping di tipi .NET Framework per un elemento dello schema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera informazioni dei mapping interni dei tipi per le parti elemento di un messaggio SOAP di utilizzo letterale definite in un documento WSDL.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">Nome dell'elemento per cui generare un mapping.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">Spazio dei nomi dell'elemento per cui generare un mapping.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Matrice di istanze di <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> che specifica i membri dell'elemento per cui generare un mapping.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che contiene informazioni dei mapping dei tipi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Genera informazioni dei mapping interni dei tipi per una singola parte elemento di un messaggio SOAP di utilizzo letterale definita in un documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome della parte del messaggio.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">Mapping dei tipi .NET Framework per una definizione di messaggio WSDL contenente una singola parte elemento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera informazioni dei mapping interni dei tipi per le parti elemento di un messaggio SOAP di utilizzo letterale definite in un documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Matrice di tipo <see cref="T:System.Xml.XmlQualifiedName" /> che specifica i nomi delle parti del messaggio.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">Classe <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> che rappresenta i mapping dei tipi .NET Framework per le parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera informazioni dei mapping interni dei tipi per le parti elemento di un messaggio SOAP di utilizzo letterale definite in un documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Matrice di tipo <see cref="T:System.Xml.XmlQualifiedName" /> che specifica i nomi delle parti del messaggio.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Tipo di base per tutti i tipi .NET Framework generati in modo da corrispondere alle parti del messaggio.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che i tipi che corrispondono alle parti del messaggio possono ereditare indirettamente dal tipo base; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Mapping dei tipi .NET Framework per le parti elemento di una definizione di messaggio WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera informazioni sui mapping dei tipi interni per un elemento definito in un documento dello schema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica un elemento XML.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Oggetto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che descrive un mapping di tipi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera informazioni sui mapping dei tipi interni per un elemento definito in un documento dello schema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica un elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Oggetto <see cref="T:System.Type" /> che specifica un tipo base.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Oggetto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che descrive un mapping di tipi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera informazioni sui mapping dei tipi interni per un elemento definito in un documento dello schema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica un elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Oggetto <see cref="T:System.Type" /> che specifica un tipo base.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">Valore <see cref="T:System.Boolean" /> che specifica se il tipo generato può ereditare indirettamente da <paramref name="baseType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Oggetto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che descrive un mapping di tipi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera informazioni sui mapping dei tipi interni per un elemento definito in un documento dello schema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che specifica il nome di un elemento definito in un documento dello schema XML.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Informazioni dei mapping di tipi .NET Framework per un elemento dello schema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Rappresenta la raccolta di schemi XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Aggiunge un oggetto alla fine della raccolta.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da aggiungere all'insieme di oggetti.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Indice in corrispondenza del quale viene aggiunta la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Aggiunge un oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> che rappresenta un riferimento ad assembly all'insieme.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da aggiungere.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">Classe <see cref="T:System.Uri" /> dell'oggetto schema.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Indice in corrispondenza del quale viene aggiunta la classe <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Aggiunge un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> alla fine dell'insieme.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">Oggetto <see cref="T:System.Xml.Serialization.XmlSchemas" /> da aggiungere alla fine dell'insieme.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Aggiunge un oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> che rappresenta un riferimento ad assembly all'insieme.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da aggiungere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Elabora i nomi di elemento e di attributo negli schemi XML e, facoltativamente, convalida gli schemi XML.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> che specifica il metodo di callback che gestisce gli errori e gli avvisi durante la convalida dello schema XML, se il parametro strict è impostato su <see langword="true" />.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per convalidare gli schemi XML nell'insieme mediante il metodo <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> della classe <see cref="T:System.Xml.Serialization.XmlSchemas" />. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Restituisce un valore che indica se l'insieme contiene un oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> appartenente allo spazio dei nomi specificato.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">Spazio dei nomi dell'elemento da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento viene trovato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Determina se <see cref="T:System.Xml.Serialization.XmlSchemas" /> contiene uno schema specifico.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da individuare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'insieme contiene l'elemento specificato. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Copia l'intera classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> in una classe <see cref="T:System.Array" /> unidimensionale compatibile, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli schemi copiati da <see cref="T:System.Xml.Serialization.XmlSchemas" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">Intero a 32 bit che rappresenta l'indice della matrice da cui ha inizio la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Individua una classe <see cref="T:System.Xml.Schema.XmlSchemaObject" /> con il nome e il tipo specificati in uno degli schemi XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" /> che specifica un nome completo con uno spazio dei nomi, utilizzato per individuare un oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> nell'insieme.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">
        <see cref="T:System.Type" /> dell'oggetto da trovare. I tipi possibili includono <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Istanza di <see cref="T:System.Xml.Schema.XmlSchemaObject" />, ad esempio una classe <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Ottiene un insieme di schemi appartenenti allo stesso spazio dei nomi.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">Spazio dei nomi degli schemi da recuperare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Implementazione di <see cref="T:System.Collections.IList" /> contenente gli schemi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Cerca lo schema specificato e restituisce l'indice a base zero della prima occorrenza nell'intera classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">La classe <see cref="T:System.Xml.Schema.XmlSchema" /> da individuare.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">Indice a base zero della prima occorrenza del valore nell'intera classe <see cref="T:System.Xml.Serialization.XmlSchemas" />, se disponibile. In caso contrario, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Inserisce uno schema in <see cref="T:System.Xml.Serialization.XmlSchemas" />, in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="schema" /> deve essere inserito.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da inserire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Metodo statico che determina se lo schema XML specificato contiene un attributo <see langword="IsDataSet" /> personalizzato impostato su <see langword="true" /> o un attributo equivalente.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">Schema XML in cui deve essere verificata la presenza di un attributo <see langword="IsDataSet" /> con valore <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se lo schema specificato esiste. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Esegue processi personalizzati aggiuntivi quando viene cancellato il contenuto dell'istanza di <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Esegue procedure personalizzate aggiuntive prima di inserire un nuovo elemento nell'istanza di <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Indice a base zero in corrispondenza del quale inserire <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuovo valore dell'elemento in <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Consente di eseguire procedure personalizzate aggiuntive durante l'eliminazione di un elemento dall'istanza <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Indice a base zero nel quale è possibile reperire <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">Valore dell'elemento da rimuovere in corrispondenza di <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Esegue procedure personalizzate aggiuntive prima di impostare un valore nell'istanza di <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Indice a base zero nel quale è possibile reperire <paramref name="oldValue" />.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valore da sostituire con <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuovo valore dell'elemento in <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Rimuove la prima occorrenza di uno schema specifico da <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> da rimuovere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Restituisce un enumeratore che scorre la raccolta di valori XML Schema.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Ottiene un valore che indica se gli schemi sono stati compilati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli schemi sono stati compilati. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Ottiene o imposta l'oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">Indice dell'elemento da recuperare.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">Classe <see cref="T:System.Xml.Schema.XmlSchema" /> specificata.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Ottiene un oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> specificato che rappresenta lo schema XML associato allo spazio dei nomi indicato.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">Spazio dei nomi dell'oggetto specificato.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Oggetto <see cref="T:System.Xml.Schema.XmlSchema" /> specificato.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Delegato utilizzato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la deserializzazione di tipi di dati XML con codifica SOAP mappati a insiemi o enumerazioni.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">Insieme in cui viene copiata la matrice di elementi dell'insieme.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Matrice di elementi da copiare nella <c>raccolta di oggetti</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Delegato utilizzato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la deserializzazione di dati XML con codifica SOAP.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> che contiene l'oggetto da correggere e la matrice di identificatori di stringa degli elementi da completare.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Classe astratta che costituisce la classe base per <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> e <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> e contiene metodi comuni a entrambi questi tipi.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Inizializza un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Delegato utilizzato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la deserializzazione di tipi da dati XML non di primo livello con codifica SOAP.</summary>
      <returns vsli:raw="The object returned by the callback.">Oggetto restituito dal callback.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Controlla la deserializzazione effettuata dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Archivia un oggetto che contiene un metodo di callback che verrà chiamato a seconda delle esigenze per completare insiemi o enumerazioni di .NET Framework mappate a matrici con codifica SOAP o a elementi con codifica SOAP e riferimenti multipli.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Delegato <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> e dati di input del metodo di callback.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Archivia un oggetto che contiene un'istanza di metodo di callback che verrà chiamata a seconda delle esigenze per completare gli oggetti in una matrice con codifica SOAP.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> e dati di input del metodo di callback.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Archivia un'implementazione del delegato <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> e i relativi dati di input per una chiamata successiva.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">Nome del tipo .NET Framework da deserializzare.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">Spazio dei nomi del tipo .NET Framework da deserializzare.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">Oggetto <see cref="T:System.Type" /> da deserializzare.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Delegato <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Archivia un oggetto da serializzare da un elemento <see langword="multiRef" /> con codifica SOAP per un accesso successivo tramite il metodo <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Valore dell'attributo <see langword="id" /> di un elemento <see langword="multiRef" /> che identifica l'elemento.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">Oggetto che viene deserializzato dall'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Verifica l'avanzamento del deserializzatore.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">Il <see langword="count" /> corrente è in un ciclo while.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">Oggetto <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> corrente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">La proprietà <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> non è avanzata.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Rimuove tutte le occorrenze di caratteri di spazio dalle parti iniziale e finale della stringa specificata.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">Stringa da cui verranno rimossi gli spazi vuoti.</param>
      <returns vsli:raw="The trimmed string.">Stringa tagliata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che un oggetto da deserializzare deve essere astratto.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">Nome del tipo astratto.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">Spazio dei nomi .NET Framework del tipo astratto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Inserisce in un oggetto i dati della relativa rappresentazione XML in corrispondenza della posizione corrente della classe <see cref="T:System.Xml.XmlReader" />, con un'opzione di lettura dell'elemento interno.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">Nome locale del tipo di dati XML Schema derivato.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">Spazio dei nomi del tipo di dati XML Schema derivato.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">Nome locale del tipo di dati XML Schema base.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">Spazio dei nomi del tipo di dati XML Schema base.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">Spazio dei nomi del tipo .NET Framework derivato.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">Nome del tipo .NET Framework base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che non è possibile creare un'istanza di un oggetto da deserializzare poiché il costruttore genera un'eccezione di sicurezza.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nome del tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che non è possibile creare un'istanza di un oggetto da deserializzare poiché non vi sono costruttori disponibili.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nome del tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crea un oggetto <see cref="T:System.InvalidCastException" /> che indica che si è verificato un errore di conversione di riferimenti esplicita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Oggetto <see cref="T:System.Type" /> in cui non è possibile eseguire il cast di un oggetto. Questo tipo è incorporato nel messaggio dell'eccezione.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Oggetto di cui non è possibile eseguire il cast. Questo oggetto è incorporato nel messaggio dell'eccezione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crea un oggetto <see cref="T:System.InvalidCastException" /> che indica che si è verificato un errore di conversione di riferimenti esplicita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">Oggetto <see cref="T:System.Type" /> in cui non è possibile eseguire il cast di un oggetto. Questo tipo è incorporato nel messaggio dell'eccezione.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">Oggetto di cui non è possibile eseguire il cast. Questo oggetto è incorporato nel messaggio dell'eccezione.</param>
      <param name="id" vsli:raw="A string identifier.">Identificatore di stringa.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che non è possibile individuare un tipo derivato mappato a un tipo di dati XML Schema.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">Nome locale del tipo di dati XML Schema mappato al tipo derivato non disponibile.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">Spazio dei nomi del tipo di dati XML Schema mappato al tipo derivato non disponibile.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">Nome completo del tipo base .NET Framework per il quale non è possibile individuare un tipo derivato.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Crea un'eccezione <see cref="T:System.InvalidOperationException" /> che indica che un tipo di insieme con codifica SOAP non può essere modificato e che i suoi valori non possono essere riempiti.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">Nome completo del tipo .NET Framework per il quale esiste un mapping.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che un valore di enumerazione non è valido.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">Valore di enumerazione non valido.</param>
      <param name="enumType" vsli:raw="The enumeration type.">Tipo di enumerazione.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che la posizione corrente di <see cref="T:System.Xml.XmlReader" /> rappresenta un nodo XML sconosciuto.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Crea un oggetto <see cref="T:System.InvalidOperationException" /> che indica che un tipo è sconosciuto.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome del tipo sconosciuto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Eccezione <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Garantisce che una matrice o una copia specifica sia sufficientemente grande da contenere un indice specificato.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">Oggetto <see cref="T:System.Array" /> da controllare.</param>
      <param name="index" vsli:raw="The required index.">Indice richiesto.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">Oggetto <see cref="T:System.Type" /> degli elementi della matrice.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">Oggetto <see cref="T:System.Array" /> esistente, se sufficientemente grande; in caso contrario, nuova matrice più grande contenente gli elementi della matrice originale.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Completa i valori di una matrice con codifica SOAP i cui tipi di dati sono mappati a un tipo di riferimento .NET Framework.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Oggetto che contiene la matrice di cui vengono completati i valori.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Ottiene la lunghezza della matrice con codifica SOAP in cui è attualmente posizionata la classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">Nome locale che la matrice deve avere.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">Spazio dei nomi che la matrice deve avere.</param>
      <returns vsli:raw="The length of the SOAP array.">Lunghezza della matrice SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Determina se l'elemento XML in cui è attualmente posizionata la classe <see cref="T:System.Xml.XmlReader" /> dispone di un attributo null impostato sul valore <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la classe <see cref="T:System.Xml.XmlReader" /> è attualmente posizionata su un attributo null con valore <see langword="true" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Ottiene un oggetto da serializzare da un elemento <see langword="multiRef" /> con codifica SOAP e archiviato precedentemente da <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">Valore dell'attributo <see langword="id" /> di un elemento <see langword="multiRef" /> che identifica l'elemento.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Oggetto da deserializzare da un elemento <see langword="multiRef" /> con codifica SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ottiene il valore dell'attributo <see langword="xsi:type" /> per l'elemento XML in corrispondenza della posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Nome completo XML che indica il tipo di dati di un elemento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Inizializza metodi di callback che inseriscono dati negli oggetti mappati a dati XML con codifica SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Archivia nomi di elementi e di attributi in un oggetto <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Determina se il nome di un attributo XML indica uno spazio dei nomi XML.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">Nome di un attributo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nome dell'attributo XML indica uno spazio dei nomi XML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Imposta il valore dell'attributo XML se è di tipo <see langword="arrayType" /> dallo spazio dei nomi WSDL (Web Service Description Language).</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">Classe <see cref="T:System.Xml.XmlAttribute" /> che può disporre del tipo <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Fa in modo che la classe <see cref="T:System.Xml.XmlReader" /> legga il nome completo dell'elemento in cui è attualmente posizionata.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">Nome completo del tipo dell'elemento XML corrente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Fa in modo che la classe <see cref="T:System.Xml.XmlReader" /> legga un tag di fine XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere l'elemento XML corrente se l'elemento ha un attributo null con valore true.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento ha un valore di attributo <c>null="true"</c> ed è stato letto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere il nome completo dell'elemento in cui è attualmente posizionata.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il nome completo dell'elemento XML corrente; in caso contrario, <see langword="null" /> se è presente un valore di attributo <c>null="true"</c>.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere un elemento XML semplice di solo testo che potrebbe essere <see langword="null" />.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valore stringa; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Legge il valore dell'attributo <see langword="href" /> (attributo <see langword="ref" /> per SOAP 1.2) utilizzato per fare riferimento a un elemento XML nella codifica SOAP.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Stringa di output in cui viene letto il valore dell'attributo <see langword="href" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il valore è stato letto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserializza un oggetto da un elemento XML <see langword="multiRef" /> con codifica SOAP.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">Valore dell'elemento a cui viene fatto riferimento nel documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserializza un oggetto da un elemento XML <see langword="multiRef" /> con codifica SOAP.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nome locale del tipo di dati XML Schema dell'elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Spazio dei nomi del tipo di dati XML Schema dell'elemento.</param>
      <returns vsli:raw="The value of the referenced element in the document.">Valore dell'elemento a cui viene fatto riferimento nel documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Deserializza gli oggetti dagli elementi <see langword="multiRef" /> con codifica SOAP in un messaggio SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializza un oggetto da un elemento XML in un messaggio SOAP contenente un riferimento a un elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nome locale del tipo di dati XML Schema dell'elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Spazio dei nomi del tipo di dati XML Schema dell'elemento.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nome dell'elemento è anche il nome del tipo di dati XML Schema; in caso contrario, <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Stringa di output in cui viene letto il valore dell'attributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializza un oggetto da un elemento XML in un messaggio SOAP contenente un riferimento a un elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nome locale del tipo di dati XML Schema dell'elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">Spazio dei nomi del tipo di dati XML Schema dell'elemento.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Stringa di output in cui viene letto il valore dell'attributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializza un oggetto da un elemento XML in un messaggio SOAP contenente un riferimento a un elemento <see langword="multiRef" />.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Stringa di output in cui viene letto il valore dell'attributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Inserisce dati in un oggetto dalla relativa rappresentazione XML in corrispondenza della posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Interfaccia <see cref="T:System.Xml.Serialization.IXmlSerializable" /> che corrisponde alla posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.Serialization.IXmlSerializable" /> con i relativi membri completati con i dati presenti in corrispondenza della posizione della classe <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Questo metodo supporta l'infrastruttura .NET Framework e non può essere utilizzato direttamente dal codice.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Oggetto IXmlSerializable che corrisponde alla posizione corrente di XMLReader.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Specifica se per l'oggetto serializzabile viene eseguito il wrapping.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Oggetto che implementa l'interfaccia IXmlSerializable con i relativi membri completati con i dati presenti in corrispondenza della posizione di XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Produce il risultato di una chiamata al metodo <see cref="M:System.Xml.XmlReader.ReadString" /> accodato al valore di input.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Stringa da anteporre al risultato di una chiamata al metodo <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Risultato di una chiamata al metodo <see cref="M:System.Xml.XmlReader.ReadString" /> accodato al valore di input.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Restituisce il risultato di una chiamata al metodo <see cref="M:System.Xml.XmlReader.ReadString" /> della classe <see cref="T:System.Xml.XmlReader" />, da cui sono stati eventualmente rimossi gli spazi vuoti e che viene accodato al valore di input.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Stringa che verrà accodata.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se dal risultato dell'operazione di lettura devono essere rimossi gli spazi vuoti; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">Risultato dell'operazione di lettura accodato al valore di input.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Legge un elemento XML che accetta i valori null (<see langword="xsi:nil = 'true'" />) e restituisce un valore <see cref="T:System.Nullable`1" /> generico.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il tipo di dati semplice per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">Oggetto <see cref="T:System.Nullable`1" /> generico che rappresenta un valore XML null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Ottiene il valore del nodo XML in cui è attualmente posizionata la classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il tipo di dati semplice per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">Valore del nodo come tipo di valore .NET Framework, se il valore è un tipo di dati XML Schema semplice.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere un elemento di primo livello del documento XML come posizione corrente.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo deve leggere il contenuto solo dopo la lettura dell'elemento iniziale dell'elemento; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">Classe <see cref="T:System.Xml.XmlDocument" /> che contiene l'elemento di primo livello che è stato letto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere il nodo XML come posizione corrente.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per leggere il contenuto solo dopo la lettura dell'elemento iniziale dell'elemento; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">Classe <see cref="T:System.Xml.XmlNode" /> che rappresenta il nodo XML che è stato letto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Archivia un oggetto da deserializzare da un elemento <see langword="multiRef" /> con codifica SOAP.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">Oggetto da deserializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Ottiene un assembly generato dinamicamente in base al nome.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nome completo dell'assembly.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Oggetto <see cref="T:System.Reflection.Assembly" /> generato dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Garantisce che una matrice o una copia specifica non superi una lunghezza specificata.</summary>
      <param name="a" vsli:raw="The array that is being checked.">Matrice da controllare.</param>
      <param name="length" vsli:raw="The maximum length of the array.">Lunghezza massima della matrice.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">Oggetto <see cref="T:System.Type" /> degli elementi della matrice.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" /> se per la matrice può essere restituito <see langword="null" />, se disponibile per la matrice di input; in caso contrario, una nuova matrice più piccola.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">Oggetto <see cref="T:System.Array" /> esistente, se già sufficientemente piccolo; in caso contrario, nuova matrice più piccola contenente gli elementi della matrice originale fino alla dimensione di <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere il valore stringa in corrispondenza della posizione corrente e restituirlo come matrice di byte base 64.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> per restituire <see langword="null" />; <see langword="false" /> per restituire una matrice di byte base 64.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Matrice di byte base 64; in caso contrario, <see langword="null" /> se il valore del parametro <paramref name="isNull" /> è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Produce una matrice di byte base 64 da una stringa di input.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Stringa da convertire in una matrice di byte base 64.</param>
      <returns vsli:raw="A base-64 byte array.">Matrice di byte base 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Indica alla classe <see cref="T:System.Xml.XmlReader" /> di leggere il valore stringa in corrispondenza della posizione corrente e restituirlo come matrice di byte esadecimale.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> per restituire <see langword="null" />; <see langword="false" /> per restituire una matrice di byte esadecimale.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Matrice di byte esadecimale oppure <see langword="null" /> se il valore del parametro <paramref name="isNull" /> è <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Produce una matrice di byte esadecimali da una stringa di input.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Stringa da convertire in una matrice di byte esadecimali.</param>
      <returns vsli:raw="A hexadecimal byte array.">Matrice di byte esadecimali.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Produce un oggetto <see cref="T:System.Char" /> da una stringa di input.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Stringa da convertire in oggetto <see cref="T:System.Char" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Un oggetto <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produce un oggetto <see cref="T:System.DateTime" /> da una stringa di input.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Stringa da convertire in oggetto classe <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Un oggetto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Produce un oggetto <see cref="T:System.DateTime" /> da una stringa di input.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Stringa da convertire in oggetto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Un oggetto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Produce un valore numerico di enumerazione da una stringa costituita da identificatori delimitati che rappresentano costanti dell'elenco di enumeratori.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Stringa costituita da identificatori delimitati in cui ciascun identificatore rappresenta una costante dell'elenco di enumeratori impostati.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">Oggetto <see cref="T:System.Collections.Hashtable" /> in cui gli identificatori sono costituiti da chiavi e le costanti da numeri integrali.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">Nome del tipo di enumerazione.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valore Long costituito dal valore dell'enumerazione sotto forma di una serie di operazioni <see langword="OR" /> bit per bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Produce un oggetto <see cref="T:System.DateTime" /> da una stringa che rappresenta l'ora.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Stringa da convertire in oggetto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Un oggetto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica un nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nome XML da decodificare.</param>
      <returns vsli:raw="A decoded string.">Stringa decodificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica un nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nome XML da decodificare.</param>
      <returns vsli:raw="A decoded string.">Stringa decodificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica un nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nome XML da decodificare.</param>
      <returns vsli:raw="A decoded string.">Stringa decodificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Decodifica un nome XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nome XML da decodificare.</param>
      <returns vsli:raw="A decoded string.">Stringa decodificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Ottiene un oggetto <see cref="T:System.Xml.XmlQualifiedName" /> da un nome che può contenere un prefisso.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Nome che può contenere un prefisso.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">Oggetto <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta un nome XML completo di spazio dei nomi.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Oggetto che la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sta tentando di deserializzare, successivamente accessibile tramite la proprietà <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Oggetto <see cref="T:System.Xml.XmlAttribute" /> che rappresenta l'attributo in questione.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Oggetto che la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sta tentando di deserializzare, successivamente accessibile tramite la proprietà <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">Oggetto <see cref="T:System.Xml.XmlAttribute" /> che rappresenta l'attributo in questione.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Elenco di nomi completi XML delimitato da virgole.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">Oggetto <see cref="T:System.Object" /> da deserializzare.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">Classe <see cref="T:System.Xml.XmlElement" /> per cui viene generato un evento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Oggetto che la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sta tentando di deserializzare, successivamente accessibile tramite la proprietà <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">Classe <see cref="T:System.Xml.XmlElement" /> per cui viene generato un evento.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Elenco di nomi completi XML delimitato da virgole.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">Oggetto da deserializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object being deserialized.">Oggetto di cui è in corso la deserializzazione.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Elenco di nomi completi XML delimitato da virgole.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Genera un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> per la posizione corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Stringa univoca utilizzata per identificare l'oggetto senza riferimenti, successivamente accessibile tramite la proprietà <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Oggetto che la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sta tentando di deserializzare, successivamente accessibile tramite la proprietà <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Ottiene o imposta un valore che determina se le stringhe XML vengono convertite in nomi di tipi .NET Framework validi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le stringhe XML vengono codificate in nomi di tipi .NET Framework validi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Ottiene l'oggetto del documento XML in cui viene deserializzato il documento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">Oggetto <see cref="T:System.Xml.XmlDocument" /> che rappresenta i dati <see cref="T:System.Xml.XmlDocument" /> deserializzati.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Ottiene o imposta un valore che deve essere <see langword="true" /> per un valore restituito SOAP 1.1.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" /> se il valore è un valore restituito.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Xml.XmlReader" /> che viene utilizzato da <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Oggetto <see cref="T:System.Xml.XmlReader" /> che viene utilizzato da <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Ottiene il numero corrente della classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Numero corrente di una classe <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Contiene un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, oltre agli input del metodo. Fornisce inoltre i parametri del metodo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> con i parametri di un metodo di callback.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Insieme in cui il metodo di callback copia la matrice di elementi dell'insieme.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Metodo che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Matrice in cui il metodo di callback copia un insieme.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Ottiene il metodo di callback che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">Delegato <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> che punta al metodo di callback.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Ottiene l'oggetto <paramref name="object collection" /> per il metodo di callback.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">Insieme utilizzato per la correzione.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Ottiene la matrice in cui il metodo di callback copia un insieme.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">Matrice in cui il metodo di callback copia un insieme.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Contiene un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, oltre agli input del metodo e funge da parametro per il metodo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Oggetto contenente altri oggetti i cui valori vengono specificati dall'implementazione del callback.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Metodo che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Dimensione della matrice di stringhe ottenuta tramite la proprietà <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Oggetto contenente altri oggetti i cui valori vengono specificati dall'implementazione del callback.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Metodo che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Matrice di stringhe ottenuta tramite la proprietà <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Ottiene il metodo di callback che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Metodo di callback che crea un'istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Ottiene o imposta una matrice di chiavi per gli oggetti appartenenti alla proprietà <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />, i cui valori vengono specificati dall'implementazione del callback.</summary>
      <returns vsli:raw="The array of keys.">Matrice di chiavi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Ottiene o imposta l'oggetto contenente altri oggetti i cui valori vengono specificati dall'implementazione del callback.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">Origine che contiene oggetti con valori da riempire.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Delegato che viene utilizzato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> per la serializzazione di tipi da dati XML non di primo livello con codifica SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">Oggetto da serializzare.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Rappresenta una classe astratta utilizzata per controllare la serializzazione effettuata dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Archivia un'implementazione del delegato <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> e del tipo a cui viene applicato per una chiamata successiva.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">Classe <see cref="T:System.Type" /> di oggetti serializzati.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">Nome del tipo di oggetti serializzati.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">Spazio dei nomi del tipo di oggetti serializzati.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Istanza del delegato <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica la presenza di un nome non previsto per un elemento conforme alla dichiarazione di elemento <see langword="choice" /> dello schema XML.</summary>
      <param name="value" vsli:raw="The name that is not valid.">Nome non valido.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">Dichiarazione di elemento <see langword="choice" /> a cui appartiene il nome.</param>
      <param name="name" vsli:raw="The expected local name of an element.">Nome locale previsto per un elemento.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">Spazio dei nomi previsto per un elemento.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> è stata applicata a un membro erroneamente. Sono validi solo i membri di tipo <see cref="T:System.Xml.XmlNode" /> o derivati dalla classe <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">Oggetto che rappresenta il membro non valido.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> è stata applicata a un membro erroneamente. Sono validi solo i membri di tipo <see cref="T:System.Xml.XmlNode" /> o derivati dalla classe <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">Classe <see cref="T:System.Type" /> non valida.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che si è verificato un errore durante la scrittura di una matrice a cui viene applicata una dichiarazione di elemento <see langword="choice" /> dello schema XML.</summary>
      <param name="type" vsli:raw="The type being serialized.">Tipo in fase di serializzazione.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Nome della dichiarazione di elemento <see langword="choice" />.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Crea una classe <see cref="T:System.InvalidOperationException" /> per un valore di enumerazione non valido.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Oggetto che rappresenta l'enumerazione non valida.</param>
      <param name="typeName" vsli:raw="The XML type name.">Nome del tipo XML.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che un valore di un elemento XML non corrisponde a un tipo di enumerazione.</summary>
      <param name="value" vsli:raw="The value that is not valid.">Valore non valido.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">Nome dell'elemento XML con un valore non valido.</param>
      <param name="enumValue" vsli:raw="The valid value.">Valore valido.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che un elemento XML conforme alla dichiarazione di elemento <see langword="any" /> dello schema XML non può essere elaborato.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">Elemento XML che non può essere elaborato.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che un tipo da serializzare non viene utilizzato in modo valido o è stato rilevato inaspettatamente.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">Oggetto il cui tipo non può essere serializzato.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crea una classe <see cref="T:System.InvalidOperationException" /> che indica che un tipo da serializzare non viene utilizzato in modo valido o è stato rilevato inaspettatamente.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">Tipo che non può essere serializzato.</param>
      <returns vsli:raw="The newly created exception.">Eccezione appena creata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Elabora una matrice di byte base 64.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Matrice <see cref="T:System.Byte" /> base 64.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">Stessa matrice di byte passata come argomento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Produce una stringa da una matrice di byte esadecimale di input.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Matrice di byte esadecimale da convertire in stringa.</param>
      <returns vsli:raw="The byte array value converted to a string.">Valore di matrice di byte convertito in stringa.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Produce una stringa da un oggetto <see cref="T:System.Char" /> di input.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">
        <see cref="T:System.Char" /> da convertire in stringa.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">Valore <see cref="T:System.Char" /> convertito in stringa.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produce una stringa da una struttura <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">
        <see cref="T:System.DateTime" /> da convertire in stringa.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Rappresentazione in formato stringa della struttura <see cref="T:System.DateTime" /> che indica la data, ma non l'ora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Produce una stringa da un oggetto <see cref="T:System.DateTime" /> di input.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">
        <see cref="T:System.DateTime" /> da convertire in stringa.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Rappresentazione in formato stringa della struttura <see cref="T:System.DateTime" /> che indica la data e l'ora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Produce una stringa costituita da identificatori delimitati che rappresentano i membri dell'enumerazione che sono stati impostati.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valore di enumerazione sotto forma di una serie di operazioni <see langword="OR" /> bit per bit.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Valori dei nomi dell'enumerazione.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Valori delle costanti dell'enumerazione.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Stringa costituita da identificatori delimitati, in cui ciascuno rappresenta un membro dell'elenco di enumeratori impostati.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Utilizza un valore numerico dell'enumerazione e i nomi e le costanti dell'elenco di enumeratori dell'enumerazione e restituisce una stringa costituita da identificatori delimitati che rappresentano i membri dell'enumerazione che sono stati impostati.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valore di enumerazione sotto forma di una serie di operazioni <see langword="OR" /> bit per bit.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Valori dell'enumerazione.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">Costanti dell'enumerazione.</param>
      <param name="typeName" vsli:raw="The name of the type.">Nome del tipo.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Stringa costituita da identificatori delimitati, in cui ogni elemento è uno dei valori impostati dall'operazione bit per bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Produce una stringa da una struttura <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">Struttura <see cref="T:System.DateTime" /> che viene convertita in stringa.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Rappresentazione in formato stringa dell'oggetto <see cref="T:System.DateTime" /> che indica l'ora, ma non la data.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Codifica un nome XML valido sostituendo i caratteri non validi con sequenze di escape.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Stringa da utilizzare come nome XML.</param>
      <returns vsli:raw="An encoded string.">Stringa codificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Codifica un nome locale XML valido sostituendo i caratteri non validi con sequenze di escape.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Stringa da utilizzare come nome XML non qualificato locale.</param>
      <returns vsli:raw="An encoded string.">Stringa codificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Codifica un nome XML.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Nome XML da codificare.</param>
      <returns vsli:raw="An encoded string.">Stringa codificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Codifica una sequenza di nomi XML delimitata da spazi in un singolo nome XML.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Sequenza di nomi XML da codificare delimitata da spazi.</param>
      <returns vsli:raw="An encoded string.">Stringa codificata.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Restituisce un nome completo XML, in cui i caratteri non validi sono sostituiti da sequenze di escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il codice XML da scrivere.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Nome completo XML, in cui i caratteri non validi sono sostituiti da sequenze di escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Produce una stringa che può essere scritta come nome completo XML, in cui i caratteri non validi sono sostituiti da sequenze di escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Classe <see cref="T:System.Xml.XmlQualifiedName" /> che rappresenta il codice XML da scrivere.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per ignorare gli spazi vuoti nella stringa; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Nome completo XML, in cui i caratteri non validi sono sostituiti da sequenze di escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Inizializza istanze del delegato <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> per serializzare dati XML con codifica SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Ottiene un assembly generato dinamicamente in base al nome.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nome completo dell'assembly.</param>
      <returns vsli:raw="A dynamically generated assembly.">Assembly generato dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Inizializza i riferimenti agli oggetti solo durante la serializzazione di un messaggio SOAP con codifica SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Indica a un oggetto <see cref="T:System.Xml.XmlWriter" /> di scrivere un attributo XML il cui nome non ha uno spazio dei nomi specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nome locale dell'attributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Valore dell'attributo XML sotto forma di matrice di byte.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Indica alla classe <see cref="T:System.Xml.XmlWriter" /> di scrivere un attributo XML il cui nome non ha uno spazio dei nomi specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nome locale dell'attributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valore dell'attributo XML sotto forma di stringa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Indica a un oggetto <see cref="T:System.Xml.XmlWriter" /> di scrivere un attributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nome locale dell'attributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Spazio dei nomi dell'attributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">Valore dell'attributo XML sotto forma di matrice di byte.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Scrive un attributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nome locale dell'attributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Spazio dei nomi dell'attributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valore dell'attributo XML sotto forma di stringa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Scrive un attributo XML in cui il prefisso dello spazio dei nomi viene fornito manualmente.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">Prefisso dello spazio dei nomi da scrivere.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">Nome locale dell'attributo XML.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">Spazio dei nomi rappresentato dal prefisso.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valore dell'attributo XML sotto forma di stringa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Scrive un oggetto nodo XML nel corpo di un elemento XML denominato.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nodo XML da scrivere, possibilmente un elemento XML figlio.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nome locale dell'elemento XML padre da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Spazio dei nomi dell'elemento XML padre da scrivere</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto da serializzare è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il nodo, se si tratta di un elemento XML, è conforme a una dichiarazione di elemento <see langword="any" /> dello schema XML; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Indica a un oggetto <see cref="T:System.Xml.XmlWriter" /> di scrivere un oggetto <see cref="T:System.Xml.XmlNode" /> nel corpo di un elemento XML denominato.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nodo XML da scrivere, possibilmente un elemento XML figlio.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nome locale dell'elemento XML padre da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">Spazio dei nomi dell'elemento XML padre da scrivere</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto da serializzare è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il nodo, se si tratta di un elemento XML, è conforme a una dichiarazione di elemento <see langword="any" /> dello schema XML; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Scrive un elemento XML il cui corpo contiene un nome completo specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nome da scrivere nel testo dell'elemento utilizzando il relativo prefisso, se completo dello spazio dei nomi.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Scrive un elemento XML il cui corpo contiene un nome completo specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nome da scrivere nel testo dell'elemento utilizzando il relativo prefisso, se completo dello spazio dei nomi.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Scrive un elemento XML il cui corpo contiene un nome completo specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nome da scrivere nel testo dell'elemento utilizzando il relativo prefisso, se completo dello spazio dei nomi.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Scrive un elemento XML il cui corpo contiene un nome completo specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">Nome da scrivere nel testo dell'elemento utilizzando il relativo prefisso, se completo dello spazio dei nomi.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">Nome locale dell'elemento XML da scrivere senza qualifica dello spazio dei nomi.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Lo spazio dei nomi dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Scrive un elemento XML il cui corpo contiene un valore specificato.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nome locale dell'elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">Valore del testo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Scrive un elemento XML il cui corpo è vuoto.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Scrive un elemento XML il cui corpo è vuoto.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Scrive un tag di elemento <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Scrive un tag di elemento <see langword="&lt;closing&gt;" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">Oggetto da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Scrive un attributo <see langword="id" /> che compare in un elemento <see langword="multiRef" /> con codifica SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">Oggetto da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Scrive gli attributi di dichiarazione di spazi dei nomi.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Spazi dei nomi XML da dichiarare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML il cui corpo contiene un nome completo XML valido. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nome completo XML da scrivere nel corpo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML il cui corpo contiene un nome completo XML valido. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nome completo XML da scrivere nel corpo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML che contiene una stringa come corpo. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Stringa da scrivere nel corpo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive una matrice di byte come corpo di un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Matrice di byte da scrivere nel corpo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML che contiene una stringa come corpo. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Stringa da scrivere nel corpo dell'elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nome del tipo di dati dello schema XML da scrivere nell'attributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML che contiene una stringa come corpo. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Stringa da scrivere nel corpo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive una matrice di byte come corpo di un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">Matrice di byte da scrivere nel corpo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Scrive un elemento XML che contiene una stringa come corpo. <see cref="T:System.Xml.XmlWriter" /> inserisce un attributo <see langword="xsi:nil='true'" /> se il valore della stringa è <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">Stringa da scrivere nel corpo dell'elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Scrive un elemento XML con un attributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Scrive un elemento XML con un attributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Scrive un elemento XML con un attributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Scrive un elemento XML con un attributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Scrive un elemento XML di un messaggio SOAP che può contenere un riferimento a un elemento XML <see langword="&lt;multiRef&gt;" /> per un oggetto dato.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Oggetto da serializzare nell'elemento XML corrente o in un elemento <see langword="multiRef" /> a cui fa riferimento l'elemento corrente.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Scrive un elemento XML di un messaggio SOAP che può contenere un riferimento a un elemento XML <see langword="&lt;multiRef&gt;" /> per un oggetto dato.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Oggetto da serializzare nell'elemento XML corrente o in un elemento <see langword="multiRef" /> a cui fa riferimento l'elemento corrente.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo archiviato nel mapping dei tipi dell'oggetto, in contrapposizione al tipo dell'oggetto trovato direttamente mediante l'operazione <see langword="typeof" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Scrive un elemento XML di un messaggio SOAP che può contenere un riferimento a un elemento XML <see langword="&lt;multiRef&gt;" /> per un oggetto dato.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Oggetto da serializzare nell'elemento XML corrente o in un elemento <see langword="multiRef" /> a cui fa riferimento l'elemento corrente.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo archiviato nel mapping dei tipi dell'oggetto, in contrapposizione al tipo dell'oggetto trovato direttamente mediante l'operazione <see langword="typeof" />.</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per serializzare l'oggetto direttamente nell'elemento XML anziché fare in modo che l'elemento faccia riferimento a un altro elemento contenente i dati; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Scrive un elemento XML di un messaggio SOAP che può contenere un riferimento a un elemento XML <see langword="multiRef" /> per un oggetto dato.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Oggetto da serializzare nell'elemento XML corrente o in un elemento <see langword="multiRef" /> a cui fa riferimento l'elemento corrente.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo archiviato nel mapping dei tipi dell'oggetto, in contrapposizione al tipo dell'oggetto trovato direttamente mediante l'operazione <see langword="typeof" />.</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per serializzare l'oggetto direttamente nell'elemento XML anziché fare in modo che l'elemento faccia riferimento a un altro elemento contenente i dati; in caso contrario, <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto da serializzare è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Serializza gli oggetti in elementi XML <see langword="multiRef" /> con codifica SOAP in un messaggio SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Scrive un elemento XML di un messaggio SOAP che contiene un riferimento a un elemento <see langword="multiRef" /> per un determinato oggetto.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nome locale dell'elemento di riferimento da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Spazio dei nomi dell'elemento di riferimento da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized.">Oggetto da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Scrive un elemento XML di un messaggio SOAP che contiene un riferimento a un elemento <see langword="multiRef" /> per un determinato oggetto.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nome locale dell'elemento di riferimento da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Spazio dei nomi dell'elemento di riferimento da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized.">Oggetto da serializzare.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto da serializzare è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Scrive un elemento di un risultato SOAP 1.2 RPC il cui corpo contiene un nome completo specificato.</summary>
      <param name="name" vsli:raw="The local name of the result body.">Nome locale del corpo del risultato.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">Spazio dei nomi del corpo del risultato.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Scrive un oggetto che utilizza la formattazione XML personalizzata come elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.Serialization.IXmlSerializable" /> che utilizza la formattazione XML personalizzata.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto classe di <see cref="T:System.Xml.Serialization.IXmlSerializable" /> è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Indica a <see cref="T:System.Xml.XmlNode" /> di scrivere un oggetto che utilizza la formattazione XML personalizzata come elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Oggetto che implementa l'interfaccia <see cref="T:System.Xml.Serialization.IXmlSerializable" /> che utilizza la formattazione XML personalizzata.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere un attributo <see langword="xsi:nil='true'" /> se l'oggetto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> è <see langword="null" />; in caso contrario, <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> per ignorare la scrittura del tag di elemento di apertura; in caso contrario, <see langword="false" /> per scrivere il tag di elemento di apertura.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Scrive la dichiarazione XML se il writer è posizionato all'inizio di un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere il nome dell'elemento con un prefisso se non ne è disponibile alcuno per lo spazio dei nomi specificato. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Oggetto da serializzare come elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Oggetto da serializzare come elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere il nome dell'elemento con un prefisso se non ne è disponibile alcuno per lo spazio dei nomi specificato. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Scrive un tag di elemento di apertura, inclusi gli eventuali attributi.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">Nome locale dell'elemento XML da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">Spazio dei nomi dell'elemento XML da scrivere.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">Oggetto da serializzare come elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per scrivere il nome dell'elemento con un prefisso se non ne è disponibile alcuno per lo spazio dei nomi specificato. In caso contrario, <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> che contiene coppie di prefisso e spazio dei nomi da utilizzare nell'elemento XML generato.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Scrive un elemento XML il cui corpo del testo è un valore di un tipo di dati dello schema XML semplice.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">Nome locale dell'elemento da scrivere.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">Spazio dei nomi dell'elemento da scrivere.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">Oggetto da serializzare nel corpo dell'elemento.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento XML specifica in modo esplicito il tipo del valore del testo utilizzando l'attributo <see langword="xsi:type" />; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Scrive una matrice di byte base 64.</summary>
      <param name="value" vsli:raw="The byte array to write.">Matrice di byte da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Scrive un valore stringa specificato.</summary>
      <param name="value" vsli:raw="The value of the string to write.">Valore della stringa da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Scrive la classe <see cref="T:System.Xml.XmlNode" /> specificata come attributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nome XML da scrivere.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Scrive l'oggetto <see cref="T:System.Xml.XmlNode" /> specificato come attributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nome XML da scrivere.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Oggetto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> o <see langword="null" /> usato per generare un valore di nome completo per un attributo <see langword="arrayType" /> dallo spazio dei nomi WSDL (Web Services Description Language) "http://schemas.xmlsoap.org/wsdl/".</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Scrive un attributo <see langword="xsi:type" /> per un elemento XML da serializzare in un documento.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">Nome locale di un tipo di dati dello schema XML.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">Spazio dei nomi di un tipo di dati dello schema XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Ottiene o imposta un valore che indica se il metodo <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> viene utilizzato per scrivere codice XML valido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il metodo <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> restituisce un nome codificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Ottiene o imposta un elenco di oggetti nome completo XML che contengono gli spazi dei nomi e i prefissi utilizzati per produrre nomi completi in documenti XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">Classe <see cref="T:System.Collections.ArrayList" /> che contiene le coppie di spazi dei nomi e prefissi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Ottiene o imposta l'oggetto <see cref="T:System.Xml.XmlWriter" /> utilizzato da <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata dall'istanza della classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Serializza e deserializza oggetti in e da documenti XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> consente di controllare le modalità di codifica degli oggetti in XML.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un attributo XML di tipo sconosciuto durante la deserializzazione.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un elemento XML di tipo sconosciuto durante la deserializzazione.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Si verifica quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> incontra un nodo XML di tipo sconosciuto durante la deserializzazione.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Si verifica durante la deserializzazione di un flusso XML con codifica SOAP, quando <see cref="T:System.Xml.Serialization.XmlSerializer" /> rileva un tipo riconosciuto che non viene utilizzato o a cui non viene fatto riferimento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Specifica lo spazio dei nomi predefinito per tutti gli elementi XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Lo spazio dei nomi predefinito da utilizzare per tutti gli elementi XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti di un tipo specificato. Se una proprietà o un campo restituisce una matrice, il parametro <paramref name="extraTypes" /> specifica gli oggetti che possono essere inseriti nella matrice.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload può eseguire l'override con altre classi.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">Il tipo dell'oggetto da serializzare.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare oggetti di tipo <see cref="T:System.Object" /> in istanze di documento XML e di deserializzare istanze di documento XML in oggetti di tipo <see cref="T:System.Object" />. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload ne esegue l'override con altre classi. Questo overload specifica inoltre lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro <paramref name="type" /> o ne esegue l'override.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare oggetti di tipo <see cref="T:System.Object" /> in istanze di documento XML e di deserializzare istanze di documento XML in oggetti di tipo <see cref="T:System.Object" />. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload ne esegue l'override con altre classi. Questo overload specifica inoltre lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro <paramref name="type" /> o ne esegue l'override.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
      <param name="location" vsli:raw="The location of the types.">Posizione dei tipi.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> in grado di serializzare gli oggetti del tipo specificato in documenti XML e di deserializzare documenti XML in oggetti del tipo specificato. Specifica inoltre la classe da utilizzare come elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Il tipo dell'oggetto che questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che rappresenta l'elemento XML di primo livello.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Inizializza un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> tramite un oggetto che esegue il mapping di un tipo a un altro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che esegue il mapping di un tipo a un altro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Ottiene un valore che indica se questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può deserializzare un documento XML specificato.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">Un <see cref="T:System.Xml.XmlReader" /> che punta al documento da deserializzare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo <see cref="T:System.Xml.Serialization.XmlSerializer" /> può deserializzare l'oggetto a cui punta <see cref="T:System.Xml.XmlReader" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Restituisce un oggetto utilizzato per leggere il documento XML da serializzare.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">Classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilizzata per leggere il documento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">Quando sottoposto a override in una classe derivata, restituisce un writer utilizzato per serializzare l'oggetto.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Istanza che implementa la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Deserializza il documento XML contenuto dal <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.Stream" /> contenente il documento XML da deserializzare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">L'<see cref="T:System.Object" /> da deserializzare.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Deserializza il documento XML contenuto dal <see cref="T:System.IO.TextReader" /> specificato.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.TextReader" /> contenente il documento XML da deserializzare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">L'<see cref="T:System.Object" /> da deserializzare.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Deserializza il documento XML contenuto dal <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> specificato.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> contenente il documento XML da deserializzare.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserializza il documento XML contenuto dal <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da deserializzare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">L'<see cref="T:System.Object" /> da deserializzare.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Deserializza il documento XML contenuto nel <see cref="T:System.Xml.XmlReader" /> specificato e lo stile di codifica.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> contenente il documento XML da deserializzare.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Stile di codifica dell'XML serializzato.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la deserializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserializza l'oggetto utilizzando i dati contenuti nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Istanza della classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il documento.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">Codifica utilizzata.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Istanza della classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The object being deserialized.">Oggetto di cui è in corso la deserializzazione.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Deserializza un documento XML contenuto nell'oggetto <see cref="T:System.Xml.XmlReader" /> specificato e consente l'override degli eventi che si verificano durante la deserializzazione.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> contenente il documento da deserializzare.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Istanza della classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">L'<see cref="T:System.Object" /> da deserializzare.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Restituisce una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" /> creati da una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Matrice di <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che esegue il mapping di un tipo a un altro.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Restituisce un'istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> dai mapping specificati.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">
        <see cref="T:System.Type" /> dell'oggetto deserializzato.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Restituisce una matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" /> creati da una matrice di tipi.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Restituisce il nome dell'assembly contenente una o più versioni di <see cref="T:System.Xml.Serialization.XmlSerializer" /> appositamente create per serializzare o deserializzare il tipo specificato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">Classe <see cref="T:System.Type" /> da deserializzare.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">Nome dell'assembly contenente un <see cref="T:System.Xml.Serialization.XmlSerializer" /> per il tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Restituisce il nome dell'assembly contenente il serializzatore per il tipo specificato nello spazio dei nomi specificato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">Classe <see cref="T:System.Type" /> in questione.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">Spazio dei nomi del tipo.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">Nome dell'assembly contenente serializzatori appositamente compilati.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.IO.Stream" /> specificato.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">Il <see cref="T:System.IO.Stream" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.IO.Stream" /> specificato, che fa riferimento agli spazi dei nomi specificati.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">Il <see cref="T:System.IO.Stream" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.IO.TextWriter" /> specificato.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.IO.TextWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.IO.TextWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.IO.TextWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> contenente gli spazi dei nomi del documento XML generato.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> specificato.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> utilizzato per scrivere il documento XML.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Qualsiasi tentativo di accedere al metodo viene effettuato quando questo non è sottoposto a override in una classe derivata.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializza l'<see cref="T:System.Object" /> specificato e scrive il documento XML in un file utilizzando il <see cref="T:System.Xml.XmlWriter" /> specificato.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> da serializzare.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Serializza l'oggetto specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" /> specificato, facendo riferimento agli spazi dei nomi specificati.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">L'<see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> cui fa riferimento l'oggetto.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Stile di codifica dell'XML serializzato.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Si è verificato un errore durante la serializzazione. L'eccezione originale è disponibile tramite la proprietà <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Serializza l'oggetto <see cref="T:System.Object" /> specificato e scrive il documento XML in un file mediante l'oggetto <see cref="T:System.Xml.XmlWriter" />, gli spazi dei nomi XML e la codifica specificati.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">Il <see cref="T:System.Xml.XmlWriter" /> utilizzato per scrivere il documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Istanza di <see langword="XmlSerializerNamespaces" /> contenente gli spazi dei nomi e i prefissi da utilizzare.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">Codifica utilizzata nel documento.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Per i messaggi con codifica SOAP, base utilizzata per generare attributi di ID.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Applicata a un proxy client di un servizio Web, consente di specificare un assembly contenente serializzatori personalizzati.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con il nome dell'assembly specificato.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nome semplice e non crittografato dell'assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con il nome e la posizione dell'assembly specificati.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nome semplice e non crittografato dell'assembly.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Stringa che rappresenta il percorso URL dell'assembly.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Ottiene o imposta il nome dell'assembly contenente i serializzatori per un insieme specifico di tipi.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">Nome semplice e non crittografato dell'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Ottiene o imposta la posizione dell'assembly contenente i serializzatori.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Posizione, ad esempio un percorso o un URI, che punta all'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Crea versioni tipizzate della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> per una serializzazione più efficiente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene utilizzata per serializzare il tipo specificato.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene creata in modo particolare per serializzare il tipo specificato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene utilizzata per serializzare il tipo e lo spazio dei nomi specificati.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Lo spazio dei nomi predefinito da utilizzare per tutti gli elementi XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene creata in modo particolare per serializzare il tipo specificato.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene utilizzata per serializzare il tipo specificato. Se una proprietà o un campo restituisce una matrice, il parametro <paramref name="extraTypes" /> specifica gli oggetti che possono essere inseriti nella matrice.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivazione dell'oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che può serializzare oggetti del tipo specificato in documenti XML e viceversa. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload può eseguire l'override con altre classi.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che contiene campi che eseguono l'override del comportamento di serializzazione predefinito.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivazione dell'oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che può serializzare oggetti del tipo specificato in istanze di documenti XML e viceversa. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload può eseguire l'override con altre classi. Questo overload specifica anche lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">Oggetto <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che contiene campi che eseguono l'override del comportamento di serializzazione predefinito.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che rappresenta l'elemento XML di primo livello.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivazione dell'oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che può serializzare oggetti del tipo specificato in istanze di documenti XML e viceversa. Ciascun oggetto da serializzare può contenere istanze di classi e questo overload può eseguire l'override con altre classi. Questo overload specifica anche lo spazio dei nomi predefinito per tutti gli elementi XML e la classe da utilizzare come elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">Classe <see cref="T:System.Type" /> dell'oggetto che può essere serializzato da questa classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">Classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> che estende il comportamento della classe specificata nel parametro type o ne esegue l'override.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Una matrice <see cref="T:System.Type" /> di ulteriori oggetti da serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che definisce le proprietà dell'elemento XML di primo livello.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Lo spazio dei nomi predefinito di tutti gli elementi XML nel documento XML.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">Percorso che specifica la posizione dei tipi.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivazione dell'oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che può serializzare oggetti del tipo specificato in documenti XML e viceversa. Specifica l'oggetto che rappresenta l'elemento XML di primo livello.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> da serializzare.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">Un <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> che rappresenta l'elemento XML di primo livello.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivazione dell'oggetto <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Restituisce una derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> tramite un oggetto che esegue il mapping di un tipo a un altro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> che esegue il mapping di un tipo a un altro.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Derivazione della classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> che viene creata in modo particolare per serializzare il tipo mappato.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Definisce il reader, il writer e i metodi per i serializzatori tipizzati generati in precedenza.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Ottiene un valore che determina se un tipo può essere serializzato.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Tipo da serializzare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo può essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Restituisce un serializzatore per il tipo specificato.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Tipo da serializzare.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Istanza di un tipo derivato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Ottiene l'oggetto reader XML utilizzato dal serializzatore.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">Classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilizzata per leggere un flusso di dati o un documento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Ottiene l'insieme di metodi utilizzato per leggere un flusso di dati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Oggetto <see cref="T:System.Collections.Hashtable" /> che contiene i metodi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Ottiene l'insieme di serializzatori tipizzati presente nell'assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">Oggetto <see cref="T:System.Collections.Hashtable" /> che contiene i serializzatori tipizzati.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Ottiene la raccolta dei metodi usati per scrivere in un flusso di dati.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">Oggetto <see cref="T:System.Collections.Hashtable" /> che contiene i metodi.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Ottiene l'oggetto writer XML per il serializzatore.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">Classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> utilizzata per scrivere in un flusso di dati o documento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Quando questo attributo viene applicato a un assembly, indica che il codice è stato generato dall'infrastruttura di serializzazione e può essere riutilizzato in modo da migliorare le prestazioni.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> per il tipo specificato.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">Tipo da serializzare.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Ottiene o imposta lo spazio dei nomi CLR (Common Language Runtime) dell'assembly.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">Classe <see cref="T:System.String" /> che contiene lo spazio dei nomi CLR (Common Language Runtime) dell'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Ottiene o imposta l'identità dell'assembly padre.</summary>
      <returns vsli:raw="The version of the parent assembly.">Versione dell'assembly padre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Ottiene o imposta il tipo su cui opera il serializzatore.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">Elemento <see cref="T:System.Type" /> da serializzare.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Ottiene o imposta il numero di versione dell'assembly.</summary>
      <returns vsli:raw="The version of the assembly.">Versione dell'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Controlla lo schema XML generato quando la destinazione dell'attributo viene serializzata dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inizializza una nuova istanza della classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> e specifica il nome del tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Il nome del tipo XML generato dalla classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> durante la serializzazione dell'istanza della classe e riconosciuto durante la deserializzazione dell'istanza della classe.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Ottiene o imposta un valore che determina se il tipo di schema risultante è un tipo anonimo XSD.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il tipo di schema risultante è un tipo anonimo XSD. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Ottiene o imposta un valore che indica se includere il tipo nei documenti dello schema XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per includere il tipo nei documenti di schema XML; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Ottiene o imposta lo spazio dei nomi del tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type.">Lo spazio dei nomi del tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Ottiene o imposta il nome del tipo XML.</summary>
      <returns vsli:raw="The name of the XML type.">Il nome del tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">In questa classe è contenuto il mapping di un tipo in un altro.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">Nome completo del tipo, compresi lo spazio o gli spazi dei nomi e il tipo.</summary>
      <returns vsli:raw="The fully qualified type name.">Nome di tipo completo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Ottiene il nome del tipo dell'oggetto mappato.</summary>
      <returns vsli:raw="The type name of the mapped object.">Il nome del tipo dell'oggetto mappato.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Ottiene il nome dell'elemento XML dell'oggetto mappato.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">Il nome dell'elemento XML dell'oggetto mappato. Il valore predefinito è il nome della classe dell'oggetto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Ottiene lo spazio dei nomi XML dell'oggetto mappato.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">Lo spazio dei nomi XML dell'oggetto mappato. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
  </members>
</doc>