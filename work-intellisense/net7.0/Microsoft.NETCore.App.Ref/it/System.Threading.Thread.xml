<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">Incapsula uno slot di memoria per l'archiviazione di dati locali. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">Garantisce che le risorse vengano liberate e che vengano eseguite le altre operazioni di pulizia quando l'oggetto <see cref="T:System.LocalDataStoreSlot" /> viene recuperato da Garbage Collector.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Specifica lo stato dell'apartment di un <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">
        <see cref="T:System.Threading.Thread" /> creerà ed immetterà un apartment con multithreading.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">
        <see cref="T:System.Threading.Thread" /> creerà ed immetterà un apartment a thread singolo.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">La proprietà <see cref="P:System.Threading.Thread.ApartmentState" /> non è stata impostata.</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">Fornisce metodi per l'impostazione e l'acquisizione dello stack compresso sul thread corrente. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">Acquisisce lo stack compresso dal thread corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">Un oggetto <see cref="T:System.Threading.CompressedStack" />.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">Crea una copia dello stack compresso corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">Oggetto <see cref="T:System.Threading.CompressedStack" /> che rappresenta lo stack compresso corrente.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">Ottiene lo stack compresso per il thread corrente.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">Un chiamante nella catena di chiamate non dispone dell'autorizzazione all'accesso a codice non gestito.  
  
-oppure- 
Richiesta dell'oggetto <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> non riuscita.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">Oggetto <see cref="T:System.Threading.CompressedStack" /> per il thread corrente.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con le informazioni logiche sul contesto necessarie per ricreare un'istanza del contesto di esecuzione.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da completare con le informazioni di serializzazione.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che rappresenta il contesto di destinazione della serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">Esegue un metodo nello stack compresso specificato sul thread corrente.</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">Oggetto <see cref="T:System.Threading.CompressedStack" /> da impostare.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">Delegato <see cref="T:System.Threading.ContextCallback" /> che rappresenta il metodo da eseguire nel contesto di sicurezza specificato.</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">Oggetto da passare al metodo di callback.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" /> è <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Rappresenta il metodo eseguito in un oggetto <see cref="T:System.Threading.Thread" />.</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">Oggetto che contiene i dati per la routine del thread.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">Crea e controlla un thread, ne imposta le priorità e ne ottiene lo stato.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Thread" />, specificando un delegato che consente di passare un oggetto al thread quando quest'ultimo viene avviato.</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">Delegato che rappresenta i metodi da richiamare quando inizia l'esecuzione di questo thread.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Thread" />, specificando un delegato che consente di passare un oggetto al thread quando quest'ultimo viene avviato e specificando la dimensione massima dello stack per il thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegato <see cref="T:System.Threading.ParameterizedThreadStart" /> che rappresenta i metodi da richiamare quando inizia l'esecuzione di questo thread.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Dimensione massima dello stack, in byte, usata dal thread oppure 0 per usare la dimensione massima predefinita specificata nell'intestazione del file eseguibile.  
  
Importante: per il codice parzialmente attendibile, <paramref name="maxStackSize" /> viene ignorato se è maggiore delle dimensioni predefinite dello stack. Non viene generata alcuna eccezione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Thread" />.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegato <see cref="T:System.Threading.ThreadStart" /> che rappresenta i metodi da richiamare quando inizia l'esecuzione di questo thread.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="start" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.Thread" />, specificando la dimensione massima dello stack per il thread.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegato <see cref="T:System.Threading.ThreadStart" /> che rappresenta i metodi da richiamare quando inizia l'esecuzione di questo thread.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Dimensione massima dello stack, in byte, usata dal thread oppure 0 per usare la dimensione massima predefinita specificata nell'intestazione del file eseguibile.  
  
Importante: per il codice parzialmente attendibile, <paramref name="maxStackSize" /> viene ignorato se è maggiore delle dimensioni predefinite dello stack. Non viene generata alcuna eccezione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">Genera un'eccezione <see cref="T:System.Threading.ThreadAbortException" /> nel thread in cui viene richiamato, per iniziare il processo di terminazione del thread. La chiamata a questo metodo in genere termina il thread.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Il thread che si sta interrompendo è attualmente sospeso.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">Genera un'eccezione <see cref="T:System.Threading.ThreadAbortException" /> nel thread in cui viene richiamato per iniziare il processo di terminazione del thread fornendo anche informazioni sull'eccezione relative alla terminazione del thread. La chiamata a questo metodo in genere termina il thread.</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">Oggetto che contiene informazioni specifiche dell'applicazione, ad esempio lo stato, che possono essere usate dal thread interrotto.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Il thread che si sta interrompendo è attualmente sospeso.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Alloca uno slot di dati senza nome su tutti i thread. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">Slot di dati denominato allocato su tutti i thread.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Alloca uno slot di dati denominato su tutti i thread. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">Nome dello slot di dati da allocare.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">Esiste già uno slot di dati denominato con il nome specificato.</exception>
      <returns vsli:raw="The allocated named data slot on all threads.">Slot di dati denominato allocato su tutti i thread.</returns>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">Notifica a un host che l'esecuzione sta per entrare in un'area di codice in cui gli effetti di un'interruzione del thread o di un'eccezione non gestita possono rappresentare un rischio per altre attività nel dominio applicazione.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">Notifica a un host che il codice gestito sta per eseguire istruzioni che dipendono dall'identità del thread fisico corrente del sistema operativo.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">Disattiva la pulizia automatica dei Runtime Callable Wrapper (RCW) per il thread corrente.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">Notifica a un host che l'esecuzione sta per entrare in un'area di codice in cui gli effetti di un'interruzione del thread o di un'eccezione non gestita sono limitati all'attività corrente.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">Notifica a un host che il codice gestito ha terminato l'esecuzione di istruzioni che dipendono dall'identità del thread fisico corrente del sistema operativo.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">Garantisce che le risorse vengano liberate e che vengano eseguite le altre operazioni di pulizia quando l'oggetto <see cref="T:System.Threading.Thread" /> viene recuperato da Garbage Collector.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Elimina l'associazione tra un nome e uno slot per tutti i thread del processo. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">Nome dello slot di dati da liberare.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">Restituisce un valore <see cref="T:System.Threading.ApartmentState" /> che indica lo stato dell'apartment.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">Uno dei valori di <see cref="T:System.Threading.ApartmentState" /> che indica lo stato dell'apartment del thread gestito. Il valore predefinito è <see cref="F:System.Threading.ApartmentState.Unknown" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">Restituisce un oggetto <see cref="T:System.Threading.CompressedStack" /> che può essere usato per acquisire lo stack per il thread corrente.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">In tutti i casi.</exception>
      <returns>Nessuno.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId">
      <summary vsli:raw="Gets an ID used to indicate on which processor the current thread is executing.">Ottiene un ID usato per indicare il processore in cui è in esecuzione il thread corrente.</summary>
      <returns vsli:raw="An integer representing the cached processor ID.">Intero che rappresenta l'ID processore memorizzato nella cache.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Recupera il valore dallo slot specificato sul thread corrente, all'interno del dominio corrente del thread corrente. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">Oggetto <see cref="T:System.LocalDataStoreSlot" /> dal quale ottenere il valore.</param>
      <returns vsli:raw="The retrieved value.">Valore recuperato.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">Restituisce il dominio corrente in cui viene eseguito il thread corrente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">Oggetto <see cref="T:System.AppDomain" /> che rappresenta il dominio applicazione corrente del thread in esecuzione.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">Restituisce un identificatore di dominio applicazione univoco.</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">Intero con segno a 32 bit che identifica in modo univoco il dominio applicazione.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">Restituisce un codice hash per il thread corrente.</summary>
      <returns vsli:raw="An integer hash code value.">Intero del valore del codice hash.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Cerca uno slot di dati denominato. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the local data slot.">Nome dello slot di dati locale.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">Oggetto <see cref="T:System.LocalDataStoreSlot" /> allocato per il thread.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">Interrompe un thread il cui stato è <see cref="F:System.Threading.ThreadState.WaitSleepJoin" />.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">Il chiamante non ha l'oggetto <see cref="T:System.Security.Permissions.SecurityPermission" /> appropriato.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">Blocca il thread chiamante finché non termina il thread rappresentato da questa istanza, pur continuando a eseguire la distribuzione di <see langword="SendMessage" /> e COM standard.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">Il chiamante ha provato a eseguire il join di un thread che si trova nello stato <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">Il thread viene interrotto durante l'attesa.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Blocca il thread chiamante finché non termina il thread rappresentato da questa istanza o finché non trascorre l'intervallo di tempo specificato, pur continuando a eseguire la distribuzione di SendMessage e COM standard.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">Tempo di attesa espresso in millisecondi prima che il thread venga terminato.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">Il valore di <paramref name="millisecondsTimeout" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" /> in millisecondi.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">Il thread non è stato avviato.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" /> è minore di -1 (Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">Il thread è stato interrotto durante l'attesa.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> se il thread è stato terminato; <see langword="false" /> se il thread non è stato terminato dopo l'intervallo di tempo specificato dal parametro <paramref name="millisecondsTimeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Blocca il thread chiamante finché non termina il thread rappresentato da questa istanza o finché non trascorre l'intervallo di tempo specificato, pur continuando a eseguire la distribuzione di SendMessage e COM standard.</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">Oggetto <see cref="T:System.TimeSpan" /> impostato sul tempo di attesa prima che il thread venga terminato.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">Il valore di <paramref name="timeout" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" /> in millisecondi oppure è maggiore di <see cref="F:System.Int32.MaxValue" /> in millisecondi.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">Il chiamante ha provato a eseguire il join di un thread che si trova nello stato <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> se il thread è stato terminato; <see langword="false" /> se il thread non è stato terminato dopo l'intervallo di tempo specificato dal parametro <paramref name="timeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">Sincronizza l'accesso alla memoria come segue: il processore che esegue il thread corrente non può riordinare le istruzioni in modo tale che gli accessi alla memoria prima della chiamata al metodo <see cref="M:System.Threading.Thread.MemoryBarrier" /> vengano eseguiti dopo quelli successivi alla chiamata al metodo <see cref="M:System.Threading.Thread.MemoryBarrier" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">Annulla il metodo <see cref="M:System.Threading.Thread.Abort(System.Object)" /> richiesto per il thread corrente.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" /> non è stato richiamato sul thread corrente.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">Il chiamante non ha l'autorizzazione di sicurezza richiesta per il thread corrente.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">Riprende un thread che era stato sospeso.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">Il thread non è stato avviato, è inattivo o non è in stato sospeso.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">Il chiamante non ha l'oggetto <see cref="T:System.Security.Permissions.SecurityPermission" /> appropriato.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Imposta lo stato dell'apartment di un thread prima che venga avviato.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nuovo stato dell'apartment.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi in macOS e Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> non è uno stato di apartment valido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Il thread è già stato avviato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">Lo stato di apartment è già stato inizializzato.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">Applica un oggetto <see cref="T:System.Threading.CompressedStack" /> acquisito al thread corrente.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">Oggetto <see cref="T:System.Threading.CompressedStack" /> da applicare al thread corrente.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">In tutti i casi.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Imposta i dati nello slot specificato sul thread in esecuzione per il dominio corrente di tale thread. Per ottenere prestazioni migliori, usare i campi contrassegnati con l'attributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">Oggetto <see cref="T:System.LocalDataStoreSlot" /> nel quale impostare il valore.</param>
      <param name="data" vsli:raw="The value to be set.">Valore da impostare.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">Sospende il thread corrente per il numero specificato di millisecondi.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Numero di millisecondi per cui sospendere il thread. Se il valore dell'argomento <paramref name="millisecondsTimeout" /> è zero, il thread cede il periodo di tempo rimanente a un thread di uguale priorità pronto per l'esecuzione. Se non sono presenti altri thread di uguale priorità pronti per l'esecuzione, l'esecuzione del thread corrente non viene sospesa.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">Il valore di timeout è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">Sospende il thread corrente per il periodo di tempo specificato.</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Periodo di tempo per cui sospendere il thread. Se il valore dell'argomento <paramref name="timeout" /> è <see cref="F:System.TimeSpan.Zero" />, il thread cede il periodo di tempo rimanente a un thread di uguale priorità pronto per l'esecuzione. Se non sono presenti altri thread di uguale priorità pronti per l'esecuzione, l'esecuzione del thread corrente non viene sospesa.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">Il valore di <paramref name="timeout" /> è negativo e non è uguale a <see cref="F:System.Threading.Timeout.Infinite" /> in millisecondi oppure è maggiore di <see cref="F:System.Int32.MaxValue" /> in millisecondi.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">Determina che un thread rimanga in attesa il numero di volte definito dal parametro <paramref name="iterations" />.</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">Intero con segno a 32 bit che definisce la durata dell'attesa di un thread.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">Determina il cambiamento da parte del sistema operativo dello stato dell'istanza corrente in <see cref="F:System.Threading.ThreadState.Running" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Il thread è già stato avviato.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">La memoria disponibile non è sufficiente per avviare il thread.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">Determina il cambiamento da parte del sistema operativo dello stato dell'istanza corrente in <see cref="F:System.Threading.ThreadState.Running" /> e, facoltativamente, fornisce un oggetto contenente i dati che devono essere usati dal metodo eseguito dal thread.</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">Oggetto contenente i dati che devono essere usati dal metodo eseguito dal thread.</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Il thread è già stato avviato.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">La memoria disponibile non è sufficiente per avviare il thread.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">Questo thread è stato creato usando un delegato di <see cref="T:System.Threading.ThreadStart" /> invece di uno di <see cref="T:System.Threading.ParameterizedThreadStart" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">Sospende il thread o, se il thread è già sospeso, non avrà alcun effetto.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">Il thread non è stato avviato o è inattivo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">Il chiamante non ha l'oggetto <see cref="T:System.Security.Permissions.SecurityPermission" /> appropriato.</exception>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Imposta lo stato dell'apartment di un thread prima che venga avviato.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nuovo stato dell'apartment.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET 5.0 e versioni successive e .NET Core: in tutti i casi in macOS e Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> non è uno stato di apartment valido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">Il thread è stato avviato e completato o la chiamata non viene eseguita dal contesto del thread mentre il thread è in esecuzione.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è impostato lo stato dell'apartment; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Legge il valore di un campo. Tale valore è l'ultimo che è stato scritto da un processore qualsiasi in un computer, indipendentemente dal numero di processori o dallo stato della cache del processore.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo da leggere.</param>
      <returns vsli:raw="The value that was read.">Ultimo valore scritto nel campo da un processore.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Scrive immediatamente un valore in un campo, in modo che tale valore possa essere visibile a tutti i processori nel computer.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo in cui deve essere scritto il valore.</param>
      <param name="value" vsli:raw="The value to be written.">Valore da scrivere.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">Determina che il thread chiamante ceda l'esecuzione a un altro thread pronto per l'esecuzione sul processore corrente. Il sistema operativo seleziona il thread a cui cedere l'esecuzione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il sistema operativo ha passato l'esecuzione a un altro thread; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">Ottiene o imposta lo stato dell'apartment del thread.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">Viene effettuato un tentativo di impostare questa proprietà su uno stato che non è uno stato dell'apartment valido (uno stato diverso da apartment a thread singolo (<see langword="STA" />) o apartment con multithreading (<see langword="MTA" />)).</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">Uno dei valori di <see cref="T:System.Threading.ApartmentState" />. Il valore iniziale è <see langword="Unknown" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">Ottiene o imposta le impostazioni cultura per il thread corrente.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La proprietà è impostata su <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Solo .NET Core: la lettura o la scrittura delle impostazioni cultura di un thread da un altro thread non sono supportate.</exception>
      <returns vsli:raw="An object that represents the culture for the current thread.">Oggetto che rappresenta le impostazioni cultura per il thread corrente.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">Ottiene o imposta l'entità corrente del thread (per la sicurezza basata sui ruoli).</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">Il chiamante non ha l'autorizzazione necessaria per impostare l'entità.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">Valore <see cref="T:System.Security.Principal.IPrincipal" /> che rappresenta il contesto di sicurezza.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">Ottiene il thread attualmente in esecuzione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">Oggetto <see cref="T:System.Threading.Thread" /> che rappresenta il thread attualmente in esecuzione.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">Ottiene o imposta le impostazioni cultura correnti usate da Gestione risorse per cercare le risorse specifiche delle impostazioni cultura in fase di esecuzione.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La proprietà è impostata su <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">La proprietà è impostata su un nome delle impostazioni cultura che non può essere usato per individuare un file di risorse. I nomi dei file di risorsa devono includere solo lettere, numeri, trattini o caratteri di sottolineatura.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Solo .NET Core: la lettura o la scrittura delle impostazioni cultura di un thread da un altro thread non sono supportate.</exception>
      <returns vsli:raw="An object that represents the current culture.">Oggetto che rappresenta le impostazioni cultura correnti.</returns>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">Ottiene un oggetto <see cref="T:System.Threading.ExecutionContext" /> contenente informazioni sui diversi contesti del thread corrente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">Oggetto <see cref="T:System.Threading.ExecutionContext" /> che consolida le informazioni di contesto per il thread corrente.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">Ottiene un valore che indica lo stato di esecuzione del thread corrente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Viene restituito <see langword="true" /> se il thread è stato avviato, ma non è terminato normalmente o è stato interrotto. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">Ottiene o imposta un valore che indica se il thread viene eseguito in background.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">Thread inattivo.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il thread viene o verrà eseguito in background; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">Ottiene un valore che indica se un thread appartiene o meno al pool di thread gestiti.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il thread appartiene al pool di thread gestiti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">Ottiene un identificatore univoco per il thread gestito corrente.</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">Intero che rappresenta un identificatore univoco per il thread gestito.</returns>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">Ottiene o imposta il nome del thread.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">È stata richiesta un'operazOttiene o imposta il descrittore di sicurezza per questa voce.ione set, ma la proprietà <see langword="Name" /> è già stata impostata.</exception>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">Stringa che contiene il nome del thread oppure <see langword="null" /> se non è stato impostato alcun nome.</returns>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">Ottiene o imposta un valore che indica la priorità di pianificazione di un thread.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">Il thread ha raggiunto uno stato finale, ad esempio <see cref="F:System.Threading.ThreadState.Aborted" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">Il valore specificato per un'operazione set non è un valore <see cref="T:System.Threading.ThreadPriority" /> valido.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">Uno dei valori di <see cref="T:System.Threading.ThreadPriority" />. Il valore predefinito è <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">Ottiene un valore contenente gli stati del thread corrente.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">Uno dei valori di <see cref="T:System.Threading.ThreadState" /> che indica lo stato del thread corrente. Il valore iniziale è <see cref="F:System.Threading.ThreadState.Unstarted" />.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">Eccezione generata quando viene eseguita una chiamata al metodo <see cref="M:System.Threading.Thread.Abort(System.Object)" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">Viene fornito un oggetto che contiene informazioni specifiche dell'applicazione relative all'interruzione del thread.</summary>
      <returns vsli:raw="An object containing application-specific information.">Oggetto contenente informazioni specifiche dell'applicazione.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Windows.Forms.Application.ThreadException" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> generata.</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">Ottiene l'oggetto <see cref="T:System.Exception" /> che si è verificato.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> generata.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.Windows.Forms.Application.ThreadException" /> di un oggetto <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Threading.ThreadExceptionEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">Eccezione generata quando un <see cref="T:System.Threading.Thread" /> viene interrotto mentre si trova nello stato di attesa.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadInterruptedException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadInterruptedException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadInterruptedException" /> con un messaggio di errore specificato.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadInterruptedException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Consente di specificare la priorità di pianificazione di un <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> può essere pianificato dopo i thread la cui priorità è <see langword="Highest" /> e prima di quelli la cui priorità è <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> può essere pianificato dopo i thread la cui priorità è <see langword="Normal" /> e prima di quelli la cui priorità è <see langword="Lowest" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> può essere pianificato prima dei thread con una qualsiasi priorità.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> può essere pianificato dopo i thread con una qualsiasi priorità.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">
        <see cref="T:System.Threading.Thread" /> può essere pianificato dopo i thread la cui priorità è <see langword="AboveNormal" /> e prima di quelli la cui priorità è <see langword="BelowNormal" />. I thread presentano la priorità <see langword="Normal" /> per impostazione predefinita.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Rappresenta il metodo eseguito in un oggetto <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">Eccezione generata quando si verifica un errore in un thread gestito dopo l'avvio del thread del sistema operativo sottostante, ma prima che il thread sia pronto per l'esecuzione di codice utente.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Vengono specificati gli stati di esecuzione di un <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">Lo stato del thread include <see cref="F:System.Threading.ThreadState.AbortRequested" /> e il thread è ora inattivo, ma il relativo stato non è ancora stato modificato in <see cref="F:System.Threading.ThreadState.Stopped" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">Il metodo <see cref="M:System.Threading.Thread.Abort(System.Object)" /> è stato richiamato dal thread ma il thread non ha ancora ricevuto l'oggetto <see cref="T:System.Threading.ThreadAbortException" /> sospeso che tenterà di sottoporlo al processo di terminazione.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">Il thread sarà eseguito come un thread in background, invece che come un thread in primo piano. Questo stato viene controllato dall'impostazione della proprietà <see cref="P:System.Threading.Thread.IsBackground" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">Il thread è stato avviato e non è ancora stato interrotto.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">Il thread è stato interrotto.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">Il thread riceverà richiesta di interruzione. Solo per uso interno.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">Il thread è stato sospeso.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">Il thread riceverà richiesta di sospensione.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">Il metodo <see cref="M:System.Threading.Thread.Start" /> non è stato richiamato dal thread.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">Il thread è bloccato. Potrebbe essere il risultato della chiamata al metodo <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> o <see cref="M:System.Threading.Thread.Join" />, della richiesta di un blocco, ad esempio tramite la chiamata a <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> o <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />, oppure dell'attesa di un oggetto di sincronizzazione thread, ad esempio <see cref="T:System.Threading.ManualResetEvent" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">Eccezione generata quando un <see cref="T:System.Threading.Thread" /> si trova in un <see cref="P:System.Threading.Thread.ThreadState" /> non valido per la chiamata al metodo.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadStateException" /> con le proprietà predefinite.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadStateException" /> con dati serializzati.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadStateException" /> con un messaggio di errore specificato.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inizializza una nuova istanza della classe <see cref="T:System.Threading.ThreadStateException" /> con un messaggio di errore specificato e un riferimento all'eccezione interna che è la causa dell'eccezione corrente.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Eccezione che ha determinato l'eccezione corrente. Se il parametro <paramref name="innerException" /> non è <see langword="null" />, l'eccezione corrente viene generata in un blocco <see langword="catch" /> in cui viene gestita l'eccezione interna.</param>
    </member>
  </members>
</doc>