<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Queryable</name>
  </assembly>
  <members>
    <member name="T:System.Linq.EnumerableExecutor">
      <summary vsli:raw="Represents an expression tree and provides functionality to execute the expression tree after rewriting it.">代表運算式樹狀，並提供在重寫後執行運算式樹狀的功能。</summary>
    </member>
    <member name="T:System.Linq.EnumerableExecutor`1">
      <summary vsli:raw="Represents an expression tree and provides functionality to execute the expression tree after rewriting it.">代表運算式樹狀，並提供在重寫後執行運算式樹狀的功能。</summary>
      <typeparam name="T" vsli:raw="The data type of the value that results from executing the expression tree.">執行運算式樹狀架構所產生之值的資料型別。</typeparam>
    </member>
    <member name="M:System.Linq.EnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableExecutor`1&quot; /&gt; class.">初始化 <see cref="T:System.Linq.EnumerableExecutor`1" /> 類別的新執行個體。</summary>
      <param name="expression" vsli:raw="An expression tree to associate with the new instance.">與新執行個體關聯的運算式樹狀架構。</param>
    </member>
    <member name="T:System.Linq.EnumerableQuery">
      <summary vsli:raw="Represents an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; as an &lt;see cref=&quot;T:System.Linq.EnumerableQuery&quot; /&gt; data source.">表示做為 <see cref="T:System.Collections.IEnumerable" /> 資料來源的 <see cref="T:System.Linq.EnumerableQuery" />。</summary>
    </member>
    <member name="T:System.Linq.EnumerableQuery`1">
      <summary vsli:raw="Represents an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection as an &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; data source.">以 <see cref="T:System.Linq.IQueryable`1" /> 資料來源表示 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</summary>
      <typeparam name="T" vsli:raw="The type of the data in the collection.">集合中的資料類型。</typeparam>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; class and associates it with an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection.">初始化 <see cref="T:System.Linq.EnumerableQuery`1" /> 類別的新執行個體，並使其與 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合產生關聯。</summary>
      <param name="enumerable" vsli:raw="A collection to associate with the new instance.">與新執行個體關聯的集合。</param>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; class and associates the instance with an expression tree.">初始化 <see cref="T:System.Linq.EnumerableQuery`1" /> 類別的新執行個體，並使其與運算式樹狀架構產生關聯。</summary>
      <param name="expression" vsli:raw="An expression tree to associate with the new instance.">與新執行個體關聯的運算式樹狀架構。</param>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the associated &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; data source and executing it.">傳回可以逐一查看關聯之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合的列舉值，或者如果為 null，則逐一查看重新寫入運算式樹狀架構所產生的集合，做為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 資料來源上的查詢並且執行。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the associated data source.">可以用來逐一查看關聯之資料來源的列舉值。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the associated &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; data source and executing it.">傳回可以逐一查看關聯之 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合的列舉值，或者如果為 null，則逐一查看重新寫入運算式樹狀架構所產生的集合，做為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 資料來源上的查詢並且執行。</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the associated data source.">可以用來逐一查看關聯之資料來源的列舉值。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; object and associates it with a specified expression tree that represents an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; collection of data.">建構新的 <see cref="T:System.Linq.EnumerableQuery`1" /> 物件，並將其與指定的運算式樹狀架構 (表示資料的 <see cref="T:System.Linq.IQueryable" /> 集合) 建立關聯。</summary>
      <param name="expression" vsli:raw="An expression tree that represents an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; collection of data.">表示資料之 <see cref="T:System.Linq.IQueryable" /> 集合的運算式樹狀架構。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; object that is associated with &lt;paramref name=&quot;expression&quot; /&gt;.">與 <paramref name="expression" /> 相關聯的 <see cref="T:System.Linq.EnumerableQuery`1" /> 物件。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``2(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Linq.EnumerableQuery`1&quot; /&gt; object and associates it with a specified expression tree that represents an &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; collection of data.">建構新的 <see cref="T:System.Linq.EnumerableQuery`1" /> 物件，並將其與指定的運算式樹狀架構 (表示資料的 <see cref="T:System.Linq.IQueryable`1" /> 集合) 建立關聯。</summary>
      <param name="expression" vsli:raw="An expression tree to execute.">要執行的運算式樹狀架構。</param>
      <typeparam name="S" vsli:raw="The type of the data in the collection that &lt;paramref name=&quot;expression&quot; /&gt; represents.">該 <paramref name="expression" /> 所代表之集合中的資料型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements of the &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that is returned." />
      <returns vsli:raw="An EnumerableQuery object that is associated with &lt;paramref name=&quot;expression&quot; /&gt;.">表示與 <paramref name="expression" /> 關聯的 EnumerableQuery 物件。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Executes an expression after rewriting it to call &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt; methods instead of &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods on any enumerable data sources that cannot be queried by &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods.">在無法以 <see cref="T:System.Linq.Enumerable" /> 方法查詢的可列舉資料來源上，將重新寫入運算式以呼叫 <see cref="T:System.Linq.Queryable" /> 方法後，執行運算式，而不使用 <see cref="T:System.Linq.Queryable" /> 方法。</summary>
      <param name="expression" vsli:raw="An expression tree to execute.">要執行的運算式樹狀架構。</param>
      <returns vsli:raw="The value that results from executing &lt;paramref name=&quot;expression&quot; /&gt;.">執行 <paramref name="expression" /> 所產生的值。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``2(System.Linq.Expressions.Expression)">
      <summary vsli:raw="Executes an expression after rewriting it to call &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt; methods instead of &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods on any enumerable data sources that cannot be queried by &lt;see cref=&quot;T:System.Linq.Queryable&quot; /&gt; methods.">在無法以 <see cref="T:System.Linq.Enumerable" /> 方法查詢的可列舉資料來源上，將重新寫入運算式以呼叫 <see cref="T:System.Linq.Queryable" /> 方法後，執行運算式，而不使用 <see cref="T:System.Linq.Queryable" /> 方法。</summary>
      <param name="expression" vsli:raw="An expression tree to execute.">要執行的運算式樹狀架構。</param>
      <typeparam name="S" vsli:raw="The type of the data in the collection that &lt;paramref name=&quot;expression&quot; /&gt; represents.">該 <paramref name="expression" /> 所代表之集合中的資料型別。</typeparam>
      <typeparam name="TElement" vsli:raw="" />
      <returns vsli:raw="The value that results from executing &lt;paramref name=&quot;expression&quot; /&gt;.">執行 <paramref name="expression" /> 所產生的值。</returns>
    </member>
    <member name="M:System.Linq.EnumerableQuery`1.ToString">
      <summary vsli:raw="Returns a textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.">傳回可列舉集合的文字表示，如果為 null，則傳回與該執行個體關聯的運算式樹狀架構的文字表示。</summary>
      <returns vsli:raw="A textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.">可列舉集合的文字表示，如果為 null，則為與該執行個體關聯的運算式樹狀架構的文字表示。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType">
      <summary vsli:raw="Gets the type of the data in the collection that this instance represents.">取得此執行個體所代表之集合中的資料型別。</summary>
      <returns vsli:raw="The type of the data in the collection that this instance represents.">此執行個體所代表之集合中的資料型別。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression">
      <summary vsli:raw="Gets the expression tree that is associated with or that represents this instance.">取得與此執行個體關聯的或代表此執行個體的運算式樹狀架構。</summary>
      <returns vsli:raw="The expression tree that is associated with or that represents this instance.">與此執行個體關聯的或代表此執行個體的運算式樹狀架構。</returns>
    </member>
    <member name="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider">
      <summary vsli:raw="Gets the query provider that is associated with this instance.">取得與這個執行個體關聯的查詢提供者。</summary>
      <returns vsli:raw="The query provider that is associated with this instance.">與這個執行個體關聯的查詢提供者。</returns>
    </member>
    <member name="T:System.Linq.Queryable">
      <summary vsli:raw="Provides a set of &lt;see langword=&quot;static&quot; /&gt; (&lt;see langword=&quot;Shared&quot; /&gt; in Visual Basic) methods for querying data structures that implement &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">提供一組 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />) 方法，用於查詢實作 <see cref="T:System.Linq.IQueryable`1" /> 的資料結構。</summary>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
      <summary vsli:raw="Applies an accumulator function over a sequence.">將累加函式套用到序列上。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="func" vsli:raw="An accumulator function to apply to each element.">要套用到每個項目的累加函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="func" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The final accumulator value.">最終累積值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">將累加函式套用到序列上。 使用指定的初始值做為初始累加值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">初始累積值。</param>
      <param name="func" vsli:raw="An accumulator function to invoke on each element.">要在每個項目上叫用的累加函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="func" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The final accumulator value.">最終累積值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
      <summary vsli:raw="Applies an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">將累加函式套用到序列上。 使用指定的值做為初始累加值，並使用指定的函式來選取結果值。</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">所要彙總的序列。</param>
      <param name="seed" vsli:raw="The initial accumulator value.">初始累積值。</param>
      <param name="func" vsli:raw="An accumulator function to invoke on each element.">要在每個項目上叫用的累加函式。</param>
      <param name="selector" vsli:raw="A function to transform the final accumulator value into the result value.">用來將最終累加值轉換成結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">累積值的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">結果值的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="func" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The transformed final accumulator value.">轉換後的最終累加值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Determines whether all the elements of a sequence satisfy a condition.">判斷序列的所有項目是否全都符合條件。</summary>
      <param name="source" vsli:raw="A sequence whose elements to test for a condition.">要測試其項目是否符合條件的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列的每個項目都通過以指定之述詞 (Predicate) 進行的測試，或序列是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Determines whether a sequence contains any elements.">判斷序列是否包含任何項目。</summary>
      <param name="source" vsli:raw="A sequence to check for being empty.">要檢查是否為空白的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列包含任何項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Determines whether any element of a sequence satisfies a condition.">判斷序列的任何項目是否符合條件。</summary>
      <param name="source" vsli:raw="A sequence whose elements to test for a condition.">要測試其項目是否符合條件的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果來源序列中的任何項目通過以指定之述詞進行的測試，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Returns a new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; plus the specified &lt;paramref name=&quot;element&quot; /&gt; appended at the end.">傳回新的可查詢序列，包含來自 <paramref name="source" /> 的元素，並在結尾加上指定的 <paramref name="element" />。</summary>
      <param name="source" vsli:raw="A queryable sequence.">可查詢的序列。</param>
      <param name="element" vsli:raw="An element of type &lt;typeparamref name=&quot;TSource&quot; /&gt; to append to &lt;paramref name=&quot;source&quot; /&gt;.">要在 <paramref name="source" /> 後面加上的 <typeparamref name="TSource" /> 類型元素。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence.">可查詢序列中元素的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; plus the specified &lt;paramref name=&quot;element&quot; /&gt; appended at the end.">新的可查詢序列，包含來自 <paramref name="source" /> 的元素，並在結尾加上指定的 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; to an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt;.">將 <see cref="T:System.Collections.IEnumerable" /> 轉換成 <see cref="T:System.Linq.IQueryable" />。</summary>
      <param name="source" vsli:raw="A sequence to convert.">所要轉換的序列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not implement &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; for some &lt;paramref name=&quot;T&quot; /&gt;.">
        <paramref name="source" /> 不會針對某些 <paramref name="T" /> 實作 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; that represents the input sequence.">代表輸入序列的 <see cref="T:System.Linq.IQueryable" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Converts a generic &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">將泛型 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 轉換成泛型 <see cref="T:System.Linq.IQueryable`1" />。</summary>
      <param name="source" vsli:raw="A sequence to convert.">所要轉換的序列。</param>
      <typeparam name="TElement" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that represents the input sequence.">代表輸入序列的 <see cref="T:System.Linq.IQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">計算 <see cref="T:System.Decimal" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">要計算平均值的 <see cref="T:System.Decimal" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">計算 <see cref="T:System.Double" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">要計算平均值的 <see cref="T:System.Double" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">計算 <see cref="T:System.Int32" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">要計算平均值的 <see cref="T:System.Int32" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">計算 <see cref="T:System.Int64" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">要計算平均值的 <see cref="T:System.Int64" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Decimal" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the average of.">要計算其平均值的可為 Null 之 <see cref="T:System.Decimal" /> 值的序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值，或者，如果來源序列是空的或只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Double" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the average of.">要計算其平均值的可為 Null 之 <see cref="T:System.Double" /> 值的序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值，或者，如果來源序列是空的或只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Int32" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the average of.">要計算其平均值的可為 Null 之 <see cref="T:System.Int32" /> 值的序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值，或者，如果來源序列是空的或只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Int64" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the average of.">要計算其平均值的可為 Null 之 <see cref="T:System.Int64" /> 值的序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值，或者，如果來源序列是空的或只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Single" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">要計算其平均值的可為 Null 之 <see cref="T:System.Single" /> 值的序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the source sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值，或者，如果來源序列是空的或只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">計算 <see cref="T:System.Single" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the average of.">要計算平均值的 <see cref="T:System.Single" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Decimal" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">用來計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Double" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Int32" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Int64" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Decimal" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值；如果 <paramref name="source" /> 序列是空的或是只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Double" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值；如果 <paramref name="source" /> 序列是空的或是只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Int32" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值；如果 <paramref name="source" /> 序列是空的或是只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Int64" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值；如果 <paramref name="source" /> 序列是空的或是只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary vsli:raw="Computes the average of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Single" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The average of the sequence of values, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;source&quot; /&gt; sequence is empty or contains only &lt;see langword=&quot;null&quot; /&gt; values.">值序列的平均值；如果 <paramref name="source" /> 序列是空的或是只包含 <see langword="null" /> 值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary vsli:raw="Computes the average of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Single" /> 值序列的平均值。</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the average of.">要計算平均值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> 沒有包含任何項目。</exception>
      <returns vsli:raw="The average of the sequence of values.">值序列的平均。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; to the specified type.">將 <see cref="T:System.Linq.IQueryable" /> 的項目轉換為指定的型別。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; that contains the elements to be converted.">包含要轉換之項目的 <see cref="T:System.Linq.IQueryable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">要將 <paramref name="source" /> 之項目轉換成的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">無法將序列中的項目轉換為型別 <paramref name="TResult" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Linq.IQueryable`1" />，包含已轉換成指定之型別的每個來源序列項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Concatenates two sequences.">串連兩個序列。</summary>
      <param name="source1" vsli:raw="The first sequence to concatenate.">要串連的第一個序列。</param>
      <param name="source2" vsli:raw="The sequence to concatenate to the first sequence.">要串連到第一個序列的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the concatenated elements of the two input sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含兩個輸入序列的串連項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using the default equality comparer.">使用預設的相等比較子 (Comparer) 來判斷序列是否包含指定的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; in which to locate &lt;paramref name=&quot;item&quot; /&gt;.">要在其中尋找 <paramref name="item" /> 的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="item" vsli:raw="The object to locate in the sequence.">要在序列中尋找的物件。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the input sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果輸入序列包含具有指定值的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來判斷序列是否包含指定的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; in which to locate &lt;paramref name=&quot;item&quot; /&gt;.">要在其中尋找 <paramref name="item" /> 的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="item" vsli:raw="The object to locate in the sequence.">要在序列中尋找的物件。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the input sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果輸入序列包含具有指定值的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the number of elements in a sequence.">傳回序列中的項目數。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">包含要計算之項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 中的項目數目大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The number of elements in the input sequence.">輸入序列中的項目數目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the number of elements in the specified sequence that satisfies a condition.">傳回指定之序列中符合條件的項目數目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">包含要計算之項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="source" /> 中的項目數目大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The number of elements in the sequence that satisfies the condition in the predicate function.">序列中符合述詞函式之條件的項目數目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.">傳回指定之序列的項目；如果序列是空的，則傳回單一集合中型別參數的預設值。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a default value for if empty.">在空白時，要傳回預設值的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains &lt;see langword=&quot;default&quot; /&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="TSource" /> 是空的，則為包含 <see langword="default" />(<paramref name="source" />) 的 <see cref="T:System.Linq.IQueryable`1" />，否則為 <paramref name="source" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.">傳回指定之序列的項目；如果序列是空的，則傳回單一集合中型別參數的預設值。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the specified value for if empty.">在空白時，要傳回指定之值的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">在序列空白時所要傳回的值。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains &lt;paramref name=&quot;defaultValue&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="defaultValue" /> 是空的，則為包含 <paramref name="source" /> 的 <see cref="T:System.Linq.IQueryable`1" />，否則為 <paramref name="source" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using the default equality comparer to compare values.">使用預設的相等比較子來比較值，以便從序列傳回獨特的項目。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to remove duplicates from.">要從中移除重複項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains distinct elements from &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含來自 <paramref name="source" /> 的獨特項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較值，以便從序列傳回獨特的項目。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to remove duplicates from.">要從中移除重複項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains distinct elements from &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含來自 <paramref name="source" /> 的獨特項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence.">傳回位於序列中指定索引處的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要擷取的項目之以零為起始索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小於零。</exception>
      <returns vsli:raw="The element at the specified position in &lt;paramref name=&quot;source&quot; /&gt;.">位於 <paramref name="source" /> 中指定之位置的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a sequence or a default value if the index is out of range.">傳回位於序列中指定索引處的元素；如果索引超出範圍，則傳回預設值。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">要擷取的項目之以零為起始索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;index&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;source&quot; /&gt;; otherwise, the element at the specified position in &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="index" /> 超出 <paramref name="source" /> 的範圍，則為 <c>default</c>(<paramref name="TSource" />)；否則為位於 <paramref name="source" /> 中指定索引處的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the default equality comparer to compare values.">使用預設相等比較子來比較值，以便產生兩個序列的差異。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;source2&quot; /&gt; will be returned.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目若未同時存在 <paramref name="source2" /> 中，便會傳回這些項目。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will not appear in the returned sequence.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，其項目若同時出現在第一個序列中，則不會出現在傳回的序列中。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set difference of the two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含兩個序列的差異。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較值，以便產生兩個序列的差異。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements that are not also in &lt;paramref name=&quot;source2&quot; /&gt; will be returned.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目若未同時存在 <paramref name="source2" /> 中，便會傳回這些項目。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements that also occur in the first sequence will not appear in the returned sequence.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，其項目若同時出現在第一個序列中，則不會出現在傳回的序列中。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set difference of the two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含兩個序列的差異。</returns>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the first element of a sequence.">傳回序列的第一個項目。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the first element of.">要傳回第一個項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">來源序列為空。</exception>
      <returns vsli:raw="The first element in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 中的第一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the first element of a sequence that satisfies a specified condition.">傳回序列中符合指定之條件的第一個項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">沒有任何項目符合 <paramref name="predicate" /> 的條件。  
  
-或- 
來源序列為空。</exception>
      <returns vsli:raw="The first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test in &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中通過 <paramref name="predicate" /> 之測試的第一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the first element of a sequence, or a default value if the sequence contains no elements.">傳回序列的第一個元素；如果序列中沒有包含任何元素，則傳回預設值。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the first element of.">要傳回第一個項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 是空的，則為 <c>default</c>(<paramref name="TSource" />)；否則為 <paramref name="source" /> 中的第一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.">傳回序列中符合指定之條件的第一個項目；如果找不到這類項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">如果 <paramref name="source" /> 是空的，或是沒有任何項目通過 <paramref name="predicate" /> 所指定的測試，則為 <c>default</c>(<paramref name="TSource" />)；否則為 <paramref name="source" /> 中通過 <paramref name="predicate" /> 指定之測試的第一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function.">依據指定的索引鍵選擇器函式來群組序列的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; object contains a sequence of objects and a key.">C# 中的 <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> 或 Visual Basic 中的 <c>IQueryable(Of IGrouping(Of TKey, TSource))</c>，其中每個 <see cref="T:System.Linq.IGrouping`2" /> 物件都包含一序列的物件和一個索引鍵。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.">依據指定的索引鍵選取器函式來群組序列的項目，並使用指定的比較子來比較索引鍵。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TSource&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TSource))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects and a key.">C# 中的 <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> 或 Visual Basic 中的 <c>IQueryable(Of IGrouping(Of TKey, TSource))</c>，其中每個 <see cref="T:System.Linq.IGrouping`2" /> 都包含一序列的物件和一個索引鍵。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">依據指定的索引鍵選取器函式來群組序列的項目，並使用指定的函式來投影每個群組的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用來將每個來源項目對應至 <see cref="T:System.Linq.IGrouping`2" /> 之項目的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">每個 <see cref="T:System.Linq.IGrouping`2" /> 中的項目型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="elementSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# 中的 <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> 或 Visual Basic 中的 <c>IQueryable(Of IGrouping(Of TKey, TElement))</c>，其中每個 <see cref="T:System.Linq.IGrouping`2" /> 都包含一連串 <paramref name="TElement" /> 類型的物件和一個索引鍵。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence and projects the elements for each group by using a specified function. Key values are compared by using a specified comparer.">使用指定的函式來群組序列的項目並投影每個群組的項目。 索引鍵值是使用指定的比較子來進行比較。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用來將每個來源項目對應至 <see cref="T:System.Linq.IGrouping`2" /> 之項目的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">每個 <see cref="T:System.Linq.IGrouping`2" /> 中的項目型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;IQueryable&amp;lt;IGrouping&amp;lt;TKey, TElement&amp;gt;&amp;gt;&lt;/c&gt; in C# or &lt;c&gt;IQueryable(Of IGrouping(Of TKey, TElement))&lt;/c&gt; in Visual Basic where each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt; contains a sequence of objects of type &lt;paramref name=&quot;TElement&quot; /&gt; and a key.">C# 中的 <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> 或 Visual Basic 中的 <c>IQueryable(Of IGrouping(Of TKey, TElement))</c>，其中每個 <see cref="T:System.Linq.IGrouping`2" /> 都包含一連串 <paramref name="TElement" /> 類型的物件和一個索引鍵。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">依據指定的索引鍵選取器函式來群組序列的項目，並從每個群組及其索引鍵建立結果值。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <c>T:System.Linq.IQueryable`1</c>，其具有 <paramref name="TResult" /> 的型別引數，而且其中每個項目都代表群組及其索引鍵的投影。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Keys are compared by using a specified comparer.">依據指定的索引鍵選取器函式來群組序列的項目，並從每個群組及其索引鍵建立結果值。 索引鍵是使用指定的比較子來進行比較。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="resultSelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <c>T:System.Linq.IQueryable`1</c>，其具有 <paramref name="TResult" /> 的型別引數，而且其中每個項目都代表群組及其索引鍵的投影。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">依據指定的索引鍵選取器函式來群組序列的項目，並從每個群組及其索引鍵建立結果值。 每個群組的項目都是利用指定的函式進行投影。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用來將每個來源項目對應至 <see cref="T:System.Linq.IGrouping`2" /> 之項目的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">每個 <see cref="T:System.Linq.IGrouping`2" /> 中的項目型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <c>T:System.Linq.IQueryable`1</c>，其具有 <paramref name="TResult" /> 的型別引數，而且其中每個項目都代表群組及其索引鍵的投影。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.">依據指定的索引鍵選取器函式來群組序列的項目，並從每個群組及其索引鍵建立結果值。 索引鍵是使用指定的比較子來進行比較，而每個群組的項目則都是利用指定的函式進行投影。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to group.">要群組其項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">用來擷取各項目之索引鍵的函式。</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">用來將每個來源項目對應至 <see cref="T:System.Linq.IGrouping`2" /> 之項目的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">用來從各個群組建立結果值的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented in &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 中表示之函式所傳回索引鍵的型別。</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">每個 <see cref="T:System.Linq.IGrouping`2" /> 中的項目型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">
        <paramref name="resultSelector" /> 所傳回之結果值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" />、<paramref name="elementSelector" />、<paramref name="resultSelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;c&gt;T:System.Linq.IQueryable`1&lt;/c&gt; that has a type argument of &lt;paramref name=&quot;TResult&quot; /&gt; and where each element represents a projection over a group and its key.">
        <c>T:System.Linq.IQueryable`1</c>，其具有 <paramref name="TResult" /> 的型別引數，而且其中每個項目都代表群組及其索引鍵的投影。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
      <summary vsli:raw="Correlates the elements of two sequences based on key equality and groups the results. The default equality comparer is used to compare keys.">根據索引鍵相等與否，將兩個序列的項目相互關聯，並群組產生的結果。 預設的相等比較子是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing a grouped join on two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含透過對兩個序列執行群組聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">根據索引鍵相等與否，將兩個序列的項目相互關聯，並群組產生的結果。 指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">函式，用來從第一個序列的項目以及第二個序列的相符項目集合建立結果項目。</param>
      <param name="comparer" vsli:raw="A comparer to hash and compare keys.">用來雜湊及比較索引鍵的比較子。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing a grouped join on two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含透過對兩個序列執行群組聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the default equality comparer to compare values.">使用預設相等比較子來比較值，以便產生兩個序列的交集。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;source2&quot; /&gt; are returned.">傳回其獨特項目同時出現在 <paramref name="source2" /> 中的序列。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements that also appear in the first sequence are returned.">傳回其獨特項目同時出現在第一個序列中的序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A sequence that contains the set intersection of the two sequences.">包含兩個序列之交集的序列。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較值，以便產生兩個序列的交集。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose distinct elements that also appear in &lt;paramref name=&quot;source2&quot; /&gt; are returned.">傳回其獨特項目同時出現在 <paramref name="source2" /> 中的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose distinct elements that also appear in the first sequence are returned.">傳回其獨特項目同時出現在第一個序列中的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the set intersection of the two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含兩個序列的交集。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">根據相符索引鍵，將兩個序列的項目相互關聯。 預設的相等比較子是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用來從兩個相符項目建立結果項目的函式。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing an inner join on two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其具有透過對兩個序列執行內部聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">根據相符索引鍵，將兩個序列的項目相互關聯。 指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 是用於比較索引鍵。</summary>
      <param name="outer" vsli:raw="The first sequence to join.">要聯結的第一個序列。</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">要加入第一個序列的序列。</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">用來從第一個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">用來從第二個序列各個項目擷取聯結索引鍵的函式。</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">用來從兩個相符項目建立結果項目的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">用來雜湊及比較索引鍵的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">第一個序列之項目的類型。</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">第二個序列之項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">索引鍵選取器函式所傳回之索引鍵的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">結果項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="outer" />、<paramref name="inner" />、<paramref name="outerKeySelector" />、<paramref name="innerKeySelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; obtained by performing an inner join on two sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其具有透過對兩個序列執行內部聯結所取得之型別 <paramref name="TResult" /> 的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the last element in a sequence.">傳回序列中的最後一個項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the last element of.">要傳回最後一個項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source sequence is empty.">來源序列為空。</exception>
      <returns vsli:raw="The value at the last position in &lt;paramref name=&quot;source&quot; /&gt;.">位於 <paramref name="source" /> 中最後一個位置的值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a specified condition.">傳回序列中符合指定之條件的最後一個元素。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">沒有任何項目符合 <paramref name="predicate" /> 的條件。  
  
-或- 
來源序列為空。</exception>
      <returns vsli:raw="The last element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <paramref name="source" /> 中通過 <paramref name="predicate" /> 指定之測試的最後一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the last element in a sequence, or a default value if the sequence contains no elements.">傳回序列中的最後一個項目；如果序列中沒有包含任何項目，則傳回預設值。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the last element of.">要傳回最後一個項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the last element in &lt;paramref name=&quot;source&quot; /&gt;.">如果 <paramref name="source" /> 是空的，則為 <c>default</c>(<paramref name="TSource" />)；否則為 <paramref name="source" /> 中的最後一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.">傳回序列中符合條件的最後一個元素；如果找不到這類元素，則傳回預設值。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return an element from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no elements pass the test in the predicate function; otherwise, the last element of &lt;paramref name=&quot;source&quot; /&gt; that passes the test in the predicate function.">如果 <paramref name="source" /> 是空的，或是沒有任何項目通過述詞函式中的測試，則為 <c>default</c>(<paramref name="TSource" />)；否則為 <paramref name="source" /> 中通過述詞函式之測試的最後一個項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents the total number of elements in a sequence.">傳回代表序列中項目總數的 <see cref="T:System.Int64" />。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">包含要計算之項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">項目數目超出 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 中的元素數目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Int64&quot; /&gt; that represents the number of elements in a sequence that satisfy a condition.">傳回 <see cref="T:System.Int64" />，其代表序列中符合條件的項目數目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements to be counted.">包含要計算之項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The number of matching elements exceeds &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">符合的項目數目超出 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The number of elements in &lt;paramref name=&quot;source&quot; /&gt; that satisfy the condition in the predicate function.">
        <paramref name="source" /> 中符合述詞函式之條件的項目數目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the maximum value in a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">傳回泛型 <see cref="T:System.Linq.IQueryable`1" /> 中的最大值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum of.">要判斷最大值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Invokes a projection function on each element of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; and returns the maximum resulting value.">對泛型 <see cref="T:System.Linq.IQueryable`1" /> 的每個項目叫用投影函式，並傳回最大的結果值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum of.">要判斷最大值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The maximum value in the sequence.">序列中的最大值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the minimum value of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt;.">傳回泛型 <see cref="T:System.Linq.IQueryable`1" /> 的最小值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum of.">要判斷最小值的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Invokes a projection function on each element of a generic &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; and returns the minimum resulting value.">對泛型 <see cref="T:System.Linq.IQueryable`1" /> 的每個項目叫用投影函式，並傳回最小的結果值。</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum of.">要判斷最小值的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The minimum value in the sequence.">序列中的最小值。</returns>
    </member>
    <member name="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
      <summary vsli:raw="Filters the elements of an &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; based on a specified type.">根據指定的型別來篩選 <see cref="T:System.Linq.IQueryable" /> 的項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable&quot; /&gt; whose elements to filter.">要篩選其項目的 <see cref="T:System.Linq.IQueryable" />。</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">用來做為序列項目之篩選依據的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A collection that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; that have type &lt;paramref name=&quot;TResult&quot; /&gt;.">集合，其中包含 <paramref name="source" /> 中型別為 <paramref name="TResult" /> 的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order according to a key.">依據索引鍵，按遞增順序排序序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">依據索引鍵排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in ascending order by using a specified comparer.">使用指定的比較子，依遞增順序排序序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">依據索引鍵排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order according to a key.">依據索引鍵，按遞減順序排序序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">依據索引鍵按遞減順序排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">使用指定的比較子，依遞減順序排序序列中的項目。</summary>
      <param name="source" vsli:raw="A sequence of values to order.">要排序的值序列。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">用來從項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function that is represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">依據索引鍵按遞減順序排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)">
      <summary vsli:raw="Returns a new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; plus the specified &lt;paramref name=&quot;element&quot; /&gt; prepended at the beginning.">傳回新的可查詢序列，包含來自 <paramref name="source" /> 的元素，並在開頭加上指定的 <paramref name="element" />。</summary>
      <param name="source" vsli:raw="A queryable sequence.">可查詢的序列。</param>
      <param name="element" vsli:raw="An element of type &lt;typeparamref name=&quot;TSource&quot; /&gt; to prepend to &lt;paramref name=&quot;source&quot; /&gt;.">要在 <paramref name="source" /> 前加上的 <typeparamref name="TSource" /> 類型元素。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence.">可查詢序列中元素的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; plus the specified &lt;paramref name=&quot;element&quot; /&gt; prepended at the beginning.">新的可查詢序列，包含來自 <paramref name="source" /> 的元素，並在開頭加上指定的 <paramref name="element" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Inverts the order of the elements in a sequence.">反轉序列中項目的排序方向。</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">要反轉方向的值序列。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements correspond to those of the input sequence in reverse order.">其項目對應於輸入序列中反向排序之項目的 <see cref="T:System.Linq.IQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Projects each element of a sequence into a new form.">將序列的每個元素規劃成一個新的表單。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a projection function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目為在 <paramref name="source" /> 各個項目上叫用投影函式的結果。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
      <summary vsli:raw="Projects each element of a sequence into a new form by incorporating the element's index.">透過加入項目的索引，將序列的每個項目投影成新的表單。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回值的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a projection function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目為在 <paramref name="source" /> 各個項目上叫用投影函式的結果。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and combines the resulting sequences into one sequence.">將序列的每個項目都投影成 <see cref="T:System.Collections.Generic.IEnumerable`1" />，並將產生的序列合併成一個序列。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回序列之項目的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目是對輸入序列中各個項目叫用一對多投影函式後所產生的結果。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and combines the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">將序列的每個項目都投影成 <see cref="T:System.Collections.Generic.IEnumerable`1" />，並將產生的序列合併成一個序列。 各來源項目的索引是在該項目的投影表單中使用。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element; the second parameter of this function represents the index of the source element.">要套用到每個項目的投影函式；此函式的第二個參數代表來源項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by the function represented by &lt;paramref name=&quot;selector&quot; /&gt;.">
        <paramref name="selector" /> 表示之函式所傳回序列之項目的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目是對輸入序列中各個項目叫用一對多投影函式後所產生的結果。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and invokes a result selector function on each element therein. The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.">將序列的每個項目投影成 <see cref="T:System.Collections.Generic.IEnumerable`1" />，並在其中的每個項目上叫用結果選取器函式。 每個中繼序列產生的值都會合併成單一的一維序列，然後再傳回。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A projection function to apply to each element of the input sequence.">要套用到輸入序列中各個項目的投影函式。</param>
      <param name="resultSelector" vsli:raw="A projection function to apply to each element of each intermediate sequence.">要套用到各中繼序列之各個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by the function represented by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 表示之函式所收集之中繼項目的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">產生的序列之項目型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking the one-to-many projection function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding &lt;paramref name=&quot;source&quot; /&gt; element to a result element.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目是執行下列動作後所產生的結果：對 <paramref name="collectionSelector" /> 的各個項目叫用一對多投影函式 <paramref name="source" />，然後再將每個序列項目及其對應之 <paramref name="source" /> 項目對應到結果項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; that incorporates the index of the source element that produced it. A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.">將序列的每個項目都投影成 <see cref="T:System.Collections.Generic.IEnumerable`1" />，以合併產生該項目之來源項目的索引。 接著對各中繼序列的每個項目叫用結果選取器函式，然後將產生的值合併成單一的一維序列並傳回。</summary>
      <param name="source" vsli:raw="A sequence of values to project.">要投影的值序列。</param>
      <param name="collectionSelector" vsli:raw="A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.">要套用到輸入序列每個項目的投影函式；此函式的第二個參數代表來源項目的索引。</param>
      <param name="resultSelector" vsli:raw="A projection function to apply to each element of each intermediate sequence.">要套用到各中繼序列之各個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of the intermediate elements collected by the function represented by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">
        <paramref name="collectionSelector" /> 表示之函式所收集之中繼項目的型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the resulting sequence.">產生的序列之項目型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;collectionSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="collectionSelector" /> 或 <paramref name="resultSelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements are the result of invoking the one-to-many projection function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; and then mapping each of those sequence elements and their corresponding &lt;paramref name=&quot;source&quot; /&gt; element to a result element.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目是執行下列動作後所產生的結果：對 <paramref name="collectionSelector" /> 的各個項目叫用一對多投影函式 <paramref name="source" />，然後再將每個序列項目及其對應之 <paramref name="source" /> 項目對應到結果項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by using the default equality comparer to compare elements.">使用預設相等比較子來比較項目，以判斷兩個序列是否相等。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to compare to those of &lt;paramref name=&quot;source2&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目要與 <paramref name="source2" /> 的項目比較。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to compare to those of the first sequence.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，其項目要與第一個序列的項目比較。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個來源序列的長度相同，而且其對應項目比較結果相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two sequences are equal by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare elements.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 來比較項目，以判斷兩個序列是否相等。</summary>
      <param name="source1" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; whose elements to compare to those of &lt;paramref name=&quot;source2&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其項目要與 <paramref name="source2" /> 的項目比較。</param>
      <param name="source2" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; whose elements to compare to those of the first sequence.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" />，其項目要與第一個序列的項目比較。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">用來比較項目的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個來源序列的長度相同，而且其對應項目比較結果相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.">傳回序列的唯一一個元素，如果序列中不是正好一個元素，則擲回例外狀況。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the single element of.">要傳回單一項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">
        <paramref name="source" /> 具有多個項目。</exception>
      <returns vsli:raw="The single element of the input sequence.">輸入序列的單一項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">傳回序列中符合指定之條件的唯一一個元素，如果有一個以上這類元素，則擲回例外狀況。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a single element from.">要傳回單一項目的來源 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用來測試項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The source sequence is empty.">沒有任何項目符合 <paramref name="predicate" /> 的條件。  
  
-或- 
超過一個項目符合 <paramref name="predicate" /> 中的條件。  
  
-或- 
來源序列為空。</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">輸入序列中符合 <paramref name="predicate" /> 之條件的單一項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
      <summary vsli:raw="Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">傳回序列的唯一一個項目，如果序列是空白，則為預設值，如果序列中有一個以上的項目，這個方法就會擲回例外狀況。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return the single element of.">要傳回單一項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> 具有多個項目。</exception>
      <returns vsli:raw="The single element of the input sequence, or &lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if the sequence contains no elements.">輸入序列的單一項目，如果序列不包含任何項目，則為 <c>default</c>(<paramref name="TSource" />)。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">傳回序列中符合指定之條件的唯一一個元素，如果沒有這類元素，則為預設值，如果有一個以上的元素符合條件，這個方法就會擲回例外狀況。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return a single element from.">要傳回單一項目的來源 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">用來測試項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">超過一個項目符合 <paramref name="predicate" /> 中的條件。</exception>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;, or &lt;c&gt;default&lt;/c&gt;(&lt;paramref name=&quot;TSource&quot; /&gt;) if no such element is found.">輸入序列中符合 <paramref name="predicate" /> 條件的單一項目，如果找不到這類項目，則為 <c>default</c>(<paramref name="TSource" />)。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a sequence and then returns the remaining elements.">略過序列中指定的項目數目，然後傳回其餘項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">傳回其餘項目之前要略過的項目數目。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements that occur after the specified index in the input sequence.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含出現在輸入序列中指定之索引後面的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns a new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; with the last &lt;paramref name=&quot;count&quot; /&gt; elements of the source queryable sequence omitted.">傳回新的可查詢序列，其包含移除來源可查詢序列最後 <paramref name="count" /> 元素的所有 <paramref name="source" /> 元素。</summary>
      <param name="source" vsli:raw="A queryable sequence.">可查詢的序列。</param>
      <param name="count" vsli:raw="The number of elements to omit from the end of the queryable sequence.">要從可查詢序列末端移除的元素數。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence.">可查詢序列中元素的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A new queryable sequence that contains the elements from &lt;paramref name=&quot;source&quot; /&gt; minus &lt;paramref name=&quot;count&quot; /&gt; elements from the end of the queryable sequence.">新的可查詢序列，其包含減去可查詢序列末端 <paramref name="count" /> 元素的所有 <paramref name="source" /> 元素。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.">只要指定的條件為 true，便略過序列中的項目，然後傳回其餘項目。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from &lt;paramref name=&quot;source&quot; /&gt; starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含的項目位於 <paramref name="source" />，而且是從沒有通過 <paramref name="predicate" /> 所指定之測試的線性系列中第一個項目開始。</returns>
    </member>
    <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">只要指定的條件為 true，便略過序列中的項目，然後傳回其餘項目。 項目的索引是用於述詞功能的邏輯中。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to return elements from.">傳回項目的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of this function represents the index of the source element.">用來測試各項目是否符合條件的函式；此函式的第二個參數代表來源項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from &lt;paramref name=&quot;source&quot; /&gt; starting at the first element in the linear series that does not pass the test specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含的項目位於 <paramref name="source" />，而且是從沒有通過 <paramref name="predicate" /> 所指定之測試的線性系列中第一個項目開始。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">計算 <see cref="T:System.Decimal" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">要計算總和的 <see cref="T:System.Decimal" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Decimal.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">計算 <see cref="T:System.Double" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">要計算總和的 <see cref="T:System.Double" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">計算 <see cref="T:System.Int32" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">要計算總和的 <see cref="T:System.Int32" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">計算 <see cref="T:System.Int64" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">要計算總和的 <see cref="T:System.Int64" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Decimal" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values to calculate the sum of.">要計算總和之可為 Null 的 <see cref="T:System.Decimal" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Decimal.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Double" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values to calculate the sum of.">要計算總和之可為 Null 的 <see cref="T:System.Double" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Int32" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values to calculate the sum of.">要計算總和之可為 Null 的 <see cref="T:System.Int32" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Int64" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values to calculate the sum of.">要計算總和之可為 Null 的 <see cref="T:System.Int64" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes the sum of a sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">計算可為 Null 之 <see cref="T:System.Single" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">要計算總和之可為 Null 的 <see cref="T:System.Single" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
      <summary vsli:raw="Computes the sum of a sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values.">計算 <see cref="T:System.Single" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values to calculate the sum of.">要計算總和的 <see cref="T:System.Single" /> 值序列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the values in the sequence.">序列中值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Decimal" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Decimal.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Double" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Int32" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Int64" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Decimal&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Decimal" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Decimal.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Double&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Double" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int32&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Int32" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int32.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Int64&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Int64" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">總和大於 <see cref="F:System.Int64.MaxValue" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
      <summary vsli:raw="Computes the sum of the sequence of nullable &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得可為 Null 之 <see cref="T:System.Single" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
      <summary vsli:raw="Computes the sum of the sequence of &lt;see cref=&quot;T:System.Single&quot; /&gt; values that is obtained by invoking a projection function on each element of the input sequence.">計算在輸入序列中各項目上叫用投影函式後所取得之 <see cref="T:System.Single" /> 值序列的總和。</summary>
      <param name="source" vsli:raw="A sequence of values of type &lt;paramref name=&quot;TSource&quot; /&gt;.">型別 <paramref name="TSource" /> 的值序列。</param>
      <param name="selector" vsli:raw="A projection function to apply to each element.">要套用到每個項目的投影函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="selector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="The sum of the projected values.">預計值的總合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a sequence.">從序列開頭傳回指定的連續項目數目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="count" vsli:raw="The number of elements to return.">要傳回的項目數目。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the specified number of elements from the start of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含來自 <paramref name="source" /> 開頭的指定項目數目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)">
      <summary vsli:raw="Returns a new queryable sequence that contains the last &lt;paramref name=&quot;count&quot; /&gt; elements from &lt;paramref name=&quot;source&quot; /&gt;.">傳回新的可查詢序列，其包含 <paramref name="source" /> 的最後 <paramref name="count" /> 元素。</summary>
      <param name="source" vsli:raw="A queryable sequence instance.">可查詢序列執行個體。</param>
      <param name="count" vsli:raw="The number of elements to take from the end of the queryable sequence.">要從可查詢序列末端移除的元素數。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements in the queryable sequence.">可查詢序列中元素的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A new queryable sequence that contains the last &lt;paramref name=&quot;count&quot; /&gt; elements from &lt;paramref name=&quot;source&quot; /&gt;.">新的可查詢序列，其包含 <paramref name="source" /> 的最後 <paramref name="count" /> 元素。</returns>
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true.">只要指定的條件為 true，就會傳回序列中的項目。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence occurring before the element at which the test specified by &lt;paramref name=&quot;predicate&quot; /&gt; no longer passes.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含輸入序列中的項目，而這些項目出現在已無法通過 <paramref name="predicate" /> 所指定之測試的項目前面。</returns>
    </member>
    <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Returns elements from a sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">只要指定的條件為 true，就會傳回序列中的項目。 項目的索引是用於述詞功能的邏輯中。</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">傳回項目的序列。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.">用來測試各項目是否符合條件的函式；此函式的第二個參數代表來源序列中項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence occurring before the element at which the test specified by &lt;paramref name=&quot;predicate&quot; /&gt; no longer passes.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含輸入序列中的項目，而這些項目出現在已無法通過 <paramref name="predicate" /> 所指定之測試的項目前面。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.">依據索引鍵，按遞增順序執行序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">依據索引鍵排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">使用指定的比較子，依遞增順序執行序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted according to a key.">依據索引鍵排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.">依據索引鍵，按遞減順序執行序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by the function represented by &lt;paramref name=&quot;keySelector&quot; /&gt;.">
        <paramref name="keySelector" /> 表示之函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="keySelector" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; whose elements are sorted in descending order according to a key.">依據索引鍵按遞減順序排序其項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</returns>
    </member>
    <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">使用指定的比較子，依遞減順序執行序列中項目的後續排序作業。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IOrderedQueryable`1&quot; /&gt; that contains elements to sort.">包含要排序之項目的 <see cref="T:System.Linq.IOrderedQueryable`1" />。</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">用來從各個項目擷取索引鍵的函式。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">用來比較金鑰的 <see cref="T:System.Collections.Generic.IComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key that is returned by the &lt;paramref name=&quot;keySelector&quot; /&gt; function.">
        <paramref name="keySelector" /> 函式所傳回索引鍵的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" />、<paramref name="keySelector" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="A collection whose elements are sorted in descending order according to a key.">依據索引鍵按遞減順序排序其項目的集合。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using the default equality comparer.">使用預設相等比較值來比較值，以便產生兩個序列的集合等位。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements form the first set for the union operation.">序列，其獨特項目構成等位作業的第一個集合。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements form the second set for the union operation.">序列，其獨特項目構成等位作業的第二個集合。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含來自兩個輸入序列的項目，但不包括重複的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two sequences by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 產生兩個序列的集合等位。</summary>
      <param name="source1" vsli:raw="A sequence whose distinct elements form the first set for the union operation.">序列，其獨特項目構成等位作業的第一個集合。</param>
      <param name="source2" vsli:raw="A sequence whose distinct elements form the second set for the union operation.">序列，其獨特項目構成等位作業的第二個集合。</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">用來比較值的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">輸入序列之項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains the elements from both input sequences, excluding duplicates.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含來自兩個輸入序列的項目，但不包括重複的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary vsli:raw="Filters a sequence of values based on a predicate.">根據述詞來篩選值序列。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to filter.">要篩選的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">用來測試每個項目是否符合條件的函式。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含輸入序列中符合 <paramref name="predicate" /> 指定之條件的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
      <summary vsli:raw="Filters a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">根據述詞來篩選值序列。 述詞函式的邏輯中使用各項目的索引。</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; to filter.">要篩選的 <see cref="T:System.Linq.IQueryable`1" />。</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.">用來測試各項目是否符合條件的函式；此函式的第二個參數代表來源序列中項目的索引。</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="source" /> 項目的類型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> 或 <paramref name="predicate" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains elements from the input sequence that satisfy the condition specified by &lt;paramref name=&quot;predicate&quot; /&gt;.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含輸入序列中符合 <paramref name="predicate" /> 指定之條件的項目。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Zip``2(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1})">
      <summary vsli:raw="Produces a sequence of tuples with elements from the two specified sequences.">從兩個指定序列中的元素產生一系列元組。</summary>
      <param name="source1" vsli:raw="The first sequence to merge.">要合併的第一個序列。</param>
      <param name="source2" vsli:raw="The second sequence to merge.">要合併的第二個序列。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">第一個輸入序列的項目型別。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">第二個輸入序列的項目型別。</typeparam>
      <returns vsli:raw="A sequence of tuples with elements taken from the first and second sequences, in that order.">取自第一個和第二個序列元素的一系列元組，以該順序排序。</returns>
    </member>
    <member name="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
      <summary vsli:raw="Merges two sequences by using the specified predicate function.">使用指定的述詞函式來合併兩個序列。</summary>
      <param name="source1" vsli:raw="The first sequence to merge.">要合併的第一個序列。</param>
      <param name="source2" vsli:raw="The second sequence to merge.">要合併的第二個序列。</param>
      <param name="resultSelector" vsli:raw="A function that specifies how to merge the elements from the two sequences.">指定如何從兩個序列合併項目的函式。</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first input sequence.">第一個輸入序列的項目型別。</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second input sequence.">第二個輸入序列的項目型別。</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the result sequence.">結果序列的項目型別。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source1&quot; /&gt; or &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source1" /> 或 <paramref name="source2" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Linq.IQueryable`1&quot; /&gt; that contains merged elements of two input sequences.">
        <see cref="T:System.Linq.IQueryable`1" />，其中包含兩個輸入序列的合併項目。</returns>
    </member>
  </members>
</doc>