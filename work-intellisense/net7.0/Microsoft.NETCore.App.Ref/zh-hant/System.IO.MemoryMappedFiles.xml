<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.MemoryMappedFiles</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Provides a safe handle that represents a memory-mapped file for sequential access.">提供代表對應檔案以進行循序存取的安全控制代碼。</summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.IsInvalid">
      <summary vsli:raw="Gets a value that indicates whether the handle is invalid.">取得值，表示控制代碼是否無效。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handle is not valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果控制代碼無效，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Provides a safe handle that represents a view of a block of unmanaged memory for random access.">提供安全控制代碼，表示隨機存取的 Unmanaged 記憶體區塊檢視。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
      <summary vsli:raw="Represents a memory-mapped file.">表示記憶體對應檔。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
      <summary vsli:raw="Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.">從現有的檔案建立記憶體對應檔，這個檔案具有指定的存取模式、名稱、可繼承性和容量。</summary>
      <param name="fileStream" vsli:raw="The file stream of the existing file.">現有檔案的檔案資料流。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of &lt;c&gt;filestream&lt;/c&gt;.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。 指定 0 會將容量設定為 <c>filestream</c> 的大小。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.  &#xA;  &#xA; This parameter can't be set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。  
  
此參數無法設定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">其中一個列舉值，決定記憶體對應檔的控制代碼是否可以由子處理序繼承。 預設為 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <param name="leaveOpen" vsli:raw="A value that indicates whether to close the source file stream when the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; is disposed.">表示是否要在處置 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 時，關閉來源檔案資料流的值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; and the length of the file are zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value, which is not allowed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and &lt;paramref name=&quot;capacity&quot; /&gt; is larger than the length of &lt;see langword=&quot;filestream&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" /> 或空字串。  
  
-或- 
 檔案的 <paramref name="capacity" /> 和長度都是零。  
  
-或- 
 <paramref name="access" /> 設定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />，或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 列舉值表示不允許。  
  
-或- 
 <paramref name="access" /> 設定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，而 <paramref name="capacity" /> 大於 <see langword="filestream" /> 的長度。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileStream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 小於零。  
  
-或- 
 <paramref name="capacity" /> 小於檔案大小。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。  
  
-或- 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 列舉值。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
      <summary vsli:raw="Creates a memory-mapped file from a file on disk.">從磁碟上的檔案建立記憶體對應檔。</summary>
      <param name="path" vsli:raw="The path to file to map.">要對應之檔案的路徑。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.">
        <paramref name="path" /> 為空字串，只包含空白字元或包含一個以上  <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 所定義的無效字元。  
  
-或- 
 <paramref name="path" /> 是指不正確的裝置。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超過作業系統定義的長度上限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">呼叫端沒有所需的檔案權限。</exception>
      <returns vsli:raw="A memory-mapped file.">記憶體對應檔。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode from a file on disk.">從磁碟上的檔案建立記憶體對應檔，這個記憶體對應檔具有指定的存取模式。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要對應之檔案的路徑。</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">存取模式；必須是 <see cref="F:System.IO.FileMode.Open" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 為空字串，只包含空白字元或包含一個以上  <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 所定義的無效字元。  
  
-或- 
 <paramref name="path" /> 是指不正確的裝置。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.OpenOrCreate" />，且磁碟中的檔案不存在。  
  
-或- 
發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超過作業系統定義的長度上限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">呼叫端沒有所需的檔案權限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified access mode.">記憶體對應檔，具有指定的存取模式。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode and name from a file on disk.">從磁碟上的檔案建立記憶體對應檔，這個記憶體對應檔具有指定的存取模式和名稱。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要對應之檔案的路徑。</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">存取模式；必須是 <see cref="F:System.IO.FileMode.Open" />。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 為空字串，只包含空白字元或包含一個以上  <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 所定義的無效字元。  
  
-或- 
 <paramref name="path" /> 是指不正確的裝置。  
  
-或- 
 <paramref name="mapName" /> 為空字串。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.OpenOrCreate" />，且磁碟中的檔案不存在。  
  
-或- 
發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超過作業系統定義的長度上限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">呼叫端沒有所需的檔案權限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and access mode.">記憶體對應檔，具有指定的名稱和存取模式。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.">從磁碟上的檔案建立記憶體對應檔，這個記憶體對應檔具有指定的存取模式、名稱和大小。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要對應之檔案的路徑。</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">存取模式，可以是除了 <see cref="T:System.IO.FileMode" /> 之外的任何 <see cref="F:System.IO.FileMode.Append" /> 列舉值。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。 指定 0 會將大小設定為磁碟上檔案的大小。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> 為空字串，只包含空白字元或包含一個以上  <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 所定義的無效字元。  
  
-或- 
 <paramref name="path" /> 是指不正確的裝置。  
  
-或- 
 <paramref name="mapName" /> 為空字串。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.">
        <paramref name="capacity" /> 大於邏輯位址空間的大小。  
  
-或- 
 <paramref name="capacity" /> 小於零。  
  
-或- 
 <paramref name="capacity" /> 小於檔案大小 (但不為零)。  
  
-或- 
 <paramref name="capacity" /> 是零，而且磁碟上檔案的大小也是零。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超過作業系統定義的長度上限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">呼叫端沒有所需的檔案權限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.">從磁碟上的檔案建立記憶體對應檔，這個記憶體對應檔具有指定的存取模式、名稱、大小和存取類型。</summary>
      <param name="path" vsli:raw="The path to the file to map.">要對應之檔案的路徑。</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">存取模式，可以是除了 <see cref="T:System.IO.FileMode" /> 之外的任何 <see cref="F:System.IO.FileMode.Append" /> 列舉值。</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。 指定 0 會將大小設定為磁碟上檔案的大小。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.">其中一個列舉值，指定記憶體對應檔允許的存取類型。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not an allowed value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specifies an empty file.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and capacity is greater than the size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="mapName" /> 為空字串。  
  
-或- 
 <paramref name="access" /> 不是允許的值。  
  
-或- 
 <paramref name="path" /> 會指定空檔案。  
  
-或- 
 <paramref name="access" /> 已指定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，而且容量大於 <paramref name="path" /> 所指示的檔案大小。  
  
-或- 
 <paramref name="mode" /> 為 <see cref="F:System.IO.FileMode.Append" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a defined &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt; is greater than &lt;paramref name=&quot;capacity&quot; /&gt;.">
        <paramref name="capacity" /> 大於邏輯位址空間的大小。  
  
-或- 
 <paramref name="capacity" /> 小於零。  
  
-或- 
 <paramref name="capacity" /> 小於檔案大小 (但不為零)。  
  
-或- 
 <paramref name="capacity" /> 是零，而且磁碟上檔案的大小也是零。  
  
-或- 
 <paramref name="access" /> 不是已定義的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。  
  
-或- 
<paramref name="path" /> 所指示的檔案大小大於 <paramref name="capacity" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="-or-  &#xA;  &#xA; An I/O error occurred.">-或-  
  
 發生 I/O 錯誤。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> 超過作業系統定義的長度上限。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">呼叫端沒有所需的檔案權限。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity in system memory.">建立記憶體對應檔案，此檔案在系統記憶體中具有指定的大小。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 為空字串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> 小於或等於零。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">僅限 .NET Core：使用已命名的記憶體對應檔案呼叫 <c>CreateNew</c> 方法 (也就是， <paramref name="mapName" /> 只有在 Windows 作業系統上才支援非 null 的) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and capacity.">記憶體對應檔，具有指定的名稱與大小。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity and access type in system memory.">建立記憶體對應檔案，此檔案在系統記憶體中具有指定的大小和存取類型。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 為空字串。  
  
-或- 
 使用 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 列舉值，將 <paramref name="access" /> 設為唯寫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 小於或等於零。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">僅限 .NET Core：使用已命名的記憶體對應檔案呼叫 <c>CreateNew</c> 方法 (也就是， <paramref name="mapName" /> 只有在 Windows 作業系統上才支援非 null 的) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.">建立記憶體對應檔，這個檔案具有指定的名稱、容量、存取類型、記憶體配置選項和可繼承性。</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">要指派給記憶體對應檔的名稱；針對您不想要跨處理序共用的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />，則為 <see langword="null" />。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.">列舉值的位元組合，指定記憶體對應檔的記憶體配置選項。</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">決定記憶體對應檔的控制代碼是否可以由子處理序繼承的值。 預設為 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 為空字串。  
  
-或- 
 使用 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 列舉值，將 <paramref name="access" /> 設為唯寫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="capacity" /> 小於或等於零。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。  
  
-或- 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">僅限 .NET Core：使用已命名的記憶體對應檔案呼叫 <c>CreateNew</c> 方法 (也就是， <paramref name="mapName" /> 只有在 Windows 作業系統上才支援非 null 的) 。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name and capacity in system memory.">建立或開啟記憶體對應檔，此檔案在系統記憶體中具有指定的名稱和容量。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">記憶體對應檔的名稱。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 為空字串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> 大於邏輯位址空間的大小。  
  
-或- 
 <paramref name="capacity" /> 小於或等於零。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name and size.">記憶體對應檔，具有指定的名稱與大小。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.">建立或開啟記憶體對應檔，此檔案在系統記憶體中具有指定的名稱、容量和存取類型。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">記憶體對應檔的名稱。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 為空字串。  
  
-或- 
 使用 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 列舉值，將 <paramref name="access" /> 設為唯寫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 大於邏輯位址空間的大小。  
  
-或- 
 <paramref name="capacity" /> 小於或等於零。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">作業系統拒絕對檔案進行指定之存取，例如，存取設定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但是檔案或目錄是唯讀的。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.">建立新的空白記憶體對應檔，或開啟現有的記憶體對應檔 (如果有名稱相同的檔案存在)。 如果開啟現有的檔案，則會忽略容量、選項和記憶體引數。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">記憶體對應檔的名稱。</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">要配置給記憶體對應檔的大小上限 (以位元組為單位)。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <param name="options" vsli:raw="A bitwise combination of values that indicate the memory allocation options to apply to the file.">值的位元組合，指出要套用至檔案的記憶體配置選項。</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">決定記憶體對應檔的控制代碼是否可以由子處理序繼承的值。 預設為 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> 為空字串。  
  
-或- 
 使用 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 列舉值，將 <paramref name="access" /> 設為唯寫。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> 大於邏輯位址空間的大小。  
  
-或- 
 <paramref name="capacity" /> 小於或等於零。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。  
  
-或- 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 列舉值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">作業系統拒絕對檔案進行指定之存取，例如，存取設定為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但是檔案或目錄是唯讀的。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file.">建立對應於記憶體對應檔檢視的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</summary>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">未授權存取記憶體對應檔案。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">記憶體隨機存取區塊。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset and size.">建立 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，此存取子可對應到記憶體對應檔案的檢視，並且有指定的位移和大小。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">檢視會在此處開始的位元組。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">檢視的大小。 指定 0 (零)，建立在 <paramref name="offset" /> 開始，而大約在記憶體對應檔結尾結束的檢視。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 為負值。  
  
-或- 
 <paramref name="size" /> 大於邏輯位址空間。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">未授權存取記憶體對應檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">發生 I/O 錯誤。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">記憶體隨機存取區塊。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.">建立 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，此存取子可對應到記憶體對應檔案的檢視，並且有指定位移、大小和存取限制。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">檢視會在此處開始的位元組。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">檢視的大小。 指定 0 (零)，建立在 <paramref name="offset" /> 開始，而大約在記憶體對應檔結尾結束的檢視。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 為負值。  
  
-或- 
 <paramref name="size" /> 大於邏輯位址空間。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> 是無效的記憶體對應檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">發生 I/O 錯誤。</exception>
      <returns vsli:raw="A randomly accessible block of memory.">記憶體隨機存取區塊。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file.">建立對應於記憶體對應檔檢視的資料流。</summary>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">未授權存取記憶體對應檔案。</exception>
      <returns vsli:raw="A stream of memory.">記憶體資料流。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.">建立資料流，此資料流可對應到記憶體對應檔案的檢視，並且有指定的位移和大小。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">檢視會在此處開始的位元組。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">檢視的大小。 指定 0 (零)，建立在 <paramref name="offset" /> 開始，而大約在記憶體對應檔結尾結束的檢視。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">
        <paramref name="offset" /> 或 <paramref name="size" /> 為負值。  
  
-或- 
 <paramref name="size" /> 大於邏輯位址空間。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">未授權存取記憶體對應檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.">
        <paramref name="size" /> 大於總虛擬記憶體。</exception>
      <returns vsli:raw="A stream of memory that has the specified offset and size.">記憶體資料流，具有指定的位移和大小。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.">建立資料流，此資料流可對應到記憶體對應檔案的檢視，並且有指定位移、大小和存取類型。</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">檢視會在此處開始的位元組。</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">檢視的大小。 指定 0 (零)，建立在 <paramref name="offset" /> 開始，而大約在記憶體對應檔結尾結束的檢視。</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">其中一個列舉值，指定記憶體對應檔允許的存取類型。 預設為 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="offset" /> 或 <paramref name="size" /> 為負值。  
  
-或- 
 <paramref name="size" /> 大於邏輯位址空間。  
  
-或- 
 <paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 列舉值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> 是無效的記憶體對應檔案。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="size" /> 大於總虛擬記憶體。  
  
-或- 
 <paramref name="access" /> 是無效的記憶體對應檔案。</exception>
      <returns vsli:raw="A stream of memory that has the specified characteristics.">記憶體資料流，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt;.">釋放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name in system memory.">開啟現有的記憶體對應檔案，此檔案在系統記憶體中具有指定的名稱。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">記憶體對應檔的名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 為空字串。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">針對 <paramref name="mapName" /> 指定的檔案不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified name.">有指定之名稱的記憶體對應檔。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name and access rights in system memory.">開啟現有的記憶體對應檔案，此檔案在系統記憶體中具有指定的名稱和存取權限。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">要開啟之記憶體對應檔的名稱。</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">其中一個列舉值，指定要套用至記憶體對應檔的存取權限。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 為空字串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 列舉值。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">針對 <paramref name="mapName" /> 指定的檔案不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.">開啟現有的記憶體對應檔案，此檔案在系統記憶體中具有指定的名稱、存取權限和可繼承性。</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">要開啟之記憶體對應檔的名稱。</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">其中一個列舉值，指定要套用至記憶體對應檔的存取權限。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">其中一個列舉值，決定記憶體對應檔的控制代碼是否可以由子處理序繼承。 預設為 <see cref="F:System.IO.HandleInheritability.None" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> 為空字串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 列舉值。  
  
-或- 
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 列舉值。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The requested access is invalid for the memory-mapped file.">要求的存取是無效的記憶體對應檔案。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">針對 <paramref name="mapName" /> 指定的檔案不存在。</exception>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">記憶體對應檔，具有指定的特性。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Gets the file handle of a memory-mapped file.">取得記憶體對應檔的檔案控制代碼。</summary>
      <returns vsli:raw="The handle to the memory-mapped file.">記憶體對應檔的控制代碼。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess">
      <summary vsli:raw="Specifies access capabilities and restrictions for a memory-mapped file or view.">指定記憶體對應檔或檢視的存取能力和限制。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite">
      <summary vsli:raw="Read and write access to the file, with the restriction that any write operations will not be seen by other processes.">讀取及寫入檔案的存取權限，並且限制其他處理序看不到任何寫入作業。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read">
      <summary vsli:raw="Read-only access to the file.">檔案的唯讀權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute">
      <summary vsli:raw="Read access to the file that can store and run executable code.">檔案的讀取權限，該檔案可以儲存及執行可執行的程式碼。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite">
      <summary vsli:raw="Read and write access to the file.">讀取和寫入檔案的存取權限，</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute">
      <summary vsli:raw="Read and write access to the file that can store and run executable code.">讀取及寫入檔案的存取權限，該檔案可以儲存及執行可執行的程式碼。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write">
      <summary vsli:raw="Write-only access to file.">檔案的唯寫權限。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileOptions">
      <summary vsli:raw="Provides memory allocation options for memory-mapped files.">為記憶體對應檔提供記憶體配置選項。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages">
      <summary vsli:raw="Memory allocation is delayed until a view is created with either the &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor&quot; /&gt; or &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream&quot; /&gt; method.">記憶體配置延遲到已使用 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" /> 或 <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" /> 方法建立檢視時才進行。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.None">
      <summary vsli:raw="No memory allocation options are applied.">不套用任何記憶體配置選項。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights">
      <summary vsli:raw="Specifies access rights to a memory-mapped file that is not associated with a file on disk.">指定記憶體對應檔的存取權限，這個檔案不會與磁碟上的檔案相關聯。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity">
      <summary vsli:raw="The right to get or set permissions on a file.">取得或設定檔案使用權限的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a file.">變更與檔案相關聯之安全性和稽核規則的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite">
      <summary vsli:raw="The right to read and write to a file with the restriction that write operations will not be seen by other processes.">讀取及寫入檔案的權限，並且限制其他處理序看不到寫入作業。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete">
      <summary vsli:raw="The right to delete a file.">刪除檔案的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute">
      <summary vsli:raw="The right to run an application file.">執行應用程式檔案的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl">
      <summary vsli:raw="The right to exert full control over a file, and to modify access control and audit rules. This value represents the right to do anything with a file and is the combination of all rights in this enumeration.">對檔案執行完全控制以及修改存取控制和稽核規則的權限。 這個值表示對檔案執行任何作業的權限，其為這個列舉型別中所有權限的組合。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read">
      <summary vsli:raw="The right to open and copy a file as read-only.">以唯讀方式開啟和複製檔案的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute">
      <summary vsli:raw="The right to open and copy a folder or file as read-only, and to run application files. This right includes the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read&quot; /&gt; right and the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute&quot; /&gt; right.">以唯讀方式開啟和複製資料夾或檔案，以及執行應用程式檔案的權限。 這個權限包括 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read" /> 權限和 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute" /> 權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy access and audit rules from a file. This does not include the right to read data, file system attributes, or extended file system attributes.">開啟並複製檔案之存取和稽核規則的權限。 這不包括讀取資料、檔案系統屬性或擴充之檔案系統屬性的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite">
      <summary vsli:raw="The right to open and copy a file, and the right to add data to a file or remove data from a file.">開啟和複製檔案的權限，以及對檔案加入或移除資料的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute">
      <summary vsli:raw="The right to open and copy a file, the right to add data to a file or remove data from a file, and the right to run an application file.">開啟和複製檔案的權限、對檔案加入或移除資料的權限，以及執行應用程式檔案的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a file.">變更檔案擁有人的權限。</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write">
      <summary vsli:raw="The right to add data to a file or remove data from a file.">對檔案加入或移除資料的權限。</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
      <summary vsli:raw="Represents a randomly accessed view of a memory-mapped file.">表示記憶體對應檔的隨機存取檢視。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
      <summary vsli:raw="Clears all buffers for this view and causes any buffered data to be written to the underlying file.">清除這個檢視的所有緩衝區，並造成任何緩衝資料都寫入基礎檔案。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the accessor was closed.">在關閉存取子後，會呼叫方法。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">取得這個檢視起始位置與記憶體對應檔案開頭的位移位元組數目。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">從這個執行個體建立的物件是 <see langword="null" />。</exception>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">這個檢視開始位置和記憶體對應檔案開頭之間的位元組數。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">取得記憶體對應檔檢視的控制代碼。</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">檔案檢視之作業系統控制代碼的包裝函式。</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream">
      <summary vsli:raw="Represents a view of a memory-mapped file as a sequentially accessed stream.">將記憶體對應檔檢視表示為循序存取的資料流。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush">
      <summary vsli:raw="Clears all buffers for this stream and causes any buffered data to be written to the underlying file.">清除這個資料流的所有緩衝區，並造成任何緩衝資料都寫入基礎檔案。</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream.">設定目前資料流的長度。</summary>
      <param name="value" vsli:raw="The desired length of the current stream in bytes.">想要的目前資料流長度 (單位為位元組)。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported.">不支援這個方法。</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">取得這個檢視起始位置與記憶體對應檔案開頭的位移位元組數目。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">從這個執行個體建立的物件是 <see langword="null" />。</exception>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">這個檢視開始位置和記憶體對應檔案開頭之間的位元組數。</returns>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">取得記憶體對應檔檢視的控制代碼。</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">檔案檢視之作業系統控制代碼的包裝函式。</returns>
    </member>
  </members>
</doc>