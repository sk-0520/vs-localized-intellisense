<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ObjectModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.ObjectModel.KeyedCollection`2">
      <summary vsli:raw="Provides the abstract base class for a collection whose keys are embedded in the values.">為內嵌在值之索引鍵的集合，提供抽象基底類別。</summary>
      <typeparam name="TKey" vsli:raw="The type of keys in the collection.">集合中的索引鍵類型。</typeparam>
      <typeparam name="TItem" vsli:raw="The type of items in the collection.">集合中項目的類型。</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt; class that uses the default equality comparer.">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用預設的等號比較子。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt; class that uses the specified equality comparer.">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用指定的等號比較子。</summary>
      <param name="comparer" vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default equality comparer for the type of the key, obtained from &lt;see cref=&quot;P:System.Collections.Generic.EqualityComparer`1.Default&quot; /&gt;.">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面實作，或 <see langword="null" /> 表示為索引鍵型別使用預設等號比較子 (取自 <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />)。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt; class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.">初始化 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 類別的新執行個體，此執行個體使用指定的等號比較子，並在超過指定的臨界值時，建立查閱字典。</summary>
      <param name="comparer" vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface to use when comparing keys, or &lt;see langword=&quot;null&quot; /&gt; to use the default equality comparer for the type of the key, obtained from &lt;see cref=&quot;P:System.Collections.Generic.EqualityComparer`1.Default&quot; /&gt;.">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面實作，或 <see langword="null" /> 表示為索引鍵型別使用預設等號比較子 (取自 <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />)。</param>
      <param name="dictionaryCreationThreshold" vsli:raw="The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or -1 to specify that a lookup dictionary is never created.">集合不必建立查閱字典就可以保存的項目數 (當第一個項目加入後即建立查閱字典則為 0)，若指定不建立查閱字典則為 -1。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;dictionaryCreationThreshold&quot; /&gt; is less than -1.">
        <paramref name="dictionaryCreationThreshold" /> 小於 -1。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)">
      <summary vsli:raw="Changes the key associated with the specified element in the lookup dictionary.">變更查閱字典中與指定的項目相關的索引鍵。</summary>
      <param name="item" vsli:raw="The element to change the key of.">要變更索引鍵的項目。</param>
      <param name="newKey" vsli:raw="The new key for &lt;paramref name=&quot;item&quot; /&gt;.">
        <paramref name="item" /> 的新索引鍵。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="item" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;item&quot; /&gt; is not found.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">找不到 <paramref name="item" />。  
  
-或- 
 <paramref name="key" /> 已存在於 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">移除 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中的所有項目。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)">
      <summary vsli:raw="Determines whether the collection contains an element with the specified key.">判斷集合是否包含具有指定之索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">要在 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中尋找的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)">
      <summary vsli:raw="When implemented in a derived class, extracts the key from the specified element.">在衍生類別中實作時，從指定的項目擷取索引鍵。</summary>
      <param name="item" vsli:raw="The element from which to extract the key.">要擷取索引鍵的來源項目。</param>
      <returns vsli:raw="The key for the specified element.">指定之項目的索引鍵。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt; at the specified index.">將項目插入至 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 中指定的索引位置。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">應在 <paramref name="item" /> 插入以零為起始的索引。</param>
      <param name="item" vsli:raw="The object to insert.">要插入的物件。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.ObjectModel.Collection`1.Count&quot; /&gt;.">
        <paramref name="index" /> 小於 0。  
  
-或- 
 <paramref name="index" /> 大於 <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">將有指定索引鍵的項目從 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 移除。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;key&quot; /&gt; is not found in the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">如果成功移除項目，則為 <see langword="true" />，否則為 <see langword="false" />。  如果在 <see langword="false" /> 中找不到 <paramref name="key" />，則這個方法也會傳回 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">移除 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 之指定索引處的項目。</summary>
      <param name="index" vsli:raw="The index of the element to remove.">要移除的項目索引。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)">
      <summary vsli:raw="Replaces the item at the specified index with the specified item.">以指定的項目取代位於指定索引上的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the item to be replaced.">要取代之項目的索引，而這個索引為以零為起始。</param>
      <param name="item" vsli:raw="The new item.">新項目。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)">
      <summary vsli:raw="Tries to get an item from the collection using the specified key.">使用指定的索引鍵嘗試取得集合中項目。</summary>
      <param name="key" vsli:raw="The key of the item to search in the collection.">要在集合中搜尋的項目索引鍵。</param>
      <param name="item" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, the item from the collection that matches the provided key; when this method returns &lt;see langword=&quot;false&quot; /&gt;, the &lt;see langword=&quot;default&quot; /&gt; value for the type of the collection.">當這個方法傳回 <see langword="true" /> 時，為集合中符合所提供索引鍵的項目；當這個方法傳回 <see langword="false" /> 時，則為集合類型的 <see langword="default" /> 值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item for the specified key was found in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在集合中找到具有指定索引鍵的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer">
      <summary vsli:raw="Gets the generic equality comparer that is used to determine equality of keys in the collection.">取得用來判斷集合中索引鍵是否相等的泛型等號比較子。</summary>
      <returns vsli:raw="The implementation of the &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; generic interface that is used to determine equality of keys in the collection.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 泛型介面的實作，用來判斷集合中索引鍵是否相等。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary">
      <summary vsli:raw="Gets the lookup dictionary of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;.">取得 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 的查閱字典。</summary>
      <returns vsli:raw="The lookup dictionary of the &lt;see cref=&quot;T:System.Collections.ObjectModel.KeyedCollection`2&quot; /&gt;, if it exists; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> 的查閱字典，如果有的話，否則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)">
      <summary vsli:raw="Gets the element with the specified key.">取得具有指定索引鍵的項目。</summary>
      <param name="key" vsli:raw="The key of the element to get.">要取得的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException" vsli:raw="An element with the specified key does not exist in the collection.">具有指定之索引鍵的項目不存在於集合中。</exception>
      <returns vsli:raw="The element with the specified key. If an element with the specified key is not found, an exception is thrown.">具有指定索引鍵的項目。 如果找不到具指定之索引鍵的項目，則會擲回例外狀況。</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
      <summary vsli:raw="Represents a dynamic data collection that provides notifications when items get added or removed, or when the whole list is refreshed.">代表在加入和移除項目時，或重新整理整份清單時提供通知的動態資料集合。</summary>
      <typeparam name="T" vsli:raw="The type of elements in the collection.">集合中項目的類型。</typeparam>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added, removed, or moved, or the entire list is refreshed.">在加入、移除、變更或移動項目者或重新整理整個清單時發生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt; class.">初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt; class that contains elements copied from the specified collection.">初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 類別的新執行個體，這個類別包含自指定之集合複製過來的項目。</summary>
      <param name="collection" vsli:raw="The collection from which the elements are copied.">複製項目的來源集合。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;collection&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="collection" /> 參數不可為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt; class that contains elements copied from the specified list.">初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 類別的新執行個體，這個類別包含自指定之清單複製過來的項目。</summary>
      <param name="list" vsli:raw="The list from which the elements are copied.">複製項目的來源清單。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;list&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> 參數不可為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy">
      <summary vsli:raw="Disallows reentrant attempts to change this collection.">不允許變更這個集合的可重新進入嘗試。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that can be used to dispose of the object.">
        <see cref="T:System.IDisposable" /> 物件，可用來處置物件。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy">
      <summary vsli:raw="Checks for reentrant attempts to change this collection.">檢查變更這個集合的可重新進入嘗試。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If there was a call to &lt;see cref=&quot;M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy&quot; /&gt; of which the &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; return value has not yet been disposed of. Typically, this means when there are additional attempts to change this collection during a &lt;see cref=&quot;E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged&quot; /&gt; event. However, it depends on when derived classes choose to call &lt;see cref=&quot;M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy&quot; /&gt;.">如果呼叫尚未處置其 <see cref="T:System.IDisposable" /> 傳回值的 <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" />。 一般而言，這表示 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件期間有變更這個集合的其他嘗試時。 不過，這取決於衍生類別選擇呼叫 <see cref="M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy" /> 時。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">移除集合的所有項目。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">將項目插入至索引中的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted.">應在 <paramref name="item" /> 插入以零為起始的索引。</param>
      <param name="item" vsli:raw="The object to insert.">要插入的物件。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)">
      <summary vsli:raw="Moves the item at the specified index to a new location in the collection.">將所指定索引位置的項目移至集合中的新位置。</summary>
      <param name="oldIndex" vsli:raw="The zero-based index specifying the location of the item to be moved.">以零為基底的索引，它會指定要移動之項目的位置。</param>
      <param name="newIndex" vsli:raw="The zero-based index specifying the new location of the item.">以零為基底的索引，它會指定項目的新位置。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)">
      <summary vsli:raw="Moves the item at the specified index to a new location in the collection.">將所指定索引位置的項目移至集合中的新位置。</summary>
      <param name="oldIndex" vsli:raw="The zero-based index specifying the location of the item to be moved.">以零為基底的索引，它會指定要移動之項目的位置。</param>
      <param name="newIndex" vsli:raw="The zero-based index specifying the new location of the item.">以零為基底的索引，它會指定項目的新位置。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged&quot; /&gt; event with the provided arguments.">使用提供的引數，引發 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged" /> 事件。</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged&quot; /&gt; event with the provided arguments.">使用提供的引數，引發 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged" /> 事件。</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index of the collection.">移除集合指定索引位置的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">移除項目之以零為起始的索引。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary vsli:raw="Replaces the element at the specified index.">取代指定之索引處的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">要取代的項目之以零起始的索引。</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">指定之索引處的項目新值。</param>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyDictionary`2">
      <summary>代表索引鍵/值組的唯讀、泛型集合。</summary>
      <typeparam name="TKey">字典中索引鍵的類型。</typeparam>
      <typeparam name="TValue">字典中值的類型。</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>初始化 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 類別的新執行個體，這個執行個體是指定之字典的包裝函式。</summary>
      <param name="dictionary">要包裝的字典。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>判斷字典是否包含具有指定索引鍵的項目。</summary>
      <param name="key">要在字典中尋找的索引鍵。</param>
      <returns>如果字典包含具有指定索引鍵的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator">
      <summary>傳回在 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 中逐一查看的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要加入字典的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Clear">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>判斷字典是否包含特定值。</summary>
      <param name="item">要在字典中尋找的物件。</param>
      <returns>如果在字典中找到 <paramref name="item" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>從指定的陣列索引處開始，將字典的項目複製到陣列。</summary>
      <param name="array">從字典複製項目之目的地的一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。
              
-或- 
來源字典中的項目數大於 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 結尾的可用空間。
              
-或- 
類型 <paramref name="T" /> 無法自動轉換成目的 <paramref name="array" /> 類型。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要從字典中移除的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
      <returns>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="key">做為要加入項目之索引鍵的物件。</param>
      <param name="value">做為要加入項目之值的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
      <returns>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定的陣列索引處開始，將字典的項目複製到陣列。</summary>
      <param name="array">從字典複製項目之目的地的一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
  
-或- 
來源字典中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。  
  
-或- 
來源字典的類型無法自動轉換為目的地 <paramref name="array" /> 的類型。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="key">要加入的項目的索引鍵。</param>
      <param name="value">要加入的項目的值。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>判斷字典是否包含具有指定索引鍵的項目。</summary>
      <param name="key">要在字典中尋找的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <returns>如果字典包含具有指定索引鍵的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>傳回字典的列舉值。</summary>
      <returns>字典的列舉值。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="key">要移除的項目索引鍵。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>擷取與指定之索引鍵相關聯的值。</summary>
      <param name="key">將擷取其值的索引鍵。</param>
      <param name="value">這個方法傳回時，如果找到索引鍵，則為與指定索引鍵關聯的值，否則為 <paramref name="value" /> 參數的型別預設值。 這個參數會以未初始化的狀態傳遞。</param>
      <returns>如果實作 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 之物件包含具有指定索引鍵的元素，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Count">
      <summary>取得字典中的項目數目。</summary>
      <returns>字典中的項目數目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary">
      <summary>取得這個 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 物件包裝的字典。</summary>
      <returns>這個物件包裝的字典。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)">
      <summary>取得具有指定之索引鍵的項目。</summary>
      <param name="key">要取得的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">屬性已擷取，並且找不到 <paramref name="key" />。</exception>
      <returns>具有指定索引鍵的項目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys">
      <summary>取得索引鍵集合，其中包含此字典的索引鍵。</summary>
      <returns>索引鍵集合，其中包含此字典的索引鍵。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary>取得值，這個值表示字典是否為唯讀。</summary>
      <returns>一律 <see langword="true" /> 會傳回，表示字典是唯讀的。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Item(`0)">
      <summary>取得具有指定之索引鍵的項目。</summary>
      <param name="key">要取得或設定之項目的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">屬性已擷取，並且找不到 <paramref name="key" />。</exception>
      <exception cref="T:System.NotSupportedException">已設定該屬性。</exception>
      <returns>具有指定索引鍵的項目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>取得集合，其中包含字典的索引鍵。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 之物件的索引鍵。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>取得集合，其中包含此字典中的值。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 之物件中的值。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary>取得可列舉集合，其中包含唯讀字典中的索引鍵。</summary>
      <returns>包含唯讀字典中索引鍵的可列舉集合。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary>取得可列舉集合，其中包含唯讀字典中的值。</summary>
      <returns>包含唯讀字典中之值的可列舉集合。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，這個值會指出是否同步處理對字典的存取 (具備執行緒安全)。</summary>
      <returns>如果會同步對字典的存取 (安全執行緒)，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>取得物件，這個物件可用來同步存取字典。</summary>
      <returns>可用來同步存取字典的物件。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>取得值，這個值表示字典是否具有固定大小。</summary>
      <returns>如果字典具有固定大小則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>取得值，這個值表示字典是否為唯讀。</summary>
      <returns>所有情況下都是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>取得具有指定之索引鍵的項目。</summary>
      <param name="key">要取得或設定之項目的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">已設定該屬性。  
  
-或- 
屬性已設定、<paramref name="key" /> 不存在於集合中，而且字典具有固定大小。</exception>
      <returns>具有指定索引鍵的項目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys">
      <summary>取得集合，其中包含字典的索引鍵。</summary>
      <returns>集合，包含字典的索引鍵。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values">
      <summary>取得集合，其中包含此字典中的值。</summary>
      <returns>集合，其中包含此字典中的值。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Values">
      <summary>取得集合，其中包含此字典中的值。</summary>
      <returns>集合，其中包含實作 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 之物件中的值。</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection">
      <summary>代表 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 物件之索引鍵的唯讀集合。</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>從特定的陣列索引開始，將集合的元素複製到陣列中。</summary>
      <param name="array">從集合複製項目之目的端一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
  
-或- 
來源集合中的項目數目大於從 <paramref name="arrayIndex" /> 到目的端 <paramref name="array" /> 結尾的可用空間。  
  
-或- 
類型 <paramref name="T" /> 無法自動轉換成目的 <paramref name="array" /> 類型。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要新增至集合的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
      <summary>判斷此集合是否包含特定的值。</summary>
      <param name="item">要在集合中找出的物件。</param>
      <returns>若 <paramref name="item" /> 存在於此集合則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要從集合中移除的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
      <returns>如果已順利從集合中移除 <paramref name="item" /> 則為 <see langword="true" />，否則為 <see langword="false" />。 如果在原始集合中找不到 <paramref name="item" />，則這個方法也會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從特定的陣列索引開始，將集合的元素複製到陣列中。</summary>
      <param name="array">從集合複製項目之目的端一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
  
-或- 
來源集合中的項目數目大於從 <paramref name="index" /> 到目的端 <paramref name="array" /> 結尾的可用空間。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.Count">
      <summary>取得集合中的項目數。</summary>
      <returns>集合中元素的數目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly">
      <summary>取得值，這個值表示字典是否為唯讀。</summary>
      <returns>所有情況下都是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，這個值會指出是否同步處理對集合的存取 (具備執行緒安全)。</summary>
      <returns>如果同步處理對集合的存取 (具備執行緒安全)，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>取得物件，這個物件可以用來對集合進行同步存取。</summary>
      <returns>可用來同步存取集合的物件。</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection">
      <summary>代表 <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" /> 物件值的唯讀集合。</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>從特定的陣列索引開始，將集合的元素複製到陣列中。</summary>
      <param name="array">從集合複製項目之目的端一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="arrayIndex">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
  
-或- 
來源集合中的項目數目大於從 <paramref name="arrayIndex" /> 到目的端 <paramref name="array" /> 結尾的可用空間。  
  
-或- 
類型 <paramref name="T" /> 無法自動轉換成目的 <paramref name="array" /> 類型。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要新增至集合的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
      <summary>判斷此集合是否包含特定的值。</summary>
      <param name="item">要在集合中找出的物件。</param>
      <returns>若 <paramref name="item" /> 存在於此集合則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
      <summary>在所有情況下都會擲回 <see cref="T:System.NotSupportedException" /> 例外狀況。</summary>
      <param name="item">要從集合中移除的物件。</param>
      <exception cref="T:System.NotSupportedException">在所有情況下。</exception>
      <returns>如果已順利從集合中移除 <paramref name="item" /> 則為 <see langword="true" />，否則為 <see langword="false" />。 如果在原始集合中找不到項目，則這個方法也會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從特定的陣列索引開始，將集合的元素複製到陣列中。</summary>
      <param name="array">從集合複製項目之目的端一維陣列。 陣列必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
  
-或- 
來源集合中的項目數目大於從 <paramref name="index" /> 到目的端 <paramref name="array" /> 結尾的可用空間。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.Count">
      <summary>取得集合中的項目數。</summary>
      <returns>集合中元素的數目。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
      <summary>取得值，這個值表示集合是否為唯讀。</summary>
      <returns>所有情況下都是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>取得值，這個值會指出是否同步處理對集合的存取 (具備執行緒安全)。</summary>
      <returns>如果同步處理對集合的存取 (具備執行緒安全)，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>取得物件，這個物件可以用來對集合進行同步存取。</summary>
      <returns>可用來同步存取集合的物件。</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
      <summary vsli:raw="Represents a read-only &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt;.">代表唯讀 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。</summary>
      <typeparam name="T" vsli:raw="The type of elements in the collection.">集合中項目的類型。</typeparam>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">加入或移除項目時發生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when the collection changes.">當集合變更時發生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1&quot; /&gt; class that serves as a wrapper around the specified &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt;.">初始化 <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> 類別的新執行個體，這個執行個體是所指定 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> 周圍的包裝函式。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ObjectModel.ObservableCollection`1&quot; /&gt; with which to create this instance of the &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1&quot; /&gt; class.">用於建立這個 <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" /> 類別執行個體的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged&quot; /&gt; event using the provided arguments.">使用提供的引數，引發 <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged" /> 事件。</summary>
      <param name="args" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged&quot; /&gt; event using the provided arguments.">使用提供的引數，引發 <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged" /> 事件。</summary>
      <param name="args" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="T:System.Collections.Specialized.INotifyCollectionChanged">
      <summary vsli:raw="Notifies listeners of dynamic changes, such as when an item is added and removed or the whole list is cleared.">通知接聽項有動態變更，例如新增和移除項目時，或清除整份清單時。</summary>
    </member>
    <member name="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <summary vsli:raw="Occurs when the collection changes.">當集合變更時發生。</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedAction">
      <summary vsli:raw="Describes the action that caused a &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">描述造成 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的動作。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
      <summary vsli:raw="An item was added to the collection.">已將項目加入此集合中。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move">
      <summary vsli:raw="An item was moved within the collection.">已在此集合中移動項目。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
      <summary vsli:raw="An item was removed from the collection.">已將項目從此集合移除。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
      <summary vsli:raw="An item was replaced in the collection.">已取代此集合中的項目。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
      <summary vsli:raw="The contents of the collection changed dramatically.">集合的內容發生劇烈變更。</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">提供 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" /> 變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This must be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt;.">造成事件的動作。 這必須設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />。</param>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a multi-item change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述多個項目的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt;, &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Add&quot; /&gt;, or &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove&quot; /&gt;.">造成事件的動作。 這可以設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />、<see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />。</param>
      <param name="changedItems" vsli:raw="The items that are affected by the change.">受變更影響的項目。</param>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a multi-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述多個項目 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> 的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can only be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;.">造成事件的動作。 這只能設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />。</param>
      <param name="newItems" vsli:raw="The new items that are replacing the original items.">取代原始項目的新項目。</param>
      <param name="oldItems" vsli:raw="The original items that are replaced.">所取代的原始項目。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Replace.">如果 <paramref name="action" /> 不是 Replace。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="If &lt;paramref name=&quot;oldItems&quot; /&gt; or &lt;paramref name=&quot;newItems&quot; /&gt; is null.">如果 <paramref name="oldItems" /> 或 <paramref name="newItems" /> 為 null。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a multi-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述多個項目 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> 的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can only be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;.">造成事件的動作。 這只能設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />。</param>
      <param name="newItems" vsli:raw="The new items that are replacing the original items.">取代原始項目的新項目。</param>
      <param name="oldItems" vsli:raw="The original items that are replaced.">所取代的原始項目。</param>
      <param name="startingIndex" vsli:raw="The index of the first item of the items that are being replaced.">所要取代項目之第一個項目的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Replace.">如果 <paramref name="action" /> 不是 Replace。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="If &lt;paramref name=&quot;oldItems&quot; /&gt; or &lt;paramref name=&quot;newItems&quot; /&gt; is null.">如果 <paramref name="oldItems" /> 或 <paramref name="newItems" /> 為 null。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a multi-item change or a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述多個項目的變更或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" /> 變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt;, &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Add&quot; /&gt;, or &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove&quot; /&gt;.">造成事件的動作。 這可以設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />、<see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />。</param>
      <param name="changedItems" vsli:raw="The items affected by the change.">受變更影響的項目。</param>
      <param name="startingIndex" vsli:raw="The index where the change occurred.">發生變更所在的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Reset, Add, or Remove, if &lt;paramref name=&quot;action&quot; /&gt; is Reset and either &lt;paramref name=&quot;changedItems&quot; /&gt; is not null or &lt;paramref name=&quot;startingIndex&quot; /&gt; is not -1, or if action is Add or Remove and &lt;paramref name=&quot;startingIndex&quot; /&gt; is less than -1.">如果 <paramref name="action" /> 不是 Reset、Add 或 Remove，如果 <paramref name="action" /> 是 Reset，且 <paramref name="changedItems" /> 不是 null 或 <paramref name="startingIndex" /> 不是 -1，或如果動作是 Add 或 Remove 且 <paramref name="startingIndex" /> 小於 -1。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is Add or Remove and &lt;paramref name=&quot;changedItems&quot; /&gt; is null.">如果 <paramref name="action" /> 是 Add 或 Remove 且 <paramref name="changedItems" /> 為 null。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a multi-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述多個項目 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> 的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can only be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt;.">造成事件的動作。 這只能設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />。</param>
      <param name="changedItems" vsli:raw="The items affected by the change.">受變更影響的項目。</param>
      <param name="index" vsli:raw="The new index for the changed items.">變更項目的新索引。</param>
      <param name="oldIndex" vsli:raw="The old index for the changed items.">變更項目的舊索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Move or &lt;paramref name=&quot;index&quot; /&gt; is less than 0.">如果 <paramref name="action" /> 不是 Move，或 <paramref name="index" /> 小於 0。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a one-item change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述一個項目的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt;, &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Add&quot; /&gt;, or &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove&quot; /&gt;.">造成事件的動作。 這可以設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />、<see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />。</param>
      <param name="changedItem" vsli:raw="The item that is affected by the change.">受變更影響的項目。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Reset, Add, or Remove, or if &lt;paramref name=&quot;action&quot; /&gt; is Reset and &lt;paramref name=&quot;changedItem&quot; /&gt; is not null.">如果 <paramref name="action" /> 不是 Reset、Add 或 Remove，或者如果 <paramref name="action" /> 是 Reset，而且 <paramref name="changedItem" /> 不是 null。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a one-item change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述一個項目的變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset&quot; /&gt;, &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Add&quot; /&gt;, or &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove&quot; /&gt;.">造成事件的動作。 這可以設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset" />、<see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add" /> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove" />。</param>
      <param name="changedItem" vsli:raw="The item that is affected by the change.">受變更影響的項目。</param>
      <param name="index" vsli:raw="The index where the change occurred.">發生變更所在的索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Reset, Add, or Remove, or if &lt;paramref name=&quot;action&quot; /&gt; is Reset and either &lt;paramref name=&quot;changedItems&quot; /&gt; is not null or &lt;paramref name=&quot;index&quot; /&gt; is not -1.">如果 <paramref name="action" /> 不是 Reset、Add 或 Remove，或者 <paramref name="action" /> 是 Reset，而且 <paramref name="changedItems" /> 不是 null 或 <paramref name="index" /> 不是 -1。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a one-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述一個項目的 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" /> 變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can only be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt;.">造成事件的動作。 這只能設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />。</param>
      <param name="changedItem" vsli:raw="The item affected by the change.">受變更影響的項目。</param>
      <param name="index" vsli:raw="The new index for the changed item.">所變更項目的新索引。</param>
      <param name="oldIndex" vsli:raw="The old index for the changed item.">所變更項目的舊索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Move or &lt;paramref name=&quot;index&quot; /&gt; is less than 0.">如果 <paramref name="action" /> 不是 Move，或 <paramref name="index" /> 小於 0。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a one-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述一個項目的 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> 變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can only be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;.">造成事件的動作。 這只能設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />。</param>
      <param name="newItem" vsli:raw="The new item that is replacing the original item.">取代原始項目的新項目。</param>
      <param name="oldItem" vsli:raw="The original item that is replaced.">被取代的原始項目。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Replace.">如果 <paramref name="action" /> 不是 Replace。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedEventArgs&quot; /&gt; class that describes a one-item &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt; change.">初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /> 類別的新執行個體，這個執行個體會描述一個項目的 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" /> 變更。</summary>
      <param name="action" vsli:raw="The action that caused the event. This can be set to &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;.">造成事件的動作。 可以設定為 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />。</param>
      <param name="newItem" vsli:raw="The new item that is replacing the original item.">取代原始項目的新項目。</param>
      <param name="oldItem" vsli:raw="The original item that is replaced.">被取代的原始項目。</param>
      <param name="index" vsli:raw="The index of the item being replaced.">正被取代的項目索引。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="If &lt;paramref name=&quot;action&quot; /&gt; is not Replace.">如果 <paramref name="action" /> 不是 Replace。</exception>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
      <summary vsli:raw="Gets the action that caused the event.">取得造成此事件的動作。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NotifyCollectionChangedAction&quot; /&gt; value that describes the action that caused the event.">
        <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" /> 值，描述造成事件的動作。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
      <summary vsli:raw="Gets the list of new items involved in the change.">取得變更所涉及的新項目清單。</summary>
      <returns vsli:raw="The list of new items involved in the change.">變更所涉及的新項目清單。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary vsli:raw="Gets the index at which the change occurred.">取得發生變更所在的索引。</summary>
      <returns vsli:raw="The zero-based index at which the change occurred.">發生變更所在之以零為起始的索引。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
      <summary vsli:raw="Gets the list of items affected by a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;, Remove, or Move action.">取得受到 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />、Remove 或 Move 動作影響的項目清單。</summary>
      <returns vsli:raw="The list of items affected by a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace&quot; /&gt;, Remove, or Move action.">受到 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace" />、Remove 或 Move 動作影響的項目清單。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary vsli:raw="Gets the index at which a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt;, Remove, or Replace action occurred.">取得發生 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />、Remove 或 Replace 動作的索引。</summary>
      <returns vsli:raw="The zero-based index at which a &lt;see cref=&quot;F:System.Collections.Specialized.NotifyCollectionChangedAction.Move&quot; /&gt;, Remove, or Replace action occurred.">發生 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Move" />、Remove 或 Replace 動作的以零為起始的索引。</returns>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">代表處理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The object that raised the event.">引發事件的物件。</param>
      <param name="e" vsli:raw="Information about the event.">事件相關資訊。</param>
    </member>
    <member name="T:System.ComponentModel.DataErrorsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DataErrorsChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.DataErrorsChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="propertyName" vsli:raw="The name of the property that has an error.  &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the error is object-level.">發生錯誤之屬性的名稱。  <see langword="null" />，或者，如果錯誤為物件層級，則為 <see cref="F:System.String.Empty" />。</param>
    </member>
    <member name="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
      <summary vsli:raw="Gets the name of the property that has an error.">取得發生錯誤之屬性的名稱。</summary>
      <returns vsli:raw="The name of the property that has an error. &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if the error is object-level.">發生錯誤之屬性的名稱。 <see langword="null" />，或者，如果錯誤為物件層級，則為 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="T:System.ComponentModel.INotifyDataErrorInfo">
      <summary vsli:raw="Defines members that data entity classes can implement to provide custom synchronous and asynchronous validation support.">定義資料實體類別可實作以提供自訂同步和非同步驗證支援的成員。</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
      <summary vsli:raw="Occurs when the validation errors have changed for a property or for the entire entity.">當屬性或整個實體的驗證錯誤已變更時發生。</summary>
    </member>
    <member name="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
      <summary vsli:raw="Gets the validation errors for a specified property or for the entire entity.">取得指定之屬性或整個實體的驗證錯誤。</summary>
      <param name="propertyName" vsli:raw="The name of the property to retrieve validation errors for; or &lt;see langword=&quot;null&quot; /&gt; or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;, to retrieve entity-level errors.">要擷取其驗證錯誤的屬性名稱，或 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 表示要擷取實體的錯誤。</param>
      <returns vsli:raw="The validation errors for the property or entity.">屬性或實體的驗證錯誤。</returns>
    </member>
    <member name="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether the entity has validation errors.">取得值，這個值表示實體是否有驗證錯誤。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity currently has validation errors; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果實體目前有驗證錯誤，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanged">
      <summary vsli:raw="Notifies clients that a property value has changed.">通知用戶端已變更屬性值。</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="T:System.ComponentModel.INotifyPropertyChanging">
      <summary vsli:raw="Notifies clients that a property value is changing.">通知用戶端正在變更屬性值。</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging">
      <summary vsli:raw="Occurs when a property value is changing.">當屬性值變更中時發生。</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="propertyName" vsli:raw="The name of the property that changed.">已變更屬性的名稱。</param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName">
      <summary vsli:raw="Gets the name of the property that changed.">取得已變更屬性的名稱。</summary>
      <returns vsli:raw="The name of the property that changed.">已變更屬性的名稱。</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event raised when a property is changed on a component.">表示處理元件上屬性變更時所引發的 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> 事件的資料。</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangingEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyChangingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.PropertyChangingEventArgs" /> 類別的新執行個體。</summary>
      <param name="propertyName" vsli:raw="The name of the property whose value is changing.">其值為變更中之屬性的名稱。</param>
    </member>
    <member name="P:System.ComponentModel.PropertyChangingEventArgs.PropertyName">
      <summary vsli:raw="Gets the name of the property whose value is changing.">取得其值為變更中之屬性的名稱。</summary>
      <returns vsli:raw="The name of the property whose value is changing.">其值為變更中之屬性的名稱。</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyChangingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging&quot; /&gt; event of an &lt;see cref=&quot;T:System.ComponentModel.INotifyPropertyChanging&quot; /&gt; interface.">代表處理 <see cref="T:System.ComponentModel.INotifyPropertyChanging" /> 介面之 <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangingEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangingEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.ComponentModel.TypeConverterAttribute">
      <summary vsli:raw="Specifies what type to use as a converter for the object this attribute is bound to.">指定要用來做為此屬性所繫結至物件的型別轉換子。</summary>
    </member>
    <member name="F:System.ComponentModel.TypeConverterAttribute.Default">
      <summary vsli:raw="Specifies the type to use as a converter for the object this attribute is bound to.">指定這個屬性繫結物件所要用來做為轉換子的型別。</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt; class with the default type converter, which is an empty string (&quot;&quot;).">使用預設型別轉換子，也就是空字串 ("")，來初始化 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt; class, using the specified type name as the data converter for the object this attribute is bound to.">使用指定型別名稱做為這個屬性所繫結之物件的資料轉換子，來初始化 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 類別的新執行個體。</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the class to use for data conversion for the object this attribute is bound to.">類別的完整名稱，用於這個屬性所繫結之物件的資料轉換。</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt; class, using the specified type as the data converter for the object this attribute is bound to.">使用指定型別做為這個屬性所繫結之物件的資料轉換子，來初始化 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of the converter class to use for data conversion for the object this attribute is bound to.">
        <see cref="T:System.Type" /> 表示轉換子類別的型別，用於這個屬性所繫結之物件的資料轉換。</param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt;.">傳回值，表示指定的物件值是否等於目前的 <see cref="T:System.ComponentModel.TypeConverterAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">測試其數值相等的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件值等於目前 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 的值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">傳回這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.TypeConverterAttribute&quot; /&gt;.">目前 <see cref="T:System.ComponentModel.TypeConverterAttribute" /> 的雜湊碼。</returns>
    </member>
    <member name="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <summary vsli:raw="Gets the fully qualified type name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; to use as a converter for the object this attribute is bound to.">取得 <see cref="T:System.Type" /> 的完整型別名稱來做為這個屬性所繫結之物件的轉換子。</summary>
      <returns vsli:raw="The fully qualified type name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; to use as a converter for the object this attribute is bound to, or an empty string (&quot;&quot;) if none exists. The default value is an empty string (&quot;&quot;).">
        <see cref="T:System.Type" /> 的完整型別名稱，用來做為這個屬性所繫結之物件的轉換子，如果屬性值不存在的話，則為空字串 ("")。 預設值為空字串 ("")。</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptionProviderAttribute">
      <summary vsli:raw="Specifies the custom type description provider for a class. This class cannot be inherited.">指定類別的自訂型別描述提供者。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProviderAttribute&quot; /&gt; class using the specified type name.">使用指定的型別名稱，初始化 <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> 類別的新執行個體。</summary>
      <param name="typeName" vsli:raw="The qualified name of the type.">型別的限定名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProviderAttribute&quot; /&gt; class using the specified type.">使用指定的型別，初始化 <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" /> 類別的新執行個體。</summary>
      <param name="type" vsli:raw="The type to store in the attribute.">要儲存在屬性中的型別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ComponentModel.TypeDescriptionProviderAttribute.TypeName">
      <summary vsli:raw="Gets the type name for the type description provider.">取得型別描述提供者的型別名稱。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the qualified type name for the &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt;.">
        <see cref="T:System.String" />，包含 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 的限定型別名稱。</returns>
    </member>
    <member name="T:System.Reflection.ICustomTypeProvider">
      <summary vsli:raw="Represents an object that provides a custom type.">表示提供自訂型別的物件。</summary>
    </member>
    <member name="M:System.Reflection.ICustomTypeProvider.GetCustomType">
      <summary vsli:raw="Gets the custom type provided by this object.">取得這個物件所提供的自訂型別。</summary>
      <returns vsli:raw="The custom type.">自訂型別。</returns>
    </member>
    <member name="T:System.Windows.Input.ICommand">
      <summary vsli:raw="Defines a command.">定義命令。</summary>
    </member>
    <member name="E:System.Windows.Input.ICommand.CanExecuteChanged">
      <summary vsli:raw="Occurs when changes occur that affect whether or not the command should execute.">發生於影響命令是否應執行的變更發生時。</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
      <summary vsli:raw="Defines the method that determines whether the command can execute in its current state.">定義用來判斷命令是否能以其目前狀態執行的方法。</summary>
      <param name="parameter" vsli:raw="Data used by the command.  If the command does not require data to be passed, this object can be set to &lt;see langword=&quot;null&quot; /&gt;.">命令所用的資料。  如果命令不需要傳遞資料，則這個物件可設為 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this command can be executed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個命令可執行，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.ICommand.Execute(System.Object)">
      <summary vsli:raw="Defines the method to be called when the command is invoked.">定義叫用命令時要呼叫的方法。</summary>
      <param name="parameter" vsli:raw="Data used by the command.  If the command does not require data to be passed, this object can be set to &lt;see langword=&quot;null&quot; /&gt;.">命令所用的資料。  如果命令不需要傳遞資料，則這個物件可設為 <see langword="null" />。</param>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class that a type or property should use when it is serialized.">識別序列化時應該使用之類型或屬性的 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類別。</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializerAttribute&quot; /&gt; class, using an assembly qualified type name string.">使用組件限定類型名稱字串初始化 <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> 類別的新執行個體。</summary>
      <param name="valueSerializerTypeName" vsli:raw="The assembly qualified type name string for the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class to use.">供 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類別使用的組件限定類型名稱字串。</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializerAttribute&quot; /&gt; class, using the specified type.">使用指定的類型，初始化 <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> 類別的新執行個體。</summary>
      <param name="valueSerializerType" vsli:raw="A type that represents the type of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">表示 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類別類型的類型。</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class reported by this attribute.">取得這個屬性所報告之 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類別的類型。</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">
        <see cref="T:System.Windows.Markup.ValueSerializer" /> 的類型。</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary vsli:raw="Gets the assembly qualified name of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; type for this type or property.">為這個類型或屬性取得 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類型的組件限定名稱。</summary>
      <returns vsli:raw="The assembly qualified name of the type.">類型的組件限定名稱。</returns>
    </member>
  </members>
</doc>