<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.DispatchProxy</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.DispatchProxy">
      <summary>提供具現化 Proxy 物件及處理其方法分派的機制。</summary>
    </member>
    <member name="M:System.Reflection.DispatchProxy.#ctor" />
    <member name="M:System.Reflection.DispatchProxy.Create``2">
      <summary>建立衍生自類別 <typeparamref name="TProxy" /> 的物件執行個體並實作介面 <typeparamref name="T" />。</summary>
      <typeparam name="T">Proxy 應執行的介面。</typeparam>
      <typeparam name="TProxy">要用於 proxy 類別的基類。</typeparam>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> 是一個類別，或 <typeparamref name="TProxy" /> 已密封或沒有無參數建構函式。</exception>
      <returns>實作 <typeparamref name="T" /> 的物件執行個體。</returns>
    </member>
    <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
      <summary>當呼叫所產生之 Proxy 型別上的任何方法時，會叫用此方法以分派控制。</summary>
      <param name="targetMethod">呼叫者叫用的方法。</param>
      <param name="args">呼叫者傳遞到方法的引數。</param>
      <returns>要傳回給呼叫者的物件，或針對 void 方法則為 <see langword="null" />。</returns>
    </member>
  </members>
</doc>