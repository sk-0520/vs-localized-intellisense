<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">인증에 사용할 프로토콜을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">익명 인증을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">기본 인증을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">다이제스트 인증을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">Windows 인증을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">클라이언트와 협상하여 인증 체계를 결정합니다. 클라이언트와 서버 모두 Kerberos를 지원하면 이 인증 체계가 사용되고, 그렇지 않으면 NTLM이 사용됩니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">인증이 허용되지 않습니다. 이 플래그가 설정된 상태에서 <see cref="T:System.Net.HttpListener" /> 개체를 요청하는 클라이언트는 항상 403 Forbidden 상태를 받게 됩니다. 이 플래그는 리소스를 클라이언트에 제공하지 않아야 하는 경우에 사용합니다.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">NTLM 인증을 지정합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">
        <see cref="T:System.Net.WebRequest" /> 클래스와 이 클래스의 파생 클래스를 사용하여 가져온 리소스의 캐싱 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">서버를 사용하여 요청을 만족시킵니다. 클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다. 이 동작은 .NET Framework에서 제공하는 시스템 구성 파일에 기본적으로 지정된 캐시 동작입니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">캐시의 리소스를 사용할 수 있는 경우 캐시에서 리소스 요청을 만족시키고, 그렇지 않으면 리소스 요청을 서버로 보냅니다. 요청된 항목을 클라이언트와 서버 사이의 캐시에서 사용할 수 있으면 중간 캐시에서 요청을 만족시킬 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">로컬로 캐시된 리소스를 사용하여 요청을 만족시키며, 캐시에 해당 항목이 없더라도 요청을 서버로 보내지는 않습니다. 이 캐시 정책 수준이 지정된 경우 클라이언트 캐시에 항목이 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">캐시된 리소스 복사본을 사용하거나 서버로 리소스 요청을 보냄으로써 리소스 요청을 만족시킵니다. 현재 캐시 정책과 콘텐츠가 캐시에 보관된 기간에 따라 수행할 작업이 결정됩니다. 대부분의 애플리케이션에서는 이 캐시 수준을 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">캐시의 리소스를 사용하여 요청을 만족시키지 않고 리소스를 캐시하지 않습니다. 리소스가 로컬 캐시에 있으면 제거됩니다. 이 정책 수준은 중간 캐시에서 리소스를 제거해야 함을 나타냅니다. HTTP 캐싱 프로토콜에서 이 작업은 <see langword="no-cache" /> 캐시 제어 지시문을 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">서버를 사용하여 요청을 만족시킵니다. 응답은 캐시에 저장될 수 있습니다. HTTP 캐싱 프로토콜에서 이 작업은 <see langword="no-cache" /> 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">캐시된 리소스 복사본의 타임스탬프가 서버에 있는 리소스의 타임스탬프와 동일하면 캐시된 리소스 복사본을 사용하여 요청을 만족시키고, 그렇지 않으면 서버에서 리소스를 다운로드하여 호출자에게 제공한 다음 캐시에 저장합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.WebRequest" /> 개체를 사용하여 가져온 리소스에 대한 애플리케이션의 캐싱 요구 사항을 정의합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">
        <see cref="T:System.Net.Cache.RequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">
        <see cref="T:System.Net.Cache.RequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다. 지정된 캐시 정책을 사용합니다.</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> 개체를 사용하여 가져온 리소스의 캐시 동작을 지정하는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">level이 유효한 <see cref="T:System.Net.Cache.RequestCacheLevel" /> 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">이 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">이 인스턴스에 대한 <see cref="T:System.String" />이 들어 있는 <see cref="P:System.Net.Cache.RequestCachePolicy.Level" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">이 인스턴스가 생성될 때 지정된 <see cref="T:System.Net.Cache.RequestCacheLevel" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.RequestCacheLevel" /> 개체를 사용하여 가져온 리소스의 캐시 동작을 지정하는 <see cref="T:System.Net.WebRequest" /> 값입니다.</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">쿠키를 관리하는 데 사용되는 메서드 및 속성 집합을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">
        <see cref="T:System.Net.Cookie" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">지정된 <see cref="T:System.Net.Cookie" />와 <see cref="P:System.Net.Cookie.Name" />을 사용하여 <see cref="P:System.Net.Cookie.Value" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 이름입니다. <paramref name="name" />에는 등호, 세미콜론, 쉼표, 줄 바꿈(\n), 리턴(\r), 탭(\t) 및 공백 문자와 같은 문자를 사용할 수 없습니다. 달러 기호("$")는 첫 문자로 사용할 수 없습니다.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" />의 값입니다. <paramref name="value" />에는 세미콜론, 쉼표 같은 문자를 사용할 수 없습니다.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="name" /> 매개 변수의 길이가 0인 경우  
  
또는 
<paramref name="name" /> 매개 변수에 잘못된 문자가 포함된 경우  
  
또는 
<paramref name="value" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="value" /> 매개 변수에 잘못된 문자를 포함하며 따옴표로 묶이지 않은 문자열이 있는 경우</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">지정된 <see cref="T:System.Net.Cookie" />, <see cref="P:System.Net.Cookie.Name" /> 및 <see cref="P:System.Net.Cookie.Value" />를 사용하여 <see cref="P:System.Net.Cookie.Path" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 이름입니다. <paramref name="name" />에는 등호, 세미콜론, 쉼표, 줄 바꿈(\n), 리턴(\r), 탭(\t) 및 공백 문자와 같은 문자를 사용할 수 없습니다. 달러 기호("$")는 첫 문자로 사용할 수 없습니다.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" />의 값입니다. <paramref name="value" />에는 세미콜론, 쉼표 같은 문자를 사용할 수 없습니다.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">이 <see cref="T:System.Net.Cookie" />를 적용할 원본 서버에 있는 URI의 하위 집합입니다. 기본값은 "/"입니다.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="name" /> 매개 변수의 길이가 0인 경우  
  
또는 
<paramref name="name" /> 매개 변수에 잘못된 문자가 포함된 경우  
  
또는 
<paramref name="value" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="value" /> 매개 변수에 잘못된 문자를 포함하며 따옴표로 묶이지 않은 문자열이 있는 경우</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">지정된 <see cref="T:System.Net.Cookie" />, <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" /> 및 <see cref="P:System.Net.Cookie.Path" />을 사용하여 <see cref="P:System.Net.Cookie.Domain" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 이름입니다. <paramref name="name" />에는 등호, 세미콜론, 쉼표, 줄 바꿈(\n), 리턴(\r), 탭(\t) 및 공백 문자와 같은 문자를 사용할 수 없습니다. 달러 기호("$")는 첫 문자로 사용할 수 없습니다.</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> 개체의 값입니다. <paramref name="value" />에는 세미콜론, 쉼표 같은 문자를 사용할 수 없습니다.</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">이 <see cref="T:System.Net.Cookie" />를 적용할 원본 서버에 있는 URI의 하위 집합입니다. 기본값은 "/"입니다.</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">이 <see cref="T:System.Net.Cookie" />가 유효한 선택적 인터넷 도메인입니다. 기본값은 이 <see cref="T:System.Net.Cookie" />를 받은 호스트입니다.</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="name" /> 매개 변수의 길이가 0인 경우  
  
또는 
<paramref name="name" /> 매개 변수에 잘못된 문자가 포함된 경우  
  
또는 
<paramref name="value" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="value" /> 매개 변수에 잘못된 문자를 포함하며 따옴표로 묶이지 않은 문자열이 있는 경우</exception>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">
        <see cref="M:System.Object.Equals(System.Object)" /> 메서드를 재정의합니다.</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">에 대 한 참조를 <see cref="T:System.Net.Cookie" />입니다.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">
        <see cref="T:System.Net.Cookie" />가 <paramref name="comparand" />인 경우 <see langword="true" />를 반환합니다. <see cref="T:System.Net.Cookie" />, <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" /> 및 <see cref="P:System.Net.Cookie.Domain" /> 속성이 같으면 두 <see cref="P:System.Net.Cookie.Version" /> 인스턴스는 동일한 것으로 처리됩니다. <see cref="P:System.Net.Cookie.Name" />과 <see cref="P:System.Net.Cookie.Domain" /> 문자열 비교에서는 대/소문자를 구분하지 않습니다.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">
        <see cref="M:System.Object.GetHashCode" /> 메서드를 재정의합니다.</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">이 인스턴스에 대한 부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">
        <see cref="M:System.Object.ToString" /> 메서드를 재정의합니다.</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">HTTP Cookie: 요청 헤더에 포함할 수 있도록 이 <see cref="T:System.Net.Cookie" /> 개체의 문자열 표시를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">서버가 <see cref="T:System.Net.Cookie" />에 추가할 수 있는 주석을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">이 <see cref="T:System.Net.Cookie" />에 대한 용도를 문서화할 선택적 주석입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">서버가 <see cref="T:System.Net.Cookie" />를 제공할 수 있는 URI 주석을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">이 <see cref="T:System.Net.Cookie" />에 대한 URI 참조의 용도를 나타내는 선택적 주석입니다. 해당 값은 URI 형식을 준수해야 합니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">서버가 설정하는 삭제 플래그를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">현재 세션 끝에서 클라이언트가 <see cref="T:System.Net.Cookie" />를 삭제하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">
        <see cref="T:System.Net.Cookie" />가 유효한 URI를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">
        <see cref="T:System.Net.Cookie" />가 유효한 URI입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />의 현재 상태를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />가 만료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 대한 만료 날짜와 시간을 <see cref="T:System.DateTime" />으로 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">
        <see cref="T:System.Net.Cookie" /> 인스턴스로 설정한 <see cref="T:System.DateTime" />에 대한 만료 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">페이지 스크립트 또는 다른 활성 콘텐츠에서 이 쿠키에 액세스할 수 있는지 여부를 확인합니다.</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">페이지 스크립트 또는 다른 활성 콘텐츠에서 이 쿠키에 액세스할 수 있는지 여부를 나타내는 부울 값입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">set 작업에 지정된 값이 <see langword="null" />이거나 빈 문자열인 경우 
또는 
set 작업에 지정된 값에 잘못된 문자가 포함되어 있는 경우. <see cref="P:System.Net.Cookie.Name" /> 속성에는 등호, 세미콜론, 쉼표, 줄 바꿈(\n), 리턴(\r), 탭(\t) 및 공백 문자와 같은 문자를 사용할 수 없습니다. 달러 기호("$")는 첫 문자로 사용할 수 없습니다.</exception>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 이름입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">
        <see cref="T:System.Net.Cookie" />가 적용되는 URI를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">
        <see cref="T:System.Net.Cookie" />가 적용되는 URI입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">
        <see cref="T:System.Net.Cookie" />가 적용되는 TCP 포트 목록을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">set 작업에 지정된 값이 구문 분석되지 않거나 큰따옴표로 묶여 있지 않은 경우</exception>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">
        <see cref="T:System.Net.Cookie" />가 적용되는 TCP 포트 목록입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />의 보안 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">후속 요청이 HTTPS(Secure Hypertext Transfer Protocol)를 사용하는 경우 클라이언트가 이 후속 요청에서만 쿠키를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">쿠키가 <see cref="T:System.DateTime" />으로 발행된 시간을 가져옵니다.</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">쿠키가 <see cref="T:System.DateTime" />으로 발행된 시간입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" />의 <see cref="T:System.Net.Cookie" />를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" />에 대한 <see cref="T:System.Net.Cookie" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">쿠키가 준수하는 HTTP 상태 유지 관리 버전을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">버전에 지정된 값이 허용되지 않는 경우</exception>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">쿠키가 준수하는 HTTP 상태 유지 관리 버전입니다.</returns>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">
        <see cref="T:System.Net.Cookie" /> 클래스의 인스턴스에 대한 컬렉션 컨테이너를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">
        <see cref="T:System.Net.CookieCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />을 <see cref="T:System.Net.CookieCollection" />에 추가합니다.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 추가할 <see cref="T:System.Net.CookieCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">현재 인스턴스에 <see cref="T:System.Net.CookieCollection" />의 내용을 추가합니다.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">추가할 <see cref="T:System.Net.CookieCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">
        <see cref="T:System.Net.CookieCollection" /> 개체에서 요소를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">지정된 쿠키가 <see cref="T:System.Net.CookieCollection" />에 있는지 확인합니다.</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에서 찾을 쿠키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 쿠키가 <see cref="T:System.Net.CookieCollection" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">특정 인덱스부터 시작하여 <see cref="T:System.Net.CookieCollection" />의 요소를 지정된 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">
        <see cref="T:System.Net.CookieCollection" />을 복사할 대상 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">복사를 시작하는 대상 배열의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
이 <see cref="T:System.Net.CookieCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">이 <see cref="T:System.Net.CookieCollection" />의 요소를 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">이 <see cref="T:System.Net.CookieCollection" />의 요소를 대상 배열의 지정된 인덱스에서 시작하는 <see cref="T:System.Net.Cookie" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">
        <see cref="T:System.Net.Cookie" />을 복사할 대상 <see cref="T:System.Net.CookieCollection" /> 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">복사를 시작하는 대상 배열의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
이 <see cref="T:System.Net.CookieCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">이 <see cref="T:System.Net.CookieCollection" />의 요소를 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />를 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">이 컬렉션의 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에서 지정된 쿠키를 제거합니다.</summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에서 제거할 쿠키입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">
        <see langword="true" />이 <paramref name="cookie" />에서 제거되면 <see cref="T:System.Net.CookieCollection" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 메서드는 항목이 원래 컬렉션에 없는 경우에도 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />을 반복할 수 있는 열거자를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">이 컬렉션의 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 포함된 쿠키 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 포함된 쿠키 수입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">
        <see cref="T:System.Net.CookieCollection" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">컬렉션이 읽기 전용 <see cref="T:System.Net.CookieCollection" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">
        <see cref="T:System.Net.CookieCollection" />에 대한 액세스가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 대한 액세스가 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에서 특정 인덱스를 가진 <see cref="T:System.Net.CookieCollection" />를 가져옵니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">찾을 <see cref="T:System.Net.Cookie" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" />가 0보다 작은 경우 또는 <paramref name="index" />가 <see cref="P:System.Net.CookieCollection.Count" />보다 크거나 같은 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에서 가져온 특정 인덱스를 가진 <see cref="T:System.Net.CookieCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에서 특정 이름을 가진 <see cref="T:System.Net.CookieCollection" />를 가져옵니다.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">찾을 <see cref="T:System.Net.Cookie" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에서 가져온 특정 이름을 가진 <see cref="T:System.Net.CookieCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 대한 액세스를 동기화하는 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 대한 액세스를 동기화하는 개체입니다.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">
        <see cref="T:System.Net.CookieCollection" /> 개체의 컬렉션에 대한 컨테이너를 제공합니다.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">
        <see cref="T:System.Net.Cookie" />가 보유할 수 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스의 기본 최대 크기(바이트)를 나타냅니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">
        <see cref="T:System.Net.Cookie" />가 보유할 수 있는 기본 최대 <see cref="T:System.Net.CookieContainer" /> 인스턴스 수를 나타냅니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">
        <see cref="T:System.Net.Cookie" />가 각 도메인을 참조할 수 있는 기본 최대 <see cref="T:System.Net.CookieContainer" /> 인스턴스 수를 나타냅니다. 이 필드는 상수입니다.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">
        <see cref="T:System.Net.CookieContainer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">컨테이너가 보유할 수 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스 수에 대한 지정된 값을 사용하여 <see cref="T:System.Net.Cookie" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" />가 보유할 수 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스 수입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" />가 0보다 작거나 같습니다.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">특정 속성을 사용하여 <see cref="T:System.Net.CookieContainer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" />가 보유할 수 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스 수입니다.</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">도메인당 <see cref="T:System.Net.Cookie" /> 인스턴스의 수입니다.</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 있는 단일 <see cref="T:System.Net.CookieContainer" />의 최대 크기(바이트)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" />가 <see cref="F:System.Int32.MaxValue" />와 같지 않은 경우  
  
그리고 
 <paramref name="(perDomainCapacity" />가 0보다 작거나 같은 경우 또는 <paramref name="perDomainCapacity" />가 <paramref name="capacity)" />보다 큰 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" />가 0보다 작거나 같습니다.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">
        <see cref="T:System.Net.Cookie" />을 <see cref="T:System.Net.CookieContainer" />에 추가합니다. 이 메서드는 <see cref="T:System.Net.Cookie" />의 도메인을 사용하여 <see cref="T:System.Net.Cookie" />와 관련되는 도메인 컬렉션을 결정합니다.</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 추가할 <see cref="T:System.Net.CookieContainer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">
        <paramref name="cookie" />의 도메인이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" />가 <paramref name="maxCookieSize" />보다 큰 경우  
  
또는 
<paramref name="cookie" />의 도메인이 올바른 URI가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 <see cref="T:System.Net.CookieContainer" />의 내용을 추가합니다.</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 추가할 <see cref="T:System.Net.CookieContainer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">특정 URI에 대한 <see cref="T:System.Net.Cookie" />에 <see cref="T:System.Net.CookieContainer" />를 추가합니다.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 추가할 <see cref="T:System.Net.CookieContainer" />의 URI입니다.</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />에 추가할 <see cref="T:System.Net.CookieContainer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />가 <see langword="null" />이거나 <paramref name="cookie" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" />가 <paramref name="maxCookieSize" />보다 큰 경우  
  
또는 
<paramref name="cookie" />의 도메인이 올바른 URI가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">특정 URI에 대한 <see cref="T:System.Net.CookieCollection" />에 <see cref="T:System.Net.CookieContainer" />의 내용을 추가합니다.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 추가할 <see cref="T:System.Net.CookieContainer" />의 URI입니다.</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />에 추가할 <see cref="T:System.Net.CookieContainer" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" />에 지정된 쿠키 중 하나의 도메인이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">
        <paramref name="cookies" />의 쿠키 중 하나에 잘못된 도메인이 들어 있는 경우</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">특정 URI와 관련된 <see cref="T:System.Net.Cookie" /> 인스턴스를 나타내는 HTTP 쿠키가 포함된 HTTP 쿠키 헤더를 가져옵니다.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">필요한 <see cref="T:System.Net.Cookie" /> 인스턴스의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">세미콜론으로 구분된 <see cref="T:System.Net.Cookie" /> 인스턴스를 나타내는 문자열과 함께 HTTP 쿠키 헤더입니다.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">특정 URI와 관련된 <see cref="T:System.Net.CookieCollection" /> 인스턴스를 포함하는 <see cref="T:System.Net.Cookie" />을 가져옵니다.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">필요한 <see cref="T:System.Net.Cookie" /> 인스턴스의 URI입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">특정 URI와 관련된 <see cref="T:System.Net.CookieCollection" /> 인스턴스를 포함하는 <see cref="T:System.Net.Cookie" />입니다.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">HTTP 쿠키 헤더의 쿠키에 대한 <see cref="T:System.Net.Cookie" /> 인스턴스를 특정 URI에 대한 <see cref="T:System.Net.CookieContainer" />에 추가합니다.</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" />의 URI입니다.</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">HTTP가 설정한 쿠키 헤더의 내용으로 쉼표로 구분된 <see cref="T:System.Net.Cookie" /> 인스턴스와 함께 HTTP 서버에 의해 반환됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 또는 <paramref name="cookieHeader" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">쿠키 중 하나가 잘못된 경우  
  
 또는  
  
 쿠키 중 하나를 컨테이너에 추가하는 동안 오류가 발생한 경우</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.CookieContainer" />가 보유할 수 있는 <see cref="T:System.Net.Cookie" /> 인스턴스의 수를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" />가 0보다 작거나 같은 경우 또는 값이 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" />보다 작고 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" />가 <see cref="F:System.Int32.MaxValue" />와 같지 않은 경우</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />가 보유할 수 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스의 수입니다. 이 한계는 초과할 수 없는 한계이므로 <see cref="T:System.Net.Cookie" />를 추가할 때 이 한계를 초과하지 않도록 합니다.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">
        <see cref="T:System.Net.Cookie" />가 현재 보유하고 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스의 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">
        <see cref="T:System.Net.Cookie" />가 현재 보유하고 있는 <see cref="T:System.Net.CookieContainer" /> 인스턴스의 수입니다. 이 값은 모든 도메인에 있는 <see cref="T:System.Net.Cookie" /> 인스턴스의 총 수입니다.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />의 최대 허용 길이를 나타냅니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" />가 0보다 작거나 같습니다.</exception>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" />의 최대 허용 길이(바이트)입니다.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">
        <see cref="T:System.Net.CookieContainer" />가 도메인당 보유할 수 있는 <see cref="T:System.Net.Cookie" /> 인스턴스의 수를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" />가 0보다 작거나 같습니다.  
  
또는 
 <paramref name="(PerDomainCapacity" />가 허용 가능한 최대 쿠키 인스턴스 수(300)보다 크고 <see cref="F:System.Int32.MaxValue" />와 같지 않은 경우</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">도메인당 허용되는 <see cref="T:System.Net.Cookie" /> 인스턴스의 수입니다.</returns>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.CookieContainer" />에 <see cref="T:System.Net.Cookie" />를 추가할 때 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">
        <see cref="T:System.Net.CookieException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">
        <paramref name="serializationInfo" /> 및 <paramref name="streamingContext" />의 특정 값을 사용하여 <see cref="T:System.Net.CookieException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.CookieException" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">serialize된 개체 데이터를 보유하는 개체입니다. 데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">원본 또는 대상에 대한 컨텍스트 정보입니다. 이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.CookieException" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">여러 자격 증명에 대한 스토리지를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">
        <see cref="T:System.Net.CredentialCache" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">SMTP와 함께 사용할 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 자격 증명 캐시에 추가하고 이를 호스트 컴퓨터, 포트 및 인증 프로토콜과 연결합니다. 이 메서드를 사용하여 추가한 자격 증명은 SMTP에 대해서만 유효합니다. HTTP 또는 FTP 요청에는 이 메서드가 작동하지 않습니다.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">
        <paramref name="host" />를 사용하여 <paramref name="cred" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">자격 증명 캐시에 추가할 <see cref="T:System.Net.NetworkCredential" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="authType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" />이 허용되는 값이 아닌 경우.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">SMTP 이외의 프로토콜과 함께 사용할 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 자격 증명 캐시에 추가하고 이를 URI(Uniform Resource Identifier) 접두사 및 인증 프로토콜과 연결합니다.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" />에 명명된 리소스가 사용한 인증 체계입니다.</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">자격 증명 캐시에 추가할 <see cref="T:System.Net.NetworkCredential" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="authType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">동일한 자격 증명이 두 번 이상 추가되는 경우</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">지정된 호스트, 포트 및 인증 프로토콜과 관련된 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 반환합니다.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="authType" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" />이 허용되는 값이 아닌 경우.  
  
또는 
 <paramref name="host" />가 빈 문자열("")인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" />가 0보다 작은 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />이거나 캐시에 일치하는 자격 증명이 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">지정된 URI(Uniform Resource Identifier) 및 인증 형식과 관련된 <see cref="T:System.Net.NetworkCredential" /> 인스턴스를 반환합니다.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" />에 명명된 리소스가 사용한 인증 체계입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> 또는 <paramref name="authType" />가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />이거나 캐시에 일치하는 자격 증명이 없는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">
        <see cref="T:System.Net.CredentialCache" /> 인스턴스에서 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Net.CredentialCache" />입니다.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> 인스턴스가 지정된 호스트, 포트 및 인증 프로토콜과 관련된 경우 캐시에서 해당 인스턴스를 삭제합니다.</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">호스트 컴퓨터를 식별하는 <see cref="T:System.String" />입니다.</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" />에 연결할 포트를 지정하는 <see cref="T:System.Int32" />입니다.</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <paramref name="host" />에 연결할 때 사용되는 인증 체계를 식별하는 <see cref="T:System.String" />입니다.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">
        <see cref="T:System.Net.NetworkCredential" /> 인스턴스가 지정된 URI(Uniform Resource Identifier) 접두사 및 인증 프로토콜과 관련된 경우 캐시에서 해당 인스턴스를 삭제합니다.</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">자격 증명이 권한을 부여하는 리소스의 URI 접두사를 지정하는 <see cref="T:System.Uri" />입니다.</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" />에 명명된 호스트가 사용한 인증 체계입니다.</param>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">애플리케이션의 시스템 자격 증명을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">애플리케이션의 시스템 자격 증명을 나타내는 <see cref="T:System.Net.ICredentials" />입니다.</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">현재 보안 컨텍스트의 네트워크 자격 증명을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">현재 사용자 또는 애플리케이션의 네트워크 자격 증명을 나타내는 <see cref="T:System.Net.NetworkCredential" />입니다.</returns>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">
        <see cref="T:System.Net.HttpWebRequest" />에 대한 응답으로 받은 데이터를 압축하는 데 사용되는 파일 압축 및 압축 풀기 인코딩 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">모든 압축-압축 풀기 알고리즘을 사용합니다.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">Brotli 압축-압축 풀기 알고리즘을 사용합니다.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">Deflate 압축 및 압축 풀기 알고리즘을 사용합니다.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">gZip 압축 및 압축 풀기 알고리즘을 사용합니다.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">압축을 사용하지 않습니다.</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">네트워크 엔드포인트를 IP 주소 및 포트 번호의 호스트 이름 또는 문자열 표현으로 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">호스트 이름이나 IP 주소의 문자열 표현 및 포트 번호를 사용하여 <see cref="T:System.Net.DnsEndPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">호스트 이름이나 IP 주소의 문자열 표현입니다.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">주소와 연결된 포트 번호이거나, 사용할 수 있는 포트를 지정할 경우 0입니다. <paramref name="port" />는 호스트 순서로 지정됩니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">
        <paramref name="host" /> 매개 변수에 빈 문자열이 들어 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우  
  
또는 
 <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">호스트 이름이나 IP 주소의 문자열 표현, 포트 번호 및 주소 패밀리를 사용하여 <see cref="T:System.Net.DnsEndPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">호스트 이름이나 IP 주소의 문자열 표현입니다.</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">주소와 연결된 포트 번호이거나, 사용할 수 있는 포트를 지정할 경우 0입니다. <paramref name="port" />는 호스트 순서로 지정됩니다.</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">
        <paramref name="host" /> 매개 변수에 빈 문자열이 들어 있는 경우  
  
또는 
 <paramref name="addressFamily" />이(가) <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우  
  
또는 
 <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">두 개의 <see cref="T:System.Net.DnsEndPoint" /> 개체를 비교합니다.</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">현재 인스턴스와 비교할 <see cref="T:System.Net.DnsEndPoint" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 <see cref="T:System.Net.DnsEndPoint" /> 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" />의 해시 값을 반환합니다.</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" />의 정수 해시 값입니다.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" />의 호스트 이름이나 IP 주소의 문자열 표현 및 포트 번호를 반환합니다.</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">지정된 <see cref="T:System.Net.DnsEndPoint" />의 주소 패밀리, 호스트 이름이나 IP 주소 문자열 및 포트 번호가 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">IP(인터넷 프로토콜) 주소 패밀리를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">호스트 이름 또는 호스트 IP(인터넷 프로토콜) 주소의 문자열 표현을 가져옵니다.</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">호스트 이름 또는 IP 주소의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" />의 포트 번호를 가져옵니다.</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" />의 포트 번호를 나타내는 0에서 0xffff 범위의 정수 값입니다.</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">네트워크 주소를 식별합니다. 이 클래스는 <see langword="abstract" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">
        <see cref="T:System.Net.EndPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.EndPoint" /> 인스턴스에서 <see cref="T:System.Net.SocketAddress" /> 인스턴스를 만듭니다.</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">연결에 대한 엔드포인트 역할을 하는 소켓 주소입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">지정한 <see cref="T:System.Net.EndPoint" /> 인스턴스에서 초기화된 새 <see cref="T:System.Net.SocketAddress" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">엔드포인트 정보를 <see cref="T:System.Net.SocketAddress" /> 인스턴스로 serialize합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">엔드포인트 정보를 포함하는 <see cref="T:System.Net.SocketAddress" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">엔드포인트가 속하는 주소 패밀리를 가져옵니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">하위 클래스에서 재정의되지 않은 속성을 가져오거나 설정하려는 경우</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">HTTP에 대해 정의된 상태 코드 값이 포함됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">HTTP 상태 202에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Accepted" />는 요청에 대한 추가 처리가 허용되는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary vsli:raw="Equivalent to HTTP status 208. &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; indicates that the members of a WebDAV binding have already been enumerated in a preceding part of the multistatus response, and are not being included again.">HTTP 상태 208에 해당합니다. <see cref="F:System.Net.HttpStatusCode.AlreadyReported" />는 WebDAV 바인딩의 멤버가 multistatus 응답의 이전 부분에 이미 열거되었으며 다시 포함되지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">HTTP 상태 300에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Ambiguous" />는 요청된 정보에 여러 가지 표현이 포함되어 있는 경우에 표시됩니다. 기본적으로 이 상태는 리디렉션으로 처리되며 그 다음에 이 응답과 연결된 Location 헤더의 내용이 나옵니다. <c>Ambiguous</c>는 <c>MultipleChoices</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">HTTP 상태 502에 해당합니다. <see cref="F:System.Net.HttpStatusCode.BadGateway" />는 중간 프록시 서버가 다른 프록시 서버 또는 원본 서버로부터 잘못된 응답을 받은 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">HTTP 상태 400에 해당합니다. <see cref="F:System.Net.HttpStatusCode.BadRequest" />는 서버에서 요청을 인식할 수 없는 경우에 표시됩니다. 해당되는 오류가 없거나, 정확한 오류를 모르거나, 고유한 오류 코드가 없는 경우 <see cref="F:System.Net.HttpStatusCode.BadRequest" />가 전송됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">HTTP 상태 409에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Conflict" />는 서버에 충돌이 발생하여 요청을 수행할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">HTTP 상태 100에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Continue" />는 클라이언트에서 요청을 계속 수행할 수 있는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">HTTP 상태 201에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Created" />는 요청에 대한 결과로 응답이 보내지기 전에 새 리소스가 만들어진 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary vsli:raw="Equivalent to HTTP status 103. &lt;see cref=&quot;F:System.Net.HttpStatusCode.EarlyHints&quot; /&gt; indicates to the client that the server is likely to send a final response with the header fields included in the informational response.">HTTP 상태 103에 해당합니다. <see cref="F:System.Net.HttpStatusCode.EarlyHints" />는 서버에서 정보 응답에 포함된 헤더 필드가 있는 최종 응답을 보낼 가능성이 있음을 클라이언트에 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">HTTP 상태 417에 해당합니다. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" />는 서버에서 Expect 헤더에 예상되는 작업을 수행할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary vsli:raw="Equivalent to HTTP status 424. &lt;see cref=&quot;F:System.Net.HttpStatusCode.FailedDependency&quot; /&gt; indicates that the method couldn't be performed on the resource because the requested action depended on another action and that action failed.">HTTP 상태 424에 해당합니다. <see cref="F:System.Net.HttpStatusCode.FailedDependency" />는 요청된 작업이 다른 작업에 종속되어 있고 해당 작업이 실패했기 때문에 리소스에 대해 메서드를 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">HTTP 상태 403에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Forbidden" />은 서버에서 요청을 수행하지 않는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">HTTP 상태 302에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Found" />는 요청된 정보가 Location 헤더에 지정된 URI에 있는 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청은 GET 메서드를 사용합니다. <c>Found</c> 는 <c>Redirect</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">HTTP 상태 504에 해당합니다. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" />은 다른 프록시 서버 또는 원본 서버의 응답을 기다리는 동안 중간 프록시 서버의 시간이 초과된 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">HTTP 상태 410에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Gone" />은 요청된 리소스를 더 이상 사용할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">HTTP 상태 505에 해당합니다. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" />는 서버에서 요청된 HTTP 버전을 지원하지 않는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary vsli:raw="Equivalent to HTTP status 226. &lt;see cref=&quot;F:System.Net.HttpStatusCode.IMUsed&quot; /&gt; indicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.">HTTP 상태 226에 해당합니다. <see cref="F:System.Net.HttpStatusCode.IMUsed" />는 서버에서 리소스에 대한 요청을 수행했음을 나타내고, 응답은 현재 인스턴스에 적용된 하나 이상의 인스턴스 조작 결과를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary vsli:raw="Equivalent to HTTP status 507. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InsufficientStorage&quot; /&gt; indicates that the server is unable to store the representation needed to complete the request.">HTTP 상태 507에 해당합니다. <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" />는 서버가 요청을 완료하는 데 필요한 표현을 저장할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">HTTP 상태 500에 해당합니다. <see cref="F:System.Net.HttpStatusCode.InternalServerError" />는 서버에 일반 오류가 발생한 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">HTTP 상태 411에 해당합니다. <see cref="F:System.Net.HttpStatusCode.LengthRequired" />는 필요한 Content-length 헤더가 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary vsli:raw="Equivalent to HTTP status 423. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Locked&quot; /&gt; indicates that the source or destination resource is locked.">HTTP 상태 423에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Locked" />는 원본 또는 대상 리소스가 잠겨 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary vsli:raw="Equivalent to HTTP status 508. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LoopDetected&quot; /&gt; indicates that the server terminated an operation because it encountered an infinite loop while processing a WebDAV request with &quot;Depth: infinity&quot;. This status code is meant for backward compatibility with clients not aware of the 208 status code &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; appearing in multistatus response bodies.">HTTP 상태 508에 해당합니다. <see cref="F:System.Net.HttpStatusCode.LoopDetected" />는 "Depth: infinity"를 사용하여 WebDAV 요청을 처리하는 동안 무한 루프가 발생하여 서버가 작업을 종료했음을 나타냅니다. 이 상태 코드는 multistatus 응답 본문에 표시되는 208 상태 코드 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" />를 인식하지 못하는 클라이언트와의 호환성을 위한 것입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">HTTP 상태 405에 해당합니다. HTTP 상태 405에 해당합니다. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" />는 요청된 리소스에서 요청 메서드(POST 또는 GET)를 사용할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary vsli:raw="Equivalent to HTTP status 421. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MisdirectedRequest&quot; /&gt; indicates that the request was directed at a server that is not able to produce a response.">HTTP 상태 421에 해당합니다. <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" />는 응답을 생성할 수 없는 서버에서 요청을 전달했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">HTTP 상태 301에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Moved" />는 요청된 정보가 Location 헤더에 지정한 URI로 이동된 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청은 GET 메서드를 사용합니다. <c>Moved</c>는 <c>MovedPermanently</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">HTTP 상태 301에 해당합니다. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" />는 요청된 정보가 Location 헤더에 지정한 URI로 이동된 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. <c>MovedPermanently</c>는 <c>Moved</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">HTTP 상태 300에 해당합니다. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" />는 요청된 정보에 여러 가지 표현이 포함되어 있는 경우에 표시됩니다. 기본적으로 이 상태는 리디렉션으로 처리되며 그 다음에 이 응답과 연결된 Location 헤더의 내용이 나옵니다. <c>MultipleChoices</c>는 <c>Ambiguous</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary vsli:raw="Equivalent to HTTP status 207. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultiStatus&quot; /&gt; indicates multiple status codes for a single response during a Web Distributed Authoring and Versioning (WebDAV) operation. The response body contains XML that describes the status codes.">HTTP 상태 207에 해당합니다. <see cref="F:System.Net.HttpStatusCode.MultiStatus" />는 WebDAV(Web Distributed Authoring and Versioning) 작업 중 단일 응답에 대한 여러 상태 코드를 나타냅니다. 응답 본문에는 상태 코드를 설명하는 XML이 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 511. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NetworkAuthenticationRequired&quot; /&gt; indicates that the client needs to authenticate to gain network access; it's intended for use by intercepting proxies used to control access to the network.">HTTP 상태 511에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" />는 클라이언트가 네트워크 액세스를 얻기 위해 인증해야 함을 나타냅니다. 네트워크에 대한 액세스를 제어하는 데 사용되는 프록시를 가로채는 용도로 사용됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">HTTP 상태 204에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NoContent" />는 요청이 처리된 다음 응답이 빈 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">HTTP 상태 203에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" />은 메타 정보를 원본 서버 대신 캐시된 복사본에서 가져왔으므로 잘못될 수 있는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">HTTP 상태 406에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" />은 클라이언트가 Accept 헤더를 사용하여 리소스의 사용 가능한 표현을 허용하지 않도록 지정한 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary vsli:raw="Equivalent to HTTP status 510. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotExtended&quot; /&gt; indicates that further extensions to the request are required for the server to fulfill it.">HTTP 상태 510에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NotExtended" />는 서버에서 요청을 처리하기 위해 요청에 대한 추가 확장이 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">HTTP 상태 404에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NotFound" />는 요청된 리소스가 서버에 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">HTTP 상태 501에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NotImplemented" />는 서버에서 요청된 기능을 지원하지 않는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">HTTP 상태 304에 해당합니다. <see cref="F:System.Net.HttpStatusCode.NotModified" />는 클라이언트의 캐시된 복사본이 최신인 경우에 표시됩니다. 리소스의 내용이 전송되지 않습니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">HTTP 상태 200에 해당합니다. <see cref="F:System.Net.HttpStatusCode.OK" />는 요청이 성공하여 요청된 정보가 응답 중인 경우에 표시됩니다. 이 코드는 일반적으로 수신되는 상태 코드입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">HTTP 상태 206에 해당합니다. <see cref="F:System.Net.HttpStatusCode.PartialContent" />는 해당 응답이 바이트 범위가 포함된 GET 요청에서 요청한 부분 응답인 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">HTTP 상태 402에 해당합니다. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" />는 나중에 사용하기 위해 예약되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary vsli:raw="Equivalent to HTTP status 308. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PermanentRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.">HTTP 상태 308에 해당합니다. <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" />는 요청 정보가 Location 헤더에 지정된 URI에 있는 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청도 POST 메서드를 사용합니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">HTTP 상태 412에 해당합니다. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" />는 이 요청에 대해 설정된 조건이 잘못되어 요청을 수행할 수 없음을 나타냅니다. 조건은 If-Match, If-None-Match 또는 If-Unmodified-Since 등의 조건 요청 헤더를 사용하여 설정됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary vsli:raw="Equivalent to HTTP status 428. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionRequired&quot; /&gt; indicates that the server requires the request to be conditional.">HTTP 상태 428에 해당합니다. <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" />는 서버에서 요청을 조건부로 해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary vsli:raw="Equivalent to HTTP status 102. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Processing&quot; /&gt; indicates that the server has accepted the complete request but hasn't completed it yet.">HTTP 상태 102에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Processing" />은 서버가 전체 요청을 수락했지만 아직 완료하지 않았음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">HTTP 상태 407에 해당합니다. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" />는 요청된 프록시에 인증이 필요한 경우에 표시됩니다. Proxy-authenticate 헤더에 자세한 인증 수행 방법이 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">HTTP 상태 302에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Redirect" />는 요청된 정보가 Location 헤더에 지정된 URI에 있는 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청은 GET 메서드를 사용합니다. <c>Redirect</c>은 <c>Found</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">HTTP 상태 307에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" />는 요청 정보가 Location 헤더에 지정된 URI에 있는 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청도 POST 메서드를 사용합니다. <c>RedirectKeepVerb</c>는 <c>TemporaryRedirect</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">HTTP 상태 303에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" />는 POST를 수행하여 클라이언트를 Location 헤더에 지정된 URI로 자동으로 리디렉션합니다. Location 헤더에서 지정한 리소스에 대한 요청은 GET을 사용하여 수행됩니다. <c>RedirectMethod</c>는 <c>SeeOther</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">HTTP 상태 416에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" />은 범위의 시작이 리소스의 시작 이전이거나 범위의 끝이 리소스의 끝 이후이므로 리소스에서 요청한 데이터 범위를 반환할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">HTTP 상태 413에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" />는 요청이 너무 많아 서버에서 처리할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 431. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge&quot; /&gt; indicates that the server is unwilling to process the request because its header fields (either an individual header field or all the header fields collectively) are too large.">HTTP 상태 431에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" />는 헤더 필드(개별 헤더 필드 또는 모든 헤더 필드)가 너무 크기 때문에 서버에서 요청을 처리할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">HTTP 상태 408에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" />은 서버에서 예상한 시간 안에 클라이언트에서 요청을 보내지 않은 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">HTTP 상태 414에 해당합니다. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" />은 URI가 너무 긴 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">HTTP 상태 205에 해당합니다. <see cref="F:System.Net.HttpStatusCode.ResetContent" />는 클라이언트에서 현재 리소스를 다시 로드하는 것이 아니라 다시 설정해야 하는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">HTTP 상태 303에 해당합니다. <see cref="F:System.Net.HttpStatusCode.SeeOther" />는 POST를 수행하여 클라이언트를 Location 헤더에 지정된 URI로 자동으로 리디렉션합니다. Location 헤더에서 지정한 리소스에 대한 요청은 GET을 사용하여 수행됩니다. <c>SeeOther</c>는 <c>RedirectMethod</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">HTTP 상태 503에 해당합니다. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" />은 일반적으로 로드가 많거나 유지 관리 문제 때문에 일시적으로 서버를 사용할 수 없는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">HTTP 상태 101에 해당합니다. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" />는 프로토콜 버전 또는 프로토콜을 변경 중인 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">HTTP 상태 307에 해당합니다. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" />는 요청 정보가 Location 헤더에 지정된 URI에 있는 경우에 표시됩니다. 이 상태가 반환되면 기본적으로 응답과 관련된 Location 헤더를 따릅니다. 원래의 요청 메서드가 POST이면 리디렉션된 요청도 POST 메서드를 사용합니다. <c>TemporaryRedirect</c>는 <c>RedirectKeepVerb</c>의 동의어입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary vsli:raw="Equivalent to HTTP status 429. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TooManyRequests&quot; /&gt; indicates that the user has sent too many requests in a given amount of time.">HTTP 상태 429에 해당합니다. <see cref="F:System.Net.HttpStatusCode.TooManyRequests" />는 사용자가 지정된 시간 내에 너무 많은 요청을 보냈음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">HTTP 상태 401에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Unauthorized" />는 요청된 리소스에 인증이 필요한 경우에 표시됩니다. WWW-Authenticate 헤더에 자세한 인증 수행 방법이 포함되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary vsli:raw="Equivalent to HTTP status 451. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnavailableForLegalReasons&quot; /&gt; indicates that the server is denying access to the resource as a consequence of a legal demand.">HTTP 상태 451에 해당합니다. <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" />는 법적 요구로 인해 서버에서 리소스에 대한 액세스를 거부하고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary vsli:raw="Equivalent to HTTP status 422. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnprocessableEntity&quot; /&gt; indicates that the request was well-formed but was unable to be followed due to semantic errors.&#xA;        UnprocessableEntity is a synonym for UnprocessableContent.">HTTP 상태 422에 해당합니다. <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" />는 요청이 잘 구성되었지만 의미 오류 때문에 따를 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">HTTP 상태 415에 해당합니다. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" />은 요청이 지원되지 않는 형식인 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">HTTP 상태 306에 해당합니다. <see cref="F:System.Net.HttpStatusCode.Unused" />는 전체가 지정되지 않은 HTTP/1.1 사양에 대한 제안된 확장명입니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">HTTP 상태 426에 해당합니다. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" />는 클라이언트가 TLS/1.0 같은 다른 프로토콜로 전환해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">HTTP 상태 305에 해당합니다. <see cref="F:System.Net.HttpStatusCode.UseProxy" />는 요청이 Location 헤더에 지정된 URI에 있는 프록시 서버를 사용해야 하는 경우에 표시됩니다.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary vsli:raw="Equivalent to HTTP status 506. &lt;see cref=&quot;F:System.Net.HttpStatusCode.VariantAlsoNegotiates&quot; /&gt; indicates that the chosen variant resource is configured to engage in transparent content negotiation itself and, therefore, isn't a proper endpoint in the negotiation process.">HTTP 상태 506에 해당합니다. <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" />는 선택한 변형 리소스가 투명한 콘텐츠 협상 자체에 참여하도록 구성되어 있으므로 협상 프로세스에서 적절한 엔드포인트가 아님을 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">
        <see cref="T:System.Net.HttpWebRequest" /> 및 <see cref="T:System.Net.HttpWebResponse" /> 클래스에서 지원하는 HTTP 버전 번호를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for an unknown HTTP version.">알 수 없는 HTTP 버전에 대한 <see cref="T:System.Version" /> 인스턴스를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">HTTP 1.0에 대한 <see cref="T:System.Version" /> 인스턴스를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">HTTP 1.1에 대한 <see cref="T:System.Version" /> 인스턴스를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 2.0.">HTTP 2.0에 대한 <see cref="T:System.Version" /> 인스턴스를 정의합니다.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">웹 클라이언트 인증을 위한 자격 증명을 검색할 수 있는 기본 인증 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">지정된 URI 및 인증 형식과 관련된 <see cref="T:System.Net.NetworkCredential" /> 개체를 반환합니다.</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">클라이언트에서 인증을 제공하는 <see cref="T:System.Uri" />입니다.</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 속성에 정의된 것과 같은 인증 형식입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">지정된 URI 및 인증 형식과 관련된 <see cref="T:System.Net.NetworkCredential" />입니다. 사용할 수 있는 자격 증명이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">호스트, 포트 및 인증 형식에 대한 자격 증명을 검색할 수 있는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">지정된 호스트, 포트 및 인증 프로토콜에 대한 자격 증명을 반환합니다.</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">클라이언트를 인증할 호스트 컴퓨터입니다.</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">클라이언트가 통신할 <paramref name="host" />의 포트입니다.</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">인증 프로토콜입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">지정된 호스트, 포트 및 인증 프로토콜에 대한 <see cref="T:System.Net.NetworkCredential" />이거나, 지정된 호스트, 포트 및 인증 프로토콜에 대해 사용할 수 있는 자격 증명이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">IP(인터넷 프로토콜) 주소를 제공합니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">서버에서 모든 네트워크 인터페이스의 클라이언트 동작을 수신 대기해야 함을 나타내는 IP 주소를 제공합니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">IP 브로드캐스트 주소를 제공합니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 메서드는 <see cref="F:System.Net.IPAddress.IPv6Any" /> 필드를 사용하여 <see cref="T:System.Net.Sockets.Socket" />이 모든 네트워크 인터페이스에서 클라이언트 동작을 수신 대기해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">IP 루프백 주소를 제공합니다. 이 속성은 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">네트워크 인터페이스를 사용하지 않아야 함을 나타내는 IP 주소를 제공합니다. 이 속성은 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">IP 루프백 주소를 제공합니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">네트워크 인터페이스를 사용하지 않아야 함을 나타내는 IP 주소를 제공합니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Net.IPAddress" /> 배열로 지정된 주소를 사용하여 <see cref="T:System.Byte" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP 주소의 바이트 배열 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" />에 잘못된 IP 주소가 포함되었습니다.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">
        <see cref="T:System.Net.IPAddress" /> 배열로 지정된 주소와 지정된 범위 식별자를 사용하여 <see cref="T:System.Byte" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP 주소의 바이트 배열 값입니다.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">범위 식별자의 long 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" />에 잘못된 IP 주소가 포함되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0 또는 
 <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" />로 지정된 주소를 사용하여 <see cref="T:System.Int64" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">IP 주소의 long 값입니다. 예를 들어, big-endian 형식의 0x2414188f 값은 IP 주소가 "143.24.20.36"입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" /> &lt; 0 또는 
 <paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span.">바이트 범위로 지정된 주소를 사용하여 <see cref="T:System.Net.IPAddress" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0.">인덱스 위치 0에서 가장 중요한 첫 번째 바이트가 포함된, 네트워크 바이트 순서로 나타내는 IP 주소의 바이트 표현입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" />에 잘못된 IP 주소가 포함되었습니다.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span and the specified scope identifier.">바이트 범위로 지정된 주소와 지정된 범위 식별자를 사용하여 <see cref="T:System.Net.IPAddress" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="The byte span value of the IP address.">IP 주소의 바이트 범위 값입니다.</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">범위 식별자의 long 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" />에 잘못된 IP 주소가 포함되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0

또는

<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">두 개의 IP 주소를 비교합니다.</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">현재 인스턴스와 비교할 <see cref="T:System.Net.IPAddress" /> 인스턴스입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">두 개의 주소가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">
        <see cref="T:System.Net.IPAddress" />의 복사본을 바이트 배열로 제공합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">IP 주소에 대한 해시 값을 반환합니다.</summary>
      <returns vsli:raw="An integer hash value.">정수 해시 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">short 값을 호스트 바이트 순서에서 네트워크 바이트 순서로 변환합니다.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">호스트 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="A short value, expressed in network byte order.">네트워크 바이트 순서로 표현된 short 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">정수 값을 호스트 바이트 순서에서 네트워크 바이트 순서로 변환합니다.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">호스트 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">네트워크 바이트 순서로 표현된 정수 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">호스트 바이트 순서에서 네트워크 바이트 순서로 long 값을 변환합니다.</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">호스트 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="A long value, expressed in network byte order.">네트워크 바이트 순서로 표현된 long 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">지정된 IP 주소가 루프백 주소인지 여부를 나타냅니다.</summary>
      <param name="address" vsli:raw="An IP address.">IP 주소.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="address" />가 루프백 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">
        <see cref="T:System.Net.IPAddress" /> 개체를 IPv4 주소로 매핑합니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">
        <see cref="T:System.Net.IPAddress" />를 반환합니다.  
  
IPv4 주소입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">
        <see cref="T:System.Net.IPAddress" /> 개체를 IPv6 주소로 매핑합니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">
        <see cref="T:System.Net.IPAddress" />를 반환합니다.  
  
IPv6 주소입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">short 값을 네트워크 바이트 순서에서 호스트 바이트 순서로 변환합니다.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">네트워크 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="A short value, expressed in host byte order.">호스트 바이트 순서로 표현된 short 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">정수 값을 네트워크 바이트 순서에서 호스트 바이트 순서로 변환합니다.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">네트워크 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">호스트 바이트 순서로 표현된 정수 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">long 값을 네트워크 바이트 순서에서 호스트 바이트 순서로 변환합니다.</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">네트워크 바이트 순서로 변환할 숫자입니다.</param>
      <returns vsli:raw="A long value, expressed in host byte order.">호스트 바이트 순서로 표현된 long 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP address represented as a character span to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">문자 범위로 표현된 IP 주소를 <see cref="T:System.Net.IPAddress" /> 인스턴스로 변환합니다.</summary>
      <param name="ipSpan" vsli:raw="A character span that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6." />
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" />이 유효한 IP 주소가 아닌 경우</exception>
      <returns vsli:raw="The converted IP address.">변환된 IP 주소입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">IP 주소 문자열을 <see cref="T:System.Net.IPAddress" /> 인스턴스로 변환합니다.</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">IPv4의 경우 점 구분 네 자리 표기법으로 표현된 IP 주소를 포함하는 문자열이고, IPv6의 경우 콜론과 16진수 표기법으로 표현된 IP 주소를 포함하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" />이 유효한 IP 주소가 아닌 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">
        <see cref="T:System.Net.IPAddress" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">인터넷 주소를 표준 표기법으로 변환합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">주소 패밀리는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이며 주소가 잘못되었습니다.</exception>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">IPv4의 경우 점 구분 네 자리 표기법으로 표현된 IP 주소를 포함하는 문자열이고, IPv6의 경우 콜론과 16진수 표기법으로 표현된 IP 주소를 포함하는 문자열입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary vsli:raw="Tries to format the current IP address into the provided span.">현재 IP 주소의 형식을 제공된 범위로 지정하려고 시도합니다.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters.">이 메서드가 반환될 때 문자 범위로 표시되는 IP 주소입니다.</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span.">이 메서드가 반환될 때 범위에 기록되는 문자 수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">형식 지정에 성공했으면 <see langword="true" />이고, 실패했으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary vsli:raw="Tries to parse a span of characters into a value.">지정된 바이트 범위가 유효한 IP 주소를 나타내는지 여부를 확인합니다.</summary>
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span.">이 메서드가 반환할 때 바이트 범위의 <see cref="T:System.Net.IPAddress" /> 버전입니다.</param>
      <param name="ipSpan" vsli:raw="The byte span to parse." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipSpan&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="ipString" />이 IP 주소로 구문 분석되는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">문자열이 유효한 IP 주소인지 확인합니다.</summary>
      <param name="ipString" vsli:raw="The string to parse.">유효성을 검사할 문자열입니다.</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">문자열의 <see cref="T:System.Net.IPAddress" /> 버전입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" />가 null입니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="ipString" />이 IP 주소로 구문 분석되는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Tries to write the current IP address into a span of bytes in network order.">현재 IP 주소를 바이트 범위에 쓰려고 시도합니다.</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes.">이 메서드가 반환될 때 바이트 범위로 표시되는 IP 주소입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span.">이 메서드가 반환될 때 범위에 기록되는 바이트 수입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is successfully written to the given span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 범위에 IP 주소가 기록된 경우에는 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">IP(인터넷 프로토콜) 주소입니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">주소 패밀리는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />입니다.</exception>
      <returns vsli:raw="The long value of the IP address.">IP 주소의 long 값입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">IP 주소의 주소 패밀리를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">IPv4에 대한 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 IPv6에 대한 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">IP 주소가 IPv4-매핑된 IPv6 주소인지 여부를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Boolean" />를 반환합니다.  
  
 IP 주소가 IPv4 매핑된 IPv6 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">주소가 IPv6 링크 로컬 주소인지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP 주소가 IPv6 링크 로컬 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">주소가 IPv6 멀티캐스트 전역 주소인지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP 주소가 IPv6 멀티캐스트 전역 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">주소가 IPv6 사이트 로컬 주소인지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP 주소가 IPv6 사이트 로컬 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">주소가 IPv6 Teredo 주소인지 여부를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">IP 주소가 IPv6 Teredo 주소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">IPv6 주소 범위 식별자를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0 
또는 
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
      <returns vsli:raw="A long integer that specifies the scope of the address.">주소의 범위를 지정하는 정수(Long)입니다.</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">네트워크 엔드포인트를 IP 주소와 포트 번호로 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">
        <see cref="P:System.Net.IPEndPoint.Port" /> 속성에 할당할 수 있는 최대값을 지정합니다. MaxPort 값은 0x0000FFFF로 설정됩니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">
        <see cref="P:System.Net.IPEndPoint.Port" /> 속성에 할당할 수 있는 최소값을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">지정된 주소와 포트 번호를 사용하여 <see cref="T:System.Net.IPEndPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">인터넷 호스트의 IP 주소입니다. 예를 들어, big-endian 형식의 0x2414188f 값은 IP 주소가 "143.24.20.36"입니다.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">
        <paramref name="address" />와 연결된 포트 번호이거나, 사용할 수 있는 포트를 지정할 경우 0입니다. <paramref name="port" />는 호스트 순서로 지정됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우  
  
또는 
 <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 큰 경우  
  
또는 
 <paramref name="address" />가 0보다 작거나 0x00000000FFFFFFFF보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">지정된 주소와 포트 번호를 사용하여 <see cref="T:System.Net.IPEndPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" />입니다.</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">
        <paramref name="address" />와 연결된 포트 번호이거나, 사용할 수 있는 포트를 지정할 경우 0입니다. <paramref name="port" />는 호스트 순서로 지정됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우  
  
또는 
 <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 큰 경우  
  
또는 
 <paramref name="address" />가 0보다 작거나 0x00000000FFFFFFFF보다 큰 경우</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">소켓 주소를 사용하여 엔드포인트를 만듭니다.</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">엔드포인트에 사용할 <see cref="T:System.Net.SocketAddress" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">
        <paramref name="socketAddress" />의 AddressFamily가 현재 인스턴스의 AddressFamily와 같지 않은 경우  
  
또는 
 <paramref name="socketAddress" />.Size &lt; 8.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">지정된 소켓 주소를 사용하는 <see cref="T:System.Net.EndPoint" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">지정한 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 <see cref="T:System.Object" />과 비교할 <see cref="T:System.Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see cref="T:System.Object" />와 같으면 <see cref="T:System.Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">
        <see cref="T:System.Net.IPEndPoint" /> 인스턴스에 대한 해시 값을 반환합니다.</summary>
      <returns vsli:raw="An integer hash value.">정수 해시 값입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">읽기 전용 범위로 표시되는 IP 네트워크 엔드포인트(주소와 포트)를 <see cref="T:System.Net.IPEndPoint" /> 인스턴스로 변환합니다.</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">IPv4의 경우 점 구분 네 자리 표기법 또는 네트워크 바이트 순서로 표현된 IP 엔드포인트를 포함하는 읽기 전용 범위이고, IPv6의 경우 콜론과 16진수 표기법으로 표현된 IP 엔드포인트를 포함하는 읽기 전용 범위입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" />이 유효한 IP 엔드포인트가 아닙니다.</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP 네트워크 엔드포인트의 개체 표현입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">문자열로 표시된 IP 네트워크 엔드포인트(주소 및 포트)를 <see cref="T:System.Net.IPEndPoint" /> 인스턴스로 변환합니다.</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">IPv4의 경우 점 구분 네 자리 표기법 또는 네트워크 바이트 순서로 표현된 IP 엔드포인트를 포함하는 문자열이고, IPv6의 경우 콜론과 16진수 표기법으로 표현된 IP 엔드포인트를 포함하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" />이 유효한 IP 엔드포인트가 아닙니다.</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP 네트워크 엔드포인트의 개체 표현입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">엔드포인트 정보를 <see cref="T:System.Net.SocketAddress" /> 인스턴스로 serialize합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">엔드포인트의 소켓 주소가 포함된 <see cref="T:System.Net.SocketAddress" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">지정된 엔드포인트의 IP 주소와 포트 번호를 반환합니다.</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">IP 주소 및 지정된 엔드포인트의 포트 번호가 포함된 문자열입니다(예: 192.168.1.2:80).</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">읽기 전용 범위로 표시되는 IP 네트워크 엔드포인트(주소 및 포트)를 <see cref="T:System.Net.IPEndPoint" />에 해당하는 엔드포인트로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">유효성을 검사할 IP 엔드포인트입니다.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">이 메서드가 반환할 때 <paramref name="s" />의 <see cref="T:System.Net.IPEndPoint" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="s" />을 IP 엔드포인트로 구문 분석할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">문자열로 표시되는 IP 네트워크 엔드포인트(주소 및 포트)를 <see cref="T:System.Net.IPEndPoint" />에 해당하는 엔드포인트로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">유효성을 검사할 IP 엔드포인트입니다.</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">이 메서드가 반환할 때 <paramref name="s" />의 <see cref="T:System.Net.IPEndPoint" /> 버전입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="s" />을 IP 엔드포인트로 구문 분석할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">엔드포인트의 IP 주소를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">엔드포인트의 IP 주소가 포함된 <see cref="T:System.Net.IPAddress" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">IP(인터넷 프로토콜) 주소 패밀리를 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">
        <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">엔드포인트의 포트 번호를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">set 작업에 대해 지정된 값이 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작거나 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 큰 경우</exception>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">엔드포인트의 포트 번호를 나타내는 <see cref="F:System.Net.IPEndPoint.MinPort" />에서 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 범위의 정수 값입니다.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">
        <see cref="T:System.Net.WebRequest" /> 클래스에 대한 프록시 액세스를 구현할 수 있는 기본 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">프록시의 URI를 반환합니다.</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">요청된 인터넷 리소스를 지정하는 <see cref="T:System.Uri" />입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">
        <paramref name="destination" />에 접속하는 데 사용되는 프록시의 URI가 포함된 <see cref="T:System.Uri" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">프록시를 지정된 호스트로 사용하지 말아야 함을 나타냅니다.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">프록시 사용을 확인할 호스트의 <see cref="T:System.Uri" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">프록시 서버를 <paramref name="host" />로 사용하지 말아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">인증을 위해 프록시 서버에 제출할 자격 증명입니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">프록시 서버에 대한 요청을 인증하는 데 필요한 자격 증명이 포함된 <see cref="T:System.Net.ICredentials" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">기본, 다이제스트, NTLM 및 Kerberos 인증과 같은 암호 기반의 인증 체계에 자격 증명을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">
        <see cref="T:System.Net.NetworkCredential" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">지정된 사용자 이름과 암호를 사용하여 <see cref="T:System.Net.NetworkCredential" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">자격 증명과 관련된 사용자 이름입니다.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 클래스는 이 플랫폼에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">지정된 사용자 이름, 암호 및 도메인을 사용하여 <see cref="T:System.Net.NetworkCredential" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">자격 증명과 관련된 사용자 이름입니다.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호입니다.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">이러한 자격 증명과 관련된 도메인입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 클래스는 이 플랫폼에서 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">지정된 사용자 이름과 암호를 사용하여 <see cref="T:System.Net.NetworkCredential" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">자격 증명과 관련된 사용자 이름입니다.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호입니다.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">지정된 사용자 이름, 암호 및 도메인을 사용하여 <see cref="T:System.Net.NetworkCredential" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">자격 증명과 관련된 사용자 이름입니다.</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호입니다.</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">이러한 자격 증명과 관련된 도메인입니다.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">지정된 호스트, 포트 및 인증 형식에 대한 <see cref="T:System.Net.NetworkCredential" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">클라이언트를 인증하는 호스트 컴퓨터입니다.</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">클라이언트가 통신하는 <paramref name="host" />의 포트입니다.</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 속성에 정의된 대로 요청된 인증 형식입니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">지정된 호스트, 포트 및 인증 프로토콜에 대한 <see cref="T:System.Net.NetworkCredential" />이거나, 지정된 호스트, 포트 및 인증 프로토콜에 대해 사용할 수 있는 자격 증명이 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">지정된 URI(Uniform Resource Identifier) 및 인증 형식에 대한 <see cref="T:System.Net.NetworkCredential" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">클라이언트에서 인증을 제공하는 URI입니다.</param>
      <param name="authenticationType" vsli:raw="" />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">
        <see cref="T:System.Net.NetworkCredential" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">자격 증명을 확인하는 도메인 또는 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">자격 증명과 관련된 도메인 이름입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">자격 증명과 연결된 암호입니다. <paramref name="password" /> 매개 변수를 <see langword="null" />로 설정하여 이 <see cref="T:System.Net.NetworkCredential" /> 인스턴스가 초기화된 경우 <see cref="P:System.Net.NetworkCredential.Password" /> 속성은 빈 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">
        <see cref="T:System.Security.SecureString" /> 인스턴스로 암호를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 클래스는 이 플랫폼에서 지원되지 않습니다.</exception>
      <returns vsli:raw="The password for the user name associated with the credentials.">자격 증명과 관련된 사용자 이름에 대한 암호입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">자격 증명과 관련된 사용자 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The user name associated with the credentials.">자격 증명과 관련된 사용자 이름입니다.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">
        <see cref="T:System.Net.IPAddress" /> 형식의 집합을 저장합니다.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">
        <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">이 작업이 이 컬렉션에 지원되지 않기 때문에 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">컬렉션에 추가할 개체입니다.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">이 작업이 이 컬렉션에 지원되지 않기 때문에 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">지정된 <see cref="T:System.Net.IPAddress" /> 개체가 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">컬렉션에서 검색할 <see cref="T:System.Net.IPAddress" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> 개체가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">이 컬렉션의 요소를 <see cref="T:System.Net.IPAddress" /> 형식의 1차원 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">컬렉션의 복사본을 받는 1차원 배열입니다.</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" />가 다차원 배열인 경우  

또는

이 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />의 요소 수가 <paramref name="offset" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">이 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />의 요소를 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">이 컬렉션을 반복하는 데 사용할 수 있는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">
        <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하고 이 컬렉션의 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 형식에 액세스할 수 있게 해 주는 개체입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">이 작업이 이 컬렉션에 지원되지 않기 때문에 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
      <param name="address" vsli:raw="The object to be removed.">제거할 개체입니다.</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">이 컬렉션을 반복하는 데 사용할 수 있는 개체를 반환합니다.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">
        <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현하고 이 컬렉션의 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 형식에 액세스할 수 있게 해 주는 개체입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">이 컬렉션의 <see cref="T:System.Net.IPAddress" /> 형식 수를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">이 컬렉션의 <see cref="T:System.Int32" /> 형식 수가 포함된 <see cref="T:System.Net.IPAddress" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">이 컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">모든 경우에 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Net.IPAddress" />를 가져옵니다.</summary>
      <param name="index" vsli:raw="The index of interest.">원하는 인덱스입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Net.IPAddress" />입니다.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">
        <see cref="T:System.Net.WebRequest" /> 클래스와 이 클래스에서 파생된 클래스를 사용하여 리소스를 요청할 때 인증 및 가장에 대한 클라이언트 요구 사항을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">클라이언트와 서버를 인증해야 합니다. 서버가 인증되지 않아도 요청이 실패하지는 않습니다. 상호 인증이 발생했는지 여부를 확인하려면 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 속성 값을 확인합니다.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">클라이언트와 서버를 인증해야 합니다. 서버가 인증되지 않은 경우 애플리케이션에서는 상호 인증이 실패했음을 나타내는 <see cref="T:System.IO.IOException" /> 내부 예외와 함께 <see cref="T:System.Net.ProtocolViolationException" />을 받습니다.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">클라이언트와 서버에 대한 인증이 필요 없습니다.</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">SSL(Secure Socket Layer) 정책 오류를 열거합니다.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">SSL 정책 오류가 없습니다.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" />가 비어 있지 않은 배열을 반환했습니다.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">인증서 이름이 일치하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">인증서를 사용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">
        <see cref="T:System.Net.EndPoint" /> 파생 클래스의 serialize된 정보를 저장합니다.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">지정된 주소 패밀리에 대한 <see cref="T:System.Net.SocketAddress" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값입니다.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">지정된 주소 패밀리와 버퍼 크기를 사용하여 <see cref="T:System.Net.SocketAddress" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값입니다.</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">내부 버퍼에 할당할 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" />가 2보다 작습니다. 이러한 2바이트는 <paramref name="family" />를 저장하는 데 필요합니다.</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">지정한 <see langword="Object" />가 현재 <see langword="Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">현재 <see cref="T:System.Object" />과 비교할 <see langword="Object" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see langword="true" />가 현재<see langword="Object" />와 같으면 <see langword="Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">특정 유형에 대한 해시 함수의 역할을 하며, 해시 알고리즘 및 해시 테이블과 같은 데이터 구조에 사용할 수 있습니다.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">현재 <see cref="T:System.Object" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">소켓 주소에 대한 정보를 반환합니다.</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" />에 대한 정보가 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">현재 <see cref="T:System.Net.Sockets.AddressFamily" />의 <see cref="T:System.Net.SocketAddress" /> 열거형 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">내부 버퍼의 지정된 인덱스 요소를 가져오거나 설정합니다.</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">필요한 정보의 배열 인덱스 요소입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">지정된 인덱스가 버퍼에 없는 경우</exception>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">내부 버퍼의 지정된 인덱스 요소 값입니다.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" />의 내부 버퍼 크기를 가져옵니다.</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" />의 내부 버퍼 크기입니다.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스의 인스턴스가 사용할 수 있는 주소 지정 체계를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">AppleTalk 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">Native ATM 서비스 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Banyan 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">X.25와 같은 CCITT 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">MIT CHAOS 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Microsoft 클러스터 제품들에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">컨트롤러 영역 네트워크 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Datakit 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">직접 데이터 링크 인터페이스 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">DECnet 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">ECMA(European Computer Manufacturers Association) 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">FireFox 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">NSC Hyperchannel 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">IEEE 1284.4 작업 그룹 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">ARPANET IMP 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">IP 버전 4.에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">IP 버전 6에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">IPX 또는 SPX 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">IrDA 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">ISO 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">LAT 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">MAX 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">NetBios 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">Network Designers OSI 게이트웨이 사용 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Xerox NS 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">OSI 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">하위 수준 패킷 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">PUP 프로토콜에 대한 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">IBM SNA 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">호스트에 대한 로컬 Unix 주소입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">알 수 없는 주소 패밀리 입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">지정되지 않은 주소 패밀리입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">VoiceView 주소입니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">
        <see cref="T:System.Net.Sockets.Socket" /> 클래스에 대한 오류 코드를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">지정된 액세스 권한에서 허용하지 않는 방식으로 <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">일반적으로 같은 주소는 한 번만 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">지정된 주소 패밀리가 지원되지 않습니다. IPv6 주소 패밀리가 지정되었는데 IPv6 스택이 로컬 컴퓨터에 설치되어 있지 않은 경우 이 오류가 반환됩니다. 또한 IPv4 주소 패밀리가 지정되었는데 IPv4 스택이 로컬 컴퓨터에 설치되어 있지 않은 경우에도 이 오류가 반환됩니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">선택한 IP 주소가 이 컨텍스트에서 유효하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">비블로킹 <see cref="T:System.Net.Sockets.Socket" /> 작업이 이미 진행 중입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">.NET Framework 또는 내부 소켓 공급자에 의해 연결이 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">원격 호스트가 연결을 거부했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">원격 피어가 연결을 다시 설정했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> 작업에 필수 주소가 누락되었습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">정상적으로 종료하는 중입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">내부 소켓 공급자에서 잘못된 포인터 주소를 발견했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">원격 호스트가 다운되어 작업이 실패했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">호스트를 확인할 수 없습니다. 이름이 공식 호스트 이름 또는 별칭이 아닙니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">지정된 호스트에 대한 네트워크 경로가 존재하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">블로킹 작업이 진행 중입니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">블로킹 <see cref="T:System.Net.Sockets.Socket" /> 호출이 취소되었습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">
        <see cref="T:System.Net.Sockets.Socket" /> 멤버에 잘못된 인수를 지정했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">애플리케이션에서 즉시 완료할 수 없는 겹쳐진 작업을 시작했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">
        <see cref="T:System.Net.Sockets.Socket" />이 이미 연결되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">데이터그램이 너무 깁니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">네트워크를 사용할 수 없는 경우</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">애플리케이션에서 시간이 초과된 연결에 <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" />를 설정하려고 했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">원격 호스트의 경로가 존재하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">
        <see cref="T:System.Net.Sockets.Socket" /> 작업에 사용할 수 있는 여유 버퍼 공간이 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">요청된 이름 또는 IP 주소를 이름 서버에서 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">오류를 복구할 수 없거나 요청된 데이터베이스를 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">
        <see cref="T:System.Net.Sockets.Socket" />이 연결되지 않은 상태로 애플리케이션에서 데이터를 보내고 받으려고 했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">내부 소켓 공급자가 초기화되지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">소켓이 아닌 위치에서 <see cref="T:System.Net.Sockets.Socket" /> 작업을 시도했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" />을 닫아서 겹쳐진 작업이 중단되었습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">주소 패밀리가 프로토콜 패밀리에서 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">내부 소켓 공급자를 사용하는 프로세스가 너무 많습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">프로토콜 패밀리가 구현되지 않거나 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">프로토콜이 구현되지 않거나 구성되지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">알 수 없거나, 잘못되거나, 지원되지 않는 옵션 또는 수준을 <see cref="T:System.Net.Sockets.Socket" />에 사용했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">이 <see cref="T:System.Net.Sockets.Socket" />의 프로토콜 형식이 잘못되었습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">
        <see cref="T:System.Net.Sockets.Socket" />이 이미 닫혔기 때문에 데이터를 보내거나 받기 위한 요청이 거부되었습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">지정되지 않은 <see cref="T:System.Net.Sockets.Socket" /> 오류가 발생했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">이 주소 패밀리에서는 지정된 소켓 형식이 지원되지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">
        <see cref="T:System.Net.Sockets.Socket" /> 작업을 성공적으로 완료했습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">네트워크 하위 시스템을 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">연결 시도 제한 시간이 초과되었거나 연결된 호스트에서 응답하지 않습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">내부 소켓 공급자에 열려 있는 소켓이 너무 많습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">호스트 이름을 확인할 수 없습니다. 나중에 다시 시도하십시오.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">지정된 클래스를 찾을 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">내부 소켓 공급자의 버전이 범위를 벗어났습니다.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">비블로킹 소켓에 대한 작업을 즉시 완료할 수 없습니다.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">소켓 오류가 발생하는 경우에 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">마지막으로 발생한 운영 체제 오류 코드를 사용하여 <see cref="T:System.Net.Sockets.SocketException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">지정된 오류 코드를 사용하여 <see cref="T:System.Net.Sockets.SocketException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">발생한 오류를 나타내는 오류 코드입니다.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Net.Sockets.SocketException" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.Sockets.SocketException" /> 인스턴스입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련되어 있는 serialize된 스트림의 소스가 들어 있는 <see cref="T:System.Net.Sockets.SocketException" />입니다.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">이 예외와 관련된 오류 코드를 가져옵니다.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">이 예외와 관련된 정수 오류 코드입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">예외와 관련된 오류 메시지를 가져옵니다.</summary>
      <returns vsli:raw="A string that contains the error message.">오류 메시지를 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">이 예외와 관련된 오류 코드를 가져옵니다.</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">이 예외와 관련된 정수 오류 코드입니다.</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">
        <see cref="T:System.Net.TransportContext" /> 클래스는 내부 전송 계층에 대한 추가 컨텍스트를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">
        <see cref="T:System.Net.TransportContext" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">요청된 채널 바인딩을 검색합니다.</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">검색할 채널 바인딩의 형식입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" />는 <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> 속성에서 검색된 <see cref="T:System.Net.TransportContext" />에 사용할 <see cref="P:System.Net.HttpListenerRequest.TransportContext" />가 되어야 합니다.</exception>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">요청된 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />이거나, 현재 전송 또는 운영 체제에서 채널 바인딩을 지원하지 않을 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">
        <see cref="T:System.Net.Security.SslStream" /> 클래스에 대해 적절한 암호화 알고리즘을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">AES(고급 암호화 표준) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">128비트 키의 AES(고급 암호화 표준) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">192비트 키의 AES(Advanced Encryption Standard) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">256비트 키의 AES(Advanced Encryption Standard) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">DES(데이터 암호화 표준) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">사용되는 암호화 알고리즘이 없습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">Null 암호화 알고리즘에는 암호화가 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">RC2(Rivest's Code 2) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">RC4(Rivest's Code 4) 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">3DES(3중 데이터 암호화 표준) 알고리즘입니다.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">클라이언트와 서버에서 공유하는 키를 만드는 데 사용되는 알고리즘을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Diffie Hellman 임시 키 교환 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">사용되는 키 교환 알고리즘이 없습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">RSA 공개 키 교환 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">RSA 공개 키 서명 알고리즘입니다.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 클래스는 인증된 트랜잭션을 보안 채널에 바인딩하는 데 사용되는 불투명 데이터에 대한 포인터를 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">Windows 통합 인증에 확장 보호를 제공하는 네이티브 호출로 전달될 바이트 데이터가 들어 있는 네이티브 메모리 영역에 대한 SafeHandle을 애플리케이션이 소유하고 있는지 여부를 나타내는 부울 값입니다.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> 속성은 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 인스턴스와 연결된 채널 바인딩 토큰의 크기를 바이트 단위로 가져옵니다.</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 인스턴스에 있는 채널 바인딩 토큰의 크기(바이트)입니다.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> 열거형은 보안 채널에서 쿼리할 수 있는 채널 바인딩의 종류를 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">지정된 엔드포인트에 고유한 채널 바인딩입니다(예: TLS 서버 인증서).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">지정된 채널에 완전히 고유한 채널 바인딩입니다(예: TLS 세션 키).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">알 수 없는 채널 바인딩 형식입니다.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">메시지 인증 코드(MAC) 생성에 사용되는 알고리즘을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">MD5(메시지 다이제스트 5) 해시 알고리즘입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">해시 알고리즘이 사용되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">SHA1(Secure Hash Algorithm)입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">256비트 다이제스트를 사용하는 SHA-2(Secure Hashing Algorithm 2)입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">384비트 다이제스트를 사용하는 SHA-2(Secure Hashing Algorithm 2)입니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">512비트 다이제스트를 사용하는 SHA-2(Secure Hashing Algorithm 2)입니다.</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">
        <see cref="T:System.Security.Authentication.SslProtocols" />의 가능한 버전을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">Default 대신 None을(를) 사용합니다. Default는 SSL(Secure Sockets Layer) 3.0 또는 TLS(Trnasport Layer Security) 1.0 프로토콜만 협상할 수 있도록 허용하며, 이러한 옵션은 이제 사용되지 않습니다. 따라서 Default는 많은 조직에서 허용되지 않습니다. 이 필드의 이름에도 불구하고, <see cref="T:System.Net.Security.SslStream" />는 특별한 환경을 제외하고는 기본적으로 사용하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">운영 시스템이 사용할 최상의 프로토콜을 선택하고 안전하지 않은 프로토콜을 차단할 수 있습니다. 앱에 특별한 이유가 없는 한 이 필드를 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">SSL 2.0 프로토콜을 지정합니다. SSL 2.0은 TLS 프로토콜로 대체되었으며 이전 버전과의 호환성을 위해서만 제공됩니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">SSL 3.0 프로토콜을 지정합니다. SSL 3.0은 TLS 프로토콜로 대체되었으며 이전 버전과의 호환성을 위해서만 제공됩니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">TLS 1.0 보안 프로토콜을 지정합니다.  TLS 1.0은 이전 버전과의 호환성을 위해서만 제공 됩니다. TLS 프로토콜은 IETF RFC 2246에 정의되어 있습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">TLS 1.1 보안 프로토콜을 지정합니다. TLS 프로토콜은 IETF RFC 4346에 정의되어 있습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">TLS 1.2 보안 프로토콜을 지정합니다. TLS 프로토콜은 IETF RFC 5246에 정의되어 있습니다.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">TLS 1.3 보안 프로토콜을 지정합니다. TLS 프로토콜은 IETF RFC 8446에 정의되어 있습니다.</summary>
    </member>
  </members>
</doc>