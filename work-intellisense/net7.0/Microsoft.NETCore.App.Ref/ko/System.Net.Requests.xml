<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Requests</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationManager">
      <summary vsli:raw="Manages the authentication modules called during the client authentication process.">클라이언트 인증 처리 중 호출된 인증 모듈을 관리합니다.</summary>
    </member>
    <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary vsli:raw="Calls each registered authentication module to find the first module that can respond to the authentication request.">등록된 각 인증 모듈을 호출하여 인증 요청에 응답하는 첫 번째 모듈을 찾습니다.</summary>
      <param name="challenge" vsli:raw="The challenge returned by the Internet resource.">인터넷 리소스가 반환한 요구입니다.</param>
      <param name="request" vsli:raw="The request that initiated the authentication challenge.">인증 요구를 초기화한 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credentials" vsli:raw="The credentials associated with this request.">이 요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;challenge&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;credentials&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="challenge" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="request" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="credentials" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class containing the result of the authorization attempt. If there is no authentication module to respond to the challenge, this method returns &lt;see langword=&quot;null&quot; /&gt;.">인증을 시도한 결과가 들어 있는 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스입니다. 요구(challenge)에 응답할 인증 모듈이 없으면, 이 메서드는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary vsli:raw="Preauthenticates a request.">요청을 사전 인증합니다.</summary>
      <param name="request" vsli:raw="A request to an internet resource.">인터넷 리소스에 대한 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credentials" vsli:raw="The credentials associated with the request.">요청과 관련된 <see cref="T:System.Net.ICredentials" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class if the request can be preauthenticated; otherwise, &lt;see langword=&quot;null&quot; /&gt;. If &lt;paramref name=&quot;credentials&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, this method returns &lt;see langword=&quot;null&quot; /&gt;.">요청을 사전 인증할 수 있으면, <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다. <paramref name="credentials" />이(가) <see langword="null" />이면 이 메서드는 <see langword="null" />을(를) 반환합니다.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <summary vsli:raw="Registers an authentication module with the authentication manager.">인증 관리자를 사용하여 인증 모듈을 등록합니다.</summary>
      <param name="authenticationModule" vsli:raw="The &lt;see cref=&quot;T:System.Net.IAuthenticationModule&quot; /&gt; to register with the authentication manager.">인증 관리자를 사용하여 등록할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;authenticationModule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="authenticationModule" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <summary vsli:raw="Removes the specified authentication module from the list of registered modules.">등록된 모듈 목록에서 지정된 인증 모듈을 제거합니다.</summary>
      <param name="authenticationModule" vsli:raw="The &lt;see cref=&quot;T:System.Net.IAuthenticationModule&quot; /&gt; to remove from the list of registered modules.">등록된 모듈 목록에서 제거할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;authenticationModule&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="authenticationModule" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;see cref=&quot;T:System.Net.IAuthenticationModule&quot; /&gt; is not registered.">지정된 <see cref="T:System.Net.IAuthenticationModule" />이 등록되지 않은 경우</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <summary vsli:raw="Removes authentication modules with the specified authentication scheme from the list of registered modules.">등록된 모듈 목록에서 지정된 인증 체계가 포함된 인증 모듈을 제거합니다.</summary>
      <param name="authenticationScheme" vsli:raw="The authentication scheme of the module to remove.">제거할 모듈의 인증 체계입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;authenticationScheme&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="authenticationScheme" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A module for this authentication scheme is not registered.">이 인증 체계 모듈이 등록되지 않은 경우</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.CredentialPolicy">
      <summary vsli:raw="Gets or sets the credential policy to be used for resource requests made using the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; class.">
        <see cref="T:System.Net.HttpWebRequest" /> 클래스를 통한 리소스 요청에 사용할 자격 증명 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Net.ICredentialPolicy&quot; /&gt; interface that determines whether credentials are sent with requests. The default value is &lt;see langword=&quot;null&quot; /&gt;.">요청과 함께 자격 증명을 보낼지 여부를 결정하는 <see cref="T:System.Net.ICredentialPolicy" /> 인터페이스를 구현하는 개체입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <summary vsli:raw="Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">
        <see cref="T:System.Net.WebRequest" />와 이 클래스의 파생 클래스를 통한 요청에 대해 Kerberos 인증을 수행하는 동안 호스트를 식별하는 데 사용되는 SPN(서비스 사용자 이름)이 들어 있는 사전을 가져옵니다.</summary>
      <returns vsli:raw="A writable &lt;see cref=&quot;T:System.Collections.Specialized.StringDictionary&quot; /&gt; that contains the SPN values for keys composed of host information.">호스트 정보로 구성된 키에 대한 SPN 값이 들어 있는 쓰기 가능한 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.RegisteredModules">
      <summary vsli:raw="Gets a list of authentication modules that are registered with the authentication manager.">인증 관리자로 등록하는 인증 모듈의 목록을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that enables the registered authentication modules to be read.">등록된 인증 모듈을 읽을 수 있도록 하는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="T:System.Net.Authorization">
      <summary vsli:raw="Contains an authentication message for an Internet server.">인터넷 서버에 대한 인증 메시지가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class with the specified authorization message.">지정된 인증 메시지를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token" vsli:raw="The encrypted authorization message expected by the server.">서버에 필요한 암호화된 인증 메시지입니다.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class with the specified authorization message and completion status.">지정된 인증 메시지 및 완료 상태를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token" vsli:raw="The encrypted authorization message expected by the server.">서버에 필요한 암호화된 인증 메시지입니다.</param>
      <param name="finished" vsli:raw="The completion status of the authorization attempt. &lt;see langword=&quot;true&quot; /&gt; if the authorization attempt is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인증 요구의 완료 상태입니다. 인증 요구가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class with the specified authorization message, completion status, and connection group identifier.">지정된 인증 메시지, 완료 상태 및 연결 그룹 식별자를 사용하여 <see cref="T:System.Net.Authorization" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="token" vsli:raw="The encrypted authorization message expected by the server.">서버에 필요한 암호화된 인증 메시지입니다.</param>
      <param name="finished" vsli:raw="The completion status of the authorization attempt. &lt;see langword=&quot;true&quot; /&gt; if the authorization attempt is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인증 요구의 완료 상태입니다. 인증 요구가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="connectionGroupId" vsli:raw="A unique identifier that can be used to create private client-server connections that are bound only to this authentication scheme.">이 인증 체계에만 바인딩된 프라이빗 클라이언트/서버 연결을 만드는 데 사용할 수 있는 고유 식별자입니다.</param>
    </member>
    <member name="P:System.Net.Authorization.Complete">
      <summary vsli:raw="Gets the completion status of the authorization.">인증의 완료 상태를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the authentication process is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인증 프로세스가 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.ConnectionGroupId">
      <summary vsli:raw="Gets a unique identifier for user-specific connections.">사용자별 연결에 대한 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="A unique string that associates a connection with an authenticating entity.">연결을 인증 항목과 연결하는 고유 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.Message">
      <summary vsli:raw="Gets the message returned to the server in response to an authentication challenge.">인증 요구에 대한 응답으로 서버에 반환된 메시지를 가져옵니다.</summary>
      <returns vsli:raw="The message that will be returned to the server in response to an authentication challenge.">인증 요구에 대한 응답으로 서버에 반환될 메시지입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.MutuallyAuthenticated">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether mutual authentication occurred.">상호 인증이 발생했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both client and server were authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클라이언트와 서버가 모두 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.Authorization.ProtectionRealm">
      <summary vsli:raw="Gets or sets the prefix for Uniform Resource Identifiers (URIs) that can be authenticated with the &lt;see cref=&quot;P:System.Net.Authorization.Message&quot; /&gt; property.">
        <see cref="P:System.Net.Authorization.Message" /> 속성을 사용하여 인증할 수 있는 URI(Uniform Resource Identifier)에 대한 접두사를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An array of strings that contains URI prefixes.">URI 접두사가 포함된 문자열의 배열입니다.</returns>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary vsli:raw="Specifies the meaning of time values that control caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.HttpWebRequest" /> 개체를 사용하여 가져온 리소스의 캐싱 동작을 제어하는 시간 값의 의미를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary vsli:raw="Content can be taken from the cache until it is older than the age specified with this value.">캐시에 보관된 시간이 이 값으로 지정된 시간 이내인 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Net.Cache.HttpRequestCachePolicy.MaxAge&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cache.HttpRequestCachePolicy.MaxStale&quot; /&gt;.">
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />와 <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Net.Cache.HttpRequestCachePolicy.MaxAge&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cache.HttpRequestCachePolicy.MinFresh&quot; /&gt;.">
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />와 <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary vsli:raw="Content can be taken from the cache after it has expired, until the time specified with this value elapses.">만료 후 경과 시간이 이 값으로 지정된 시간 이내인 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary vsli:raw="Content can be taken from the cache if the time remaining before expiration is greater than or equal to the time specified with this value.">만료까지 남은 시간이 이 값으로 지정된 시간보다 크거나 같은 경우 캐시에서 해당 콘텐츠를 가져올 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary vsli:raw="For internal use only. The Framework will throw an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; if you try to use this member.">내부 전용입니다. 이 멤버를 사용하려고 하면 Framework에서 <see cref="T:System.ArgumentException" />을 throw합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).">HTTP(Hypertext Transfer protocol)를 사용하여 가져온 리소스의 캐싱 동작을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">서버를 사용하여 요청을 만족시킵니다. 클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다. 클라이언트와 서버 사이의 캐시에서 어떤 항목도 가져가거나, 추가하거나, 제거하지 않습니다. 이 동작은 .NET Framework에서 제공하는 시스템 구성 파일에 기본적으로 지정된 캐시 동작입니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">캐시의 리소스를 사용할 수 있는 경우 캐시에서 리소스 요청을 만족시키고, 그렇지 않으면 리소스 요청을 서버로 보냅니다. 요청된 항목을 클라이언트와 서버 사이의 캐시에서 사용할 수 있으면 중간 캐시에서 요청을 만족시킬 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">로컬로 캐시된 리소스를 사용하여 요청을 만족시키며, 캐시에 해당 항목이 없더라도 요청을 서버로 보내지는 않습니다. 이 캐시 정책 수준이 지정된 경우 클라이언트 캐시에 항목이 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary vsli:raw="Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network. If the request cannot be satisfied, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;only-if-cached&quot; /&gt; cache control directive.">로컬 컴퓨터의 캐시나 LAN(Local Area Network) 상의 원격 캐시에서 리소스 요청을 만족시킵니다. 요청을 만족시킬 수 없으면 <see cref="T:System.Net.WebException" /> 예외가 throw됩니다. HTTP 캐싱 프로토콜에서 이 작업은 <see langword="only-if-cached" /> 캐시 제어 지시문을 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">캐시된 리소스 복사본을 사용하거나 서버로 리소스 요청을 보냄으로써 리소스 요청을 만족시킵니다. 현재 캐시 정책과 콘텐츠가 캐시에 보관된 기간에 따라 수행할 작업이 결정됩니다. 대부분의 애플리케이션에서는 이 캐시 수준을 사용해야 합니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.">캐시의 리소스를 사용하여 요청을 만족시키지 않고 리소스를 캐시하지 않습니다. 리소스가 로컬 캐시에 있으면 제거됩니다. 이 정책 수준은 중간 캐시에서 리소스를 제거해야 함을 나타냅니다. HTTP 캐싱 프로토콜에서 이 작업은 no-cache 캐시 제어 지시문을 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary vsli:raw="Satisfies a request by using the server or a cache other than the local cache. Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server. In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">서버나 로컬 캐시 이외의 캐시를 사용하여 요청을 만족시킵니다. 중간 캐시에서 요청을 만족시키려면 캐시에서 서버를 사용하여 해당 캐시 항목의 유효성을 다시 검증해야 합니다. HTTP 캐싱 프로토콜에서 이 작업은 max-age = 0 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">서버를 사용하여 요청을 만족시킵니다. 응답은 캐시에 저장될 수 있습니다. HTTP 캐싱 프로토콜에서 이 작업은 no-cache 캐시 제어 지시문과 no-cache <see langword="Pragma" /> 헤더를 사용하여 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary vsli:raw="Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.">서버의 복사본과 캐시에 있는 리소스의 복사본을 비교합니다. 서버의 복사본이 최신이면 요청을 처리하는 데 사용하고 캐시의 복사본을 대체합니다. 캐시의 복사본이 서버의 복사본과 동일하면 캐시된 복사본을 사용합니다. HTTP 캐싱 프로토콜에서는 조건부 요청을 사용하여 이 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.HttpWebRequest" /> 개체를 사용하여 가져온 리소스에 대한 애플리케이션의 캐싱 요구 사항을 정의합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class.">
        <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class using the specified cache synchronization date.">지정된 캐시 동기화 날짜를 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheSyncDate" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that specifies the time when resources stored in the cache must be revalidated.">캐시에 저장된 리소스의 유효성을 다시 검사해야 할 시간을 지정하는 <see cref="T:System.DateTime" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class using the specified age control and time values.">지정된 보관 기간 제어 및 시간 값을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl" vsli:raw="One of the following &lt;see cref=&quot;T:System.Net.Cache.HttpCacheAgeControl&quot; /&gt; enumeration values: &lt;see cref=&quot;F:System.Net.Cache.HttpCacheAgeControl.MaxAge&quot; /&gt;, &lt;see cref=&quot;F:System.Net.Cache.HttpCacheAgeControl.MaxStale&quot; /&gt;, or &lt;see cref=&quot;F:System.Net.Cache.HttpCacheAgeControl.MinFresh&quot; /&gt;.">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 열거형 값인 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> 또는 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" /> 중 하나입니다.</param>
      <param name="ageOrFreshOrStale" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies an amount of time.">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for the &lt;paramref name=&quot;cacheAgeControl&quot; /&gt; parameter cannot be used with this constructor.">
        <paramref name="cacheAgeControl" /> 매개 변수에 지정된 값을 이 생성자와 함께 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class using the specified maximum age, age control value, and time value.">지정된 최대 보관 기간, 보관 기간 제어 및 시간 값을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl" vsli:raw="An &lt;see cref=&quot;T:System.Net.Cache.HttpCacheAgeControl&quot; /&gt; value.">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 값입니다.</param>
      <param name="maxAge" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the maximum age for resources.">리소스의 최대 보관 기간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="freshOrStale" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies an amount of time.">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for the &lt;paramref name=&quot;cacheAgeControl&quot; /&gt; parameter is not valid.">
        <paramref name="cacheAgeControl" /> 매개 변수에 지정된 값이 잘못된 경우</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class using the specified maximum age, age control value, time value, and cache synchronization date.">지정된 최대 보관 기간, 보관 기간 제어 값, 시간 값 및 캐시 동기화 날짜를 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cacheAgeControl" vsli:raw="An &lt;see cref=&quot;T:System.Net.Cache.HttpCacheAgeControl&quot; /&gt; value.">
        <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 값입니다.</param>
      <param name="maxAge" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the maximum age for resources.">리소스의 최대 보관 기간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="freshOrStale" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies an amount of time.">시간을 지정하는 <see cref="T:System.TimeSpan" /> 값입니다.</param>
      <param name="cacheSyncDate" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that specifies the time when resources stored in the cache must be revalidated.">캐시에 저장된 리소스의 유효성을 다시 검사해야 할 시간을 지정하는 <see cref="T:System.DateTime" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; class using the specified cache policy.">지정된 캐시 정책을 사용하여 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="level" vsli:raw="An &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCacheLevel&quot; /&gt; value.">
        <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 값입니다.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">이 인스턴스의 문자열 표현을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that contains the property values for this instance.">이 인스턴스의 속성 값이 들어 있는 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary vsli:raw="Gets the cache synchronization date for this instance.">이 인스턴스의 캐시 동기화 날짜를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value set to the date specified when this instance was created. If no date was specified, this property's value is &lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt;.">이 인스턴스가 만들어질 때 지정된 날짜로 설정된 <see cref="T:System.DateTime" />입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCacheLevel&quot; /&gt; value that was specified when this instance was created.">이 인스턴스가 만들어질 때 지정된 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources that were obtained using &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; objects.">
        <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 개체를 사용하여 가져온 리소스의 캐시 동작을 지정하는 <see cref="T:System.Net.HttpWebRequest" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary vsli:raw="Gets the maximum age permitted for a resource returned from the cache.">캐시에서 반환되는 리소스에 허용되는 최대 보관 기간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that is set to the maximum age value specified when this instance was created. If no date was specified, this property's value is &lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt;.">이 인스턴스가 만들어질 때 지정된 최대 보관 기간 값으로 설정된 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary vsli:raw="Gets the maximum staleness value that is permitted for a resource returned from the cache.">캐시에서 반환되는 리소스에 허용되는 만료 후 최대 시간 값을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that is set to the maximum staleness value specified when this instance was created. If no date was specified, this property's value is &lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt;.">이 인스턴스가 만들어질 때 지정된 만료 후 최대 시간 값으로 설정된 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary vsli:raw="Gets the minimum freshness that is permitted for a resource returned from the cache.">캐시에서 반환되는 리소스에 허용되는 만료 전 최소 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value that specifies the minimum freshness specified when this instance was created. If no date was specified, this property's value is &lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt;.">이 인스턴스가 만들어질 때 지정된 만료 전 최소 시간을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다. 날짜를 지정하지 않은 경우 이 속성의 값은 <see cref="F:System.DateTime.MinValue" />입니다.</returns>
    </member>
    <member name="T:System.Net.FileWebRequest">
      <summary vsli:raw="Provides a file system implementation of the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class.">
        <see cref="T:System.Net.WebRequest" /> 클래스의 파일 시스템 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Net.FileWebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; object.">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.FileWebRequest" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; object.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체와 관련된 serialize된 스트림의 소스가 들어 있는 <see cref="T:System.Net.FileWebRequest" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.Abort">
      <summary vsli:raw="Cancels a request to an Internet resource.">인터넷 리소스에 대한 요청을 취소합니다.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write data.">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.FileWebRequest.Method&quot; /&gt; property is &lt;c&gt;GET&lt;/c&gt; and the application writes to the stream.">
        <see cref="P:System.Net.FileWebRequest.Method" /> 속성이 <c>GET</c>이며 애플리케이션에서 스트림에 쓰려는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is being used by a previous call to &lt;see cref=&quot;M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.">스트림이 <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 사용되고 있는 경우</exception>
      <exception cref="T:System.ApplicationException" vsli:raw="No write stream is available.">쓰기 스트림을 사용할 수 없는 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; was aborted.">
        <see cref="T:System.Net.FileWebRequest" />가 중단되었습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request.">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a file system resource.">파일 시스템 리소스에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">이 요청에 대한 상태 정보를 포함하는 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is already in use by a previous call to &lt;see cref=&quot;M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">스트림이 <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용되고 있는 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; was aborted.">
        <see cref="T:System.Net.FileWebRequest" />가 중단되었습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request.">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous request for a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; instance that the application uses to write data.">애플리케이션이 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 인스턴스에 대한 비동기 요청을 종료합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the pending request for a stream.">스트림에 대한 보류 중인 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object that the application uses to write data.">애플리케이션에서 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous request for a file system resource.">파일 시스템 리소스에 대한 비동기 요청을 종료합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the pending request for a response.">응답에 대한 보류 중인 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; that contains the response from the file system resource.">파일 시스템 리소스로부터의 응답이 포함된 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStream">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing data to the file system resource.">파일 시스템 리소스에 데이터를 쓰기 위한 <see cref="T:System.IO.Stream" /> 개체를 반환합니다.</summary>
      <exception cref="T:System.Net.WebException" vsli:raw="The request times out.">요청 시간이 초과된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for writing data to the file system resource.">파일 시스템 리소스에 데이터를 쓰기 위한 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStreamAsync">
      <summary vsli:raw="Returns a stream for writing data to the file system resource as an asynchronous operation.">데이터를 파일 시스템 리소스에 쓰기 위해 스트림을 비동기 작업으로 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is being used by a previous call to &lt;see cref=&quot;M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;The stream already received a response previous to your request.">스트림이 <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 사용되고 있는 경우

또는

스트림이 요청 전에 이미 응답을 받았습니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.FileWebRequest.Method&quot; /&gt; property is GET or HEAD.">
        <see cref="P:System.Net.FileWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; was aborted.">
        <see cref="T:System.Net.FileWebRequest" />가 중단되었습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponse">
      <summary vsli:raw="Returns a response to a file system request.">파일 시스템 요청에 대한 응답을 반환합니다.</summary>
      <exception cref="T:System.Net.WebException" vsli:raw="The request timed out.">요청 시간이 초과된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; that contains the response from the file system resource.">파일 시스템 리소스로부터의 응답이 포함된 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponseAsync">
      <summary vsli:raw="Returns a response to a file system request as an asynchronous operation.">파일 시스템 요청에 대한 응답을 비동기 작업으로 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is already in use by a previous call to &lt;see cref=&quot;M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">스트림이 <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용되고 있는 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt; was aborted.">
        <see cref="T:System.Net.FileWebRequest" />가 중단되었습니다.</exception>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the required data to serialize the &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.FileWebRequest" /> 개체를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data for the &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대한 serialize된 데이터가 들어 있는 <see cref="T:System.Net.FileWebRequest" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the destination of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.FileWebRequest&quot; /&gt;.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.FileWebRequest" />입니다.</param>
    </member>
    <member name="P:System.Net.FileWebRequest.ConnectionGroupName">
      <summary vsli:raw="Gets or sets the name of the connection group for the request. This property is reserved for future use.">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="The name of the connection group for the request.">요청에 대한 연결 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentLength">
      <summary vsli:raw="Gets or sets the content length of the data being sent.">보내고 있는 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.FileWebRequest.ContentLength&quot; /&gt; is less than 0.">
        <see cref="P:System.Net.FileWebRequest.ContentLength" /> 가 0보다 작습니다.</exception>
      <returns vsli:raw="The number of bytes of request data being sent.">전송 중인 요청 데이터의 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentType">
      <summary vsli:raw="Gets or sets the content type of the data being sent. This property is reserved for future use.">보내고 있는 데이터의 콘텐츠 형식을 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="The content type of the data being sent.">보내고 있는 데이터의 콘텐츠 형식입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Credentials">
      <summary vsli:raw="Gets or sets the credentials that are associated with this request. This property is reserved for future use.">이 요청과 관련된 자격 증명을 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that contains the authentication credentials that are associated with this request. The default is &lt;see langword=&quot;null&quot; /&gt;.">이 요청과 관련된 인증 자격 증명이 포함된 <see cref="T:System.Net.ICredentials" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Headers">
      <summary vsli:raw="Gets a collection of the name/value pairs that are associated with the request. This property is reserved for future use.">요청과 관련된 이름/값 쌍의 컬렉션을 가져옵니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; that contains header name/value pairs associated with this request.">이 요청과 관련된 헤더 이름/값 쌍이 포함된 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Method">
      <summary vsli:raw="Gets or sets the protocol method used for the request. This property is reserved for future use.">요청하는 데 사용되는 프로토콜 메서드를 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The method is invalid.  &#xA;  &#xA;-or-&#xA;  &#xA; The method is not supported.  &#xA;  &#xA;-or-&#xA;  &#xA; Multiple methods were specified.">메서드가 잘못된 경우  
  
또는
  
 메서드가 지원되지 않습니다.  
  
또는
  
 여러 메서드가 지정된 경우</exception>
      <returns vsli:raw="The protocol method to use in this request.">이 요청에서 사용할 프로토콜 메서드입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether to preauthenticate a request. This property is reserved for future use.">요청을 미리 인증하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preauthenticate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">미리 인증하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Proxy">
      <summary vsli:raw="Gets or sets the network proxy to use for this request. This property is reserved for future use.">이 요청에 사용할 네트워크 프록시를 가져오거나 설정합니다. 이 속성은 나중에 사용할 수 있도록 예약됩니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; that indicates the network proxy to use for this request.">이 요청에 사용할 네트워크 프록시를 나타내는 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.RequestUri">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of the request.">요청의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that contains the URI of the request.">요청의 URI가 포함된 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Timeout">
      <summary vsli:raw="Gets or sets the length of time until the request times out.">요청 시간이 초과될 때까지의 시간을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">지정한 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <returns vsli:raw="The time, in milliseconds, until the request times out, or the value &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; to indicate that the request does not time out.">요청 시간이 초과될 때까지의 시간(밀리초)이거나 요청 시간이 초과되지 않았음을 나타내는 <see cref="F:System.Threading.Timeout.Infinite" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <summary vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Default credentials are not supported for file Uniform Resource Identifiers (URIs).">파일 URI(Uniform Resource Identifier)에 기본 자격 증명을 사용할 수 없는 경우</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</returns>
    </member>
    <member name="T:System.Net.FileWebResponse">
      <summary vsli:raw="Provides a file system implementation of the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; class.">
        <see cref="T:System.Net.WebResponse" /> 클래스의 파일 시스템 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Net.FileWebResponse" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information required to serialize the new &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.FileWebResponse" /> 인스턴스입니다.</param>
      <param name="streamingContext" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; class that contains the source of the serialized stream associated with the new &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련된 serialize된 스트림의 소스가 들어 있는 <see cref="T:System.Net.FileWebResponse" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.Close">
      <summary vsli:raw="Closes the response stream.">응답 스트림을 닫습니다.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.GetResponseStream">
      <summary vsli:raw="Returns the data stream from the file system resource.">파일 시스템 리소스에서 데이터 스트림을 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for reading data from the file system resource.">파일 시스템 리소스에서 데이터를 읽을 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.FileWebResponse" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; , which will hold the serialized data for the &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유할 <see cref="T:System.Net.FileWebResponse" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; containing the destination of the serialized stream associated with the new &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt;.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.FileWebResponse" />입니다.</param>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentLength">
      <summary vsli:raw="Gets the length of the content in the file system resource.">파일 시스템 리소스의 콘텐츠 길이를 가져옵니다.</summary>
      <returns vsli:raw="The number of bytes returned from the file system resource.">파일 시스템 리소스에서 반환된 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentType">
      <summary vsli:raw="Gets the content type of the file system resource.">파일 시스템 리소스의 콘텐츠 형식을 가져옵니다.</summary>
      <returns vsli:raw="The value &quot;binary/octet-stream&quot;.">"이진수/8진수 스트림" 값입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.Headers">
      <summary vsli:raw="Gets a collection of header name/value pairs associated with the response.">응답과 관련된 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; that contains the header name/value pairs associated with the response.">이 응답과 관련된 헤더 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ResponseUri">
      <summary vsli:raw="Gets the URI of the file system resource that provided the response.">응답을 제공한 파일 시스템 리소스의 URI를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that contains the URI of the file system resource that provided the response.">응답을 제공한 파일 시스템 리소스의 URI가 들어 있는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.SupportsHeaders">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Net.FileWebResponse.Headers&quot; /&gt; property is supported by the &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt; instance.">
        <see cref="P:System.Net.FileWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FileWebResponse" /> 인스턴스에 의해 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Net.FileWebResponse.Headers&quot; /&gt; property is supported by the &lt;see cref=&quot;T:System.Net.FileWebResponse&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Net.FileWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FileWebResponse" /> 인스턴스에 의해 지원되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.FtpStatusCode">
      <summary vsli:raw="Specifies the status codes returned for a File Transfer Protocol (FTP) operation.">FTP(파일 전송 프로토콜) 작업에 대해 반환되는 상태 코드를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.AccountNeeded">
      <summary vsli:raw="Specifies that a user account on the server is required.">서버의 사용자 계정이 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <summary vsli:raw="Specifies that an error occurred that prevented the request action from completing.">오류가 발생하여 요청 작업을 완료하지 못했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <summary vsli:raw="Specifies that the requested action cannot be taken because the specified page type is unknown. Page types are described in RFC 959 Section 3.1.2.3.">지정된 페이지 형식을 알 수 없어 요청된 작업을 수행할 수 없음을 나타냅니다. 페이지 형식에 대한 자세한 내용은 RFC 959 3.1.2.3절을 참조하세요.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <summary vsli:raw="Specifies that the requested action cannot be performed on the specified file.">지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <summary vsli:raw="Specifies that the requested action cannot be performed on the specified file because the file is not available.">파일을 사용할 수 없어서 지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <summary vsli:raw="Specifies that the requested action cannot be performed on the specified file because the file is not available or is being used.">파일을 사용할 수 없거나 파일이 사용 중이어서 지정된 파일에서 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <summary vsli:raw="Specifies that the requested action cannot be performed because there is not enough space on the server.">서버에 공간이 부족하여 요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <summary vsli:raw="Specifies that one or more command arguments has a syntax error.">하나 이상의 명령 인수에 구문 오류가 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.BadCommandSequence">
      <summary vsli:raw="Specifies that the sequence of commands is not in the correct order.">명령 시퀀스의 순서가 올바르지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CantOpenData">
      <summary vsli:raw="Specifies that the data connection cannot be opened.">데이터 연결을 열 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingControl">
      <summary vsli:raw="Specifies that the server is closing the control connection.">서버에서 제어 연결을 닫고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingData">
      <summary vsli:raw="Specifies that the server is closing the data connection and that the requested file action was successful.">서버에서 데이터 연결을 닫는 중이며 요청된 파일 작업에 성공했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandExtraneous">
      <summary vsli:raw="Specifies that the command is not implemented by the server because it is not needed.">필요하지 않은 명령이어서 서버에서 구현하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <summary vsli:raw="Specifies that the command is not implemented by the FTP server.">FTP 서버에서 명령을 구현하지 않음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandOK">
      <summary vsli:raw="Specifies that the command completed successfully.">명령이 성공적으로 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <summary vsli:raw="Specifies that the command has a syntax error or is not a command recognized by the server.">명령에 구문 오류가 있거나 서버에서 인식할 수 없는 명령임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ConnectionClosed">
      <summary vsli:raw="Specifies that the connection has been closed.">연결이 닫혔음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <summary vsli:raw="Specifies that the data connection is already open and the requested transfer is starting.">데이터 연결이 이미 열려 있으며 요청된 전송이 시작 중임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DirectoryStatus">
      <summary vsli:raw="Specifies the status of a directory.">디렉터리의 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.EnteringPassive">
      <summary vsli:raw="Specifies that the server is entering passive mode.">서버에서 수동 모드를 시작 중임을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionAborted">
      <summary vsli:raw="Specifies that the requested action cannot be performed.">요청된 작업을 수행할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionOK">
      <summary vsli:raw="Specifies that the requested file action completed successfully.">요청된 파일 작업이 성공적으로 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileCommandPending">
      <summary vsli:raw="Specifies that the requested file action requires additional information.">요청된 파일 작업에 추가 정보가 필요함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileStatus">
      <summary vsli:raw="Specifies the status of a file.">파일의 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.LoggedInProceed">
      <summary vsli:raw="Specifies that the user is logged in and can send commands.">사용자가 로그인했으며 명령을 보낼 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <summary vsli:raw="Specifies that the server requires a login account to be supplied.">서버에 로그인 계정을 제공해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NotLoggedIn">
      <summary vsli:raw="Specifies that login information must be sent to the server.">서버에 로그인 정보를 보내야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.OpeningData">
      <summary vsli:raw="Specifies that the server is opening the data connection.">서버에서 데이터 연결을 열고 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.PathnameCreated">
      <summary vsli:raw="Specifies that the requested path name was created.">요청된 경로 이름이 만들어졌음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.RestartMarker">
      <summary vsli:raw="Specifies that the response contains a restart marker reply. The text of the description that accompanies this status contains the user data stream marker and the server marker.">응답에 다시 시작 마커 회신이 들어 있음을 나타냅니다. 이 상태와 함께 제공되는 설명 텍스트에는 사용자 데이터 스트림 마커와 서버 마커가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <summary vsli:raw="Specifies that the server expects a password to be supplied.">서버에 암호를 제공해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendUserCommand">
      <summary vsli:raw="Specifies that the server is ready for a user login operation.">서버에서 사용자 로그인 작업을 수행할 준비가 되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <summary vsli:raw="Specifies that the server accepts the authentication mechanism specified by the client, and the exchange of security data is complete.">서버에서 클라이언트가 지정한 인증 메커니즘을 허용하며 보안 데이터의 교환이 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <summary vsli:raw="Specifies that the service is not available.">서비스를 사용할 수 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <summary vsli:raw="Specifies that the service is not available now; try your request later.">지금은 서비스를 사용할 수 없으므로 나중에 요청을 시도해야 함을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SystemType">
      <summary vsli:raw="Specifies the system type name using the system names published in the Assigned Numbers document published by the Internet Assigned Numbers Authority.">IANA(Internet Assigned Numbers Authority)에서 발표한 Assigned Numbers 문서의 시스템 이름을 사용하여 시스템 형식 이름을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.Undefined">
      <summary vsli:raw="Included for completeness, this value is never returned by servers.">완결성을 위해 포함된 값으로, 이 값은 서버에서 반환되지 않습니다.</summary>
    </member>
    <member name="T:System.Net.FtpWebRequest">
      <summary vsli:raw="Implements a File Transfer Protocol (FTP) client.">FTP(파일 전송 프로토콜) 클라이언트를 구현합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.Abort">
      <summary vsli:raw="Terminates an asynchronous FTP operation.">비동기 FTP 작업을 종료합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins asynchronously opening a request's content stream for writing.">요청의 콘텐츠 스트림을 쓰기 위해 비동기적으로 여는 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation completes.">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달되는 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A previous call to this method or &lt;see cref=&quot;M:System.Net.FtpWebRequest.GetRequestStream&quot; /&gt; has not yet completed.">이 메서드 또는 <see cref="M:System.Net.FtpWebRequest.GetRequestStream" />에 대한 이전 호출이 아직 완료되지 않은 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="A connection to the FTP server could not be established.">FTP 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.FtpWebRequest.Method&quot; /&gt; property is not set to &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.UploadFile&quot; /&gt;.">
        <see cref="P:System.Net.FtpWebRequest.Method" /> 속성이 <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />으로 설정되지 않은 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance that indicates the status of the operation.">작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins sending a request and receiving a response from an FTP server asynchronously.">비동기적으로 FTP 서버에 요청을 보내고 응답을 받는 작업을 시작합니다.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation completes.">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다. 작업이 완료되면 <paramref name="callback" /> 대리자에게 전달되는 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.FtpWebRequest.GetResponse&quot; /&gt; or &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; has already been called for this instance.">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />가 이 인스턴스에 대해 이미 호출된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; instance that indicates the status of the operation.">작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous operation started with &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />으로 시작된 보류 중인 비동기 작업을 종료합니다.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that was returned when the operation started.">작업이 시작될 때 반환된 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not obtained by calling &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출하여 <paramref name="asyncResult" />를 가져오지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was already called for the operation identified by &lt;paramref name=&quot;asyncResult&quot; /&gt;.">
        <paramref name="asyncResult" />로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</exception>
      <returns vsli:raw="A writable &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; instance associated with this instance.">이 인스턴스와 연결된 쓰기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous operation started with &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />으로 시작된 보류 중인 비동기 작업을 종료합니다.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that was returned when the operation started.">작업이 시작될 때 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not obtained by calling &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />을 호출하여 <paramref name="asyncResult" />를 가져오지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was already called for the operation identified by &lt;paramref name=&quot;asyncResult&quot; /&gt;.">
        <paramref name="asyncResult" />로 식별된 작업에 대해 이 메서드가 이미 호출된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="An error occurred using an HTTP proxy.">HTTP 프록시를 사용하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; reference that contains an &lt;see cref=&quot;T:System.Net.FtpWebResponse&quot; /&gt; instance. This object contains the FTP server's response to the request.">
        <see cref="T:System.Net.WebResponse" /> 인스턴스가 들어 있는 <see cref="T:System.Net.FtpWebResponse" /> 참조입니다. 이 개체에는 요청에 대한 FTP 서버의 응답이 들어 있습니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetRequestStream">
      <summary vsli:raw="Retrieves the stream used to upload data to an FTP server.">데이터를 FTP 서버에 업로드하는 데 사용되는 스트림을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt; has been called and has not completed.  &#xA;  &#xA;-or-&#xA;  &#xA; An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.DownloadFile&quot; /&gt;, &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.ListDirectory&quot; /&gt;, or &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />이 호출되어 아직 완료되지 않은 경우  
  
또는 
HTTP 프록시를 사용하도록 설정되어 있고 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 이외의 FTP 명령을 사용하려고 한 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="A connection to the FTP server could not be established.">FTP 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.FtpWebRequest.Method&quot; /&gt; property is not set to &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.UploadFile&quot; /&gt; or &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.AppendFile&quot; /&gt;.">
        <see cref="P:System.Net.FtpWebRequest.Method" /> 속성이 <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />로 설정되지 않은 경우</exception>
      <returns vsli:raw="A writable &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; instance used to store data to be sent to the server by the current request.">현재 요청에서 서버로 보낼 데이터를 저장하는 데 사용되는 쓰기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetResponse">
      <summary vsli:raw="Returns the FTP server response.">FTP 서버 응답을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.FtpWebRequest.GetResponse&quot; /&gt; or &lt;see cref=&quot;M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; has already been called for this instance.  &#xA;  &#xA;-or-&#xA;  &#xA; An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.DownloadFile&quot; /&gt;, &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.ListDirectory&quot; /&gt;, or &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails&quot; /&gt;.">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />가 이 인스턴스에 대해 이미 호출된 경우  
  
또는 
HTTP 프록시를 사용하도록 설정되어 있고 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> 또는 <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 이외의 FTP 명령을 사용하려고 한 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;P:System.Net.FtpWebRequest.EnableSsl&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt;, but the server does not support this feature.  &#xA;  &#xA;-or-&#xA;  &#xA; A &lt;see cref=&quot;P:System.Net.FtpWebRequest.Timeout&quot; /&gt; was specified and the timeout has expired.">
        <see cref="P:System.Net.FtpWebRequest.EnableSsl" />이 <see langword="true" />로 설정되었지만 서버에서 이 기능을 지원하지 않는 경우  
  
또는 
<see cref="P:System.Net.FtpWebRequest.Timeout" />이 지정되었고 제한 시간이 만료되었습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; reference that contains an &lt;see cref=&quot;T:System.Net.FtpWebResponse&quot; /&gt; instance. This object contains the FTP server's response to the request.">
        <see cref="T:System.Net.WebResponse" /> 인스턴스가 들어 있는 <see cref="T:System.Net.FtpWebResponse" /> 참조입니다. 이 개체에는 요청에 대한 FTP 서버의 응답이 들어 있습니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ClientCertificates">
      <summary vsli:raw="Gets or sets the certificates used for establishing an encrypted connection to the FTP server.">FTP 서버에 대해 암호화된 연결을 설정하는 데 사용되는 자격 증명을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; object that contains the client certificates.">클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <summary vsli:raw="Gets or sets the name of the connection group that contains the service point used to send the current request.">현재 요청을 보내는 데 사용되는 서비스 지점이 들어 있는 연결 그룹의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that contains a connection group name.">연결 그룹의 이름이 들어 있는 <see cref="T:System.String" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentLength">
      <summary vsli:raw="Gets or sets a value that is ignored by the &lt;see cref=&quot;T:System.Net.FtpWebRequest&quot; /&gt; class.">
        <see cref="T:System.Net.FtpWebRequest" /> 클래스에서 무시되는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that should be ignored.">무시되는 <see cref="T:System.Int64" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentOffset">
      <summary vsli:raw="Gets or sets a byte offset into the file being downloaded by this request.">이 요청으로 다운로드할 파일의 바이트 오프셋을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for this property is less than zero.">이 속성에 지정된 값이 0보다 작은 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; instance that specifies the file offset, in bytes. The default value is zero.">파일 오프셋을 바이트 단위로 지정하는 <see cref="T:System.Int64" /> 인스턴스입니다. 기본값은 영입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentType">
      <summary vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Content type information is not supported for FTP.">FTP에서 콘텐츠 형식 정보를 지원하지 않는 경우</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Credentials">
      <summary vsli:raw="Gets or sets the credentials used to communicate with the FTP server.">FTP 서버와 통신하는 데 사용되는 자격 증명을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; of a type other than &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; was specified for a set operation.">
        <see cref="T:System.Net.ICredentials" />이 아닌 형식의 <see cref="T:System.Net.NetworkCredential" />가 set 작업에 지정된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">
        <see cref="T:System.Net.ICredentials" /> 인스턴스이거나, 속성이 아직 설정되지 않은 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <summary vsli:raw="Defines the default cache policy for all FTP requests.">모든 FTP 요청에 대한 기본 캐시 정책을 정의합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The caller tried to set this property to &lt;see langword=&quot;null&quot; /&gt;.">호출자가 이 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; that defines the cache policy for FTP requests.">FTP 요청에 대한 캐시 정책을 정의하는 <see cref="T:System.Net.Cache.RequestCachePolicy" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.EnableSsl">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that specifies that an SSL connection should be used.">SSL 연결 사용 여부를 지정하는 <see cref="T:System.Boolean" />을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection to the FTP server has already been established.">FTP 서버에 대한 연결이 이미 설정된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if control and data transmissions are encrypted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">제어 및 데이터 전송이 암호화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Headers">
      <summary vsli:raw="Gets an empty &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; object.">빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An empty &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; object.">빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.KeepAlive">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the control connection to the FTP server is closed after the request completes.">FTP 서버에 대한 제어 연결이 요청 완료 후 닫히는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection to the server should not be destroyed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">서버에 대한 연결이 소멸되지 않아야 하면 <see langword="true" />이고, 소멸되어야 하면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Method">
      <summary vsli:raw="Gets or sets the command to send to the FTP server.">FTP 서버에 보낼 명령을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The method is invalid.  &#xA;  &#xA;-or-&#xA;  &#xA; The method is not supported.  &#xA;  &#xA;-or-&#xA;  &#xA; Multiple methods were specified.">메서드가 잘못된 경우  
  
또는
  
 메서드가 지원되지 않습니다.  
  
또는
  
 여러 메서드가 지정된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that contains the FTP command to send to the server. The default value is &lt;see cref=&quot;F:System.Net.WebRequestMethods.Ftp.DownloadFile&quot; /&gt;.">서버에 보낼 FTP 명령이 들어 있는 <see cref="T:System.String" /> 값입니다. 기본값은 <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.PreAuthenticate">
      <summary vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Preauthentication is not supported for FTP.">FTP에서 사전 인증을 지원하지 않는 경우</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Proxy">
      <summary vsli:raw="Gets or sets the proxy used to communicate with the FTP server.">FTP 서버와 통신하는 데 사용되는 프록시를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="This property cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">이 속성을 <see langword="null" />로 설정한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; instance responsible for communicating with the FTP server. On .NET Core, its value is &lt;see langword=&quot;null&quot; /&gt;.">FTP 서버와의 통신을 처리하는 <see cref="T:System.Net.IWebProxy" /> 인스턴스입니다. .NET Core에서 해당 값은 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <summary vsli:raw="Gets or sets a time-out when reading from or writing to a stream.">스트림을 읽거나 쓸 때의 제한 시간을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has already been sent.">요청을 이미 보낸 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than or equal to zero and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">set 작업에 지정된 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
      <returns vsli:raw="The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).">읽기 또는 쓰기 제한 시간 (밀리초)입니다. 기본값은 30만 밀리초 (5 분)입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.RenameTo">
      <summary vsli:raw="Gets or sets the new name of a file being renamed.">이름을 바꿀 파일의 새 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or an empty string.">set 작업에 지정된 값이 <see langword="null" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="The new name of the file being renamed.">이름을 바꿀 파일의 새 이름입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.RequestUri">
      <summary vsli:raw="Gets the URI requested by this instance.">이 인스턴스에서 요청한 URI를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that identifies a resource that is accessed using the File Transfer Protocol.">FTP(파일 전송 프로토콜)를 사용하여 액세스되는 리소스를 식별하는 <see cref="T:System.Uri" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ServicePoint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.ServicePoint&quot; /&gt; object used to connect to the FTP server.">FTP 서버에 연결하는 데 사용되는 <see cref="T:System.Net.ServicePoint" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.ServicePoint&quot; /&gt; object that can be used to customize connection behavior.">연결 동작을 사용자 지정하는 데 사용할 수 있는 <see cref="T:System.Net.ServicePoint" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Timeout">
      <summary vsli:raw="Gets or sets the number of milliseconds to wait for a request.">요청 대기 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">지정된 값이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of milliseconds to wait before a request times out. The default value is &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">
        <see cref="T:System.Int32" />요청 시간이 초과 될 때까지 대기 하는 시간 (밀리초)을 포함 하는 값입니다. 기본값은 <see cref="F:System.Threading.Timeout.Infinite" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseBinary">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies the data type for file transfers.">파일 전송을 위한 데이터 형식을 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate to the server that the data to be transferred is binary; &lt;see langword=&quot;false&quot; /&gt; to indicate that the data is text. The default value is &lt;see langword=&quot;true&quot; /&gt;.">서버에 전송할 데이터가 이진 데이터임을 나타낼 경우 <see langword="true" />이고, 데이터가 텍스트임을 나타낼 경우 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <summary vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Default credentials are not supported for FTP.">FTP에서 기본 자격 증명을 지원하지 않는 경우</exception>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">항상 <see cref="T:System.NotSupportedException" />을 버립니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UsePassive">
      <summary vsli:raw="Gets or sets the behavior of a client application's data transfer process.">클라이언트 애플리케이션의 데이터 전송 프로세스에 대한 동작을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A new value was specified for this property for a request that is already in progress.">이미 진행 중인 요청의 이 속성에 새 값이 지정된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if the client application's data transfer process listens for a connection on the data port; otherwise, &lt;see langword=&quot;true&quot; /&gt; if the client should initiate a connection on the data port. The default value is &lt;see langword=&quot;true&quot; /&gt;.">클라이언트 애플리케이션의 데이터 전송 프로세스에서 데이터 포트의 연결을 수신 대기할 경우 <see langword="false" />이고, 클라이언트에서 데이터 포트의 연결을 시작해야 할 경우에는 <see langword="true" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="T:System.Net.FtpWebResponse">
      <summary vsli:raw="Encapsulates a File Transfer Protocol (FTP) server's response to a request.">요청에 대한 FTP(파일 전송 프로토콜) 서버의 응답을 캡슐화합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebResponse.Close">
      <summary vsli:raw="Frees the resources held by the response.">응답에서 사용 중인 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.FtpWebResponse.GetResponseStream">
      <summary vsli:raw="Retrieves the stream that contains response data sent from an FTP server.">FTP 서버에서 보낸 응답 데이터를 포함하는 스트림을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The response did not return a data stream.">응답에 데이터 스트림이 반환되지 않은 경우</exception>
      <returns vsli:raw="A readable &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; instance that contains data returned with the response; otherwise, &lt;see cref=&quot;F:System.IO.Stream.Null&quot; /&gt; if no response data was returned by the server.">응답과 함께 반환된 데이터를 포함하는 읽기 가능한 <see cref="T:System.IO.Stream" /> 인스턴스이거나, 서버에서 응답 데이터를 반환하지 않은 경우 <see cref="F:System.IO.Stream.Null" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.BannerMessage">
      <summary vsli:raw="Gets the message sent by the FTP server when a connection is established prior to logon.">연결할 때(로그온하기 전) FTP 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the banner message sent by the server; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no message is sent.">서버에서 보낸 배너 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentLength">
      <summary vsli:raw="Gets the length of the data received from the FTP server.">FTP 서버로부터 받은 데이터의 길이를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that contains the number of bytes of data received from the FTP server.">FTP 서버로부터 받은 데이터의 바이트 수를 포함하는 <see cref="T:System.Int64" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ExitMessage">
      <summary vsli:raw="Gets the message sent by the server when the FTP session is ending.">FTP 세션을 종료할 때 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the exit message sent by the server; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no message is sent.">서버에서 보낸 종료 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.Headers">
      <summary vsli:raw="Gets an empty &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; object.">빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An empty &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; object.">빈 <see cref="T:System.Net.WebHeaderCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.LastModified">
      <summary vsli:raw="Gets the date and time that a file on an FTP server was last modified.">FTP 서버의 파일이 마지막으로 수정된 날짜와 시간을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the last modified date and time for a file.">파일이 마지막으로 수정된 날짜와 시간을 포함하는 <see cref="T:System.DateTime" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ResponseUri">
      <summary vsli:raw="Gets the URI that sent the response to the request.">요청에 대한 응답을 보낸 URI를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that identifies the resource associated with this response.">이 응답과 관련된 리소스를 식별하는 <see cref="T:System.Uri" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusCode">
      <summary vsli:raw="Gets the most recent status code sent from the FTP server.">FTP 서버에서 보낸 가장 최근 상태 코드를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.FtpStatusCode&quot; /&gt; value that indicates the most recent status code returned with this response.">이 응답과 함께 반환된 가장 최근 상태 코드를 나타내는 <see cref="T:System.Net.FtpStatusCode" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusDescription">
      <summary vsli:raw="Gets text that describes a status code sent from the FTP server.">FTP 서버에서 보낸 상태 코드를 설명하는 텍스트를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; instance that contains the status code and message returned with this response.">이 응답과 함께 반환된 상태 코드와 메시지를 포함하는 <see cref="T:System.String" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.SupportsHeaders">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Net.FtpWebResponse.Headers&quot; /&gt; property is supported by the &lt;see cref=&quot;T:System.Net.FtpWebResponse&quot; /&gt; instance.">
        <see cref="P:System.Net.FtpWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FtpWebResponse" /> 인스턴스에 의해 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.  &#xA;  &#xA; &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Net.FtpWebResponse.Headers&quot; /&gt; property is supported by the &lt;see cref=&quot;T:System.Net.FtpWebResponse&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Boolean" />를 반환합니다.  
  
 <see cref="P:System.Net.FtpWebResponse.Headers" /> 속성이 <see cref="T:System.Net.FtpWebResponse" /> 인스턴스에 의해 지원되는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.WelcomeMessage">
      <summary vsli:raw="Gets the message sent by the FTP server when authentication is complete.">인증을 완료했을 때 FTP 서버에서 보낸 메시지를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the welcome message sent by the server; otherwise, &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no message is sent.">서버에서 보낸 시작 메시지를 포함하는 <see cref="T:System.String" />이거나, 서버에서 메시지를 보내지 않은 경우 <see cref="F:System.String.Empty" />입니다.</returns>
    </member>
    <member name="T:System.Net.GlobalProxySelection">
      <summary vsli:raw="Contains a global default proxy instance for all HTTP requests.">모든 HTTP 요청에 대한 글로벌 기본 프록시 인스턴스를 포함합니다.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.GlobalProxySelection&quot; /&gt; class.">
        <see cref="T:System.Net.GlobalProxySelection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <summary vsli:raw="Returns an empty proxy instance.">빈 프록시 인스턴스를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; that contains no information.">정보가 들어 있지 않은 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
    </member>
    <member name="P:System.Net.GlobalProxySelection.Select">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">글로벌 HTTP 프록시를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for a set operation was &lt;see langword=&quot;null&quot; /&gt;.">set 작업에 지정된 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have permission for the requested operation.">호출자에게 요청된 작업에 대한 권한이 없는 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; that every call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt; uses.">
        <see cref="T:System.Net.IWebProxy" />에의 모든 호출이 사용하는 <see cref="M:System.Net.HttpWebRequest.GetResponse" />입니다.</returns>
    </member>
    <member name="T:System.Net.HttpContinueDelegate">
      <summary vsli:raw="Represents the method that notifies callers when a continue response is received by the client.">클라이언트가 계속 응답을 받을 때 호출자에게 알리는 메서드를 나타냅니다.</summary>
      <param name="StatusCode" vsli:raw="The numeric value of the HTTP status from the server.">서버에서 HTTP 상태의 숫자 값입니다.</param>
      <param name="httpHeaders" vsli:raw="The headers returned with the 100-continue response from the server.">서버에서 100-continue 응답으로 반환된 헤더입니다.</param>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary vsli:raw="Provides an HTTP-specific implementation of the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class.">
        <see cref="T:System.Net.WebRequest" /> 클래스의 HTTP 관련 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes. This constructor is obsolete.">
        <see cref="T:System.Net.HttpWebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다. 이 생성자는 사용되지 않습니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that contains the information required to serialize the new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; object.">새 <see cref="T:System.Net.HttpWebRequest" /> 개체를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; object.">새 <see cref="T:System.Net.HttpWebRequest" /> 개체와 관련되어 있는 serialize된 스트림의 소스 및 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary vsli:raw="Cancels a request to an Internet resource.">인터넷 리소스에 대한 요청을 취소합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <summary vsli:raw="Adds a byte range header to a request for a specific range from the beginning or end of the requested data.">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</summary>
      <param name="range" vsli:raw="The starting or ending point of the range.">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <summary vsli:raw="Adds a byte range header to the request for a specified range.">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
  
또는 
 <paramref name="from" /> 또는 <paramref name="to" /> 가 0 미만입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <summary vsli:raw="Adds a byte range header to a request for a specific range from the beginning or end of the requested data.">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</summary>
      <param name="range" vsli:raw="The starting or ending point of the range.">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <summary vsli:raw="Adds a byte range header to the request for a specified range.">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
  
또는 
 <paramref name="from" /> 또는 <paramref name="to" /> 가 0 미만입니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <summary vsli:raw="Adds a Range header to a request for a specific range from the beginning or end of the requested data.">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier" vsli:raw="The description of the range.">범위에 대한 설명입니다.</param>
      <param name="range" vsli:raw="The starting or ending point of the range.">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rangeSpecifier" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Adds a range header to a request for a specified range.">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier" vsli:raw="The description of the range.">범위에 대한 설명입니다.</param>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rangeSpecifier" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
  
또는 
 <paramref name="from" /> 또는 <paramref name="to" /> 가 0 미만입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <summary vsli:raw="Adds a Range header to a request for a specific range from the beginning or end of the requested data.">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier" vsli:raw="The description of the range.">범위에 대한 설명입니다.</param>
      <param name="range" vsli:raw="The starting or ending point of the range.">범위의 시작점이나 끝점입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rangeSpecifier" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <summary vsli:raw="Adds a range header to a request for a specified range.">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</summary>
      <param name="rangeSpecifier" vsli:raw="The description of the range.">범위에 대한 설명입니다.</param>
      <param name="from" vsli:raw="The position at which to start sending data.">데이터를 보내기 시작하는 위치입니다.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">데이터 보내기를 중지하는 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rangeSpecifier" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" />이 <paramref name="to" />보다 큰 경우  
  
또는 
 <paramref name="from" /> 또는 <paramref name="to" /> 가 0 미만입니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rangeSpecifier&quot; /&gt; is invalid.">
        <paramref name="rangeSpecifier" />이 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The range header could not be added.">범위 헤더를 추가할 수 없습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write data.">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="The state object for this request.">이 요청에 대한 상태 개체입니다.</param>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; property is GET or HEAD.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.KeepAlive&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.AllowWriteStreamBuffering&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is -1, &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is POST or PUT.">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is being used by a previous call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to a value and &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The thread pool is running out of threads.">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 사용되고 있는 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.  
  
또는 
스레드 풀에 스레드가 부족합니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented.">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly. For more information about handling zero content length requests, see Network Programming in the .NET Compact Framework.">.NET Compact Framework 애플리케이션에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다. 콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 .NET Compact Framework의 네트워크 프로그래밍을 참조하세요.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request.">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request to an Internet resource.">인터넷 리소스에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자</param>
      <param name="state" vsli:raw="The state object for this request.">이 요청에 대한 상태 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is already in use by a previous call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to a value and &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The thread pool is running out of threads.">이 스트림은 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용 중입니다.  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.  
  
또는 
스레드 풀에 스레드가 부족합니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="&lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is GET or HEAD, and either &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is greater than zero or &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.KeepAlive&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.AllowWriteStreamBuffering&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, and either &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is -1, &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt; and &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is POST or PUT.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; has an entity body but the &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; method is called without calling the &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is greater than zero, but the application does not write all of the promised data.">
        <see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고 <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />입니다.  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />, 그리고 <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT입니다.  
  
또는 
<see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드가 호출되었습니다.  
  
또는 
<see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request for a response.">응답에 대한 비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous request for a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write data.">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 끝냅니다.</summary>
      <param name="asyncResult" vsli:raw="The pending request for a stream.">스트림에 대해 보류된 요청입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The request did not complete, and no stream is available.">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by the current instance from a call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called previously using &lt;paramref name=&quot;asyncResult&quot; /&gt;.">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to use to write request data.">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary vsli:raw="Ends an asynchronous request for a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write data and outputs the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; associated with the stream.">데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 종료하고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</summary>
      <param name="asyncResult" vsli:raw="The pending request for a stream.">스트림에 대해 보류된 요청입니다.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; for the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by the current instance from a call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;.">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called previously using &lt;paramref name=&quot;asyncResult&quot; /&gt;.">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The request did not complete, and no stream is available.">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to use to write request data.">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous request to an Internet resource.">인터넷 리소스에 대한 비동기 요청을 종료합니다.</summary>
      <param name="asyncResult" vsli:raw="The pending request for a response.">응답에 대해 보류된 요청입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method was called previously using &lt;paramref name=&quot;asyncResult&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; property is greater than 0 but the data has not been written to the request stream.">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우  
  
또는 
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> 속성이 0보다 큰데 데이터를 요청 스트림에 쓰지 않은 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by the current instance from a call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; that contains the response from the Internet resource.">인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write request data.">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</summary>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; property is GET or HEAD.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.KeepAlive&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.AllowWriteStreamBuffering&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is -1, &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is POST or PUT.">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt; method is called more than once.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to a value and &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented.">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; The time-out period for the request expired.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
요청의 제한 시간이 만료된 경우  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly. For more information about handling zero content length requests, see Network Programming in the .NET Compact Framework.">.NET Compact Framework 애플리케이션에서 콘텐츠 길이가 0인 요청 스트림을 가져오지 않았으며 올바르게 종료되었습니다. 콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 .NET Compact Framework의 네트워크 프로그래밍을 참조하세요.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to use to write request data.">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to use to write request data and outputs the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; associated with the stream.">요청 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체를 가져오고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; for the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</param>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt; method was unable to obtain the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드는 <see cref="T:System.IO.Stream" />를 얻을 수 없었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt; method is called more than once.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to a value and &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented.">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="The &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; property is GET or HEAD.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.KeepAlive&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.AllowWriteStreamBuffering&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is -1, &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is POST or PUT.">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; The time-out period for the request expired.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
요청의 제한 시간이 만료된 경우  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to use to write request data.">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary vsli:raw="Returns a response from an Internet resource.">인터넷 리소스에서의 응답을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The stream is already in use by a previous call to &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to a value and &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용되고 있는 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</exception>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="&lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is GET or HEAD, and either &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is greater or equal to zero or &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Net.HttpWebRequest.KeepAlive&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.AllowWriteStreamBuffering&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is -1, &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.HttpWebRequest.Method&quot; /&gt; is POST or PUT.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; has an entity body but the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt; method is called without calling the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt; method.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; is greater than zero, but the application does not write all of the promised data.">
        <see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0 이상이거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />인 경우  
  
또는 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우  
  
또는 
<see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 메서드가 호출되었습니다.  
  
또는 
<see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server. Requests that send data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented.">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 이 요청에는 서버로 보낼 데이터가 포함되어 있음을 나타내는 경우. 데이터를 보내는 요청의 경우에는 캐시를 사용하지 말아야 합니다. 이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="&lt;see cref=&quot;M:System.Net.HttpWebRequest.Abort&quot; /&gt; was previously called.&#xA;&#xA; -or-&#xA;&#xA; The time-out period for the request expired.&#xA;&#xA; -or-&#xA;&#xA; An error occurred while processing the request.">
        <see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.  
  
또는 
요청의 제한 시간이 만료된 경우  
  
또는 
이 요청을 처리하는 동안 오류가 발생했습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; that contains the response from the Internet resource.">인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Accept&quot; /&gt; HTTP header.">HTTP <see langword="Accept" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Accept" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Address">
      <summary vsli:raw="Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.">요청에 실제로 응답하는 인터넷 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that identifies the Internet resource that actually responds to the request. The default is the URI used by the &lt;see cref=&quot;M:System.Net.WebRequest.Create(System.String)&quot; /&gt; method to initialize the request.">요청에 실제로 응답하는 인터넷 리소스를 식별하는 <see cref="T:System.Uri" />입니다. 기본값은 요청을 초기화하기 위해 <see cref="M:System.Net.WebRequest.Create(System.String)" /> 메서드가 사용한 URI입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the request should follow redirection responses.">요청이 리디렉션 응답을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the request should automatically follow redirection responses from the Internet resource; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">요청이 인터넷 리소스의 리디렉션 응답을 자동으로 따르면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary vsli:raw="Gets or sets a value that indicates whether to buffer the received from the Internet resource.">인터넷 리소스에서 받은 데이터를 버퍼링할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable buffering of the data received from the Internet resource; &lt;see langword=&quot;false&quot; /&gt; to disable buffering. The default is &lt;see langword=&quot;false&quot; /&gt;.">인터넷 리소스에서 받은 데이터를 버퍼링하려면 <see langword="true" />이고, 버퍼링하지 않으려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary vsli:raw="Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.">인터넷 리소스에 보낸 데이터를 버퍼링할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable buffering of the data sent to the Internet resource; &lt;see langword=&quot;false&quot; /&gt; to disable buffering. The default is &lt;see langword=&quot;true&quot; /&gt;.">인터넷 리소스에 보낸 데이터를 버퍼링할 수 있게 하려면 <see langword="true" />이고, 버퍼링할 수 없게 하려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression that is used.">압축을 푸는 데 사용할 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object's current state does not allow this property to be set.">개체의 현재 상태는 이 속성을 설정하도록 허용하지 않습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.DecompressionMethods&quot; /&gt; object that indicates the type of decompression that is used.">사용 되는 <see cref="T:System.Net.DecompressionMethods" /> 압축 풀기의 유형을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ClientCertificates">
      <summary vsli:raw="Gets or sets the collection of security certificates that are associated with this request.">이 요청과 관련된 보안 인증서의 컬렉션을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt;.">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot; /&gt; that contains the security certificates associated with this request.">이 요청과 연결된 보안 인증서를 포함하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Connection">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Connection&quot; /&gt; HTTP header.">HTTP <see langword="Connection" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of &lt;see cref=&quot;P:System.Net.HttpWebRequest.Connection&quot; /&gt; is set to Keep-alive or Close.">
        <see cref="P:System.Net.HttpWebRequest.Connection" />의 값이 Keep-alive 또는 Close로 설정되어 있습니다.</exception>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Connection" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <summary vsli:raw="Gets or sets the name of the connection group for the request.">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the connection group for this request. The default value is &lt;see langword=&quot;null&quot; /&gt;.">이 요청에 대한 연결 그룹의 이름입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;Content-length&quot; /&gt; HTTP header.">
        <see langword="Content-length" /> HTTP 헤더를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has been started by calling the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt;, or &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The new &lt;see cref=&quot;P:System.Net.HttpWebRequest.ContentLength&quot; /&gt; value is less than 0.">새 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 값이 0보다 작습니다.</exception>
      <returns vsli:raw="The number of bytes of data to send to the Internet resource. The default is -1, which indicates the property has not been set and that there is no request data to send.">인터넷 리소스에 보낼 데이터의 바이트 수입니다. 기본값은 -1로, 해당 속성이 설정되지 않았으며 보낼 요청 데이터가 없음을 나타냅니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-type&quot; /&gt; HTTP header.">HTTP <see langword="Content-type" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-type&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Content-type" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueDelegate">
      <summary vsli:raw="Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.">인터넷 리소스에서 HTTP 100-continue 응답을 받을 때 호출된 대리자 메서드를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource. The default value is &lt;see langword=&quot;null&quot; /&gt;.">인터넷 리소스에서 HTTP 계속 응답이 반환될 때 실행하는 콜백 메서드를 구현하는 대리자입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueTimeout">
      <summary vsli:raw="Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.">서버에서 100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The timeout, in milliseconds, to wait until the 100-Continue is received.">100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary vsli:raw="Gets or sets the cookies associated with the request.">이 요청과 관련된 쿠키를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; that contains the cookies associated with this request.">이 요청과 관련된 쿠키가 들어 있는 A <see cref="T:System.Net.CookieContainer" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary vsli:raw="Gets or sets authentication information for the request.">요청에 대한 인증 정보를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that contains the authentication credentials associated with the request. The default is &lt;see langword=&quot;null&quot; /&gt;.">요청과 관련된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Date">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;Date&quot; /&gt; HTTP header value to use in an HTTP request.">HTTP 요청에 사용할 <see langword="Date" /> HTTP 헤더 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The Date header value in the HTTP request.">HTTP 요청의 Date 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <summary vsli:raw="Gets or sets the default cache policy for this request.">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; that specifies the cache policy in effect for this request when no other policy is applicable.">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <summary vsli:raw="Gets or sets the default maximum length of an HTTP error response.">HTTP 오류 응답의 기본 최대 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value is less than 0 and is not equal to -1.">값이 0보다 작고 -1이 아닌 경우</exception>
      <returns vsli:raw="The default maximum length of an HTTP error response.">HTTP 오류 응답의 기본 최대 길이입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <summary vsli:raw="Gets or sets the default for the &lt;see cref=&quot;P:System.Net.HttpWebRequest.MaximumResponseHeadersLength&quot; /&gt; property.">
        <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> 속성에 대한 기본값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value is less than zero.">값이 0보다 작고 -1이 아닌 경우</exception>
      <returns vsli:raw="The length, in kilobytes (1024 bytes), of the default maximum for response headers received. The default configuration file sets this value to 64 kilobytes.">받은 응답 헤더의 기본 최대 길이이며 킬로바이트(1024바이트) 단위입니다. 기본 구성 파일에서는 이 값을 64KB로 설정합니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expect&quot; /&gt; HTTP header.">HTTP <see langword="Expect" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;Expect&quot; /&gt; is set to a string that contains &quot;100-continue&quot; as a substring.">
        <see langword="Expect" />가 하위 문자열로 "100-continue"를 포함하는 문자열로 설정된 경우</exception>
      <returns vsli:raw="The contents of the &lt;see langword=&quot;Expect&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Expect" /> 헤더의 콘텐츠입니다. 기본값은 <see langword="null" />입니다.  
  
 <block subset="none" type="note"><para>  
 이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다. WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</para></block></returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary vsli:raw="Gets a value that indicates whether a response has been received from an Internet resource.">인터넷 리소스로부터 응답을 받았는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a response has been received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">응답을 받았으면 <see langword="true" />이고, 받지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary vsli:raw="Specifies a collection of the name/value pairs that make up the HTTP headers.">HTTP 헤더를 구성하는 이름/값 쌍의 컬렉션을 지정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has been started by calling the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt;, or &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; that contains the name/value pairs that make up the headers for the HTTP request.">HTTP 요청의 헤더를 구성하는 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary vsli:raw="Gets or sets the Host header value to use in an HTTP request independent from the request URI.">요청 URI와 독립적인 HTTP 요청에 사용할 Host 헤더 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The Host header cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">호스트 헤더는 <see langword="null" />로 설정할 수 없습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The Host header cannot be set to an invalid value.">호스트 헤더 잘못된 값으로 설정할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The Host header cannot be set after the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; has already started to be sent.">
        <see cref="T:System.Net.HttpWebRequest" />가 이미 전송되기 시작한 다음에는 호스트 헤더를 설정할 수 없습니다.</exception>
      <returns vsli:raw="The Host header value in the HTTP request.">HTTP 요청의 Host 헤더 값입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;c&gt;If-Modified-Since&lt;/c&gt; HTTP header.">
        <c>If-Modified-Since</c> HTTP 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the contents of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; HTTP header.">
        <see langword="If-Modified-Since" /> HTTP 헤더의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary vsli:raw="Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.">인터넷 리소스에 영구 연결을 할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the request to the Internet resource should contain a &lt;see langword=&quot;Connection&quot; /&gt; HTTP header with the value Keep-alive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">인터넷 리소스에 대한 요청의 <see langword="true" /> HTTP 헤더 값이 Keep-alive이면 <see langword="Connection" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the request follows.">요청이 따르는 최대 리디렉션 수를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The value is set to 0 or less.">값이 0 이하로 설정된 경우</exception>
      <returns vsli:raw="The maximum number of redirection responses that the request follows. The default value is 50.">요청이 따르는 최대 리디렉션 응답 수입니다. 기본값은 50입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum allowed length of the response headers.">응답 헤더의 허용되는 최대 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The property is set after the request has already been submitted.">요청이 제출된 후에 속성이 설정된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value is less than 0.">값이 0보다 작고 -1이 아닌 경우</exception>
      <returns vsli:raw="The length, in kilobytes (1024 bytes), of the response headers.">응답 헤더의 킬로바이트(1024바이트) 단위 길이입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary vsli:raw="Gets or sets the media type of the request.">요청의 미디어 형식을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The media type of the request. The default value is &lt;see langword=&quot;null&quot; /&gt;.">요청의 미디어 형식입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary vsli:raw="Gets or sets the method for the request.">요청에 대한 메서드를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="No method is supplied.&#xA;&#xA; -or-&#xA;&#xA; The method string contains invalid characters.">메서드를 지정하지 않은 경우  
  
 또는  
  
 메서드 문자열에 잘못된 문자가 들어 있는 경우</exception>
      <returns vsli:raw="The request method to use to contact the Internet resource. The default value is GET.">인터넷 리소스에 접속하는 데 사용할 요청 메서드입니다. 기본값은 GET입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary vsli:raw="Gets or sets a value that indicates whether to pipeline the request to the Internet resource.">요청을 인터넷 리소스에 파이프라인할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the request should be pipelined; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">요청을 파이프라인해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether to send an Authorization header with the request.">요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">인증을 수행한 이후 요청과 함께 HTTP 권한 부여 헤더를 함께 보내는 경우 <see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary vsli:raw="Gets or sets the version of HTTP to use for the request.">요청에 사용할 HTTP의 버전을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The HTTP version is set to a value other than 1.0 or 1.1.">HTTP 버전이 1.0이나 1.1 이외의 값으로 설정된 경우</exception>
      <returns vsli:raw="The HTTP version to use for the request. The default is &lt;see cref=&quot;F:System.Net.HttpVersion.Version11&quot; /&gt;.">요청에 사용할 HTTP 버전입니다. 기본값은 <see cref="F:System.Net.HttpVersion.Version11" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary vsli:raw="Gets or sets proxy information for the request.">요청에 대한 프록시 정보를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see cref=&quot;P:System.Net.HttpWebRequest.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Net.HttpWebRequest.Proxy" />이 <see langword="null" />로 설정됩니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has been started by calling &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt;, or &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />를 호출하여 요청이 시작된 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have permission for the requested operation.">호출자에게 요청된 작업에 대한 권한이 없는 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; object to use to proxy the request. The default value is set by calling the &lt;see cref=&quot;P:System.Net.GlobalProxySelection.Select&quot; /&gt; property.">요청을 프록시하는 데 사용할 <see cref="T:System.Net.IWebProxy" /> 개체입니다. 기본값은 <see cref="P:System.Net.GlobalProxySelection.Select" /> 속성을 호출함으로써 설정됩니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary vsli:raw="Gets or sets a time-out in milliseconds when writing to or reading from a stream.">스트림에 쓰거나 스트림에서 읽을 때의 제한 시간을 밀리초 단위로 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has already been sent.">요청을 이미 보낸 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than or equal to zero and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;">set 작업에 지정된 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</exception>
      <returns vsli:raw="The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).">쓰기 또는 읽기가 가능한 제한 시간(밀리초)입니다. 기본값은 300,000밀리초(5분)입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; HTTP header.">HTTP <see langword="Referer" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Referer" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary vsli:raw="Gets the original Uniform Resource Identifier (URI) of the request.">요청의 원래 URI(Uniform Resource Identifier)를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that contains the URI of the Internet resource passed to the &lt;see cref=&quot;M:System.Net.WebRequest.Create(System.String)&quot; /&gt; method.">
        <see cref="T:System.Uri" /> 메서드에 전달된 인터넷 리소스의 URI가 들어 있는 <see cref="M:System.Net.WebRequest.Create(System.String)" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary vsli:raw="Gets or sets a value that indicates whether to send data in segments to the Internet resource.">인터넷 리소스에 데이터를 분할된 형태로 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request has been started by calling the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)&quot; /&gt;, &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt;, or &lt;see cref=&quot;M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to send data to the Internet resource in segments; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">인터넷 리소스에 데이터를 분할된 형태로 보내려면 <see langword="true" />로 설정하고 그렇지 않으면 <see langword="false" />로 설정합니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <summary vsli:raw="Gets or sets a callback function to validate the server certificate.">서버 인증서의 유효성을 검사할 콜백 함수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A callback function to validate the server certificate.">서버 인증서의 유효성을 검사할 콜백 함수입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary vsli:raw="Gets the service point to use for the request.">요청에 사용할 서비스 지점을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.ServicePoint&quot; /&gt; that represents the network connection to the Internet resource.">인터넷 리소스에 네트워크 연결을 나타내는 <see cref="T:System.Net.ServicePoint" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary vsli:raw="Gets a value that indicates whether the request provides support for a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">요청이 <see cref="T:System.Net.CookieContainer" />를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the request provides support for a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 요청에서에 대 한 지원을 제공 하면 <see cref="T:System.Net.CookieContainer" /> 이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary vsli:raw="Gets or sets the time-out value in milliseconds for the &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetResponse&quot; /&gt; and &lt;see cref=&quot;M:System.Net.HttpWebRequest.GetRequestStream&quot; /&gt; methods.">
        <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 및 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드의 제한 시간 값을 밀리초 단위로 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">지정된 값이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</exception>
      <returns vsli:raw="The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).">요청 시간이 초과 될 때까지 대기 하는 시간 (밀리초)입니다. 기본값은 10만 밀리초 (100 초)입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Transfer-encoding&quot; /&gt; HTTP header.">HTTP <see langword="Transfer-encoding" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set when &lt;see cref=&quot;P:System.Net.HttpWebRequest.SendChunked&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />가 <see langword="false" />일 때, <see cref="P:System.Net.HttpWebRequest.SendChunked" />이 설정된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Net.HttpWebRequest.TransferEncoding&quot; /&gt; is set to the value &quot;Chunked&quot;.">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 "Chunked" 값으로 설정된 경우</exception>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-encoding&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="Transfer-encoding" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary vsli:raw="Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.">고속 NTLM 인증 연결 공유가 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the authenticated connection open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">인증된 연결을 열어 두려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that controls whether default credentials are sent with requests.">기본 자격 증명을 요청과 함께 보내는지 여부를 제어하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You attempted to set this property after the request was sent.">요청을 보낸 후에 이 속성을 설정하려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;User-agent&quot; /&gt; HTTP header.">HTTP <see langword="User-agent" /> 헤더의 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-agent&quot; /&gt; HTTP header. The default value is &lt;see langword=&quot;null&quot; /&gt;.">HTTP <see langword="User-agent" /> 헤더의 값입니다. 기본값은 <see langword="null" />입니다.  
  
 <block subset="none" type="note"><para>  
 이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다. WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</para></block></returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary vsli:raw="Provides an HTTP-specific implementation of the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; class.">
        <see cref="T:System.Net.WebResponse" /> 클래스의 HTTP 관련 구현을 제공합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; class.">
        <see cref="T:System.Net.HttpWebResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; instances.">지정된 <see cref="T:System.Net.HttpWebResponse" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains the information required to serialize the new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">새 <see cref="T:System.Net.HttpWebRequest" />을 직렬화하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">새 <see cref="T:System.Net.HttpWebRequest" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary vsli:raw="Closes the response stream.">응답 스트림을 닫습니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Core only: This &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; object has been disposed.">.NET Core만 해당: 이 <see cref="T:System.Net.HttpWebResponse" /> 개체가 삭제되었습니다.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt;, and optionally disposes of the managed resources.">
        <see cref="T:System.Net.HttpWebResponse" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary vsli:raw="Gets the contents of a header that was returned with the response.">응답과 함께 반환된 헤더 내용을 가져옵니다.</summary>
      <param name="headerName" vsli:raw="The header value to return.">반환할 헤더 값입니다.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="The contents of the specified header.">지정된 헤더의 내용입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary vsli:raw="Gets the stream that is used to read the body of the response from the server.">서버에서 응답 본문을 읽는 데 사용되는 스트림을 가져옵니다.</summary>
      <exception cref="T:System.Net.ProtocolViolationException" vsli:raw="There is no response stream.">응답 스트림이 없는 경우</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; containing the body of the response.">응답 본문을 포함하는 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Serializes this instance into the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The object into which this &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; will be serialized.">이 <see cref="T:System.Net.HttpWebResponse" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The destination of the serialization.">직렬화 대상입니다.</param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary vsli:raw="Gets the character set of the response.">응답의 문자 집합을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that contains the character set of the response.">응답의 문자 집합을 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary vsli:raw="Gets the method that is used to encode the body of the response.">응답 본문을 인코드하는 데 사용되는 메서드를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that describes the method that is used to encode the body of the response.">응답 본문을 인코드하는 데 사용되는 메서드를 설명하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary vsli:raw="Gets the length of the content returned by the request.">요청이 반환하는 콘텐츠의 길이를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="The number of bytes returned by the request. Content length does not include header information.">요청이 반환한 바이트 수입니다. 콘텐츠 길이에는 헤더 정보가 포함되지 않습니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary vsli:raw="Gets the content type of the response.">응답의 콘텐츠 형식을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that contains the content type of the response.">응답의 콘텐츠 형식이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary vsli:raw="Gets or sets the cookies that are associated with this response.">이 응답과 관련된 쿠키를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the cookies that are associated with this response.">이 응답과 관련된 쿠키가 들어 있는 <see cref="T:System.Net.CookieCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary vsli:raw="Gets the headers that are associated with this response from the server.">서버에서 이 응답과 관련된 헤더를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; that contains the header information returned with the response.">응답과 함께 반환되는 헤더 정보를 포함하는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether both client and server were authenticated.">클라이언트와 서버가 모두 인증되었는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mutual authentication occurred; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">상호 인증이 발생했으면 <see langword="true" />이고, 발생하지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary vsli:raw="Gets the last date and time that the contents of the response were modified.">응답 콘텐츠를 마지막으로 수정한 날짜와 시간을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that contains the date and time that the contents of the response were modified.">응답 콘텐츠를 수정한 날짜와 시간을 포함하는 <see cref="T:System.DateTime" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary vsli:raw="Gets the method that is used to return the response.">응답을 반환하는 데 사용되는 메서드를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that contains the HTTP method that is used to return the response.">응답을 반환하는 데 사용되는 HTTP 메서드를 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary vsli:raw="Gets the version of the HTTP protocol that is used in the response.">응답에 사용되는 HTTP 프로토콜의 버전을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Version&quot; /&gt; that contains the HTTP protocol version of the response.">응답의 HTTP 프로토콜 버전을 포함하는 <see cref="T:System.Version" />입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary vsli:raw="Gets the URI of the Internet resource that responded to the request.">요청에 응답한 인터넷 리소스의 URI를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="The URI of the Internet resource that responded to the request.">요청에 응답 한 인터넷 리소스의 URI입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary vsli:raw="Gets the name of the server that sent the response.">응답을 보낸 서버의 이름을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that contains the name of the server that sent the response.">응답을 보낸 서버의 이름을 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary vsli:raw="Gets the status of the response.">응답 상태를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.HttpStatusCode&quot; /&gt; values.">
        <see cref="T:System.Net.HttpStatusCode" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary vsli:raw="Gets the status description returned with the response.">응답과 함께 반환되는 상태 설명을 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">현재 인스턴스가 삭제된 경우</exception>
      <returns vsli:raw="A string that describes the status of the response.">응답의 상태를 설명하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.SupportsHeaders">
      <summary vsli:raw="Gets a value that indicates whether headers are supported.">헤더가 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if headers are supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;. Always returns &lt;see langword=&quot;true&quot; /&gt;.">헤더가 지원되면 <see langword="true" />이고, 지원되지 않으면 <see langword="false" />입니다. 항상 <see langword="true" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary vsli:raw="Provides the base authentication interface for Web client authentication modules.">웹 클라이언트 인증 모듈에 기본 인증 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class in response to an authentication challenge from a server.">서버의 인증 요구에 응답하여 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="challenge" vsli:raw="The authentication challenge sent by the server.">서버에서 보낸 인증 요구입니다.</param>
      <param name="request" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance associated with the challenge.">인증 요구와 관련된 <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</param>
      <param name="credentials" vsli:raw="The credentials associated with the challenge.">인증 요구와 관련된 자격 증명입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; instance containing the authorization message for the request, or &lt;see langword=&quot;null&quot; /&gt; if the challenge cannot be handled.">요청에 대한 인증 메시지가 포함된 <see cref="T:System.Net.Authorization" /> 인스턴스이거나 인증 요구를 처리할 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; class for an authentication request to a server.">서버에 인증을 요청하면 <see cref="T:System.Net.Authorization" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="request" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance associated with the authentication request.">인증 요청과 관련된 <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</param>
      <param name="credentials" vsli:raw="The credentials associated with the authentication request.">인증 요청과 관련된 자격 증명입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Authorization&quot; /&gt; instance containing the authorization message for the request.">요청에 대한 인증 메시지가 포함된 <see cref="T:System.Net.Authorization" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary vsli:raw="Gets the authentication type provided by this authentication module.">이 인증 모듈에서 제공한 인증 형식을 가져옵니다.</summary>
      <returns vsli:raw="A string indicating the authentication type provided by this authentication module.">이 인증 모듈에서 제공하는 인증 형식을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary vsli:raw="Gets a value indicating whether the authentication module supports preauthentication.">인증 모듈의 사전 인증 지원 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the authorization module supports preauthentication; otherwise &lt;see langword=&quot;false&quot; /&gt;.">권한 부여 모듈에서 사전 인증을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary vsli:raw="Defines the credential policy to be used for resource requests that are made using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">
        <see cref="T:System.Net.WebRequest" />와 이 클래스의 파생 클래스를 통한 리소스 요청에 사용할 자격 증명 정책을 정의합니다.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that indicates whether the client's credentials are sent with a resource request made using an instance of the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class.">
        <see cref="T:System.Boolean" /> 클래스의 인스턴스를 사용하여 리소스를 요청할 때 클라이언트의 자격 증명을 함께 보내는지 여부를 나타내는 <see cref="T:System.Net.WebRequest" />을 반환합니다.</summary>
      <param name="challengeUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that will receive the request.">요청을 받을 <see cref="T:System.Uri" />입니다.</param>
      <param name="request" vsli:raw="The &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; that represents the resource being requested.">요청할 리소스를 나타내는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that will be sent with the request if this method returns &lt;see langword=&quot;true&quot; /&gt;.">이 메서드가 <see langword="true" />를 반환하는 경우 요청과 함께 보낼 <see cref="T:System.Net.NetworkCredential" />입니다.</param>
      <param name="authenticationModule" vsli:raw="The &lt;see cref=&quot;T:System.Net.IAuthenticationModule&quot; /&gt; that will conduct the authentication, if authentication is required.">인증이 필요한 경우 인증을 수행할 <see cref="T:System.Net.IAuthenticationModule" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the credentials are sent with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요청과 함께 자격 증명을 보내는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary vsli:raw="Provides the base interface for creating &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instances.">
        <see cref="T:System.Net.WebRequest" /> 인스턴스를 만들기 위해 기본 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">
        <see cref="T:System.Net.WebRequest" /> 인스턴스를 만듭니다.</summary>
      <param name="uri" vsli:raw="The uniform resource identifier (URI) of the Web resource.">웹 리소스의 URI(Uniform Resource Identifier)입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;uri&quot; /&gt; is not supported by this &lt;see cref=&quot;T:System.Net.IWebRequestCreate&quot; /&gt; instance.">
        <paramref name="uri" />에 지정된 요청 체계가 이 <see cref="T:System.Net.IWebRequestCreate" /> 인스턴스에서 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI specified in &lt;paramref name=&quot;uri&quot; /&gt; is not a valid URI.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">
        <block subset="none" type="note">
          <para>Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</para>
        </block>
        <paramref name="uri" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">
        <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary vsli:raw="The exception that is thrown when an error is made while using a network protocol.">네트워크 프로토콜을 사용하는 동안 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; class.">
        <see cref="T:System.Net.ProtocolViolationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; instances.">지정된 <see cref="T:System.Net.ProtocolViolationException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains the information that is required to deserialize the &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 역직렬화하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.ProtocolViolationException" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt;.">새 <see cref="T:System.Net.ProtocolViolationException" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; class with the specified message.">지정된 메시지를 사용하여 <see cref="T:System.Net.ProtocolViolationException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The error message string.">오류 메시지 문자열입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data required to serialize the target object.">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Serializes this instance into the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The object into which this &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; will be serialized.">이 <see cref="T:System.Net.ProtocolViolationException" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The destination of the serialization.">직렬화 대상입니다.</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary vsli:raw="The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.">플러그형 프로토콜로 네트워크에 액세스하는 동안 오류가 발생하면 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class.">
        <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class from the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; instances.">지정된 <see cref="T:System.Net.WebException" /> 및 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains the information required to serialize the new &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt;.">새 <see cref="T:System.Net.WebException" />을 직렬화하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt;.">새 <see cref="T:System.Net.WebException" />과 관련된 직렬화된 스트림의 원본이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class with the specified error message.">지정된 오류 메시지를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text of the error message.">오류 메시지 텍스트입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class with the specified error message and nested exception.">지정된 오류 메시지와 중첩된 예외를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text of the error message.">오류 메시지 텍스트입니다.</param>
      <param name="innerException" vsli:raw="A nested exception.">중첩된 예외입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class with the specified error message, nested exception, status, and response.">지정된 오류 메시지, 중첩된 예외, 상태 및 응답을 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text of the error message.">오류 메시지 텍스트입니다.</param>
      <param name="innerException" vsli:raw="A nested exception.">중첩된 예외입니다.</param>
      <param name="status" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.WebExceptionStatus&quot; /&gt; values.">
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</param>
      <param name="response" vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; instance that contains the response from the remote host.">원격 호스트에서 보낸 응답이 들어 있는 <see cref="T:System.Net.WebResponse" /> 인스턴스입니다.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class with the specified error message and status.">지정된 오류 메시지와 상태를 사용하여 <see cref="T:System.Net.WebException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message" vsli:raw="The text of the error message.">오류 메시지 텍스트입니다.</param>
      <param name="status" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.WebExceptionStatus&quot; /&gt; values.">
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />을 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebException" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">사용할 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Serializes this instance into the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">이 인스턴스를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체로 직렬화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The object into which this &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; will be serialized.">이 <see cref="T:System.Net.WebException" />을 직렬화할 개체입니다.</param>
      <param name="streamingContext" vsli:raw="The destination of the serialization.">직렬화 대상입니다.</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary vsli:raw="Gets the response that the remote host returned.">원격 호스트에서 반환된 응답을 가져옵니다.</summary>
      <returns vsli:raw="If a response is available from the Internet resource, a &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; instance that contains the error response from an Internet resource; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">인터넷 리소스에서 응답을 가져올 수 있으면 인터넷 리소스의 오류 응답이 포함된 <see cref="T:System.Net.WebResponse" /> 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary vsli:raw="Gets the status of the response.">응답 상태를 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.WebExceptionStatus&quot; /&gt; values.">
        <see cref="T:System.Net.WebExceptionStatus" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary vsli:raw="Defines status codes for the &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; class.">
        <see cref="T:System.Net.WebException" /> 클래스에 대한 상태 코드를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary vsli:raw="The specified cache entry was not found.">지정된 캐시 엔트리를 찾지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary vsli:raw="The remote service point could not be contacted at the transport level.">전송 수준에서 원격 서비스 지점에 접속할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary vsli:raw="The connection was prematurely closed.">연결이 중간에 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary vsli:raw="The connection for a request that specifies the Keep-alive header was closed unexpectedly.">Keep-alive 머리글을 지정하는 요청에 대한 연결이 예기치 않게 끊어졌습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary vsli:raw="A message was received that exceeded the specified limit when sending a request or receiving a response from the server.">요청을 보내거나 서버에서 응답을 받을 때 지정된 제한을 초과한 메시지를 받았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary vsli:raw="The name resolver service could not resolve the host name.">이름 확인자 서비스가 해당 호스트 이름을 확인하지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary vsli:raw="An internal asynchronous request is pending.">내부 비동기 요청이 보류 중입니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary vsli:raw="The request was a pipelined request and the connection was closed before the response was received.">요청이 파이프라인 요청이고 응답을 받기 전에 연결이 닫혔습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary vsli:raw="The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status.">서버에서 응답을 모두 수신했지만 프로토콜 수준의 오류가 표시되었습니다. 예를 들어, 401 액세스 거부와 같은 HTTP 프로토콜 오류가 이러한 상태를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary vsli:raw="The name resolver service could not resolve the proxy host name.">이름 확인자 서비스가 프록시 호스트 이름을 확인할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary vsli:raw="A complete response was not received from the remote server.">전체 응답이 원격 서버에서 수신되지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary vsli:raw="The request was canceled, the &lt;see cref=&quot;M:System.Net.WebRequest.Abort&quot; /&gt; method was called, or an unclassifiable error occurred. This is the default value for &lt;see cref=&quot;P:System.Net.WebException.Status&quot; /&gt;.">요청이 취소되었거나, <see cref="M:System.Net.WebRequest.Abort" /> 메서드가 호출되었거나, 알 수 없는 오류가 발생했습니다. <see cref="P:System.Net.WebException.Status" />의 기본값입니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary vsli:raw="The request was not permitted by the cache policy. In general, this occurs when a request is not cacheable and the effective policy prohibits sending the request to the server. You might receive this status if a request method implies the presence of a request body, a request method requires direct interaction with the server, or a request contains a conditional header.">요청을 캐시 정책에서 허용하지 않았습니다. 일반적으로 요청을 캐시할 수 없고 적용되는 정책에서 서버로 요청을 보내는 것을 금지하는 경우가 이에 해당합니다. 요청 메서드가 요청 본문이 있음을 의미하거나, 요청 메서드가 서버와 직접 상호 작용해야 하거나, 요청에 조건부 헤더가 들어 있는 경우 이 상태가 발생할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary vsli:raw="This request was not permitted by the proxy.">이 요청을 프록시에서 허용하지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary vsli:raw="An error occurred while establishing a connection using SSL.">SSL을 사용하여 연결을 설정하는 동안 오류가 발생했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary vsli:raw="A complete request could not be sent to the remote server.">전체 요청을 원격 서버로 보낼 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary vsli:raw="The server response was not a valid HTTP response.">서버 응답이 유효한 HTTP 응답이 아니었습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary vsli:raw="No error was encountered.">오류가 발생하지 않았습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary vsli:raw="No response was received during the time-out period for a request.">시간 초과로 요청에 대해 아무런 응답도 받지 못했습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary vsli:raw="A server certificate could not be validated.">서버 인증서를 유효성 검사할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary vsli:raw="An exception of unknown type has occurred.">알 수 없는 형식의 예외가 발생했습니다.</summary>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary vsli:raw="Makes a request to a Uniform Resource Identifier (URI). This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">URI(Uniform Resource Identifier)에 대한 요청을 만듭니다. 이 클래스는 <see langword="abstract" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class.">
        <see cref="T:System.Net.WebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Net.WebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="The information required to serialize the new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the source of the serialized stream associated with the new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 연결된 serialize된 스트림의 소스를 나타내는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary vsli:raw="Aborts the request.">요청을 중단합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary vsli:raw="When overridden in a descendant class, provides an asynchronous version of the &lt;see cref=&quot;M:System.Net.WebRequest.GetRequestStream&quot; /&gt; method.">서브클래스에서 재정의될 때, <see cref="M:System.Net.WebRequest.GetRequestStream" /> 메서드의 비동기 버전을 제공합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object containing state information for this asynchronous request.">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request.">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary vsli:raw="When overridden in a descendant class, begins an asynchronous request for an Internet resource.">서브클래스에서 재정의될 때, 인터넷 리소스에 대한 비동기 요청을 시작합니다.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">
        <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="state" vsli:raw="An object containing state information for this asynchronous request.">이 비동기 요청에 대한 상태 정보가 들어 있는 개체입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous request.">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance for the specified URI scheme.">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUriString" vsli:raw="The URI that identifies the Internet resource.">인터넷 리소스를 식별하는 URI입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;requestUriString&quot; /&gt; has not been registered.">
        <paramref name="requestUriString" />에 지정된 요청 체계가 등록되지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestUriString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUriString" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; permission to connect to the requested URI or a URI that the request is redirected to.">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI specified in &lt;paramref name=&quot;requestUriString&quot; /&gt; is not a valid URI.&#xA;&#xA;Note: In .NET for Windows Store apps or the Portable Class Library, catch the base class exception, &lt;see cref=&quot;T:System.FormatException&quot; /&gt;, instead.">
        <block subset="none" type="note">
          <para>Windows 스토어 앱용 .NET 또는 이식 가능한 클래스 라이브러리에서 대신 기본 클래스 예외 <see cref="T:System.FormatException" />을 catch합니다.</para>
        </block>
        <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant for the specific URI scheme.">특정 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance for the specified URI scheme.">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; containing the URI of the requested resource.">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;requestUri&quot; /&gt; is not registered.">
        <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; permission to connect to the requested URI or a URI that the request is redirected to.">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant for the specified URI scheme.">지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance for the specified URI scheme.">지정된 URI 체계에 대한 새 <see cref="T:System.Net.WebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; containing the URI of the requested resource.">요청된 리소스의 URI가 포함된 <see cref="T:System.Uri" />입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;requestUri&quot; /&gt; is not registered.">
        <paramref name="requestUri" />에서 지정된 요청 체계가 등록되어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; permission to connect to the requested URI or a URI that the request is redirected to.">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant for the specified URI scheme.">지정된 URI 체계에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; instance for the specified URI string.">지정된 URI 문자열에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUriString" vsli:raw="A URI string that identifies the Internet resource.">인터넷 리소스를 식별하는 URI 문자열입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;requestUriString&quot; /&gt; is the http or https scheme.">
        <paramref name="requestUriString" />에 지정된 요청 체계가 http 또는 https 체계인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestUriString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUriString" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; permission to connect to the requested URI or a URI that the request is redirected to.">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI specified in &lt;paramref name=&quot;requestUriString&quot; /&gt; is not a valid URI.">
        <paramref name="requestUriString" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; instance for the specific URI string.">지정한 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; instance for the specified URI.">지정된 URI에 대한 새 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스를 초기화합니다.</summary>
      <param name="requestUri" vsli:raw="A URI that identifies the Internet resource.">인터넷 리소스를 식별하는 URI입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The request scheme specified in &lt;paramref name=&quot;requestUri&quot; /&gt; is the http or https scheme.">
        <paramref name="requestUri" />에 지정된 요청 체계가 http 또는 https 체계인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;requestUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="requestUri" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have &lt;see cref=&quot;T:System.Net.WebPermissionAttribute&quot; /&gt; permission to connect to the requested URI or a URI that the request is redirected to.">호출자에게 요청된 URI 또는 요청이 리디렉션되는 URI에 연결할 <see cref="T:System.Net.WebPermissionAttribute" /> 권한이 없는 경우</exception>
      <exception cref="T:System.UriFormatException" vsli:raw="The URI specified in &lt;paramref name=&quot;requestUri&quot; /&gt; is not a valid URI.">
        <paramref name="requestUri" />에 지정된 URI가 유효한 URI가 아닌 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; instance for the specific URI string.">지정한 URI 문자열에 대한 <see cref="T:System.Net.HttpWebRequest" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary vsli:raw="When overridden in a descendant class, returns a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for writing data to the Internet resource.">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references a pending request for a stream.">스트림에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to write data to.">데이터를 쓸 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary vsli:raw="When overridden in a descendant class, returns a &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt;.">파생 클래스에서 재정의될 때, <see cref="T:System.Net.WebResponse" />를 반환합니다.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references a pending request for a response.">응답에 대한 보류 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; that contains a response to the Internet request.">인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the target object.">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary vsli:raw="When overridden in a descendant class, returns a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for writing data to the Internet resource.">서브클래스에서 재정의될 때, 인터넷 리소스에 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for writing data to the Internet resource.">인터넷 리소스에 데이터를 쓰기 위한 <see cref="T:System.IO.Stream" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
      <summary vsli:raw="When overridden in a descendant class, returns a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for writing data to the Internet resource as an asynchronous operation.">서브클래스에서 재정의될 때, 인터넷 리소스에 비동기 작업으로 데이터를 쓰기 위해 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary vsli:raw="When overridden in a descendant class, returns a response to an Internet request.">서브클래스에 재정의될 때, 인터넷 요청에 대한 응답을 반환합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; containing the response to the Internet request.">인터넷 요청에 대한 응답을 포함하는 <see cref="T:System.Net.WebResponse" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponseAsync">
      <summary vsli:raw="When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.">서브클래스에 재정의될 때, 인터넷 요청에 대한 응답을 비동기 작업으로 반환합니다.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary vsli:raw="Returns a proxy configured with the Internet Explorer settings of the currently impersonated user.">현재 가장한 사용자의 Internet Explorer 설정에 구성된 프록시를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; used by every call to instances of &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">
        <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant for the specified URI.">지정된 URI에 대한 <see cref="T:System.Net.WebRequest" /> 하위 항목을 등록합니다.</summary>
      <param name="prefix" vsli:raw="The complete URI or URI prefix that the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant services.">
        <see cref="T:System.Net.WebRequest" /> 하위 항목이 서비스하는 완전한 URI나 URI 접두사입니다.</param>
      <param name="creator" vsli:raw="The create method that the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; calls to create the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; descendant.">
        <see cref="T:System.Net.WebRequest" /> 하위 항목을 만들기 위해 <see cref="T:System.Net.WebRequest" />가 호출하는 생성 메서드입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;creator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="prefix" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="creator" />이(가) <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if registration is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">등록이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="When overridden in a descendant class, populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">서브클래스에서 재정의될 때, <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebRequest" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;, which holds the serialized data for the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유하는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the destination of the serialized stream associated with the new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />과 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.WebRequest" />입니다.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="An attempt is made to serialize the object, when the interface is not overridden in a descendant class.">해당 인터페이스가 서브클래스에서 재정의되지 않았는데 개체를 serialize하려고 한 경우</exception>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary vsli:raw="Gets or sets values indicating the level of authentication and impersonation used for this request.">이 요청에 사용되는 인증 및 가장 수준을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Security.AuthenticationLevel&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Net.Security.AuthenticationLevel.MutualAuthRequested&quot; /&gt;.  &#xA;  &#xA; In mutual authentication, both the client and server present credentials to establish their identity. The &lt;see cref=&quot;F:System.Net.Security.AuthenticationLevel.MutualAuthRequired&quot; /&gt; and &lt;see cref=&quot;F:System.Net.Security.AuthenticationLevel.MutualAuthRequested&quot; /&gt; values are relevant for Kerberos authentication. Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol. For more information about authentication protocols, see Internet Authentication.  &#xA;  &#xA; To determine whether mutual authentication occurred, check the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.  &#xA;  &#xA; If you specify the &lt;see cref=&quot;F:System.Net.Security.AuthenticationLevel.MutualAuthRequired&quot; /&gt; authentication flag value and mutual authentication does not occur, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception indicating that mutual authentication failed.">
        <see cref="T:System.Net.Security.AuthenticationLevel" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />입니다.  
  
상호 인증에서는 클라이언트와 서버가 모두 자격 증명을 제공해야 ID를 구성할 수 있습니다. <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 및 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> 값은 Kerberos 인증과 관련이 있습니다. Kerberos 인증은 직접 지원될 수도 있고, 보안 협상 프로토콜을 사용하여 실제 보안 프로토콜을 선택하는 경우에 사용할 수도 있습니다. 인증 프로토콜에 대 한 자세한 내용은 참조 하세요. 인터넷 인증합니다.  
  
상호 인증이 발생했는지 여부를 확인하려면 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 속성을 확인합니다.  
  
<see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> 인증 플래그 값을 지정할 경우 상호 인증이 발생하지 않으면 애플리케이션에서는 상호 인증이 실패했음을 나타내는 내부 예외인 <see cref="T:System.Net.ProtocolViolationException" />과 함께 <see cref="T:System.IO.IOException" />이 발생합니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary vsli:raw="Gets or sets the cache policy for this request.">이 요청에 대한 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; object that defines a cache policy.">캐시 정책을 정의하는 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the name of the connection group for the request.">파생 클래스에서 재정의될 때 요청에 대한 연결 그룹 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The name of the connection group for the request.">요청에 대한 연결 그룹 이름입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the content length of the request data being sent.">서브클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The number of bytes of request data being sent.">전송 중인 요청 데이터의 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the content type of the request data being sent.">서브클래스에서 재정의될 때, 전송 중인 요청 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The content type of the request data.">요청 데이터의 콘텐츠 형식입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.">서브클래스에서 재정의될 때, 인터넷 리소스를 사용하여 요청을 인증하는 데 사용되는 네트워크 자격 증명을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; containing the authentication credentials associated with the request. The default is &lt;see langword=&quot;null&quot; /&gt;.">요청과 연결된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary vsli:raw="Gets or sets the default cache policy for this request.">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot; /&gt; that specifies the cache policy in effect for this request when no other policy is applicable.">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">글로벌 HTTP 프록시를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; used by every call to instances of &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt;.">
        <see cref="T:System.Net.IWebProxy" />의 인스턴스를 호출할 때마다 사용되는 <see cref="T:System.Net.WebRequest" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.">서브클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; containing the header name/value pairs associated with this request.">요청과 연결된 헤더 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary vsli:raw="Gets or sets the impersonation level for the current request.">현재 요청에 대한 가장 수준을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.">
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the protocol method to use in this request.">서브클래스에서 재정의될 때, 이 요청에서 사용할 프로토콜 메서드를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="If the property is not overridden in a descendant class, any attempt is made to get or set the property.">서브클래스에서 재정의되지 않은 속성을 가져오거나 설정하려는 경우</exception>
      <returns vsli:raw="The protocol method to use in this request.">이 요청에서 사용할 프로토콜 메서드입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary vsli:raw="When overridden in a descendant class, indicates whether to pre-authenticate the request.">서브클래스에서 재정의될 때, 요청을 사전 인증할지 여부를 나타냅니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to pre-authenticate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">요청을 사전 인증하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.">서브클래스에서 재정의될 때, 이 인터넷 리소스에 액세스하기 위해 사용할 네트워크 프록시를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IWebProxy&quot; /&gt; to use to access the Internet resource.">인터넷 리소스에 액세스하기 위해 사용할 <see cref="T:System.Net.IWebProxy" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary vsli:raw="When overridden in a descendant class, gets the URI of the Internet resource associated with the request.">서브클래스에서 재정의될 때, 요청과 연결된 인터넷 리소스의 URI를 가져옵니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; representing the resource associated with the request.">요청과 연결된 리소스를 나타내는 <see cref="T:System.Uri" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary vsli:raw="Gets or sets the length of time, in milliseconds, before the request times out.">요청이 시간 초과되기 전의 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The length of time, in milliseconds, until the request times out, or the value &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; to indicate that the request does not time out. The default value is defined by the descendant class.">요청 시간이 초과 될 때까지 걸리는 시간 (밀리초) 이거나, <see cref="F:System.Threading.Timeout.Infinite" /> 요청 시간이 초과 되지 않음을 나타내는 값입니다. 기본값은 하위 클래스에 의해 정의 됩니다.</returns>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary vsli:raw="When overridden in a descendant class, gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that controls whether &lt;see cref=&quot;P:System.Net.CredentialCache.DefaultCredentials&quot; /&gt; are sent with requests.">서브클래스에서 재정의된 경우 <see cref="T:System.Boolean" />를 요청과 함께 보낼지 여부를 제어하는 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You attempted to set this property after the request was sent.">요청을 보낸 후에 이 속성을 설정하려고 한 경우</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성에 액세스를 시도할 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary vsli:raw="Container class for &lt;see cref=&quot;T:System.Net.WebRequestMethods.Ftp&quot; /&gt;, &lt;see cref=&quot;T:System.Net.WebRequestMethods.File&quot; /&gt;, and &lt;see cref=&quot;T:System.Net.WebRequestMethods.Http&quot; /&gt; classes. This class cannot be inherited.">
        <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" /> 및 <see cref="T:System.Net.WebRequestMethods.Http" /> 클래스의 컨테이너 클래스입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary vsli:raw="Represents the types of file protocol methods that can be used with a FILE request. This class cannot be inherited.">FILE 요청과 함께 사용할 수 있는 파일 프로토콜 메서드의 형식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary vsli:raw="Represents the FILE GET protocol method that is used to retrieve a file from a specified location.">지정된 위치에서 파일을 검색하는 데 사용할 FILE GET 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary vsli:raw="Represents the FILE PUT protocol method that is used to copy a file to a specified location.">지정된 위치에 파일을 복사하는 데 사용할 FILE PUT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary vsli:raw="Represents the types of FTP protocol methods that can be used with an FTP request. This class cannot be inherited.">FTP 요청과 함께 사용할 수 있는 FTP 프로토콜 메서드의 형식을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary vsli:raw="Represents the FTP APPE protocol method that is used to append a file to an existing file on an FTP server.">FTP 서버의 기존 파일에 파일을 추가하는 데 사용되는 FTP APPE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary vsli:raw="Represents the FTP DELE protocol method that is used to delete a file on an FTP server.">FTP 서버의 파일을 삭제하는 데 사용되는 FTP DELE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary vsli:raw="Represents the FTP RETR protocol method that is used to download a file from an FTP server.">FTP 서버에서 파일을 다운로드하는 데 사용되는 FTP RETR 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary vsli:raw="Represents the FTP MDTM protocol method that is used to retrieve the date-time stamp from a file on an FTP server.">FTP 서버의 파일에서 날짜-타임스탬프를 검색하는 데 사용되는 FTP MDTM 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary vsli:raw="Represents the FTP SIZE protocol method that is used to retrieve the size of a file on an FTP server.">FTP 서버의 파일 크기를 검색하는 데 사용되는 FTP SIZE 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary vsli:raw="Represents the FTP NLIST protocol method that gets a short listing of the files on an FTP server.">FTP 서버에 있는 파일의 간단한 목록을 가져오는 FTP NLIST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary vsli:raw="Represents the FTP LIST protocol method that gets a detailed listing of the files on an FTP server.">FTP 서버에 있는 파일의 자세한 목록을 가져오는 FTP LIST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary vsli:raw="Represents the FTP MKD protocol method creates a directory on an FTP server.">FTP 서버에 디렉터리를 만드는 FTP MKD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary vsli:raw="Represents the FTP PWD protocol method that prints the name of the current working directory.">현재 작업 중인 디렉터리의 이름을 출력하는 FTP PWD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary vsli:raw="Represents the FTP RMD protocol method that removes a directory.">디렉터리를 제거하는 FTP RMD 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary vsli:raw="Represents the FTP RENAME protocol method that renames a directory.">디렉터리의 이름을 바꾸는 FTP RENAME 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary vsli:raw="Represents the FTP STOR protocol method that uploads a file to an FTP server.">FTP 서버에 파일을 업로드하는 FTP STOR 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary vsli:raw="Represents the FTP STOU protocol that uploads a file with a unique name to an FTP server.">FTP 서버에 파일을 고유한 이름으로 업로드하는 FTP STOU 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary vsli:raw="Represents the types of HTTP protocol methods that can be used with an HTTP request.">HTTP 요청과 함께 사용할 수 있는 HTTP 프로토콜 메서드의 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary vsli:raw="Represents the HTTP CONNECT protocol method that is used with a proxy that can dynamically switch to tunneling, as in the case of SSL tunneling.">SSL 터널링의 경우와 같이 동적으로 터널링으로 전환할 수 있는 프록시와 함께 사용되는 HTTP CONNECT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">HTTP GET 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">HTTP HEAD 프로토콜 메서드를 나타냅니다. HEAD 메서드는 서버에서 응답의 메시지 본문 없이 메시지 헤더만 반환한다는 점을 제외하고는 GET 메서드와 동일합니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary vsli:raw="Represents an HTTP MKCOL request that creates a new collection (such as a collection of pages) at the location specified by the request-Uniform Resource Identifier (URI).">요청 URI(Uniform Resource Identifier)로 지정된 위치에 페이지 컬렉션과 같은 새 컬렉션을 만드는 HTTP MKCOL 요청을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">새 엔터티를 URI에 추가할 항목으로 게시하는 데 사용되는 HTTP POST 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">URI로 식별된 엔터티를 바꾸는 데 사용되는 HTTP PUT 프로토콜 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary vsli:raw="Provides a response from a Uniform Resource Identifier (URI). This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">URI(Uniform Resource Identifier)에서 응답을 제공합니다. 이 클래스는 <see langword="abstract" /> 클래스입니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; class.">
        <see cref="T:System.Net.WebResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">
        <see cref="T:System.Net.WebResponse" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serializationInfo" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; class that contains the information required to serialize the new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 포함된 <see cref="T:System.Net.WebRequest" /> 클래스의 인스턴스입니다.</param>
      <param name="streamingContext" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; class that indicates the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; instance.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련된 serialize된 스트림의 소스를 나타내는 <see cref="T:System.Net.WebRequest" /> 클래스의 인스턴스입니다.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.">생성자가 서브클래스에서 재정의되지 않았는데 생성자에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary vsli:raw="When overridden by a descendant class, closes the response stream.">서브클래스에서 재정의될 때, 응답 스트림을 닫습니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; object.">
        <see cref="T:System.Net.WebResponse" /> 개체에서 사용하는 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt; object, and optionally disposes of the managed resources.">
        <see cref="T:System.Net.WebResponse" /> 개체에서 사용하는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 삭제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data that is needed to serialize the target object.">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary vsli:raw="When overridden in a descendant class, returns the data stream from the Internet resource.">서브클래스에서 재정의될 때, 인터넷 리소스에서 데이터 스트림을 반환합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to access the method, when the method is not overridden in a descendant class.">메서드가 서브클래스에서 재정의되지 않았는데 메서드에 액세스하려 할 경우</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; class for reading data from the Internet resource.">인터넷 리소스에서 데이터를 읽기 위한 <see cref="T:System.IO.Stream" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data that is needed to serialize &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize하는 데 필요한 데이터로 <see cref="T:System.Net.WebResponse" /> 인스턴스를 채웁니다.</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that will hold the serialized data for the &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 대해 serialize된 데이터를 보유할 <see cref="T:System.Net.WebResponse" />입니다.</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the destination of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.WebResponse&quot; /&gt;.">새 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 관련된 serialize된 스트림의 대상이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</param>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary vsli:raw="When overridden in a descendant class, gets or sets the content length of data being received.">서브클래스에서 재정의될 때, 수신 중인 데이터의 콘텐츠 길이를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="The number of bytes returned from the Internet resource.">인터넷 리소스에서 반환된 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary vsli:raw="When overridden in a derived class, gets or sets the content type of the data being received.">파생 클래스에서 재정의될 때, 수신 중인 데이터의 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="A string that contains the content type of the response.">응답의 콘텐츠 형식이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary vsli:raw="When overridden in a derived class, gets a collection of header name-value pairs associated with this request.">파생 클래스에서 재정의될 때, 요청과 연결된 헤더 이름/값 쌍의 컬렉션을 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Net.WebHeaderCollection&quot; /&gt; class that contains header values associated with this response.">이 응답과 관련된 헤더 값을 포함하는 <see cref="T:System.Net.WebHeaderCollection" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether this response was obtained from the cache.">이 응답을 캐시에서 가져왔는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the response was taken from the cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">응답을 캐시에서 가져왔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that indicates whether mutual authentication occurred.">상호 인증이 발생했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both client and server were authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클라이언트와 서버가 모두 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary vsli:raw="When overridden in a derived class, gets the URI of the Internet resource that actually responded to the request.">파생 클래스에서 재정의될 때, 요청에 실제로 응답하는 인터넷 리소스의 URI를 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any attempt is made to get or set the property, when the property is not overridden in a descendant class.">속성이 서브클래스에서 재정의되지 않았는데 속성을 가져오거나 설정하려 할 경우</exception>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class that contains the URI of the Internet resource that actually responded to the request.">요청에 실제로 응답하는 인터넷 리소스의 URI가 들어 있는 <see cref="T:System.Uri" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary vsli:raw="Gets a value that indicates if headers are supported.">머리글이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.  &#xA;  &#xA; &lt;see langword=&quot;true&quot; /&gt; if headers are supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Boolean" />를 반환합니다.  
  
 헤더가 지원되면 <see langword="true" />이고, 지원되지 않으면 <see langword="false" />입니다.</returns>
    </member>
  </members>
</doc>