<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ValueWebSocketReceiveResult">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" />에서 단일 <see cref="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" /> 작업을 수행한 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ValueWebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>
        <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> 구조체의 새 인스턴스를 초기화합니다. 이 구조체의 인스턴스는 <see cref="T:System.Net.WebSockets.WebSocket" />에서 단일 <c>ReceiveAsync</c> 작업 수행의 결과를 나타냅니다.</summary>
      <param name="count">
        <see cref="T:System.Net.WebSockets.WebSocket" />에서 받은 바이트 수입니다.</param>
      <param name="messageType">현재 메시지가 UTF-8 메시지인지 아니면 이진 메시지인지 나타내는 열거형 값 중 하나입니다.</param>
      <param name="endOfMessage">메시지가 완전히 수신되었음을 나타내는 경우 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.Count">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" />에서 수신한 바이트 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />에서 받은 바이트 수입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.EndOfMessage">
      <summary>메시지가 완전히 수신되었는지 여부를 확인합니다.</summary>
      <returns>
        <see langword="true" /> 메시지가 완전히 수신 되었으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ValueWebSocketReceiveResult.MessageType">
      <summary>현재 메시지의 형식을 가져옵니다.</summary>
      <returns>현재 메시지가 UTF-8, 이진 또는 닫는 메시지 인지 여부를 지정 하는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocket">
      <summary>WebSocket 업그레이드가 완료되면 WebSocket 클래스를 통해 애플리케이션에서 데이터를 보내고 받을 수 있습니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Abort">
      <summary>WebSocket 연결을 중단하고 보류 중인 모든 IO 작업을 취소합니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>WebSocket protocol specification(WebSocket 프로토콜 사양) 섹션 7에 정의된 닫기 핸드셰이크를 사용하여 비동기 작업으로 WebSocket 연결을 닫습니다.</summary>
      <param name="closeStatus">WebSocket 연결을 닫는 이유를 나타냅니다.</param>
      <param name="statusDescription">사람이 읽을 수 있는 설명을 연결이 닫힌 이유로 지정합니다.</param>
      <param name="cancellationToken">작업을 취소해야 하는 알림을 전파하는 데 사용할 수 있는 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>WebSocket 프로토콜 사양 섹션 7에서 정의한 close 핸드셰이크를 시작하거나 완료합니다.</summary>
      <param name="closeStatus">WebSocket 연결을 닫는 이유를 나타냅니다.</param>
      <param name="statusDescription">애플리케이션에서 연결이 닫힌 이유에 대해 사용자가 읽을 수 있는 설명을 지정할 수 있습니다.</param>
      <param name="cancellationToken">작업을 취소해야 하는 알림을 전파하는 데 사용할 수 있는 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)">
      <summary>이 <see cref="T:System.Net.WebSockets.WebSocket" /> 인스턴스와 함께 사용할 클라이언트 버퍼를 만듭니다.</summary>
      <param name="receiveBufferSize">클라이언트 수신 버퍼의 크기(바이트)입니다.</param>
      <param name="sendBufferSize">송신 버퍼의 크기(바이트)입니다.</param>
      <returns>클라이언트 버퍼가 있는 배열입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
      <summary>호출자가 WSPC를 프레임 용도로 사용할 클라이언트측 WebSocket 클래스를 만들도록 허용합니다.</summary>
      <param name="innerStream">IO 작업에 사용할 연결입니다.</param>
      <param name="subProtocol">클라이언트에서 허용되는 하위 프로토콜입니다.</param>
      <param name="receiveBufferSize">클라이언트 WebSocket 수신 버퍼의 크기(바이트)입니다.</param>
      <param name="sendBufferSize">클라이언트 WebSocket 송신 버퍼의 크기(바이트)입니다.</param>
      <param name="keepAliveInterval">연결을 통해 프레임이 연결 유지로 전송되는 간격을 확인합니다. 연결이 유휴 상태인 경우에만 적용됩니다.</param>
      <param name="useZeroMaskingKey">난수 키를 사용할지 아니면 정적 키(0)를 사용할지 여부를 나타냅니다.</param>
      <param name="internalBuffer">WPC에서 내부 버퍼로 사용됩니다. 크기는 <c>2 * ReceiveBufferSize + SendBufferSize + 256 + 20(32비트의 경우 16)</c> 이상이어야 합니다.</param>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateFromStream(System.IO.Stream,System.Boolean,System.String,System.TimeSpan)">
      <summary>웹 소켓 연결을 나타내는 지정된 스트림에서 작동하는 새로운 <see cref="T:System.Net.WebSockets.WebSocket" /> 개체를 만듭니다.</summary>
      <param name="stream">연결의 스트림입니다.</param>
      <param name="isServer">서버 측 연결을 나타내는 경우 <see langword="true" />이고, 클라이언트 측 연결이면 <see langword="false" />입니다.</param>
      <param name="subProtocol">연결을 만들 때 사용한 합의된 하위 프로토콜입니다.</param>
      <param name="keepAliveInterval">사용할 지속적 연결 간격 또는 지속적 연결을 사용하지 않게 설정할 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />입니다.</param>
      <returns>새 웹 소켓입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)">
      <summary>WebSocket 서버 버퍼를 만듭니다.</summary>
      <param name="receiveBufferSize">원하는 버퍼의 크기(바이트)입니다.</param>
      <returns>
        <see cref="T:System.ArraySegment`1" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.Dispose">
      <summary>ASP.NET 및 자체 호스팅 구현에 대한 관리되지 않는 리소스를 정리하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsApplicationTargeting45">
      <summary>WebSocket 인스턴스가 .NET Framework 4.5를 대상으로 하는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />이 .NET Framework 4.5를 대상으로 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)">
      <summary>WebSocket 인스턴스의 상태가 닫히거나 중단되었는지 나타내는 값을 반환합니다.</summary>
      <param name="state">WebSocket의 현재 상태입니다.</param>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />이 닫혔거나 중단되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 연결에서 데이터를 비동기적으로 받습니다.</summary>
      <param name="buffer">받은 데이터에 대한 스토리지 위치인 애플리케이션 버퍼를 참조합니다.</param>
      <param name="cancellationToken">작업을 취소해야 한다는 알림을 전파합니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성은 수신된 데이터를 나타내는 <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 연결에서 데이터를 비동기적으로 받습니다.</summary>
      <param name="buffer">받은 데이터에 대한 스토리지 위치인 애플리케이션 버퍼입니다.</param>
      <param name="cancellationToken">수신 작업을 취소할 때 사용하는 취소 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다. 작업 개체의 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 속성은 수신된 데이터를 나타내는 <see cref="T:System.Net.WebSockets.ValueWebSocketReceiveResult" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.RegisterPrefixes">
      <summary>호출자가 WebSocket 요청에 대한 접두사(ws 및 wss)를 등록하도록 허용합니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 연결을 통해 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer">연결을 통해 전송될 버퍼입니다.</param>
      <param name="messageType">애플리케이션이 이진 또는 텍스트 메시지를 보내고 있는지 여부를 나타냅니다.</param>
      <param name="endOfMessage">“버퍼”의 데이터가 메시지의 마지막 부분인지 여부를 나타냅니다.</param>
      <param name="cancellationToken">작업을 취소해야 한다는 알림을 전파하는 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocket" /> 연결을 통해 데이터를 비동기적으로 보냅니다.</summary>
      <param name="buffer">연결을 통해 전송될 버퍼입니다.</param>
      <param name="messageType">애플리케이션이 이진 또는 텍스트 메시지를 보내고 있는지 여부를 나타내는 열거형 값 중 하나입니다.</param>
      <param name="endOfMessage">“버퍼”의 데이터가 메시지의 마지막 부분임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="cancellationToken">전송 작업을 취소할 때 사용하는 취소 토큰입니다.</param>
      <returns>비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
      <summary>연결이 예상되는 상태에 있는지 확인합니다.</summary>
      <param name="state">유효한 상태 목록에 대해 테스트되는 WebSocket의 현재 상태입니다.</param>
      <param name="validStates">유효한 연결 상태의 목록입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatus">
      <summary>원격 엔드포인트이 close 핸드셰이크를 시작한 이유를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.CloseStatusDescription">
      <summary>원격 엔드포인트에서 연결이 끊어진 이유를 설명할 수 있도록 허용합니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval">
      <summary>기본 WebSocket 프로토콜 연결 유지 간격을 가져옵니다.</summary>
      <returns>기본 WebSocket 프로토콜 keep-alive 간격입니다. 이 간격의 일반적인 값은 OS 또는 .NET 플랫폼에서 정의한 30 초입니다. 값을 초기화 하는 데 사용 됩니다 <see cref="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.State">
      <summary>WebSocket 연결의 현재 상태를 반환합니다.</summary>
      <returns>WebSocket 연결의 현재 상태입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocket.SubProtocol">
      <summary>핸드셰이크 열기 중에 협상된 하위 프로토콜을 가져옵니다.</summary>
      <returns>열기 핸드셰이크 중 협상된 하위 프로토콜입니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketCloseStatus">
      <summary>WebSocket 프로토콜 사양의 섹션 11.7에 정의된 대로 잘 알려진 WebSocket 닫기 코드를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.Empty">
      <summary>지정된 오류가 없습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.EndpointUnavailable">
      <summary>(1001) 엔드포인트를 제거하는 중임을 나타냅니다. 서버 또는 클라이언트를 사용할 수 없게 됩니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InternalServerError">
      <summary>(1011) 서버 오류로 인해 서버에서 연결을 닫습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidMessageType">
      <summary>(1003) 클라이언트 또는 서버에서 받은 데이터 형식을 허용할 수 없으므로 연결을 종료합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.InvalidPayloadData">
      <summary>(1007) 클라이언트 또는 서버에서 메시지 유형과 일치하지 않는 데이터를 받았으므로 연결을 종료합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MandatoryExtension">
      <summary>(1010) 클라이언트에서 서버가 확장을 협상할 것으로 예상되어 연결을 종료합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.MessageTooBig">
      <summary>(1009) 클라이언트 또는 서버에서 너무 커서 처리할 수 없는 메시지를 받았으므로 연결을 종료합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.NormalClosure">
      <summary>(1000) 요청이 처리된 후 연결이 닫혔습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.PolicyViolation">
      <summary>(1008) 엔드포인트에서 해당 정책을 위반하는 메시지를 수신했으므로 연결을 닫습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketCloseStatus.ProtocolError">
      <summary>(1002) 프로토콜 오류로 인해 클라이언트 또는 서버에서 연결을 종료합니다.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketContext">
      <summary>WebSocket 핸드셰이크에서 정보에 액세스하는 데 사용됩니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketContext.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketContext" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.CookieCollection">
      <summary>핸드셰이크를 여는 동안 서버에 전달된 쿠키입니다.</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Headers">
      <summary>핸드셰이크를 여는 동안 서버로 보낸 HTTP 헤더입니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsAuthenticated">
      <summary>WebSocket 클라이언트가 인증되었는지 여부입니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsLocal">
      <summary>WebSocket 클라이언트가 로컬 컴퓨터에서 연결되었는지 여부입니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.IsSecureConnection">
      <summary>WebSocket 연결이 SSL(Secure Sockets Layer)을 사용하여 보호되는지 여부입니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.Origin">
      <summary>열기 핸드셰이크에서 포함된 원본 HTTP 헤더의 값입니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.RequestUri">
      <summary>WebSocket 클라이언트가 요청한 URI입니다.</summary>
      <returns>
        <see cref="T:System.Uri" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketKey">
      <summary>열기 핸드셰이크에서 포함된 SecWebSocketKey HTTP 헤더의 값입니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketProtocols">
      <summary>열기 핸드셰이크에서 포함된 SecWebSocketKey HTTP 헤더의 값입니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.SecWebSocketVersion">
      <summary>WebSocket 클라이언트에서 요청한 하위 프로토콜 목록입니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.User">
      <summary>WebSocket 클라이언트의 ID, 인증 정보 및 보안 역할을 가져오는 데 사용되는 개체입니다.</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketContext.WebSocket">
      <summary>WebSocket 연결과 상호 작용(보내기/받기/닫기/등)하는 데 사용되는 WebSocket 인스턴스입니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketError">
      <summary>가능한 WebSocket 오류 목록을 포함합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.ConnectionClosedPrematurely">
      <summary>연결이 예기치 않게 종료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Faulted">
      <summary>일반 오류를 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.HeaderError">
      <summary>열기 핸드셰이크 동안 HTTP 헤더를 구문 분석할 때 오류가 발생했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidMessageType">
      <summary>알 수 없는 opcode가 포함된 WebSocket 프레임이 수신되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.InvalidState">
      <summary>WebSocket이 지정된 작업에 대한 잘못된 상태임을 나타냅니다(예: 종료 또는 중단된 작업).</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NativeError">
      <summary>알 수 없는 네이티브 오류가 발생했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.NotAWebSocket">
      <summary>들어오는 요청이 유효한 websocket 요청이 아님을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.Success">
      <summary>실행에 대한 네이티브 오류 정보가 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedProtocol">
      <summary>클라이언트가 지원되지 않는 WebSocket 하위 프로토콜 버전을 요청했음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketError.UnsupportedVersion">
      <summary>클라이언트가 지원되지 않는 WebSocket 프로토콜 버전을 요청했음을 나타냅니다.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketException">
      <summary>WebSocket 연결에서 작업을 수행할 때 발생한 예외를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Int32,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
      <param name="message">오류에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
      <param name="message">오류에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.Int32,System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="nativeError">예외에 대한 네이티브 오류 코드입니다.</param>
      <param name="message">오류에 대한 설명입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="message">오류에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.Net.WebSockets.WebSocketError,System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="error">WebSocketError 열거형의 오류입니다.</param>
      <param name="message">오류에 대한 설명입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="message">오류에 대한 설명입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketException" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="message">오류에 대한 설명입니다.</param>
      <param name="innerException">현재 예외를 발생시킨 이전 예외를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>예외가 발생한 파일 이름과 줄 번호를 사용하여 SerializationInfo 개체를 설정합니다.</summary>
      <param name="info">SerializationInfo 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.ErrorCode">
      <summary>발생한 예외에 대한 원시 오류 코드입니다.</summary>
      <returns>
        <see cref="T:System.Int32" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketException.WebSocketErrorCode">
      <summary>발생한 오류의 유형을 나타내는 WebSocketError를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketError" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketMessageType">
      <summary>메시지 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Binary">
      <summary>메시지가 이진 형식입니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Close">
      <summary>닫기 메시지를 받았기 때문에 받기가 완료되었습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketMessageType.Text">
      <summary>메시지는 일반 텍스트입니다.</summary>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketReceiveResult">
      <summary>이 클래스의 인스턴스는 WebSocket에서 단일 ReceiveAsync 작업 수행의 결과를 나타냅니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="count">받은 바이트 수입니다.</param>
      <param name="messageType">받은 메시지의 형식입니다.</param>
      <param name="endOfMessage">최종 메시지인지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
      <summary>
        <see cref="T:System.Net.WebSockets.WebSocketReceiveResult" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="count">받은 바이트 수입니다.</param>
      <param name="messageType">받은 메시지의 형식입니다.</param>
      <param name="endOfMessage">최종 메시지인지 여부를 나타냅니다.</param>
      <param name="closeStatus">연결의 <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />를 나타냅니다.</param>
      <param name="closeStatusDescription">
        <paramref name="closeStatus" />에 대한 설명입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus">
      <summary>원격 엔드포인트가 close 핸드셰이크를 시작한 이유를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription">
      <summary>원격 엔드포인트에서 닫기 핸드셰이크를 시작한 이유를 설명하는 선택적 설명을 반환합니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.Count">
      <summary>WebSocket이 받은 바이트 수를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Int32" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage">
      <summary>메시지가 완전히 수신되었는지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.WebSocketReceiveResult.MessageType">
      <summary>현재 메시지가 UTF-8 메시지인지 아니면 이진 메시지인지를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketMessageType" />를 반환합니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.WebSocketState">
      <summary>WebSockets 인스턴스가 있을 수 있는 다양한 상태를 정의합니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Aborted">
      <summary>나중에 사용하기 위해 예약되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Closed">
      <summary>WebSocket close 핸드셰이크가 정성적으로 완료되었음을 나타냅니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseReceived">
      <summary>원격 엔드포인트에서 닫기 메시지를 받았습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.CloseSent">
      <summary>원격 엔드포인트에 닫기 메시지를 보냈습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Connecting">
      <summary>연결에서 원격 엔드포인트와 핸드셰이크를 협상 중입니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.None">
      <summary>나중에 사용하기 위해 예약되어 있습니다.</summary>
    </member>
    <member name="F:System.Net.WebSockets.WebSocketState.Open">
      <summary>HTTP 핸드셰이크가 완료된 후의 초기 상태입니다.</summary>
    </member>
  </members>
</doc>