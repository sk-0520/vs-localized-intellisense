<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Tasks.Dataflow</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
      <summary>Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Action`1" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput">Тип данных, на которые действует этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием.</summary>
      <param name="action">Действие, вызываемое при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием и параметрами конфигурации.</summary>
      <param name="action">Действие, вызываемое при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием.</summary>
      <param name="action">Действие, вызываемое при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием и параметрами конфигурации.</summary>
      <param name="action">Действие, вызываемое при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
      <summary>Сообщает блоку потока данных, что он больше не должен принимать и создавать сообщения и поглощать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
      <summary>Публикует элемент в целевой блок потока данных.</summary>
      <param name="item">Элемент, предлагаемый целевому объекту.</param>
      <returns>Значение <see langword="true" />, если пункт меню разносится в блок потока данных; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает выполнение блока потока данных в состоянии сбоя.</summary>
      <param name="exception">Исключение, вызвавшее сбой.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку потока данных, предоставляя целевому объекту возможность потребить или отложить его.</summary>
      <param name="messageHeader">Заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">Блок потока данных, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимый параметр <paramref name="messageHeader" />.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение <see langword="true" />, только если ему предоставлен отличный от NULL <paramref name="source" />.</exception>
      <returns>Состояние предложенного сообщения.  Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если в противном случае целевой объект отложил бы сообщение, но источником служил <see langword="null" />, возвращается значение <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Завершенная задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount">
      <summary>Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns>Количество входных элементов, ожидающих обработки этим блоком.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchBlock`1">
      <summary>Предоставляет блок потока данных, объединяющий вводы в массивы.</summary>
      <typeparam name="T">Определяет тип данных, помещаемых в пакеты.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> с указанным размером пакета.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> указанным размером пакета, параметром отклонения и параметрами блока.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="batchSize" /> должен быть положительным.  
  
-или- 
Значение <paramref name="batchSize" /> должно быть меньше значения параметра <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" />, если задано значение, отличное от значения по умолчанию.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, передаваемого как messageValue с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch">
      <summary>Активирует <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> для инициализации пакетной операции, даже если в настоящий момент число находящихся в очереди или отложенных элементов меньше, чем значение <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize">
      <summary>Получает размер пакетов, созданных данными <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</summary>
      <returns>Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
      <summary>Предоставляет блок потока данных, включающий заданное число вводов потенциально различающихся типов, предоставляемых для одного или нескольких целевых объектов.</summary>
      <typeparam name="T1">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /> с указанной конфигурацией.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /> с указанной конфигурацией.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="batchSize" /> меньше единицы.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Boolean@)">
      <summary>Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})">
      <summary>Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})">
      <summary>Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> — это <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
      <summary>Получает размер пакетов, созданных данным <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</summary>
      <returns>Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3">
      <summary>Предоставляет блок потока данных, включающий заданное число вводов потенциально различающихся типов, предоставляемых для одного или нескольких целевых объектов.</summary>
      <typeparam name="T1">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
      <typeparam name="T3">Указывает тип данных, принимаемых третьим целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" /> с указанной конфигурацией.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" /> с указанной конфигурацией.</summary>
      <param name="batchSize">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Значение <see langword="true" />, если источник должен отсоединиться от целевого объекта после успешного распространения одного сообщения; значение <see langword="false" />, чтобы источник оставался подсоединенным даже после распространения одного сообщения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)">
      <summary>Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})">
      <summary>Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})">
      <summary>Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> — это <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize">
      <summary>Получает размер пакетов, созданных данным <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" />.</summary>
      <returns>Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений третьего типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1">
      <summary>Предоставляет буфер для хранения максимум одного элемента за раз. Сообщение перезаписывается следующим по мере поступления.</summary>
      <typeparam name="T">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0})">
      <summary>Инициализирует <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> с указанной функцией клонирования.</summary>
      <param name="cloningFunction">Функция, используемая для клонирования данных при предложении другим блокам.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary>Инициализирует <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> с указанной функцией клонирования и <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="cloningFunction">Функция, используемая для клонирования данных при предложении другим блокам.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
      <summary>Создает буфер для хранения данных в потоке данных.</summary>
      <typeparam name="T">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary>Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept">Значение true для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено. Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
      <summary>Получает число элементов, хранящихся в буфере в данный момент.</summary>
      <returns>Количество элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowBlock">
      <summary>Предоставляет набор статических методов (Shared в Visual Basic) для работы с блоками потоков данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary>Создает новую абстракцию <see cref="T:System.IObservable`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="source">Источник для упаковки.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source" /> — <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.IObservable`1" />, позволяющий наблюдателям подписаться на источник.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
      <summary>Создает новую абстракцию <see cref="T:System.IObserver`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Цель для упаковки.</param>
      <typeparam name="TInput">Указывает тип входных данных, принимаемых целевым блоком.</typeparam>
      <returns>Наблюдатель, который создает программу-оболочку для блок целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
      <summary>Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1">Первый источник.</param>
      <param name="action1">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2">Второй источник.</param>
      <param name="action2">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <typeparam name="T1">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если оба источника завершены до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.  
  
Этот метод использует только один элемент из одного из двух источников данных, никогда из обоих.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary>Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1">Первый источник.</param>
      <param name="action1">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2">Второй источник.</param>
      <param name="action2">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот вариант.</param>
      <typeparam name="T1">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если оба источника завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
      <summary>Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1">Первый источник.</param>
      <param name="action1">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2">Второй источник.</param>
      <param name="action2">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="source3">Третий источник.</param>
      <param name="action3">Обработчик, который необходимо выполнить для данных от третьего источника.</param>
      <typeparam name="T1">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <typeparam name="T3">Указывает тип данных, содержащихся в третьем источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action3" /> — <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если все источники завершены до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.  
  
Этот метод использует только один элемент из одного из источников данных, никогда из нескольких.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary>Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1">Первый источник.</param>
      <param name="action1">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2">Второй источник.</param>
      <param name="action2">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="source3">Третий источник.</param>
      <param name="action3">Обработчик, который необходимо выполнить для данных от третьего источника.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот вариант.</param>
      <typeparam name="T1">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <typeparam name="T3">Указывает тип данных, содержащихся в третьем источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если все источники завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.  
  
Этот метод использует только один элемент из одного из источников данных, никогда из нескольких. Если отмена запрашивается после получения элемента, запрос отмены игнорируется, и соответствующему обработчику будет разрешено выполнение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
      <summary>Инкапсулирует целевой объект и источник в один блок распространения.</summary>
      <param name="target">Цель для инкапсуляции.</param>
      <param name="source">Источник для инкапсуляции.</param>
      <typeparam name="TInput">Указывает тип входных данных, ожидаемых целевым объектом.</typeparam>
      <typeparam name="TOutput">Указывает тип выходных данных, создаваемых источником.</typeparam>
      <returns>Инкапсулированные исходный и конечный объекты.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="source">Источник, из которого требуется задать связь.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</summary>
      <param name="source">Источник, из которого требуется задать связь.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <param name="predicate">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="target" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="predicate" /> — <see langword="null" />.</exception>
      <returns>Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</summary>
      <param name="source">Источник, из которого требуется задать связь.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <param name="linkOptions">Одно из значений перечисления, указывающее, как настроить связь между блоками потока данных.</param>
      <param name="predicate">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="source" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="linkOptions" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="predicate" /> имеет значение NULL (Nothing в Visual Basic).</exception>
      <returns>Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1">
      <summary>Получает целевой блок, который синхронно принимает все сообщения, предлагаемые на него, и удаляет их.</summary>
      <typeparam name="TInput">Тип сообщений, которые может принимать этот блок.</typeparam>
      <returns>
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, принимающий и впоследствии удаляющий все предлагаемые сообщения.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary>Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</summary>
      <param name="source">Источник для отслеживания.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит. Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника).  
  
Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary>Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</summary>
      <param name="source">Источник для отслеживания.</param>
      <param name="cancellationToken">Токен отмены, с которым необходимо отменить асинхронную операцию.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит. Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника). Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
      <summary>Отправляет элемент в объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Целевой блок.</param>
      <param name="item">Элемент, предлагаемый целевому объекту.</param>
      <typeparam name="TInput">Указывает тип данных, принимаемых целевым блоком.</typeparam>
      <returns>Значение <see langword="true" />, если элемент был принят целевым блоком; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary>Синхронно получает значение от указанного источника.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Из источника невозможно получить никакой элемент.</exception>
      <returns>Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary>Синхронно получает значение из указанного источника и предоставляет токен для отмены операции.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="cancellationToken">Токен для отмены операции получения.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.OperationCanceledException">Операция отменена до того как элемент был получен из источника.</exception>
      <returns>Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
      <summary>Синхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="timeout">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до того, как элемент был получен из источника.</exception>
      <returns>Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Синхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="timeout">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <param name="cancellationToken">Токен для отмены операции получения.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="source" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.TimeoutException">Заданное время ожидания истекло до того, как элемент был получен из источника.</exception>
      <exception cref="T:System.OperationCanceledException">Операция отменена до того как элемент был получен из источника.</exception>
      <returns>Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary>Асинхронно получает значение от указанного источника.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <returns>Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение элемента невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение из указанного источника и предоставляет токен для отмены операции.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="cancellationToken">Токен для отмены операции получения.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <returns>Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку была запрошена отмена, возвращаемая задача отменена. Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
      <summary>Асинхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="timeout">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку время ожидания истекло, возвращаемая задача отменена. Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
      <summary>Асинхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</summary>
      <param name="source">Источник, от которого требуется получить значение.</param>
      <param name="timeout">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <param name="cancellationToken">Токен, который может быть использован для отмены операции получения.</param>
      <typeparam name="TOutput">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку истекло время ожидания отмены, возвращаемая задача отменена. Если значение нельзя извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
      <summary>Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</summary>
      <param name="target">Целевой объект, на который требуется отправить данные.</param>
      <param name="item">Элемент, предлагаемый целевому объекту.</param>
      <typeparam name="TInput">Указывает тип данных, отправляемых целевому объекту.</typeparam>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку. Если целевой объект принимает и использует предлагаемый элемент во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="true" />. Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="false" /> . Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет показывать, было ли потреблено сообщение. Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
      <summary>Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</summary>
      <param name="target">Целевой объект, на который требуется отправить данные.</param>
      <param name="item">Элемент, предлагаемый целевому объекту.</param>
      <param name="cancellationToken">Токен отмены, с которым требуется запросить отмену операции отправки.</param>
      <typeparam name="TInput">Указывает тип данных, отправляемых целевому объекту.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).</exception>
      <returns>Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку.  Если целевой объект принимает и использует предлагаемый элемент во время вызова метода SendAsync, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение true.  Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение false. Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <c>Result</c> будет показывать, было ли потреблено сообщение. Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.  
  
Если отмена запрашивается до того, как целевой объект успешно потребил отправленные данные, возвращенная задача будет завершена в отмененном состоянии, и данные больше не будут доступны целевому объекту.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
      <summary>Пытается синхронно получить элемент из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="source">Источник, от которого требуется выполнить прием.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <typeparam name="TOutput">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions">
      <summary>Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowBlockOptions.Unbounded">
      <summary>Константа, используемая для указания неограниченного количества элементов <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />, которые предоставляют верхнюю границу. Это поле является константой.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlockOptions.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity">
      <summary>Получает или задает максимальное количество сообщений, которые может буферизовать блок.</summary>
      <returns>Максимальное количество сообщений. Значение по умолчанию — -1, что означает неограниченное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.CancellationToken">
      <summary>Получает или задает <see cref="T:System.Threading.CancellationToken" /> для отслеживания запросов отмены.</summary>
      <returns>Маркер.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.EnsureOrdered">
      <summary>Получает или задает значение, указывающее, следует ли применять упорядоченную обработку сообщений блока.</summary>
      <returns>
        <see langword="true" /> значение, если упорядоченная обработка должна быть применена; в противном случае — <see langword="false" /> . Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.MaxMessagesPerTask">
      <summary>Получает или задает максимальное количество сообщений, которые могут быть обработаны, на одну задачу.</summary>
      <returns>Максимальное количество сообщений. Значение по умолчанию — -1, что означает неограниченное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat">
      <summary>Получает или задает строку формата для использования при запросе у блока его имени.</summary>
      <returns>Строка формата для использования при запросе у блока его имени.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.TaskScheduler">
      <summary>Получает или задает объект <see cref="T:System.Threading.Tasks.TaskScheduler" />, используемый для планирования задач.</summary>
      <returns>Планировщик задач.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions">
      <summary>Предоставляет параметры, используемые для настройки связи между блоками потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowLinkOptions.#ctor">
      <summary>Инициализирует объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.Append">
      <summary>Получает или задает значение, указывающее, должна ли связь быть добавлена к списку связей источника в конце или в начале.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages">
      <summary>Получает или задает максимальное количество сообщений, которые могут быть потреблены через связь.</summary>
      <returns>Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.PropagateCompletion">
      <summary>Получает или задает значение, указывающее, будут ли уведомления о завершении и об ошибке автоматически распространятся на связанный целевой объект.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader">
      <summary>Предоставляет контейнер атрибутов данных для передачи между блоками потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> с указанными атрибутами.</summary>
      <param name="id">Идентификатор сообщения. Должен быть уникальным в пределах исходного блока. Он не обязательно должен быть глобально уникальным.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Object)">
      <summary>Проверяет упакованные экземпляры <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору.</summary>
      <param name="obj">Упакованный экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns>
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary>Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору без упаковки.</summary>
      <param name="other">Другой экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns>
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.GetHashCode">
      <summary>Создает хэш-код для экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</summary>
      <returns>Хэш-код.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Equality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary>Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору.</summary>
      <param name="left">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <param name="right">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns>
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Inequality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary>Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на неравенство по идентификатору.</summary>
      <param name="left">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <param name="right">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns>Значение <see langword="true" />, если эти экземпляры не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Id">
      <summary>Получает идентификатор сообщения в пределах источника.</summary>
      <returns>Идентификатор, содержащийся в  <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> экземпляре.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.IsValid">
      <summary>Получает допустимость сообщения.</summary>
      <returns>Значение <see langword="true" />, если идентификатор сообщения отличается от 0. <see langword="false" />, если идентификатор сообщения имеет значение 0.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowMessageStatus">
      <summary>Представляет состояние <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> при передаче между блоками потока данных.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted">
      <summary>Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> принял сообщение. Как только целевой объект принял сообщение, но полностью принадлежит целевому объекту.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined">
      <summary>Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонил сообщение. Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently">
      <summary>Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонил сообщение. Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.  
  
Кроме того, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонит все будущие сообщения, отправляемые источником.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable">
      <summary>Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> пытался принять сообщение от<see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, однако сообщение было больше не доступно.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed">
      <summary>Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отложил сообщение для потенциального потребления в дальнейшем.  
  
Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.</summary>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions">
      <summary>Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных, которые обрабатывают каждое сообщение с помощью вызова указанного пользователем делегата. Это блоки потока данных, такие как <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> и <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism">
      <summary>Получает максимальное количество сообщений, которые может параллельно обрабатывать блок.</summary>
      <returns>Максимальное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained">
      <summary>Получает значение, указывающее, ограничен блок потока данных одним производителем в каждый отдельный момент времени.</summary>
      <returns>Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions">
      <summary>Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных, которые группируют несколько сообщений. Эти блоки потока данных, такие как <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.Greedy">
      <summary>Получает или задает логическое значение, используемое для определения того, следует ли каскадно потреблять предложенные сообщения.</summary>
      <returns>Значение <see langword="true" /> для каскадного потребления предложенных сообщений; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.MaxNumberOfGroups">
      <summary>Получает или задает максимальное число групп, которые должны быть созданы блоком.</summary>
      <returns>Максимальное число групп.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IDataflowBlock">
      <summary>Представляет блок потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
      <summary>Получает <see cref="T:System.Threading.Tasks.Task" />, которая представляет асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2">
      <summary>Представляет блок потока данных, который является и целевым объектом для данных, и источником данных.</summary>
      <typeparam name="TInput">Указывает тип данных, принимаемых  <see cref="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2" /> .</typeparam>
      <typeparam name="TOutput">Указывает тип данных, предоставляемых  <see cref="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2" /> .</typeparam>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1">
      <summary>Представляет блок потока данных, который поддерживает получение сообщений без привязывания.</summary>
      <typeparam name="TOutput">Указывает тип данных, поставляемых <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ISourceBlock`1">
      <summary>Представляет блок потока данных, который является источником данных.</summary>
      <typeparam name="TOutput">Указывает тип данных, предоставляемых  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> .</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Заголовок messageHeader является недопустимым.</exception>
      <exception cref="T:System.ArgumentNullException">Целевой объект <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение NULL.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ITargetBlock`1">
      <summary>Представляет блок потока данных, который является целевым объектом для данных.</summary>
      <typeparam name="TInput">Указывает тип данных, принимаемых <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если в противном случае целевой объект отложил бы сообщение, но источником служил <see langword="null" />, возвращается значение <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.JoinBlock`2">
      <summary>Предоставляет блок потока данных, объединяющий несколько источников потоков данных, необязательно одного типа, ожидая появления каждого типа, прежде чем они все совместно выпускаются как кортеж, состоящий из одного элемента каждого типа.</summary>
      <typeparam name="T1">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</summary>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)">
      <summary>Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})">
      <summary>Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})">
      <summary>Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target1">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target2">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.JoinBlock`3">
      <summary>Предоставляет блок потока данных, объединяющий несколько источников потоков данных, необязательно одного типа, ожидая появления каждого типа, прежде чем они все совместно выпускаются как кортеж, состоящий из одного элемента каждого типа.</summary>
      <typeparam name="T1">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
      <typeparam name="T3">Указывает тип данных, принимаемых третьим целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`3" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`3" />.</summary>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает исходный блок с указанным целевым блоком.</summary>
      <param name="target">Целевой блок, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Объект, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="linkOptions" /> имеет значение <see langword="null" />.</exception>
      <returns>Удаляемый объект, удаляющий связь между исходным и целевым объектом, когда вызывается его метод <see cref="M:System.IDisposable.Dispose" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Boolean@)">
      <summary>Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})">
      <summary>Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})">
      <summary>Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceive(System.Predicate{System.Tuple{`0,`1,`2}},System.Tuple{`0,`1,`2}@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1,`2}}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target1">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target2">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target3">
      <summary>Получает целевой объект, который может использоваться для предложения сообщений третьего типа.</summary>
      <returns>Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.TransformBlock`2">
      <summary>Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Func`2" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput">Указывает тип данных, получаемых и используемых этим <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</typeparam>
      <typeparam name="TOutput">Указывает тип выходных данных  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> .</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1})">
      <summary>Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанным <see cref="T:System.Func`2" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанными <see cref="T:System.Func`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})">
      <summary>Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанным <see cref="T:System.Func`2" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанными <see cref="T:System.Func`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept">Значение <see langword="true" />, если целевой объект должен вызвать метод <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> асинхронно во время вызова <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы получить сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но источник имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceive(System.Predicate{`1},`1@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.InputCount">
      <summary>Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns>Число входных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
      <summary>Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Func`2" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput">Указывает тип данных, получаемых и используемых этим <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</typeparam>
      <typeparam name="TOutput">Определяет тип вывода данных с помощью этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
      <summary>Инициализирует новую задачу <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных. Все данные из возвращаемого <see cref="T:System.Collections.Generic.IEnumerable`1" /> будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных. Все данные из возвращаемого в <see cref="T:System.Collections.Generic.IEnumerable`1" /> будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
      <summary>Инициализирует новую задачу <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных. Все данные, асинхронно возвращаемые в <see cref="T:System.Collections.Generic.IEnumerable`1" />, будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform">Функция, вызываемая при получении каждого элемента данных. Все данные, асинхронно возвращаемые в <see cref="T:System.Collections.Generic.IEnumerable`1" />, будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода OfferMessage <see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept">Значение <see langword="true" />, если целевой объект должен вызвать метод <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> асинхронно во время вызова <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы получить сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.  
  
-или- 
 <paramref name="consumeToAccept" /> может быть только значение true, если он получил <paramref name="source" />, отличный от null.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но источник имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount">
      <summary>Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns>Число входных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount">
      <summary>Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns>Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1">
      <summary>Предоставляет буфер для получения и хранения не более чем одного элемента в сети блоков потока данных.</summary>
      <typeparam name="T">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})">
      <summary>Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" />.</summary>
      <param name="cloningFunction">Функция, используемая для клонирования данных при предложении другим блокам.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary>Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="cloningFunction">Функция, используемая для клонирования данных при предложении другим блокам.</param>
      <param name="dataflowBlockOptions">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete">
      <summary>Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary>Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns>Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary>Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary>Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items">Элементы, полученные от источника.</param>
      <returns>Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary>Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns>Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary>Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue">Значение предлагаемого свойства.</param>
      <param name="source">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns>Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString">
      <summary>Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns>Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary>Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item">Элемент, полученный от источника.</param>
      <returns>Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion">
      <summary>Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns>Задача.</returns>
    </member>
  </members>
</doc>