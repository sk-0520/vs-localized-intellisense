<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Reflection.Emit.ILGeneration</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Emit.CustomAttributeBuilder">
      <summary vsli:raw="Helps build custom attributes.">Помогает при построения пользовательских атрибутов.</summary>
    </member>
    <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;CustomAttributeBuilder&quot; /&gt; class given the constructor for the custom attribute and the arguments to the constructor.">Инициализирует экземпляр класса <see langword="CustomAttributeBuilder" />, передавая конструктор для настраиваемого атрибута и аргументы в конструктор.</summary>
      <param name="con" vsli:raw="The constructor for the custom attribute.">Конструктор настраиваемого атрибута.</param>
      <param name="constructorArgs" vsli:raw="The arguments to the constructor of the custom attribute.">Аргументы, передаваемые конструктору настраиваемого атрибута.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; is static or private.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of supplied argument does not match the type of the parameter declared in the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; A supplied argument is a reference type other than &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt;.">
        <paramref name="con" /> является статическим или закрытым.  
  
-или- 
Число переданных аргументов не соответствует числу параметров конструктора в соответствии с требованиями соглашения о вызовах конструктора.  
  
-или- 
Тип переданного аргумента не соответствует типу параметра, объявленного в конструкторе.  
  
-или- 
Ссылочный тип переданного аргумента отличается от <see cref="T:System.String" /> или <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; or &lt;paramref name=&quot;constructorArgs&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="con" /> или <paramref name="constructorArgs" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;CustomAttributeBuilder&quot; /&gt; class given the constructor for the custom attribute, the arguments to the constructor, and a set of named field/value pairs.">Инициализирует экземпляр класса <see langword="CustomAttributeBuilder" /> с передачей конструктора для пользовательских атрибутов, аргументов этого конструктора, а также набора пар поля и значения.</summary>
      <param name="con" vsli:raw="The constructor for the custom attribute.">Конструктор настраиваемого атрибута.</param>
      <param name="constructorArgs" vsli:raw="The arguments to the constructor of the custom attribute.">Аргументы, передаваемые конструктору настраиваемого атрибута.</param>
      <param name="namedFields" vsli:raw="Named fields of the custom attribute.">Указанные поля пользовательского атрибута.</param>
      <param name="fieldValues" vsli:raw="Values for the named fields of the custom attribute.">Значения указанных полей пользовательского атрибута.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The lengths of the &lt;paramref name=&quot;namedFields&quot; /&gt; and &lt;paramref name=&quot;fieldValues&quot; /&gt; arrays are different.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;con&quot; /&gt; is static or private.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of supplied argument does not match the type of the parameter declared in the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The types of the field values do not match the types of the named fields.  &#xA;  &#xA; -or-  &#xA;  &#xA; The field does not belong to the same class or base class as the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; A supplied argument or named field is a reference type other than &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Длины массивов <paramref name="namedFields" /> и <paramref name="fieldValues" /> различны.  
  
-или- 
 <paramref name="con" /> является статическим или закрытым.  
  
-или- 
Число переданных аргументов не соответствует числу параметров конструктора в соответствии с требованиями соглашения о вызовах конструктора.  
  
-или- 
Тип переданного аргумента не соответствует типу параметра, объявленного в конструкторе.  
  
-или- 
Типы значений полей не соответствуют типам указанных полей.  
  
-или- 
Поле не принадлежит к тому же классу или базовому классу, что и конструктор.  
  
-или- 
Предоставленный аргумент или именованное поле имеет ссылочный тип, отличный от <see cref="T:System.String" /> или <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the parameters is &lt;see langword=&quot;null&quot; /&gt;.">Один из параметров имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;CustomAttributeBuilder&quot; /&gt; class given the constructor for the custom attribute, the arguments to the constructor, and a set of named property or value pairs.">Инициализирует экземпляр класса <see langword="CustomAttributeBuilder" /> с передачей конструктора для пользовательских атрибутов, аргументов этого конструктора, а также набора поименованных пар значений или свойств.</summary>
      <param name="con" vsli:raw="The constructor for the custom attribute.">Конструктор настраиваемого атрибута.</param>
      <param name="constructorArgs" vsli:raw="The arguments to the constructor of the custom attribute.">Аргументы, передаваемые конструктору настраиваемого атрибута.</param>
      <param name="namedProperties" vsli:raw="Named properties of the custom attribute.">Указанные свойства пользовательского атрибута.</param>
      <param name="propertyValues" vsli:raw="Values for the named properties of the custom attribute.">Значения указанных свойств пользовательского атрибута.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The lengths of the &lt;paramref name=&quot;namedProperties&quot; /&gt; and &lt;paramref name=&quot;propertyValues&quot; /&gt; arrays are different.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;con&quot; /&gt; is static or private.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of supplied argument does not match the type of the parameter declared in the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The types of the property values do not match the types of the named properties.  &#xA;  &#xA; -or-  &#xA;  &#xA; A property has no setter method.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property does not belong to the same class or base class as the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; A supplied argument or named property is a reference type other than &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Длины массивов <paramref name="namedProperties" /> и <paramref name="propertyValues" /> различны.  
  
-или- 
 <paramref name="con" /> является статическим или закрытым.  
  
-или- 
Число переданных аргументов не соответствует числу параметров конструктора в соответствии с требованиями соглашения о вызовах конструктора.  
  
-или- 
Тип переданного аргумента не соответствует типу параметра, объявленного в конструкторе.  
  
-или- 
Типы значений свойств не соответствуют типам указанных свойств.  
  
-или- 
Свойство не имеет установочного метода.  
  
-или- 
Свойство не принадлежит к тому же классу или базовому классу, что и конструктор.  
  
-или- 
Предоставленный аргумент или именованное свойство имеет ссылочный тип, отличный от <see cref="T:System.String" /> или <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the parameters is &lt;see langword=&quot;null&quot; /&gt;.">Один из параметров имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])">
      <summary vsli:raw="Initializes an instance of the &lt;see langword=&quot;CustomAttributeBuilder&quot; /&gt; class given the constructor for the custom attribute, the arguments to the constructor, a set of named property or value pairs, and a set of named field or value pairs.">Инициализирует экземпляр класса <see langword="CustomAttributeBuilder" /> с передачей конструктора для пользовательских атрибутов, аргументов этого конструктора, набора поименованных пар значений или свойств, а также набора поименованных пар значений или полей.</summary>
      <param name="con" vsli:raw="The constructor for the custom attribute.">Конструктор настраиваемого атрибута.</param>
      <param name="constructorArgs" vsli:raw="The arguments to the constructor of the custom attribute.">Аргументы, передаваемые конструктору настраиваемого атрибута.</param>
      <param name="namedProperties" vsli:raw="Named properties of the custom attribute.">Указанные свойства пользовательского атрибута.</param>
      <param name="propertyValues" vsli:raw="Values for the named properties of the custom attribute.">Значения указанных свойств пользовательского атрибута.</param>
      <param name="namedFields" vsli:raw="Named fields of the custom attribute.">Указанные поля пользовательского атрибута.</param>
      <param name="fieldValues" vsli:raw="Values for the named fields of the custom attribute.">Значения указанных полей пользовательского атрибута.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The lengths of the &lt;paramref name=&quot;namedProperties&quot; /&gt; and &lt;paramref name=&quot;propertyValues&quot; /&gt; arrays are different.  &#xA;  &#xA; -or-  &#xA;  &#xA; The lengths of the &lt;paramref name=&quot;namedFields&quot; /&gt; and &lt;paramref name=&quot;fieldValues&quot; /&gt; arrays are different.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;con&quot; /&gt; is static or private.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of supplied argument does not match the type of the parameter declared in the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; The types of the property values do not match the types of the named properties.  &#xA;  &#xA; -or-  &#xA;  &#xA; The types of the field values do not match the types of the corresponding field types.  &#xA;  &#xA; -or-  &#xA;  &#xA; A property has no setter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property or field does not belong to the same class or base class as the constructor.  &#xA;  &#xA; -or-  &#xA;  &#xA; A supplied argument, named property, or named field is a reference type other than &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Длины массивов <paramref name="namedProperties" /> и <paramref name="propertyValues" /> различны.  
  
-или- 
Длины массивов <paramref name="namedFields" /> и <paramref name="fieldValues" /> различны.  
  
-или- 
 <paramref name="con" /> является статическим или закрытым.  
  
-или- 
Число переданных аргументов не соответствует числу параметров конструктора в соответствии с требованиями соглашения о вызовах конструктора.  
  
-или- 
Тип переданного аргумента не соответствует типу параметра, объявленного в конструкторе.  
  
-или- 
Типы значений свойств не соответствуют типам указанных свойств.  
  
-или- 
Типы значений полей не согласуются с типами соответствующих типов полей.  
  
-или- 
Свойство не имеет установочного метода.  
  
-или- 
Свойство или поле не принадлежит к тому же классу или базовому классу, что и конструктор.  
  
-или- 
Предоставленный аргумент, именованное поле или именованное свойство имеет ссылочный тип, отличный от <see cref="T:System.String" /> или <see cref="T:System.Type" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the parameters is &lt;see langword=&quot;null&quot; /&gt;.">Один из параметров имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Reflection.Emit.ILGenerator">
      <summary vsli:raw="Generates Microsoft intermediate language (MSIL) instructions.">Создает инструкции языка MSIL.</summary>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginCatchBlock(System.Type)">
      <summary vsli:raw="Begins a catch block.">Задает начало блока catch.</summary>
      <param name="exceptionType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the exception.">Объект <see cref="T:System.Type" />, представляющая исключение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The catch block is within a filtered exception.">Блок catch находится внутри фильтруемого исключения.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;exceptionType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and the exception filter block has not returned a value that indicates that finally blocks should be run until this catch block is located.">Значением <paramref name="exceptionType" /> является <see langword="null" />, а блок фильтра исключений не вернул значение, указывающее, что финальные блоки должны выполняться, пока размещен данный блок catch.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The Microsoft intermediate language (MSIL) being generated is not currently in an exception block.">Создаваемые инструкции языка MSIL в данный момент не находятся в блоке исключения.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock">
      <summary vsli:raw="Begins an exception block for a filtered exception.">Задает начало блока исключения для фильтруемого исключения.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The Microsoft intermediate language (MSIL) being generated is not currently in an exception block.  &#xA;  &#xA; -or-  &#xA;  &#xA; This &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; belongs to a &lt;see cref=&quot;T:System.Reflection.Emit.DynamicMethod&quot; /&gt;.">Создаваемые инструкции языка MSIL в данный момент не находятся в блоке исключения.  
  
-или- 
Этот объект <see cref="T:System.Reflection.Emit.ILGenerator" /> принадлежит <see cref="T:System.Reflection.Emit.DynamicMethod" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginExceptionBlock">
      <summary vsli:raw="Begins an exception block for a non-filtered exception.">Задает начало блока исключения для нефильтруемого исключения.</summary>
      <returns vsli:raw="The label for the end of the block. This will leave you in the correct place to execute finally blocks or to finish the try.">Метка конца блока. Она обеспечит переход в нужное место для выполнения финальных блоков или прекращения данной попытки.</returns>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginFaultBlock">
      <summary vsli:raw="Begins an exception fault block in the Microsoft intermediate language (MSIL) stream.">Задает начало блока ошибки исключения в потоке инструкций языка MSIL.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The MSIL being generated is not currently in an exception block.  &#xA;  &#xA; -or-  &#xA;  &#xA; This &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; belongs to a &lt;see cref=&quot;T:System.Reflection.Emit.DynamicMethod&quot; /&gt;.">Созданные инструкции MSIL в настоящее время не находятся в блоке исключения.  
  
-или- 
Этот объект <see cref="T:System.Reflection.Emit.ILGenerator" /> принадлежит <see cref="T:System.Reflection.Emit.DynamicMethod" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginFinallyBlock">
      <summary vsli:raw="Begins a finally block in the Microsoft intermediate language (MSIL) instruction stream.">Задает начало финального блока в потоке инструкций языка MSIL.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The MSIL being generated is not currently in an exception block.">Созданные инструкции MSIL в настоящее время не находятся в блоке исключения.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.BeginScope">
      <summary vsli:raw="Begins a lexical scope.">Задает начало лексической области действия.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; belongs to a &lt;see cref=&quot;T:System.Reflection.Emit.DynamicMethod&quot; /&gt;.">Этот объект <see cref="T:System.Reflection.Emit.ILGenerator" /> принадлежит <see cref="T:System.Reflection.Emit.DynamicMethod" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)">
      <summary vsli:raw="Declares a local variable of the specified type.">Объявляет локальную переменную определенного типа.</summary>
      <param name="localType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of the local variable.">Объект <see cref="T:System.Type" />, который представляет тип локальной переменной.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The containing type has been created by the &lt;see cref=&quot;M:System.Reflection.Emit.TypeBuilder.CreateType&quot; /&gt; method.">Включающий тип был создан с помощью метода <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</exception>
      <returns vsli:raw="The declared local variable.">Объявленная локальная переменная.</returns>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type,System.Boolean)">
      <summary vsli:raw="Declares a local variable of the specified type, optionally pinning the object referred to by the variable.">Объявляет локальную переменную определенного типа; дополнительно может закрепить объект, на который ссылается переменная.</summary>
      <param name="localType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of the local variable.">Объект <see cref="T:System.Type" />, который представляет тип локальной переменной.</param>
      <param name="pinned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to pin the object in memory; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для закрепления объекта в памяти; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localType" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The containing type has been created by the &lt;see cref=&quot;M:System.Reflection.Emit.TypeBuilder.CreateType&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; The method body of the enclosing method has been created by the &lt;see cref=&quot;M:System.Reflection.Emit.MethodBuilder.CreateMethodBody(System.Byte[],System.Int32)&quot; /&gt; method.">Включающий тип был создан с помощью метода <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.  
  
-или- 
Основной текст включающего метода был создан с помощью метода <see cref="M:System.Reflection.Emit.MethodBuilder.CreateMethodBody(System.Byte[],System.Int32)" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The method with which this &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; is associated is not represented by a &lt;see cref=&quot;T:System.Reflection.Emit.MethodBuilder&quot; /&gt;.">Метод, с которым связан этот объект <see cref="T:System.Reflection.Emit.ILGenerator" />, не представлен <see cref="T:System.Reflection.Emit.MethodBuilder" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Reflection.Emit.LocalBuilder&quot; /&gt; object that represents the local variable.">Объект <see cref="T:System.Reflection.Emit.LocalBuilder" />, который представляет локальную переменную.</returns>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.DefineLabel">
      <summary vsli:raw="Declares a new label.">Объявляет новую метку.</summary>
      <returns vsli:raw="A new label that can be used as a token for branching.">Новая метка, которую можно использовать как токен при переходах.</returns>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)">
      <summary vsli:raw="Puts the specified instruction onto the stream of instructions.">Помещает указанную инструкцию в поток инструкций.</summary>
      <param name="opcode" vsli:raw="The Microsoft Intermediate Language (MSIL) instruction to be put onto the stream.">Инструкция языка MSIL, помещаемая в поток.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)">
      <summary vsli:raw="Puts the specified instruction and character argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и символьный аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="arg" vsli:raw="The character argument pushed onto the stream immediately after the instruction.">Аргумент типа character, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Double)">
      <summary vsli:raw="Puts the specified instruction and numerical argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и числовой аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream. Defined in the &lt;see langword=&quot;OpCodes&quot; /&gt; enumeration.">Инструкция MSIL, помещаемая в поток. Определена в перечислении <see langword="OpCodes" />.</param>
      <param name="arg" vsli:raw="The numerical argument pushed onto the stream immediately after the instruction.">Числовой аргумент, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)">
      <summary vsli:raw="Puts the specified instruction and numerical argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и числовой аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="arg" vsli:raw="The &lt;see langword=&quot;Int&quot; /&gt; argument pushed onto the stream immediately after the instruction.">Аргумент типа <see langword="Int" />, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)">
      <summary vsli:raw="Puts the specified instruction and numerical argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и числовой аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="arg" vsli:raw="The numerical argument pushed onto the stream immediately after the instruction.">Числовой аргумент, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)">
      <summary vsli:raw="Puts the specified instruction and numerical argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и числовой аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="arg" vsli:raw="The numerical argument pushed onto the stream immediately after the instruction.">Числовой аргумент, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)">
      <summary vsli:raw="Puts the specified instruction and metadata token for the specified constructor onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и маркер метаданных указанного конструктора в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="con" vsli:raw="A &lt;see langword=&quot;ConstructorInfo&quot; /&gt; representing a constructor.">Объект <see langword="ConstructorInfo" />, представляющий конструктор.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;. This exception is new in the .NET Framework 4.">
        <paramref name="con" /> имеет значение <see langword="null" />. Это исключение появилось только в .NET Framework 4.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream and leaves space to include a label when fixes are done.">Помещает указанную инструкцию в поток инструкций языка MSIL и оставляет место, чтобы после того, как будут произведены необходимые настройки, можно было включить метку.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="label" vsli:raw="The label to which to branch from this location.">Метка, на которую следует осуществить переход из данного места.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream and leaves space to include a label when fixes are done.">Помещает указанную инструкцию в поток инструкций языка MSIL и оставляет место, чтобы после того, как будут произведены необходимые настройки, можно было включить метку.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="labels" vsli:raw="The array of label objects to which to branch from this location. All of the labels will be used.">Массив объектов меток, на которые следует осуществлять переход из данного места. Задействуются все метки.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;. This exception is new in the .NET Framework 4.">
        <paramref name="con" /> имеет значение <see langword="null" />. Это исключение появилось только в .NET Framework 4.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream followed by the index of the given local variable.">Помещает в поток инструкций языка MSIL заданную инструкцию, за которой следует индекс заданной локальной переменной.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="local" vsli:raw="A local variable.">Локальная переменная.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parent method of the &lt;paramref name=&quot;local&quot; /&gt; parameter does not match the method associated with this &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt;.">Родительский метод параметра <paramref name="local" /> не соответствует методу, связанному с объектом <see cref="T:System.Reflection.Emit.ILGenerator" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;local&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="local" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;opcode&quot; /&gt; is a single-byte instruction, and &lt;paramref name=&quot;local&quot; /&gt; represents a local variable with an index greater than &lt;see langword=&quot;Byte.MaxValue&quot; /&gt;.">
        <paramref name="opcode" /> представляет собой 1-байтную инструкцию, а <paramref name="local" /> представляет локальную переменную с индексом большим, чем значение <see langword="Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)">
      <summary vsli:raw="Puts the specified instruction and a signature token onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и токен подписи в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="signature" vsli:raw="A helper for constructing a signature token.">Вспомогательный класс для конструирования токена подписи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signature&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signature" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">
      <summary vsli:raw="Puts the specified instruction and metadata token for the specified field onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и маркер метаданных указанного поля в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="field" vsli:raw="A &lt;see langword=&quot;FieldInfo&quot; /&gt; representing a field.">Объект <see langword="FieldInfo" />, представляющий поле.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream followed by the metadata token for the given method.">Помещает в поток инструкций языка MSIL заданную инструкцию, за которой следует маркер метаданных указанного метода.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="meth" vsli:raw="A &lt;see langword=&quot;MethodInfo&quot; /&gt; representing a method.">Объект <see langword="MethodInfo" />, предоставляющий метод.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;meth&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="meth" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;meth&quot; /&gt; is a generic method for which the &lt;see cref=&quot;P:System.Reflection.MethodBase.IsGenericMethodDefinition&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="meth" /> является универсальным методом, для которого значение свойства <see cref="P:System.Reflection.MethodBase.IsGenericMethodDefinition" /> равно <see langword="false" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.SByte)">
      <summary vsli:raw="Puts the specified instruction and character argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и символьный аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="arg" vsli:raw="The character argument pushed onto the stream immediately after the instruction.">Аргумент типа character, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Single)">
      <summary vsli:raw="Puts the specified instruction and numerical argument onto the Microsoft intermediate language (MSIL) stream of instructions.">Помещает заданную инструкцию и числовой аргумент в поток инструкций языка MSIL.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="arg" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; argument pushed onto the stream immediately after the instruction.">Аргумент типа <see cref="T:System.Single" />, помещаемый в поток сразу после инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.String)">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream followed by the metadata token for the given string.">Помещает в поток инструкций языка MSIL заданную инструкцию, за которой следует маркер метаданных указанной строки.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream.">Инструкция языка MSIL, которую следует включить в поток.</param>
      <param name="str" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be emitted.">Объект <see langword="String" />, который подлежит выпуску.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">
      <summary vsli:raw="Puts the specified instruction onto the Microsoft intermediate language (MSIL) stream followed by the metadata token for the given type.">Помещает в поток инструкций языка MSIL заданную инструкцию, за которой следует маркер метаданных для указанного типа.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be put onto the stream.">Инструкция MSIL, помещаемая в поток.</param>
      <param name="cls" vsli:raw="A &lt;see langword=&quot;Type&quot; /&gt;.">Объект <see langword="Type" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cls&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cls" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">
      <summary vsli:raw="Puts a &lt;see langword=&quot;call&quot; /&gt; or &lt;see langword=&quot;callvirt&quot; /&gt; instruction onto the Microsoft intermediate language (MSIL) stream to call a &lt;see langword=&quot;varargs&quot; /&gt; method.">Помещает инструкцию <see langword="call" /> или <see langword="callvirt" /> в поток языка MSIL для вызова метода <see langword="varargs" />.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream. Must be &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Call&quot; /&gt;, &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Callvirt&quot; /&gt;, or &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Newobj&quot; /&gt;.">Инструкция языка MSIL, которую следует включить в поток. Должно быть <see cref="F:System.Reflection.Emit.OpCodes.Call" />, <see cref="F:System.Reflection.Emit.OpCodes.Callvirt" /> или <see cref="F:System.Reflection.Emit.OpCodes.Newobj" />.</param>
      <param name="methodInfo" vsli:raw="The &lt;see langword=&quot;varargs&quot; /&gt; method to be called.">Метод <see langword="varargs" />, который следует вызывать.</param>
      <param name="optionalParameterTypes" vsli:raw="The types of the optional arguments if the method is a &lt;see langword=&quot;varargs&quot; /&gt; method; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Типы необязательных аргументов, если используется метод <see langword="varargs" />. В противном случае указывается значение <see langword="null" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;opcode&quot; /&gt; does not specify a method call.">Параметр <paramref name="opcode" /> не задает вызов метода.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;methodInfo&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="methodInfo" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling convention for the method is not &lt;see langword=&quot;varargs&quot; /&gt;, but optional parameter types are supplied. This exception is thrown in the .NET Framework versions 1.0 and 1.1, In subsequent versions, no exception is thrown.">Соглашение о вызовах для метода отличается от <see langword="varargs" />. Однако при этом указываются типы необязательных параметров. Это исключение возникает в .NET Framework версии 1.0 и 1.1. В последующих версиях исключение не возникает.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])">
      <summary vsli:raw="Puts a &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Calli&quot; /&gt; instruction onto the Microsoft intermediate language (MSIL) stream, specifying a managed calling convention for the indirect call.">Помещает инструкцию <see cref="F:System.Reflection.Emit.OpCodes.Calli" /> в поток инструкций языка MSIL с указанием соглашений по управляемым вызовам для косвенного вызова.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream. Must be &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Calli&quot; /&gt;.">Инструкция языка MSIL, которую следует включить в поток. Этот параметр должен содержать значение <see cref="F:System.Reflection.Emit.OpCodes.Calli" />.</param>
      <param name="callingConvention" vsli:raw="The managed calling convention to be used.">Соглашение по управляемым вызовам, которое следует использовать.</param>
      <param name="returnType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the result.">Тип (<see cref="T:System.Type" />) результата.</param>
      <param name="parameterTypes" vsli:raw="The types of the required arguments to the instruction.">Типы обязательных аргументов инструкции.</param>
      <param name="optionalParameterTypes" vsli:raw="The types of the optional arguments for &lt;see langword=&quot;varargs&quot; /&gt; calls.">Типы необязательных аргументов для вызовов <see langword="varargs" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;optionalParameterTypes&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;, but &lt;paramref name=&quot;callingConvention&quot; /&gt; does not include the &lt;see cref=&quot;F:System.Reflection.CallingConventions.VarArgs&quot; /&gt; flag.">
        <paramref name="optionalParameterTypes" /> не является <see langword="null" />, однако <paramref name="callingConvention" /> не содержит флаг <see cref="F:System.Reflection.CallingConventions.VarArgs" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])">
      <summary vsli:raw="Puts a &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Calli&quot; /&gt; instruction onto the Microsoft intermediate language (MSIL) stream, specifying an unmanaged calling convention for the indirect call.">Помещает инструкцию <see cref="F:System.Reflection.Emit.OpCodes.Calli" /> в поток инструкций языка MSIL с указанием соглашений по неуправляемым вызовам для косвенного вызова.</summary>
      <param name="opcode" vsli:raw="The MSIL instruction to be emitted onto the stream. Must be &lt;see cref=&quot;F:System.Reflection.Emit.OpCodes.Calli&quot; /&gt;.">Инструкция языка MSIL, которую следует включить в поток. Этот параметр должен содержать значение <see cref="F:System.Reflection.Emit.OpCodes.Calli" />.</param>
      <param name="unmanagedCallConv" vsli:raw="The unmanaged calling convention to be used.">Соглашение по неуправляемым вызовам, которое следует использовать.</param>
      <param name="returnType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the result.">Тип (<see cref="T:System.Type" />) результата.</param>
      <param name="parameterTypes" vsli:raw="The types of the required arguments to the instruction.">Типы обязательных аргументов инструкции.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.Emit.LocalBuilder)">
      <summary vsli:raw="Emits the Microsoft intermediate language (MSIL) necessary to call &lt;see cref=&quot;Overload:System.Console.WriteLine&quot; /&gt; with the given local variable.">Создает язык MSIL, требуемый для вызова <see cref="Overload:System.Console.WriteLine" /> с заданной локальной переменной.</summary>
      <param name="localBuilder" vsli:raw="The local variable whose value is to be written to the console.">Локальная переменная, значение которой выводится на консоль.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The type of &lt;paramref name=&quot;localBuilder&quot; /&gt; is &lt;see cref=&quot;T:System.Reflection.Emit.TypeBuilder&quot; /&gt; or &lt;see cref=&quot;T:System.Reflection.Emit.EnumBuilder&quot; /&gt;, which are not supported.  &#xA;  &#xA; -or-  &#xA;  &#xA; There is no overload of &lt;see cref=&quot;Overload:System.Console.WriteLine&quot; /&gt; that accepts the type of &lt;paramref name=&quot;localBuilder&quot; /&gt;.">Тип <paramref name="localBuilder" /> представлен <see cref="T:System.Reflection.Emit.TypeBuilder" /> или <see cref="T:System.Reflection.Emit.EnumBuilder" /> (не поддерживается).  
  
-или- 
Отсутствует перегрузка <see cref="Overload:System.Console.WriteLine" /> (принимает тип <paramref name="localBuilder" />).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localBuilder&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localBuilder" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.FieldInfo)">
      <summary vsli:raw="Emits the Microsoft intermediate language (MSIL) necessary to call &lt;see cref=&quot;Overload:System.Console.WriteLine&quot; /&gt; with the given field.">Выдает инструкции языка MSIL, необходимые для вызова метода <see cref="Overload:System.Console.WriteLine" /> с заданным полем.</summary>
      <param name="fld" vsli:raw="The field whose value is to be written to the console.">Поле, значение которого следует записать в консоль.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There is no overload of the &lt;see cref=&quot;Overload:System.Console.WriteLine&quot; /&gt; method that accepts the type of the specified field.">Отсутствует перегрузка метода <see cref="Overload:System.Console.WriteLine" />, принимающего тип указанного поля.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fld&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fld" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The type of the field is &lt;see cref=&quot;T:System.Reflection.Emit.TypeBuilder&quot; /&gt; or &lt;see cref=&quot;T:System.Reflection.Emit.EnumBuilder&quot; /&gt;, which are not supported.">Типом поля является <see cref="T:System.Reflection.Emit.TypeBuilder" /> или <see cref="T:System.Reflection.Emit.EnumBuilder" />, которые не поддерживаются.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.String)">
      <summary vsli:raw="Emits the Microsoft intermediate language (MSIL) to call &lt;see cref=&quot;Overload:System.Console.WriteLine&quot; /&gt; with a string.">Выдает инструкции языка MSIL для вызова метода <see cref="Overload:System.Console.WriteLine" /> со строкой.</summary>
      <param name="value" vsli:raw="The string to be printed.">Строка, которую следует напечатать.</param>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EndExceptionBlock">
      <summary vsli:raw="Ends an exception block.">Задает конец блока исключения.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The end exception block occurs in an unexpected place in the code stream.">Конец блока исключения находится в неподходящем месте в потоке кода.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The Microsoft intermediate language (MSIL) being generated is not currently in an exception block.">Создаваемые инструкции языка MSIL в данный момент не находятся в блоке исключения.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.EndScope">
      <summary vsli:raw="Ends a lexical scope.">Задает конец лексической области действия.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; belongs to a &lt;see cref=&quot;T:System.Reflection.Emit.DynamicMethod&quot; /&gt;.">Этот объект <see cref="T:System.Reflection.Emit.ILGenerator" /> принадлежит <see cref="T:System.Reflection.Emit.DynamicMethod" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.MarkLabel(System.Reflection.Emit.Label)">
      <summary vsli:raw="Marks the Microsoft intermediate language (MSIL) stream's current position with the given label.">Отмечает текущую позицию в потоке инструкций языка MSIL указанной меткой.</summary>
      <param name="loc" vsli:raw="The label for which to set an index.">Метка, для которой следует установить индекс.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;loc&quot; /&gt; represents an invalid index into the label array.  &#xA;  &#xA; -or-  &#xA;  &#xA; An index for &lt;paramref name=&quot;loc&quot; /&gt; has already been defined.">Параметр <paramref name="loc" /> содержит неправильный индекс массива меток.  
  
-или- 
Индекс для <paramref name="loc" /> уже был определен.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.ThrowException(System.Type)">
      <summary vsli:raw="Emits an instruction to throw an exception.">Создает инструкцию вызова исключения.</summary>
      <param name="excType" vsli:raw="The class of the type of exception to throw.">Класс типа исключения, которое требуется создать.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;excType&quot; /&gt; is not the &lt;see cref=&quot;T:System.Exception&quot; /&gt; class or a derived class of &lt;see cref=&quot;T:System.Exception&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type does not have a parameterless constructor.">
        <paramref name="excType" /> не является классом <see cref="T:System.Exception" /> или производным от класса <see cref="T:System.Exception" />.  
  
-или- 
У типа нет конструктора без параметров.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;excType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="excType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ILGenerator.UsingNamespace(System.String)">
      <summary vsli:raw="Specifies the namespace to be used in evaluating locals and watches for the current active lexical scope.">Задает пространство имен, которое следует использовать для определения значений локальных переменных и отслеживаемых величин для текущей активной лексической ограниченной области действия.</summary>
      <param name="usingNamespace" vsli:raw="The namespace to be used in evaluating locals and watches for the current active lexical scope.">Пространство имен, которое следует использовать для определения значений локальных переменных и отслеживаемых величин для текущей активной лексической ограниченной области действия.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Length of &lt;paramref name=&quot;usingNamespace&quot; /&gt; is zero.">Длина параметра <paramref name="usingNamespace" /> равна нулю.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;usingNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="usingNamespace" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; belongs to a &lt;see cref=&quot;T:System.Reflection.Emit.DynamicMethod&quot; /&gt;.">Этот объект <see cref="T:System.Reflection.Emit.ILGenerator" /> принадлежит <see cref="T:System.Reflection.Emit.DynamicMethod" />.</exception>
    </member>
    <member name="P:System.Reflection.Emit.ILGenerator.ILOffset">
      <summary vsli:raw="Gets the current offset, in bytes, in the Microsoft intermediate language (MSIL) stream that is being emitted by the &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt;.">Получает текущее смещение (в байтах) в потоке языка MSIL, выпущенном <see cref="T:System.Reflection.Emit.ILGenerator" />.</summary>
      <returns vsli:raw="The offset in the MSIL stream at which the next instruction will be emitted.">Смещение в потоке языка MSIL, в котором будет выпущена следующая инструкция.</returns>
    </member>
    <member name="T:System.Reflection.Emit.Label">
      <summary vsli:raw="Represents a label in the instruction stream. &lt;see langword=&quot;Label&quot; /&gt; is used in conjunction with the &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; class.">Представляет метку в потоке инструкций. <see langword="Label" /> используется совместно с классом <see cref="T:System.Reflection.Emit.ILGenerator" />.</summary>
    </member>
    <member name="M:System.Reflection.Emit.Label.Equals(System.Object)">
      <summary vsli:raw="Checks if the given object is an instance of &lt;see langword=&quot;Label&quot; /&gt; and is equal to this instance.">Проверяет, является ли данный объект экземпляром <see langword="Label" /> и равен ли он этому экземпляру.</summary>
      <param name="obj" vsli:raw="The object to compare with this &lt;see langword=&quot;Label&quot; /&gt; instance.">Объект, сравниваемый с этим экземпляром <see langword="Label" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see langword=&quot;Label&quot; /&gt; and is equal to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="obj" /> является экземпляром <see langword="Label" /> и равен этому объекту; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)">
      <summary vsli:raw="Indicates whether the current instance is equal to the specified &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt;.">Определяет равенство текущего экземпляра и указанного объекта <see cref="T:System.Reflection.Emit.Label" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; to compare to the current instance.">
        <see cref="T:System.Reflection.Emit.Label" /> для сравнения с текущим экземпляром.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;obj&quot; /&gt; is equal to the value of the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно значению текущего экземпляра; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.Label.GetHashCode">
      <summary vsli:raw="Generates a hash code for this instance.">Создает хэш-код для данного экземпляра.</summary>
      <returns vsli:raw="A hash code for this instance.">Хэш-код для данного экземпляра.</returns>
    </member>
    <member name="M:System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)">
      <summary vsli:raw="Indicates whether two &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; structures are equal.">Определяет равенство двух структур <see cref="T:System.Reflection.Emit.Label" />.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; to compare to &lt;paramref name=&quot;b&quot; /&gt;.">Объект <see cref="T:System.Reflection.Emit.Label" />, используемый для сравнения с <paramref name="b" />.</param>
      <param name="b" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; to compare to &lt;paramref name=&quot;a&quot; /&gt;.">Объект <see cref="T:System.Reflection.Emit.Label" />, используемый для сравнения с <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; is equal to &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значения параметров <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)">
      <summary vsli:raw="Indicates whether two &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; structures are not equal.">Указывает, действительно ли не равны две структуры <see cref="T:System.Reflection.Emit.Label" />.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; to compare to &lt;paramref name=&quot;b&quot; /&gt;.">Объект <see cref="T:System.Reflection.Emit.Label" />, используемый для сравнения с <paramref name="b" />.</param>
      <param name="b" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.Label&quot; /&gt; to compare to &lt;paramref name=&quot;a&quot; /&gt;.">Объект <see cref="T:System.Reflection.Emit.Label" />, используемый для сравнения с <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; is not equal to &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если значения <paramref name="a" /> и <paramref name="b" /> не равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Reflection.Emit.LocalBuilder">
      <summary vsli:raw="Represents a local variable within a method or constructor.">Представляет локальную переменную внутри метода или конструктора.</summary>
    </member>
    <member name="P:System.Reflection.Emit.LocalBuilder.IsPinned">
      <summary vsli:raw="Gets a value indicating whether the object referred to by the local variable is pinned in memory.">Возвращает значение, указывающее, закреплен ли в памяти объект, на который ссылается локальная переменная.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object referred to by the local variable is pinned in memory; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект, на который ссылается локальная переменная, закреплен в памяти; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.LocalBuilder.LocalIndex">
      <summary vsli:raw="Gets the zero-based index of the local variable within the method body.">Возвращает начинающийся с нуля индекс локальной переменной в основном тексте метода.</summary>
      <returns vsli:raw="An integer value that represents the order of declaration of the local variable within the method body.">Целочисленное значение, которое представляет последовательность объявления локальной переменной в основном тексте метода.</returns>
    </member>
    <member name="P:System.Reflection.Emit.LocalBuilder.LocalType">
      <summary vsli:raw="Gets the type of the local variable.">Возвращает тип локальной переменной.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the local variable.">Объект <see cref="T:System.Type" /> данной локальной переменной.</returns>
    </member>
    <member name="T:System.Reflection.Emit.ParameterBuilder">
      <summary vsli:raw="Creates or associates parameter information.">Создает или связывает сведения о параметрах.</summary>
    </member>
    <member name="M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)">
      <summary vsli:raw="Sets the default value of the parameter.">Устанавливает значение, присваиваемое параметру по умолчанию.</summary>
      <param name="defaultValue" vsli:raw="The default value of this parameter.">Значение, принимаемое данным параметром по умолчанию.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The parameter is not one of the supported types.  &#xA;  &#xA; -or-  &#xA;  &#xA; The type of &lt;paramref name=&quot;defaultValue&quot; /&gt; does not match the type of the parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The parameter is of type &lt;see cref=&quot;T:System.Object&quot; /&gt; or other reference type, &lt;paramref name=&quot;defaultValue&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;, and the value cannot be assigned to the reference type.">Тип параметра не является поддерживаемым.  
  
-или- 
Тип параметра <paramref name="defaultValue" /> не совпадает с типом параметра.  
  
-или- 
Параметр имеет тип <see cref="T:System.Object" /> или другой ссылочный тип, значение параметра <paramref name="defaultValue" /> не равно <see langword="null" />, и значение не может быть присвоено ссылочному типу.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
      <summary vsli:raw="Set a custom attribute using a specified custom attribute blob.">Задает настраиваемый атрибут с помощью большого двоичного объекта настраиваемых атрибутов.</summary>
      <param name="con" vsli:raw="The constructor for the custom attribute.">Конструктор настраиваемого атрибута.</param>
      <param name="binaryAttribute" vsli:raw="A byte blob representing the attributes.">Большой двоичный объект байтов, предоставляющий атрибуты.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; or &lt;paramref name=&quot;binaryAttribute&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="con" /> или <paramref name="binaryAttribute" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
      <summary vsli:raw="Set a custom attribute using a custom attribute builder.">Задает настраиваемый атрибут с помощью построителя настраиваемых атрибутов.</summary>
      <param name="customBuilder" vsli:raw="An instance of a helper class to define the custom attribute.">Экземпляр вспомогательного класса для определения настраиваемого атрибута.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;con&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="con" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.Attributes">
      <summary vsli:raw="Retrieves the attributes for this parameter.">Извлекает атрибуты данного параметра.</summary>
      <returns vsli:raw="Read-only. Retrieves the attributes for this parameter.">Только для чтения. Извлекает атрибуты данного параметра.</returns>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.IsIn">
      <summary vsli:raw="Retrieves whether this is an input parameter.">Сообщает, является ли данный параметр входным.</summary>
      <returns vsli:raw="Read-only. Retrieves whether this is an input parameter.">Только для чтения. Сообщает, является ли данный параметр входным.</returns>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.IsOptional">
      <summary vsli:raw="Retrieves whether this parameter is optional.">Сообщает, является ли данный параметр необязательным.</summary>
      <returns vsli:raw="Read-only. Specifies whether this parameter is optional.">Только для чтения. Указывает, является ли данный параметр необязательным.</returns>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.IsOut">
      <summary vsli:raw="Retrieves whether this parameter is an output parameter.">Сообщает, является ли данный параметр выходным.</summary>
      <returns vsli:raw="Read-only. Retrieves whether this parameter is an output parameter.">Только для чтения. Сообщает, является ли данный параметр выходным.</returns>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.Name">
      <summary vsli:raw="Retrieves the name of this parameter.">Извлекает имя данного параметра.</summary>
      <returns vsli:raw="Read-only. Retrieves the name of this parameter.">Только для чтения. Извлекает имя данного параметра.</returns>
    </member>
    <member name="P:System.Reflection.Emit.ParameterBuilder.Position">
      <summary vsli:raw="Retrieves the signature position for this parameter.">Извлекает позицию подписи для данного параметра.</summary>
      <returns vsli:raw="Read-only. Retrieves the signature position for this parameter.">Только для чтения. Извлекает позицию подписи для данного параметра.</returns>
    </member>
    <member name="T:System.Reflection.Emit.SignatureHelper">
      <summary vsli:raw="Provides methods for building signatures.">Предоставляет методы построения сигнатур.</summary>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)">
      <summary vsli:raw="Adds an argument to the signature.">Добавляет аргумент к сигнатуре.</summary>
      <param name="clsArgument" vsli:raw="The type of the argument.">Тип аргумента.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The signature has already been finished.">Подпись уже была закончена.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clsArgument&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="clsArgument" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)">
      <summary vsli:raw="Adds an argument of the specified type to the signature, specifying whether the argument is pinned.">Добавляет аргумент указанного типа к сигнатуре, определяя, должен ли этот аргумент быть закреплен.</summary>
      <param name="argument" vsli:raw="The argument type.">Тип аргумента.</param>
      <param name="pinned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the argument is pinned; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если аргумент закреплен; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;argument&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="argument" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])">
      <summary vsli:raw="Adds an argument to the signature, with the specified custom modifiers.">Добавляет аргумент к сигнатуре с указанными пользовательскими модификаторами.</summary>
      <param name="argument" vsli:raw="The argument type.">Тип аргумента.</param>
      <param name="requiredCustomModifiers" vsli:raw="An array of types representing the required custom modifiers for the argument, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the argument has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой требуемые пользовательские модификаторы для аргумента, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если аргумент не имеет требуемых пользовательских модификаторов, укажите значение <see langword="null" />.</param>
      <param name="optionalCustomModifiers" vsli:raw="An array of types representing the optional custom modifiers for the argument, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the argument has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой необязательные пользовательские модификаторы для аргумента, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если аргумент не имеет необязательных пользовательских модификаторов, укажите значение <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;argument&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element of &lt;paramref name=&quot;requiredCustomModifiers&quot; /&gt; or &lt;paramref name=&quot;optionalCustomModifiers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="argument" /> имеет значение <see langword="null" />.  
  
-или- 
Элемент <paramref name="requiredCustomModifiers" /> равен <paramref name="optionalCustomModifiers" /> или <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The signature has already been finished.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an array type.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an open generic type. That is, the &lt;see cref=&quot;P:System.Type.ContainsGenericParameters&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; for the custom modifier.">Подпись уже была закончена.  
  
-или- 
Один из указанных пользовательских модификаторов имеет тип массива.  
  
-или- 
Один из указанных пользовательских модификаторов является открытым универсальным типом. То есть значение свойства <see cref="P:System.Type.ContainsGenericParameters" /> для пользовательского модификатора равно <see langword="true" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])">
      <summary vsli:raw="Adds a set of arguments to the signature, with the specified custom modifiers.">Добавляет набор аргументов к сигнатуре с указанными пользовательскими модификаторами.</summary>
      <param name="arguments" vsli:raw="The types of the arguments to be added.">Типы добавляемых аргументов.</param>
      <param name="requiredCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If a particular argument has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If none of the arguments have required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой требуемые пользовательские модификаторы для соответствующего аргумента, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если определенный аргумент не содержит требуемые пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если ни один из аргументов не содержит требуемые пользовательские модификаторы, вместо массива массивов укажите <see langword="null" />.</param>
      <param name="optionalCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If a particular argument has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If none of the arguments have optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой необязательные пользовательские модификаторы для соответствующего аргумента, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если определенный аргумент не содержит необязательные пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если ни один из аргументов не содержит необязательные пользовательские модификаторы, вместо массива массивов укажите <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="An element of &lt;paramref name=&quot;arguments&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is &lt;see langword=&quot;null&quot; /&gt;. (However, &lt;see langword=&quot;null&quot; /&gt; can be specified for the array of custom modifiers for any argument.)">Элемент <paramref name="arguments" /> имеет значение <see langword="null" />.  
  
-или- 
Один из указанных пользовательских модификаторов имеет значение <see langword="null" />. (Однако значение <see langword="null" /> может быть указано для массива пользовательских модификаторов для любого аргумента).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The signature has already been finished.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an array type.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an open generic type. That is, the &lt;see cref=&quot;P:System.Type.ContainsGenericParameters&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; for the custom modifier.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of &lt;paramref name=&quot;requiredCustomModifiers&quot; /&gt; or &lt;paramref name=&quot;optionalCustomModifiers&quot; /&gt; does not equal the size of &lt;paramref name=&quot;arguments&quot; /&gt;.">Подпись уже была закончена.  
  
-или- 
Один из указанных пользовательских модификаторов имеет тип массива.  
  
-или- 
Один из указанных пользовательских модификаторов является открытым универсальным типом. То есть значение свойства <see cref="P:System.Type.ContainsGenericParameters" /> для пользовательского модификатора равно <see langword="true" />.  
  
-или- 
Размер <paramref name="requiredCustomModifiers" /> или <paramref name="optionalCustomModifiers" /> не равен размеру <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.AddSentinel">
      <summary vsli:raw="Marks the end of a vararg fixed part. This is only used if the caller is creating a vararg signature call site.">Помечает конец фиксированной части функции с переменным количеством аргументов. Используется только в том случае, если вызывающий оператор создает место вызова сигнатуры функции с переменным количеством аргументов.</summary>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)">
      <summary vsli:raw="Checks if this instance is equal to the given object.">Проверяет, равен ли этот экземпляр данному объекту.</summary>
      <param name="obj" vsli:raw="The object with which this instance should be compared.">Объект, с которым нужно сравнить данный экземпляр.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given object is a &lt;see langword=&quot;SignatureHelper&quot; /&gt; and represents the same signature; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный объект является объектом <see langword="SignatureHelper" /> и предоставляет ту же самую сигнатуру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)">
      <summary vsli:raw="Returns a signature helper for a field.">Возвращает вспомогательный объект сигнатуры для поля.</summary>
      <param name="mod" vsli:raw="The dynamic module that contains the field for which the &lt;see langword=&quot;SignatureHelper&quot; /&gt; is requested.">Динамический модуль, который содержит поле, для которого запрашивается <see langword="SignatureHelper" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SignatureHelper&quot; /&gt; object for a field.">Объект <see langword="SignatureHelper" /> для поля.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetHashCode">
      <summary vsli:raw="Creates and returns a hash code for this instance.">Создает и возвращает хэш-код для этого экземпляра.</summary>
      <returns vsli:raw="The hash code based on the name.">Хэш-код на основе имени.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper">
      <summary vsli:raw="Returns a signature helper for a local variable.">Возвращает вспомогательный объект сигнатуры для локальной переменной.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; for a local variable.">Объект <see cref="T:System.Reflection.Emit.SignatureHelper" /> для локальной переменной.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)">
      <summary vsli:raw="Returns a signature helper for a local variable.">Возвращает вспомогательный объект сигнатуры для локальной переменной.</summary>
      <param name="mod" vsli:raw="The dynamic module that contains the local variable for which the &lt;see langword=&quot;SignatureHelper&quot; /&gt; is requested.">Динамический модуль, который содержит локальную переменную, для которой запрашивается <see langword="SignatureHelper" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SignatureHelper&quot; /&gt; object for a local variable.">Объект <see langword="SignatureHelper" /> для локальной переменной.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)">
      <summary vsli:raw="Returns a signature helper for a method given the method's calling convention and return type.">Возвращает вспомогательный объект сигнатуры для метода, получая на вход соглашение о вызове и тип возвращаемого значения.</summary>
      <param name="callingConvention" vsli:raw="The calling convention of the method.">Соглашение о вызовах метода.</param>
      <param name="returnType" vsli:raw="The return type of the method, or &lt;see langword=&quot;null&quot; /&gt; for a void return type (&lt;see langword=&quot;Sub&quot; /&gt; procedure in Visual Basic).">Тип возвращаемого значения метода или <see langword="null" /> для типа возвращаемого значения void (процедура <see langword="Sub" /> в Visual Basic).</param>
      <returns vsli:raw="The &lt;see langword=&quot;SignatureHelper&quot; /&gt; object for a method.">Объект <see langword="SignatureHelper" /> для метода.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)">
      <summary vsli:raw="Returns a signature helper for a method given the method's module, calling convention, and return type.">Возвращает вспомогательный объект подписи для метода с учетом соответствующего модуля, соглашения о вызовах и типа возвращаемого значения.</summary>
      <param name="mod" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt; that contains the method for which the &lt;see langword=&quot;SignatureHelper&quot; /&gt; is requested.">
        <see cref="T:System.Reflection.Emit.ModuleBuilder" /> — содержит метод, для которого запрашивается <see langword="SignatureHelper" />.</param>
      <param name="callingConvention" vsli:raw="The calling convention of the method.">Соглашение о вызовах метода.</param>
      <param name="returnType" vsli:raw="The return type of the method, or &lt;see langword=&quot;null&quot; /&gt; for a void return type (&lt;see langword=&quot;Sub&quot; /&gt; procedure in Visual Basic).">Тип возвращаемого значения метода или <see langword="null" /> для типа возвращаемого значения void (процедура <see langword="Sub" /> в Visual Basic).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mod" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt;.">
        <paramref name="mod" /> не является объектом типа <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;SignatureHelper&quot; /&gt; object for a method.">Объект <see langword="SignatureHelper" /> для метода.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])">
      <summary vsli:raw="Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.">Возвращает вспомогательный объект сигнатуры для метода со стандартным соглашением о вызове, имея в наличии модуль метода, тип возвращаемого значения и типы аргументов.</summary>
      <param name="mod" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt; that contains the method for which the &lt;see langword=&quot;SignatureHelper&quot; /&gt; is requested.">
        <see cref="T:System.Reflection.Emit.ModuleBuilder" /> — содержит метод, для которого запрашивается <see langword="SignatureHelper" />.</param>
      <param name="returnType" vsli:raw="The return type of the method, or &lt;see langword=&quot;null&quot; /&gt; for a void return type (&lt;see langword=&quot;Sub&quot; /&gt; procedure in Visual Basic).">Тип возвращаемого значения метода или <see langword="null" /> для типа возвращаемого значения void (процедура <see langword="Sub" /> в Visual Basic).</param>
      <param name="parameterTypes" vsli:raw="The types of the arguments of the method, or &lt;see langword=&quot;null&quot; /&gt; if the method has no arguments.">Типы аргументов метода или значение <see langword="null" />, если метод не содержит аргументов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element of &lt;paramref name=&quot;parameterTypes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mod" /> имеет значение <see langword="null" />.  
  
-или- 
Элемент <paramref name="parameterTypes" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt;.">
        <paramref name="mod" /> не является объектом типа <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</exception>
      <returns vsli:raw="The &lt;see langword=&quot;SignatureHelper&quot; /&gt; object for a method.">Объект <see langword="SignatureHelper" /> для метода.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
      <summary vsli:raw="Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.">Возвращает вспомогательный объект подписи для свойства, получая на вход динамический модуль, содержащий свойство, соглашение о вызове, тип свойства, аргументы свойства и пользовательские модификаторы для типа возвращаемого значения и аргументов.</summary>
      <param name="mod" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt; that contains the property for which the &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; is requested.">Модуль <see cref="T:System.Reflection.Emit.ModuleBuilder" />, содержащий свойство, для которого запрашивается <see cref="T:System.Reflection.Emit.SignatureHelper" />.</param>
      <param name="callingConvention" vsli:raw="The calling convention of the property accessors.">Соглашение о вызовах методов доступа свойства.</param>
      <param name="returnType" vsli:raw="The property type.">Тип свойства.</param>
      <param name="requiredReturnTypeCustomModifiers" vsli:raw="An array of types representing the required custom modifiers for the return type, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the return type has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой требуемые пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если возвращаемый тип не содержит требуемых настраиваемых модификаторов, укажите <see langword="null" />.</param>
      <param name="optionalReturnTypeCustomModifiers" vsli:raw="An array of types representing the optional custom modifiers for the return type, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the return type has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой необязательные пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если возвращаемый тип не содержит необязательные настраиваемые модификаторы, укажите <see langword="null" />.</param>
      <param name="parameterTypes" vsli:raw="The types of the property's arguments, or &lt;see langword=&quot;null&quot; /&gt; if the property has no arguments.">Типы аргументов свойств или <see langword="null" />, если свойство не содержит аргументов.</param>
      <param name="requiredParameterTypeCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой требуемые пользовательские модификаторы для соответствующего свойства. Если определенный аргумент не содержит требуемые пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если свойство не содержит аргументов или если аргументы не содержат пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</param>
      <param name="optionalParameterTypeCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой необязательные пользовательские модификаторы для соответствующего свойства. Если определенный аргумент не содержит необязательные пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если свойство не содержит аргументов или если аргументы не содержат необязательные пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element of &lt;paramref name=&quot;parameterTypes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is &lt;see langword=&quot;null&quot; /&gt;. (However, &lt;see langword=&quot;null&quot; /&gt; can be specified for the array of custom modifiers for any argument.)">
        <paramref name="mod" /> имеет значение <see langword="null" />.  
  
-или- 
Элемент <paramref name="parameterTypes" /> имеет значение <see langword="null" />.  
  
-или- 
Один из указанных пользовательских модификаторов имеет значение <see langword="null" />. (Однако значение <see langword="null" /> может быть указано для массива пользовательских модификаторов для любого аргумента).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The signature has already been finished.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mod&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an array type.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an open generic type. That is, the &lt;see cref=&quot;P:System.Type.ContainsGenericParameters&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; for the custom modifier.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of &lt;paramref name=&quot;requiredParameterTypeCustomModifiers&quot; /&gt; or &lt;paramref name=&quot;optionalParameterTypeCustomModifiers&quot; /&gt; does not equal the size of &lt;paramref name=&quot;parameterTypes&quot; /&gt;.">Подпись уже была закончена.  
  
-или- 
 <paramref name="mod" /> не является объектом типа <see cref="T:System.Reflection.Emit.ModuleBuilder" />.  
  
-или- 
Один из указанных пользовательских модификаторов имеет тип массива.  
  
-или- 
Один из указанных пользовательских модификаторов является открытым универсальным типом. То есть значение свойства <see cref="P:System.Type.ContainsGenericParameters" /> для пользовательского модификатора равно <see langword="true" />.  
  
-или- 
Размер <paramref name="requiredParameterTypeCustomModifiers" /> или <paramref name="optionalParameterTypeCustomModifiers" /> не равен размеру <paramref name="parameterTypes" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; object for a property.">Объект <see cref="T:System.Reflection.Emit.SignatureHelper" /> для свойства.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])">
      <summary vsli:raw="Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.">Возвращает вспомогательный объект сигнатуры для свойства, получая на вход модуль, содержащий свойство, тип свойства и аргументы свойства.</summary>
      <param name="mod" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt; that contains the property for which the &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; is requested.">Модуль <see cref="T:System.Reflection.Emit.ModuleBuilder" />, содержащий свойство, для которого запрашивается <see cref="T:System.Reflection.Emit.SignatureHelper" />.</param>
      <param name="returnType" vsli:raw="The property type.">Тип свойства.</param>
      <param name="parameterTypes" vsli:raw="The argument types, or &lt;see langword=&quot;null&quot; /&gt; if the property has no arguments.">Типы аргументов или значение <see langword="null" />, если в свойстве отсутствуют аргументы.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element of &lt;paramref name=&quot;parameterTypes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mod" /> имеет значение <see langword="null" />.  
  
-или- 
Элемент <paramref name="parameterTypes" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt;.">
        <paramref name="mod" /> не является объектом типа <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; object for a property.">Объект <see cref="T:System.Reflection.Emit.SignatureHelper" /> для свойства.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
      <summary vsli:raw="Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.">Возвращает вспомогательный объект сигнатуры для свойства, получая на вход динамический модуль, содержащий свойство, тип свойства, аргументы свойства и пользовательские модификаторы для типа возвращаемого значения и аргументов.</summary>
      <param name="mod" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt; that contains the property for which the &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; is requested.">Модуль <see cref="T:System.Reflection.Emit.ModuleBuilder" />, содержащий свойство, для которого запрашивается <see cref="T:System.Reflection.Emit.SignatureHelper" />.</param>
      <param name="returnType" vsli:raw="The property type.">Тип свойства.</param>
      <param name="requiredReturnTypeCustomModifiers" vsli:raw="An array of types representing the required custom modifiers for the return type, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the return type has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой требуемые пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если возвращаемый тип не содержит требуемых настраиваемых модификаторов, укажите <see langword="null" />.</param>
      <param name="optionalReturnTypeCustomModifiers" vsli:raw="An array of types representing the optional custom modifiers for the return type, such as &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsConst&quot; /&gt; or &lt;see cref=&quot;T:System.Runtime.CompilerServices.IsBoxed&quot; /&gt;. If the return type has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt;.">Массив типов представляет собой необязательные пользовательские модификаторы для возвращаемого типа, например <see cref="T:System.Runtime.CompilerServices.IsConst" /> или <see cref="T:System.Runtime.CompilerServices.IsBoxed" />. Если возвращаемый тип не содержит необязательные настраиваемые модификаторы, укажите <see langword="null" />.</param>
      <param name="parameterTypes" vsli:raw="The types of the property's arguments, or &lt;see langword=&quot;null&quot; /&gt; if the property has no arguments.">Типы аргументов свойств или <see langword="null" />, если свойство не содержит аргументов.</param>
      <param name="requiredParameterTypeCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding argument of the property. If a particular argument has no required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If the property has no arguments, or if none of the arguments have required custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой требуемые пользовательские модификаторы для соответствующего свойства. Если определенный аргумент не содержит требуемые пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если свойство не содержит аргументов или если аргументы не содержат пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</param>
      <param name="optionalParameterTypeCustomModifiers" vsli:raw="An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding argument of the property. If a particular argument has no optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of types. If the property has no arguments, or if none of the arguments have optional custom modifiers, specify &lt;see langword=&quot;null&quot; /&gt; instead of an array of arrays.">Массив массивов типов. Каждый массив типов представляет собой необязательные пользовательские модификаторы для соответствующего свойства. Если определенный аргумент не содержит необязательные пользовательские модификаторы, вместо массива данных укажите <see langword="null" />. Если свойство не содержит аргументов или если аргументы не содержат необязательные пользовательские модификаторы, укажите значение <see langword="null" /> вместо массива массивов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mod&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; An element of &lt;paramref name=&quot;parameterTypes&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is &lt;see langword=&quot;null&quot; /&gt;. (However, &lt;see langword=&quot;null&quot; /&gt; can be specified for the array of custom modifiers for any argument.)">
        <paramref name="mod" /> имеет значение <see langword="null" />.  
  
-или- 
Элемент <paramref name="parameterTypes" /> имеет значение <see langword="null" />.  
  
-или- 
Один из указанных пользовательских модификаторов имеет значение <see langword="null" />. (Однако значение <see langword="null" /> может быть указано для массива пользовательских модификаторов для любого аргумента).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The signature has already been finished.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mod&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.Emit.ModuleBuilder&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an array type.  &#xA;  &#xA; -or-  &#xA;  &#xA; One of the specified custom modifiers is an open generic type. That is, the &lt;see cref=&quot;P:System.Type.ContainsGenericParameters&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; for the custom modifier.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of &lt;paramref name=&quot;requiredParameterTypeCustomModifiers&quot; /&gt; or &lt;paramref name=&quot;optionalParameterTypeCustomModifiers&quot; /&gt; does not equal the size of &lt;paramref name=&quot;parameterTypes&quot; /&gt;.">Подпись уже была закончена.  
  
-или- 
 <paramref name="mod" /> не является объектом типа <see cref="T:System.Reflection.Emit.ModuleBuilder" />.  
  
-или- 
Один из указанных пользовательских модификаторов имеет тип массива.  
  
-или- 
Один из указанных пользовательских модификаторов является открытым универсальным типом. То есть значение свойства <see cref="P:System.Type.ContainsGenericParameters" /> для пользовательского модификатора равно <see langword="true" />.  
  
-или- 
Размер <paramref name="requiredParameterTypeCustomModifiers" /> или <paramref name="optionalParameterTypeCustomModifiers" /> не равен размеру <paramref name="parameterTypes" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Reflection.Emit.SignatureHelper&quot; /&gt; object for a property.">Объект <see cref="T:System.Reflection.Emit.SignatureHelper" /> для свойства.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.GetSignature">
      <summary vsli:raw="Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.">Добавляет к сигнатуре конечный токен и помечает сигнатуру как законченную, поэтому больше никакие токены не могут быть добавлены.</summary>
      <returns vsli:raw="A byte array made up of the full signature.">Массив байтов, содержащий сигнатуру целиком.</returns>
    </member>
    <member name="M:System.Reflection.Emit.SignatureHelper.ToString">
      <summary vsli:raw="Returns a string representing the signature arguments.">Возвращает строку, представляющую аргументы сигнатуры.</summary>
      <returns vsli:raw="A string representing the arguments of this signature.">Строка, представляющая аргументы этой сигнатуры.</returns>
    </member>
  </members>
</doc>